<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>hexo创建博客</title>
    <url>/2017/01/hexo%E5%88%9B%E5%BB%BA%E5%8D%9A%E5%AE%A2.html</url>
    <content><![CDATA[<p>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Heroku上，是搭建博客的首选框架。由于hexo相关的文章网上很多，我在这里就不再重复了。hexo的配置有些繁锁，这里主要介绍通过我提供的模板快速生成。</p>
<a id="more"></a>
<h2 id="nodejs"><a href="#nodejs" class="headerlink" title="nodejs"></a>nodejs</h2><p>hexo需要安装nodejs环境，以Linux为例，其他操作系统安装类似：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash</span><br><span class="line">. ~/.bashrc</span><br><span class="line"><span class="comment">#显示有远端的版本</span></span><br><span class="line">nvm ls-remote</span><br><span class="line"><span class="comment">#安装对应的版本</span></span><br><span class="line">nvm install 对应的版本</span><br></pre></td></tr></table></figure>
<p>安装常用工具：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install  hexo-cli -g</span><br><span class="line">npm install hexo-server -g</span><br><span class="line">npm install hexo-deployer-git -g</span><br><span class="line">npm install yarn -g</span><br><span class="line">npm install http-server -g</span><br><span class="line">yarn global add serve</span><br><span class="line"></span><br><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmmirror.com --global</span><br><span class="line">npm config <span class="built_in">set</span> disturl https://npmmirror.com/dist --global</span><br><span class="line">yarn config <span class="built_in">set</span> registry https://registry.npmmirror.com --global</span><br><span class="line">yarn config <span class="built_in">set</span> disturl https://npmmirror.com/dist --global</span><br></pre></td></tr></table></figure>
<h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install git</span><br><span class="line">git config --global user.name <span class="string">"aa"</span></span><br><span class="line">git config --global user.email aa@aa.com</span><br><span class="line">git config --global core.autocrlf <span class="literal">false</span></span><br><span class="line">git config --global core.safecrlf warn</span><br><span class="line">git config --global core.filemode <span class="literal">false</span></span><br><span class="line">git config --global core.whitespace cr-at-eol</span><br><span class="line">git config --global credential.helper store</span><br><span class="line">git config http.postBuffer 524288000</span><br></pre></td></tr></table></figure>
<h2 id="配置博客"><a href="#配置博客" class="headerlink" title="配置博客"></a>配置博客</h2><p>下载<a href="/files/hexo创建博客/blog_template.zip">hexo模板</a>，并解压。打开终端并输入命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> 模板根目录</span><br><span class="line">yarn install</span><br></pre></td></tr></table></figure>
<p>修改_config.yml文件，修改所有Please edit的内容为自己的内容。git仓库需要自己创建。</p>
<p>模板提供了3个theme：BlueLake、Anisina、next，可以修改_config.yml下的theme参数。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#创建新的文章</span></span><br><span class="line">hexo n <span class="string">"新文章title"</span></span><br><span class="line"><span class="comment">#debug</span></span><br><span class="line">hexo s</span><br><span class="line"><span class="comment">#生成部署文件</span></span><br><span class="line">hexo g</span><br><span class="line"><span class="comment">#部署</span></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>
<p>可以直接运行模板根目录下的deploy.sh或者deploy.bat文件快速部署。</p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Centos yum源搭建</title>
    <url>/2017/01/Centos-yum%E6%BA%90%E6%90%AD%E5%BB%BA.html</url>
    <content><![CDATA[<p>Centos安装软件一些有两种，一种通过二进制编译安装或者rpm安装，一种通过yum安装。个人觉得最好还是通过yum安装，简单、好升级。但有些yum源不稳定，造成安装非常慢，本文介绍怎样将yum源下载并搭建到自己的yum源中。</p>
<a id="more"></a>
<h2 id="下载rpm及依赖包"><a href="#下载rpm及依赖包" class="headerlink" title="下载rpm及依赖包"></a>下载rpm及依赖包</h2><p>需要先安装createrepo与yum-utils<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install createrepo yum-utils</span><br></pre></td></tr></table></figure></p>
<p>下载rpm及依赖包<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum --downloadonly --downloaddir=x86_64 install nginx</span><br></pre></td></tr></table></figure></p>
<p>或者：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yumdownloader --destdir=x86_64 --resolve nginx</span><br></pre></td></tr></table></figure></p>
<p>下载某个repo的所有内容<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">reposync -r [repo name]</span><br></pre></td></tr></table></figure></p>
<h2 id="创建repo"><a href="#创建repo" class="headerlink" title="创建repo"></a>创建repo</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">createrepo .</span><br></pre></td></tr></table></figure>
<h2 id="rpm签名"><a href="#rpm签名" class="headerlink" title="rpm签名"></a>rpm签名</h2><p>需要先安装<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install rpm-sign rng-tools</span><br></pre></td></tr></table></figure></p>
<p>先查看gpg列表：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gpg --list-keys</span><br></pre></td></tr></table></figure></p>
<p>没有的话，要创建：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ gpg --gen-key</span><br><span class="line">gpg (GnuPG) 2.0.14; Copyright (C) 2009 Free Software Foundation, Inc.</span><br><span class="line">This is free software: you are free to change and redistribute it.</span><br><span class="line">There is NO WARRANTY, to the extent permitted by law.</span><br><span class="line"> </span><br><span class="line">Please select what kind of key you want:</span><br><span class="line">   (1) RSA and RSA (default)</span><br><span class="line">   (2) DSA and Elgamal</span><br><span class="line">   (3) DSA (sign only)</span><br><span class="line">   (4) RSA (sign only)</span><br><span class="line">Your selection?                                       <span class="comment">#使用RSA&amp;RSA方式</span></span><br><span class="line">RSA keys may be between 1024 and 4096 bits long.</span><br><span class="line">What keysize <span class="keyword">do</span> you want? (2048)        <span class="comment">#密钥长度2048</span></span><br><span class="line">Requested keysize is 2048 bits</span><br><span class="line">Please specify how long the key should be valid.</span><br><span class="line">         0 = key does not expire</span><br><span class="line">      &lt;n&gt;  = key expires <span class="keyword">in</span> n days</span><br><span class="line">      &lt;n&gt;w = key expires <span class="keyword">in</span> n weeks</span><br><span class="line">      &lt;n&gt;m = key expires <span class="keyword">in</span> n months</span><br><span class="line">      &lt;n&gt;y = key expires <span class="keyword">in</span> n years</span><br><span class="line">Key is valid <span class="keyword">for</span>? (0)                                <span class="comment">#默认永不过期</span></span><br><span class="line">Key does not expire at all</span><br><span class="line">Is this correct? (y/N) y</span><br><span class="line"> </span><br><span class="line">GnuPG needs to construct a user ID to identify your key.</span><br><span class="line"> </span><br><span class="line"><span class="comment">#输入密钥所有者的联系方式</span></span><br><span class="line">Real name: zhaoxunyong</span><br><span class="line">Email address: zhaoxunyong@qq.com</span><br><span class="line">Comment: </span><br><span class="line">You selected this USER-ID:</span><br><span class="line">    <span class="string">"zhaoxunyong &lt;zhaoxunyong@qq.com&gt;"</span></span><br><span class="line">Change (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? O</span><br><span class="line">You need a Passphrase to protect your secret key.</span><br><span class="line"> </span><br><span class="line">can<span class="string">'t connect to `/root/.gnupg/S.gpg-agent'</span>: No such file or directory</span><br><span class="line">gpg-agent[9337]: directory `/root/.gnupg/private-keys-v1.d<span class="string">' created</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">Enter passphrase时，直接设为空。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">We need to generate a lot of random bytes. It is a good idea to perform</span></span><br><span class="line"><span class="string">some other action (type on the keyboard, move the mouse, utilize the</span></span><br><span class="line"><span class="string">disks) during the prime generation; this gives the random number</span></span><br><span class="line"><span class="string">generator a better chance to gain enough entropy.</span></span><br><span class="line"><span class="string">gpg: key C3FE29C9 marked as ultimately trusted</span></span><br><span class="line"><span class="string">public and secret key created and signed.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">gpg: checking the trustdb</span></span><br><span class="line"><span class="string">gpg: 3 marginal(s) needed, 1 complete(s) needed, PGP trust model</span></span><br><span class="line"><span class="string">gpg: depth: 0  valid:   1  signed:   0  trust: 0-, 0q, 0n, 0m, 0f, 1u</span></span><br><span class="line"><span class="string">pub   2048R/C3FE29C9 2017-01-03</span></span><br><span class="line"><span class="string">      Key fingerprint = C02E 0B2A 8402 97DA ACC6  239F DF03 083E C3FE 29C9</span></span><br><span class="line"><span class="string">uid                  zhaoxunyong &lt;zhaoxunyong@qq.com&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Note that this key cannot be used for encryption.  You may want to use</span></span><br><span class="line"><span class="string">the command "--edit-key" to generate a subkey for this purpose.</span></span><br></pre></td></tr></table></figure></p>
<p>当现在:<br>We need to generate a lot of random bytes. It is a good idea to perform some other action (type on the keyboard, move the mouse, utilize the disks) during the prime generation; this gives the random number generator a better chance to gain enough entropy.<br>可使用：使用以下命令加速urandom伪设备产生随机数的速度：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rngd -r /dev/urandom</span><br></pre></td></tr></table></figure></p>
<p>查询gpg列表：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># gpg --list-keys</span></span><br><span class="line">/root/.gnupg/pubring.gpg</span><br><span class="line">------------------------</span><br><span class="line">pub   2048R/C3FE29C9 2017-01-03</span><br><span class="line">uid                  zhaoxunyong &lt;zhaoxunyong@qq.com&gt;</span><br></pre></td></tr></table></figure></p>
<p>修改rpm宏,使用我们的密钥对:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">'%_gpg_name C3FE29C9'</span> &gt;&gt; ~/.rpmmacros</span><br></pre></td></tr></table></figure></p>
<p>导出公钥:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gpg -o /docker/works/yum/gpg -a --<span class="built_in">export</span> C3FE29C9</span><br></pre></td></tr></table></figure></p>
<p>对rpm签名：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#rpm --resign etcd-3.0.15-1.x86_64.rpm</span></span><br><span class="line"><span class="built_in">cd</span> /docker/works/yum/</span><br><span class="line">find ./ -name <span class="string">"*.rpm"</span> -<span class="built_in">type</span> f -<span class="built_in">exec</span> rpm --resign <span class="string">'&#123;&#125;'</span> \;</span><br></pre></td></tr></table></figure></p>
<p>当rpm太多时，每次输入密码很麻烦，可以用expect自动输入<br>先安装expect：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install expect</span><br></pre></td></tr></table></figure></p>
<p>自动输入密码并签名：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Start..."</span></span><br><span class="line">yum -y install expect</span><br><span class="line">YUM_PATH=/docker/works/yum</span><br><span class="line">EXPECT_FILE=/tmp/expectfile_$(date +%y%m%d)</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$YUM_PATH</span></span><br><span class="line">rpms=`find ./ -name <span class="string">"*.rpm"</span> -<span class="built_in">type</span> f`</span><br><span class="line"><span class="keyword">for</span> rpm <span class="keyword">in</span> <span class="variable">$rpms</span> </span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"rpm --resign <span class="variable">$YUM_PATH</span>/<span class="variable">$rpm</span>"</span></span><br><span class="line">cat &lt;&lt; EOF &gt; <span class="variable">$EXPECT_FILE</span></span><br><span class="line"><span class="comment">#!/usr/bin/expect</span></span><br><span class="line"><span class="built_in">set</span> PASS Aa123456</span><br><span class="line">spawn rpm --resign <span class="variable">$YUM_PATH</span>/<span class="variable">$rpm</span></span><br><span class="line">expect <span class="string">"Enter pass phrase:"</span> &#123; send <span class="string">"\$PASS\r"</span> &#125;</span><br><span class="line"><span class="built_in">set</span> timeout -1</span><br><span class="line">expect eof</span><br><span class="line">EOF</span><br><span class="line">expect -f <span class="variable">$EXPECT_FILE</span></span><br><span class="line">rm -fr <span class="variable">$EXPECT_FILE</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"finished.."</span></span><br></pre></td></tr></table></figure></p>
<p>当出现[Errno 256] No more mirrors to try的解决办法：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum clean metadata</span><br><span class="line">yum clean all</span><br><span class="line">yum -y update</span><br></pre></td></tr></table></figure></p>
<p>注意：执行yum -y update后会升级内核会导致vagrant加载不了外面的目录，具体解决办法请参考：<a href="Vagrant环境搭建.html#异常解决">Vagrant环境搭建#异常解决</a></p>
<h2 id="添加yum源"><a href="#添加yum源" class="headerlink" title="添加yum源"></a>添加yum源</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tee /etc/yum.repos.d/myreop.repo &lt;&lt;-<span class="string">'EOF'</span></span><br><span class="line">[my-repo]</span><br><span class="line">name=kubernetes Repository</span><br><span class="line">baseurl=file:///docker/works/yum</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///docker/works/yum/gpg</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>
<p>测试<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum list | grep my-repo</span><br><span class="line">docker-engine-debuginfo.x86_64          1.12.5-1.el7.centos            my-repo  </span><br><span class="line">etcd.x86_64                             3.0.15-1                       my-repo  </span><br><span class="line">flannel.x86_64                          0.6.2-1                        my-repo  </span><br><span class="line">                                                                       my-repo  </span><br><span class="line">kubectl.x86_64                          1.5.1-0                        my-repo  </span><br><span class="line">kubelet.x86_64                          1.5.1-0                        my-repo  </span><br><span class="line">kubernetes-cni.x86_64                   0.3.0.1-0.07a8a2               my-repo  </span><br><span class="line">rkt.x86_64                              1.21.0-1                       my-repo</span><br></pre></td></tr></table></figure></p>
<p>显示某个软件的所有版本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum --showduplicates list docker-engine</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><blockquote>
<p><a href="http://debugo.com/gpg/" target="_blank" rel="noopener">http://debugo.com/gpg/</a><br><a href="https://mritd.me/2016/08/02/yum-%E7%AC%94%E8%AE%B0/" target="_blank" rel="noopener">https://mritd.me/2016/08/02/yum-%E7%AC%94%E8%AE%B0/</a><br><a href="http://blog.sina.cn/dpool/blog/s/blog_6a5aee670101rx0a.html" target="_blank" rel="noopener">http://blog.sina.cn/dpool/blog/s/blog_6a5aee670101rx0a.html</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker学习总结</title>
    <url>/2017/01/Docker%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93.html</url>
    <content><![CDATA[<p>docker是个好东西，虽然年轻，但很有前途。一些大的公司(包括谷歌、IBM、惠普、微软等)都有在使用。有些人不太愿意使用新的技术，怕不稳定，但我个人认为好的东西主要勇于使用，大公司都在使用，怕什么呢，新技术不敢于使用，怎么能进步呢^_^<br>docker相关的概念请大家自行谷歌，还是谷歌好…</p>
<a id="more"></a>
<p>如果是没有docker基础的话，建议买一本&lt;&lt;第一本docker书 修订版&gt;&gt;，入门不错。<br>docker正式环境只能在linux中使用，所以本文以vagrant+centos7为例介绍。具体环境请参考<a href="Vagrant环境搭建.html">Vagrant环境搭建</a></p>
<h2 id="操作系统要求"><a href="#操作系统要求" class="headerlink" title="操作系统要求"></a>操作系统要求</h2><p>Docker只能运行在64位Linux中，并且内核需要3.8以上，建议使用centos 7版本。以下是我本机的环境，请参考：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@www ~] cat /etc/redhat-release </span><br><span class="line">CentOS Linux release 7.2.1511 (Core) </span><br><span class="line">[root@www ~] uname -a</span><br><span class="line">Linux www.mymydocker.com 3.10.0-327.4.5.el7.x86_64 <span class="comment">#1 SMP Mon Jan 25 22:07:14 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux</span></span><br><span class="line">[root@www ~] ll /sys/class/misc/device-mapper</span><br><span class="line">lrwxrwxrwx 1 root root 0 Dec 13 08:19 /sys/class/misc/device-mapper -&gt; ../../devices/virtual/misc/device-mapper</span><br><span class="line">[root@www ~] grep device-mapper /proc/devices </span><br><span class="line">253 device-mapper</span><br></pre></td></tr></table></figure></p>
<h2 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h2><h3 id="卸载旧的docker版本"><a href="#卸载旧的docker版本" class="headerlink" title="卸载旧的docker版本"></a>卸载旧的docker版本</h3><p>当前docker最新版本为1.12，请先卸载旧的docker版本：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rpm -e docker-1.10.3-59.el7.centos.x86_64 \</span><br><span class="line"> docker-common-1.10.3-59.el7.centos.x86_64 \</span><br><span class="line"> container-selinux-1.10.3-59.el7.centos.x86_64</span><br></pre></td></tr></table></figure></p>
<p>修改配置：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#修改dns配置</span></span><br><span class="line">cat /etc/NetworkManager/NetworkManager.conf|grep <span class="string">"dns=none"</span> &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"dns=none"</span> &gt;&gt; /etc/NetworkManager/NetworkManager.conf</span><br><span class="line">  systemctl restart NetworkManager.service</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#修改时区</span></span><br><span class="line">ln -sf /usr/share/zoneinfo/Asia/Chongqing /etc/localtime</span><br><span class="line"></span><br><span class="line"><span class="comment">#关闭内核安全</span></span><br><span class="line">sed -i <span class="string">'s;SELINUX=.*;SELINUX=disabled;'</span> /etc/selinux/config</span><br><span class="line">setenforce 0</span><br><span class="line">getenforce</span><br><span class="line"></span><br><span class="line"><span class="comment">#关闭防火墙</span></span><br><span class="line">systemctl <span class="built_in">disable</span> iptables</span><br><span class="line">systemctl stop iptables</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br><span class="line">systemctl stop firewalld</span><br><span class="line"></span><br><span class="line"><span class="comment">#优化内核</span></span><br><span class="line">cat /etc/security/limits.conf|grep 65535 &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">cat &gt;&gt; /etc/security/limits.conf  &lt;&lt; EOF</span><br><span class="line">*               soft    nofile             65535</span><br><span class="line">*               hard    nofile             65535</span><br><span class="line">*               soft    nproc              65535</span><br><span class="line">*               hard    nproc              65535</span><br><span class="line">EOF</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#打开端口转发</span></span><br><span class="line"><span class="comment">#永久修改：/etc/sysctl.conf中的net.ipv4.ip_forward=1，生效：sysctl -p</span></span><br><span class="line"><span class="comment">#临时修改：echo 1 &gt; /proc/sys/net/ipv4/ip_forward，重启后失效</span></span><br><span class="line"></span><br><span class="line">cat /etc/sysctl.conf|grep <span class="string">"net.ipv4.ip_forward"</span> &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">cat &gt;&gt; /etc/sysctl.conf  &lt;&lt; EOF</span><br><span class="line">net.ipv4.tcp_fin_timeout = 30</span><br><span class="line">net.ipv4.tcp_keepalive_time = 300</span><br><span class="line">net.ipv4.tcp_tw_reuse = 1</span><br><span class="line">net.ipv4.tcp_tw_recycle = 1</span><br><span class="line">net.ipv4.ip_local_port_range = 1024 65535</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">EOF</span><br><span class="line">sysctl -p</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p>
<h3 id="添加docker用户组"><a href="#添加docker用户组" class="headerlink" title="添加docker用户组"></a>添加docker用户组</h3><p>注意：rpm安装已经自动创建了该组，无需再创建。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">groupadd -g 2016 docker</span><br><span class="line"><span class="comment">#useradd docker -u 2016 -g 2016</span></span><br></pre></td></tr></table></figure></p>
<p>当发现有docker组时，会自动以docker组启动。</p>
<h3 id="添加yum源："><a href="#添加yum源：" class="headerlink" title="添加yum源："></a>添加yum源：</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tee /etc/yum.repos.d/docker.repo &lt;&lt;-<span class="string">'EOF'</span></span><br><span class="line">[docker]</span><br><span class="line">name=Docker Repository</span><br><span class="line">baseurl=http://mirrors.aliyun.com/docker-engine/yum/repo/main/centos/7/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/docker-engine/yum/gpg</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install docker-engine</span><br></pre></td></tr></table></figure>
<h3 id="手动启动"><a href="#手动启动" class="headerlink" title="手动启动"></a>手动启动</h3><p>rpm安装的通过systemctl start docker启动。如果是二进制文件的话，通过以下方式启动：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#默认以/var/run/docker.sock文件监听</span></span><br><span class="line"><span class="comment">#手动启动：</span></span><br><span class="line"><span class="comment">#-D为debug</span></span><br><span class="line">docker daemon -D -H tcp://0.0.0.0:2375 \</span><br><span class="line"> -H unix://var/run/docker.sock</span><br></pre></td></tr></table></figure></p>
<p>如出现Devices cgroup isn’t mounted的错误，请执行以下操作：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://github.com/tianon/cgroupfs-mount/raw/master/cgroupfs-mount</span><br><span class="line">sh cgroupfs-mount</span><br></pre></td></tr></table></figure></p>
<h3 id="docker加速"><a href="#docker加速" class="headerlink" title="docker加速"></a>docker加速</h3><p>官网的速度太慢了，可以使用daocloud加速。请参考<a href="http://docs.daocloud.io/faq/what-is-daocloud-accelerator" target="_blank" rel="noopener">what-is-daocloud-accelerator</a><br>具体操作如下：</p>
<blockquote>
<p>注册<a href="https://www.daocloud.io/" target="_blank" rel="noopener">https://www.daocloud.io/</a>账户<br>点击加速器，获取地址<br>修改/usr/lib/systemd/system/docker.service文件：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#ExecStart=/usr/bin/dockerd --bip=10.1.10.1/24 --insecure-registry=192.168.10.6:5000 --registry-mirror=http://3fecfd09.m.daocloud.io</span></span><br><span class="line">sed -i <span class="string">"s;^ExecStart=/usr/bin/dockerd$;ExecStart=/usr/bin/dockerd \</span></span><br><span class="line"><span class="string">--registry-mirror=http://3fecfd09.m.daocloud.io;"</span> \</span><br><span class="line"> /usr/lib/systemd/system/docker.service</span><br></pre></td></tr></table></figure></p>
</blockquote>
<h3 id="添加代理"><a href="#添加代理" class="headerlink" title="添加代理"></a>添加代理</h3><p>国内网站无法访问google的一些资源，可以通过docker代理方式访问：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p /etc/systemd/system/docker.service.d</span><br><span class="line">cat &gt;&gt; /etc/systemd/system/docker.service.d/http-proxy.conf  &lt;&lt; EOF</span><br><span class="line">[Service]</span><br><span class="line">Environment=<span class="string">"HTTP_PROXY=http://xxxx:xxxx"</span></span><br><span class="line">Environment=<span class="string">"HTTPS_PROXY=http://xxxx:xxxx"</span></span><br><span class="line">Environment=<span class="string">"NO_PROXY=127.0.0.1,localhost,10.0.0.0/8,172.0.0.0/8,192.168.0.0/16,*.zerofinance.net"</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl show --property=Environment docker</span><br><span class="line"></span><br><span class="line">systemctl restart docker</span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure></p>
<p>如执行docker info后出现：<br>WARNING: bridge-nf-call-iptables is disabled<br>WARNING: bridge-nf-call-ip6tables is disabled<br>按照以下办法解决：<br>修改/etc/sysctl.conf文件，添加：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">net.bridge.bridge-nf-call-arptables = 1</span><br></pre></td></tr></table></figure></p>
<p>执行sysctl -p后生效。</p>
<p>然后 ps aux | grep docker 然后你就会发现带有镜像的启动参数了。</p>
<p>由于我这边的HTTP_PROXY与HTTPS_PROXY是付费购买的，同时只能几个client访问，需要的话请自行搜索或者购买。</p>
<h3 id="Windows安装"><a href="#Windows安装" class="headerlink" title="Windows安装"></a>Windows安装</h3><p>win10可以通过InstallDocker.msi直接安装，但win10以下的话，只能通过DockerToolbox安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-machine create -d virtualbox \</span><br><span class="line">--engine-registry-mirror http://3fecfd09.m.daocloud.io \</span><br><span class="line">--engine-registry-mirror https://3gbbfq7n.mirror.aliyuncs.com \</span><br><span class="line">--engine-registry-mirror http://zhaoxunyong.m.alauda.cn \</span><br><span class="line">default</span><br></pre></td></tr></table></figure>
<h2 id="Docker-Registry"><a href="#Docker-Registry" class="headerlink" title="Docker Registry"></a>Docker Registry</h2><p>参考</p>
<blockquote>
<p><a href="http://www.cnblogs.com/lienhua34/p/4922130.html" target="_blank" rel="noopener">http://www.cnblogs.com/lienhua34/p/4922130.html</a><br><a href="https://docs.docker.com/registry/deploying/" target="_blank" rel="noopener">https://docs.docker.com/registry/deploying/</a></p>
</blockquote>
<h3 id="安装registry-2"><a href="#安装registry-2" class="headerlink" title="安装registry:2"></a>安装registry:2</h3><h4 id="普通安装方式"><a href="#普通安装方式" class="headerlink" title="普通安装方式"></a>普通安装方式</h4><p>安装：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker create -p 5000:5000 --restart=always --name private_registry \</span><br><span class="line"> -v /docker/registry:/var/lib/registry registry:2</span><br></pre></td></tr></table></figure></p>
<p>映射主机的/docker/registry目录到容器的/var/lib/registry</p>
<p>异常解决：<br>当出现Get <a href="https://192.168.10.6:5000/v1/_ping" target="_blank" rel="noopener">https://192.168.10.6:5000/v1/_ping</a>: Connection failed错误时，由于改为http方式，需要修改以下配置：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /usr/lib/systemd/system/docker.service</span><br><span class="line"><span class="comment">#添加--insecure-registry参数</span></span><br><span class="line">ExecStart=/usr/bin/dockerd --insecure-registry=192.168.10.6:5000</span><br><span class="line"><span class="comment">#重启</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure></p>
<h4 id="证书安装方式"><a href="#证书安装方式" class="headerlink" title="证书安装方式"></a>证书安装方式</h4><blockquote>
<p>参考: <a href="https://www.tianmaying.com/tutorial/docker-registry" target="_blank" rel="noopener">https://www.tianmaying.com/tutorial/docker-registry</a><br>先/etc/pki/tls/openssl.cnf配置，在该文件中找到[ v3_ca ]，在它下面添加如下内容：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[ v3_ca ]</span><br><span class="line"><span class="comment"># Extensions for a typical CA</span></span><br><span class="line">subjectAltName = IP:192.168.10.6</span><br></pre></td></tr></table></figure></p>
</blockquote>
<p>以上也可以不配置，在openssl加上reqexts SAN参数设置。</p>
<p>安装：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl req \</span><br><span class="line">  -subj <span class="string">"/C=CN/ST=GuangDong/L=ShenZhen/CN=registry.gcalls.cn"</span> \</span><br><span class="line">  -reqexts SAN -config &lt;(cat /etc/pki/tls/openssl.cnf &lt;(<span class="built_in">printf</span> <span class="string">"[SAN]\nsubjectAltName=DNS:www.abc.com,IP:192.168.10.6"</span>)) \</span><br><span class="line">  -newkey rsa:4096 -nodes -sha256 -keyout domain.key \</span><br><span class="line">  -x509 -days 365 -out domain.crt </span><br><span class="line"></span><br><span class="line">mkdir -p /etc/docker/certs.d/192.168.10.6:5000</span><br><span class="line">cp domain.crt /etc/docker/certs.d/192.168.10.6:5000/ca.crt</span><br><span class="line">mkdir -p /root/certs/</span><br><span class="line">cp domain.crt domain.key /root/certs/</span><br><span class="line"></span><br><span class="line">docker run \</span><br><span class="line">    -d \</span><br><span class="line">    --name private_registry  --restart=always \</span><br><span class="line">    -e SETTINGS_FLAVOUR=dev \</span><br><span class="line">    -e STORAGE_PATH=/registry-storage \</span><br><span class="line">    -v /docker/registry:/var/lib/registry \</span><br><span class="line">    -u root \</span><br><span class="line">    -p 5000:5000 \</span><br><span class="line">    -v /root/certs:/certs \</span><br><span class="line">    -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/domain.crt \</span><br><span class="line">    -e REGISTRY_HTTP_TLS_KEY=/certs/domain.key \</span><br><span class="line">    registry:2</span><br></pre></td></tr></table></figure></p>
<p>注意：如果采用证书方式，需要去掉/usr/lib/systemd/system/docker.service中的–insecure-registry参数，然后再重启：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure></p>
<p>如果要用docker pull或者docker push的客户端，都需要执行以下命令：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p /etc/docker/certs.d/192.168.10.6:5000</span><br><span class="line">cp domain.crt /etc/docker/certs.d/192.168.10.6:5000/ca.crt</span><br></pre></td></tr></table></figure></p>
<p>否则，会报以下错误：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Error response from daemon: Get https://192.168.10.6:5000/v1/_ping: x509: certificate signed by unknown authority</span><br></pre></td></tr></table></figure></p>
<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull hello-world</span><br><span class="line">docker tag hello-world 192.168.10.6:5000/hello-world</span><br><span class="line">docker push 192.168.10.6:5000/hello-world</span><br></pre></td></tr></table></figure>
<p>如测试出现：<br>Get <a href="https://192.168.10.6:5000/v1/_ping" target="_blank" rel="noopener">https://192.168.10.6:5000/v1/_ping</a>: net/http: TLS handshake timeout<br>有可以本地与docker开启了代理，需要关闭docker代理或者将ip添加到NO_PROXY中，文件位于：<br>/etc/systemd/system/docker.service.d/http-proxy.conf</p>
<p>Get <a href="https://192.168.10.6:5000/v1/_ping" target="_blank" rel="noopener">https://192.168.10.6:5000/v1/_ping</a>: x509: cannot validate certificate for 192.168.10.6 because it doesn’t contain any IP SANs<br>这个是由于CN为registry.gcalls.cn，但通过ip，需要添加SAN信息：<br>先/etc/pki/tls/openssl.cnf配置，在该文件中找到[ v3_ca ]，在它下面添加如下内容：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[ v3_ca ]</span><br><span class="line"><span class="comment"># Extensions for a typical CA</span></span><br><span class="line">subjectAltName = IP:192.168.10.6</span><br></pre></td></tr></table></figure></p>
<p>也可以直接在创建crt时，传-reqexts SAN。</p>
<h4 id="删除镜像文件"><a href="#删除镜像文件" class="headerlink" title="删除镜像文件"></a>删除镜像文件</h4><p>删除private registry中的镜像：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it private_registry /bin/sh</span><br><span class="line"><span class="comment">#删除/var/lib/registry/docker/registry/v2/repositories目录下对应的目录</span></span><br><span class="line">rm /var/lib/registry/docker/registry/v2/repositories/*</span><br></pre></td></tr></table></figure></p>
<h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker start private_registry</span><br></pre></td></tr></table></figure>
<h3 id="查看ip"><a href="#查看ip" class="headerlink" title="查看ip"></a>查看ip</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> private_registry ip addr</span><br></pre></td></tr></table></figure>
<h2 id="Docker-mirror-Registry"><a href="#Docker-mirror-Registry" class="headerlink" title="Docker mirror Registry"></a>Docker mirror Registry</h2><blockquote>
<p>参考：<a href="https://mritd.me/2016/09/24/Docker-mirror-Registry/" target="_blank" rel="noopener">https://mritd.me/2016/09/24/Docker-mirror-Registry/</a></p>
</blockquote>
<h3 id="导出registry配置"><a href="#导出registry配置" class="headerlink" title="导出registry配置"></a>导出registry配置</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -it --rm --entrypoint cat registry:2 /etc/docker/registry/config.yml &gt; config.yml</span><br></pre></td></tr></table></figure>
<h3 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h3><p>如果想要使用mirror功能只需在下面增加proxy选项即可：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: 0.1</span><br><span class="line"><span class="built_in">log</span>:</span><br><span class="line">  fields:</span><br><span class="line">    service: registry</span><br><span class="line">storage:</span><br><span class="line">  cache:</span><br><span class="line">    blobdescriptor: inmemory</span><br><span class="line">  filesystem:</span><br><span class="line">    rootdirectory: /var/lib/registry</span><br><span class="line">http:</span><br><span class="line">  addr: :5000</span><br><span class="line">  headers:</span><br><span class="line">    X-Content-Type-Options: [nosniff]</span><br><span class="line">health:</span><br><span class="line">  storagedriver:</span><br><span class="line">    enabled: <span class="literal">true</span></span><br><span class="line">    interval: 10s</span><br><span class="line">    threshold: 3</span><br><span class="line">proxy:</span><br><span class="line">  remoteurl: https://registry-1.docker.io</span><br><span class="line">  username: [username]</span><br><span class="line">  password: [password]</span><br></pre></td></tr></table></figure></p>
<p>username与password是可选项，当填写username与password以后就可以从hub pull私有镜像了。</p>
<h3 id="启动mirror-registry"><a href="#启动mirror-registry" class="headerlink" title="启动mirror registry"></a>启动mirror registry</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -dt --name docker-registry-mirror \</span><br><span class="line">-v /docker/registry:/var/lib/registry \</span><br><span class="line">-v <span class="variable">$PWD</span>/config.yml:/etc/docker/registry/config.yml \</span><br><span class="line">-p 5000:5000 registry:2</span><br></pre></td></tr></table></figure>
<h2 id="导入本地的images到私服中"><a href="#导入本地的images到私服中" class="headerlink" title="导入本地的images到私服中"></a>导入本地的images到私服中</h2><p>push.sh:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">imgs=$(docker images|awk <span class="string">'&#123;print $1":"$2&#125;'</span>)</span><br><span class="line"><span class="keyword">for</span> img <span class="keyword">in</span> <span class="variable">$imgs</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  docker tag <span class="variable">$img</span> 192.168.10.6:5000/<span class="variable">$img</span></span><br><span class="line">  docker push 192.168.10.6:5000/<span class="variable">$img</span></span><br><span class="line">  docker rmi 192.168.10.6:5000/<span class="variable">$img</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></p>
<h2 id="安装shipyard"><a href="#安装shipyard" class="headerlink" title="安装shipyard"></a>安装shipyard</h2><p>shipyard可以通过web的方式操作本地的镜像，还可以浏览指定的private registry，具体安装方式如下：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#dockerui:</span></span><br><span class="line"><span class="comment">#docker run -d -p 9000:9000 --name dockerui -v /var/run/docker.sock:/var/run/docker.sock uifd/ui-for-docker</span></span><br><span class="line"><span class="comment">#docker start dockerui</span></span><br><span class="line">wget -O shipyard.sh https://shipyard-project.com/deploy</span><br></pre></td></tr></table></figure></p>
<p>安装：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#curl -s https://shipyard-project.com/deploy | bash -s</span></span><br><span class="line"><span class="built_in">export</span> ACTION=deploy;<span class="built_in">export</span> PORT=9001;sh shipyard.sh</span><br></pre></td></tr></table></figure></p>
<p>更新：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#curl -s https://shipyard-project.com/deploy | ACTION=upgrade bash -s</span></span><br><span class="line"><span class="built_in">export</span> ACTION=upgrade;<span class="built_in">export</span> PORT=9001;sh shipyard.sh</span><br></pre></td></tr></table></figure></p>
<p>移除：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#curl -s https://shipyard-project.com/deploy | ACTION=remove bash -s</span></span><br><span class="line"><span class="built_in">export</span> ACTION=remove;sh shipyard.sh</span><br></pre></td></tr></table></figure></p>
<p>更多查看：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sh shipyard.sh -h</span><br></pre></td></tr></table></figure></p>
<p>访问地址：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.10.6:9001/</span><br></pre></td></tr></table></figure></p>
<p>注意：</p>
<blockquote>
<p>防火墙要放行2375端口，否则看不到container<br>添加registry时，需要指定https的地址，如：<a href="https://192.168.10.6:5000" target="_blank" rel="noopener">https://192.168.10.6:5000</a><br>login: admin/shipyard</p>
</blockquote>
<h2 id="安装registry-ui"><a href="#安装registry-ui" class="headerlink" title="安装registry ui"></a>安装registry ui</h2><p>registry ui有很多，包括：</p>
<h3 id="docker-registry-frontend"><a href="#docker-registry-frontend" class="headerlink" title="docker-registry-frontend"></a>docker-registry-frontend</h3><p>可以使用docker-registry-frontend，具体安装方式如下：</p>
<h4 id="普通安装方式-1"><a href="#普通安装方式-1" class="headerlink" title="普通安装方式"></a>普通安装方式</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#docker run -d -p 8080:8080 atcol/docker-registry-ui(不支持V2，不能使用)</span></span><br><span class="line">sudo docker run \</span><br><span class="line">  -d \</span><br><span class="line">  -e ENV_DOCKER_REGISTRY_HOST=192.168.10.6 \</span><br><span class="line">  -e ENV_DOCKER_REGISTRY_PORT=5000 \</span><br><span class="line">  -p 9002:80 \</span><br><span class="line">  konradkleine/docker-registry-frontend:v2</span><br><span class="line"><span class="comment">#重启：</span></span><br><span class="line">docker stop $(docker ps -a |grep docker-registry-frontend|awk <span class="string">'&#123;print $1&#125;'</span>)</span><br><span class="line">docker start $(docker ps -a |grep docker-registry-frontend|awk <span class="string">'&#123;print $1&#125;'</span>)</span><br></pre></td></tr></table></figure>
<p>访问：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.10.6:9002</span><br></pre></td></tr></table></figure></p>
<h4 id="证书安装方式-1"><a href="#证书安装方式-1" class="headerlink" title="证书安装方式"></a>证书安装方式</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo docker run \</span><br><span class="line">  -d \</span><br><span class="line">  -e ENV_DOCKER_REGISTRY_HOST=192.168.10.6 \</span><br><span class="line">  -e ENV_DOCKER_REGISTRY_PORT=5000 \</span><br><span class="line">  -e ENV_DOCKER_REGISTRY_USE_SSL=1 \</span><br><span class="line">  -e ENV_USE_SSL=yes \</span><br><span class="line">  -v /root/certs/domain.crt:/etc/apache2/server.crt:ro \</span><br><span class="line">  -v /root/certs/domain.key:/etc/apache2/server.key:ro \</span><br><span class="line">  -p 9002:443 \</span><br><span class="line">  konradkleine/docker-registry-frontend:v2</span><br></pre></td></tr></table></figure>
<p>异常解决：<br>如果出现The proxy server could not handle the request GET /v2/_catalog的错误，需要添加：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-e ENV_DOCKER_REGISTRY_USE_SSL=1</span><br></pre></td></tr></table></figure></p>
<p>访问：<br><a href="https://192.168.10.6:9002" target="_blank" rel="noopener">https://192.168.10.6:9002</a></p>
<h3 id="Nexus"><a href="#Nexus" class="headerlink" title="Nexus"></a>Nexus</h3><blockquote>
<p>参考：<a href="https://mritd.me/2017/01/08/set-up-docker-registry-by-nexus/" target="_blank" rel="noopener">https://mritd.me/2017/01/08/set-up-docker-registry-by-nexus/</a><br>安装稍后补充。</p>
</blockquote>
<h3 id="harbor"><a href="#harbor" class="headerlink" title="harbor"></a>harbor</h3><blockquote>
<p>参考：<a href="https://vmware.github.io/harbor/index_cn.html" target="_blank" rel="noopener">https://vmware.github.io/harbor/index_cn.html</a><br><a href="https://mritd.me/2016/09/15/Harbor-%E4%BC%81%E4%B8%9A%E7%BA%A7-Docker-Registry-%E7%AC%AC%E4%BA%8C%E5%BC%B9/" target="_blank" rel="noopener">https://mritd.me/2016/09/15/Harbor-%E4%BC%81%E4%B8%9A%E7%BA%A7-Docker-Registry-%E7%AC%AC%E4%BA%8C%E5%BC%B9/</a><br>注意：harbor不需要事先安装docker registry。</p>
</blockquote>
<h4 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://github.com/vmware/harbor/releases/download/0.5.0/harbor-offline-installer-0.5.0.tgz</span><br><span class="line">tar zxvf harbor-offline-installer-0.5.0.tgz</span><br><span class="line"><span class="built_in">cd</span> harbor</span><br></pre></td></tr></table></figure>
<h4 id="修改配置-1"><a href="#修改配置-1" class="headerlink" title="修改配置"></a>修改配置</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@zhaoxy harbor]<span class="comment"># grep -v ^# harbor.cfg </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#修改hostname</span></span><br><span class="line">hostname = registry.gcalls.cn</span><br><span class="line">ui_url_protocol = https</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改email</span></span><br><span class="line">email_identity = </span><br><span class="line">email_server = smtp.exmail.qq.com</span><br><span class="line">email_server_port = 25</span><br><span class="line">email_username = xxx@xxx.com</span><br><span class="line">email_password = xxx</span><br><span class="line">email_from = xxx@xxx.com</span><br><span class="line">email_ssl = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">harbor_admin_password = Harbor12345</span><br><span class="line">auth_mode = db_auth</span><br><span class="line">ldap_url = ldaps://ldap.mydomain.com</span><br><span class="line">ldap_basedn = ou=people,dc=mydomain,dc=com</span><br><span class="line">ldap_uid = uid </span><br><span class="line">ldap_scope = 3 </span><br><span class="line">db_password = root123</span><br><span class="line"></span><br><span class="line"><span class="comment">#开放用户注册</span></span><br><span class="line">self_registration = on</span><br><span class="line"></span><br><span class="line">use_compressed_js = on</span><br><span class="line">max_job_workers = 3 </span><br><span class="line">token_expiration = 30</span><br><span class="line">verify_remote_cert = on</span><br><span class="line"></span><br><span class="line">customize_crt = on</span><br><span class="line"></span><br><span class="line"><span class="comment">#证书信息</span></span><br><span class="line">crt_country = CN</span><br><span class="line">crt_state = guangdong</span><br><span class="line">crt_location = shenzhen</span><br><span class="line">crt_organization = Gcalls.cn</span><br><span class="line">crt_organizationalunit = Gcalls.cn</span><br><span class="line">crt_commonname = registry.gcalls.cn</span><br><span class="line">crt_email = zhaoxunyong@qq.com</span><br><span class="line"></span><br><span class="line">project_creation_restriction = everyone</span><br><span class="line"></span><br><span class="line"><span class="comment">#nginx的证书路径</span></span><br><span class="line">ssl_cert = /docker/works/harbor/ca/registry.gcalls.cn.crt</span><br><span class="line">ssl_cert_key = /docker/works/harbor/ca/registry.gcalls.cn.key</span><br></pre></td></tr></table></figure>
<h4 id="证书生成"><a href="#证书生成" class="headerlink" title="证书生成"></a>证书生成</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#创建CA</span></span><br><span class="line">mkdir ca</span><br><span class="line"><span class="built_in">cd</span> ca</span><br><span class="line">openssl req \</span><br><span class="line">    -subj <span class="string">"/C=CN/ST=guangdong/L=shenzhen/CN=*.gcalls.cn"</span> \</span><br><span class="line">    -newkey rsa:4096 -nodes -sha256 -keyout ca.key \</span><br><span class="line">    -x509 -days 365 -out ca.crt</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建签名请求</span></span><br><span class="line">openssl req \</span><br><span class="line">    -subj <span class="string">"/C=CN/ST=guangdong/L=shenzhen/CN=registry.gcalls.cn"</span> \</span><br><span class="line">    -newkey rsa:4096 -nodes -sha256 -keyout registry.gcalls.cn.key \</span><br><span class="line">    -out registry.gcalls.cn.csr</span><br><span class="line"></span><br><span class="line"><span class="comment">#初始化，不然下面的操作会报错</span></span><br><span class="line"><span class="built_in">cd</span> /etc/pki/CA/</span><br><span class="line">touch index.txt</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'01'</span> &gt; serial</span><br><span class="line"><span class="built_in">cd</span> -</span><br><span class="line"></span><br><span class="line"><span class="comment">#签署证书</span></span><br><span class="line"><span class="comment">#openssl x509 -req -days 365 -in /csr/abc.req.csr -signkey /csr/abc.key.pem.encrypted -out /csr/abc.cert.crt</span></span><br><span class="line">openssl ca -<span class="keyword">in</span> registry.gcalls.cn.csr -out registry.gcalls.cn.crt -cert ca.crt -keyfile ca.key -outdir .</span><br></pre></td></tr></table></figure>
<h4 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#先安装docker-compose</span></span><br><span class="line">yum install epel-release</span><br><span class="line">yum install python2-pip</span><br><span class="line">pip install -U docker-compose</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装harbor</span></span><br><span class="line">./install.sh</span><br></pre></td></tr></table></figure>
<h4 id="访问地址"><a href="#访问地址" class="headerlink" title="访问地址"></a>访问地址</h4><p>登录密码默认为：admin/Harbor12345<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://registry.gcalls.cn</span><br></pre></td></tr></table></figure></p>
<h4 id="push测试"><a href="#push测试" class="headerlink" title="push测试"></a>push测试</h4><p>注意：需要push的客户端要先把ca.crt文件复制到/etc/docker/certs.d/registry.gcalls.cn/目录下<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#init</span></span><br><span class="line">mkdir -p /etc/docker/certs.d/registry.gcalls.cn</span><br><span class="line">cp ca/ca.crt /etc/docker/certs.d/registry.gcalls.cn/</span><br><span class="line"></span><br><span class="line"><span class="comment">#login</span></span><br><span class="line">docker login registry.gcalls.cn</span><br><span class="line">docker tag nginx:1.11.5 registry.gcalls.cn/harbor/nginx:1.11.5</span><br><span class="line"><span class="comment">#需要先通过访问https://registry.gcalls.cn登录后创建harbor项目</span></span><br><span class="line">docker push registry.gcalls.cn/harbor/nginx:1.11.5</span><br></pre></td></tr></table></figure></p>
<h4 id="Harbor镜像仓库"><a href="#Harbor镜像仓库" class="headerlink" title="Harbor镜像仓库"></a>Harbor镜像仓库</h4><p>注意：镜像仓库不允许 push 操作，只作为官方仓库缓存。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim common/templates/registry/config.yml</span><br><span class="line"><span class="comment"># 增加以下内容</span></span><br><span class="line">proxy:</span><br><span class="line">  remoteurl: https://registry-1.docker.io</span><br><span class="line"><span class="comment"># 然后重新部署即可</span></span><br><span class="line">docker-compose down</span><br><span class="line">rm /data/database /data/job_logs /data/registry /data/secretkey</span><br><span class="line">docker up -d</span><br></pre></td></tr></table></figure></p>
<h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h2><p>创建容器交互式容器：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run --name web -i -t docker.io/centos /bin/bash</span><br><span class="line">docker run -it -e TZ=Asia/Shanghai ubuntu bash</span><br><span class="line">--name：容器命名</span><br><span class="line">--rm: 创建并运行一次后自动删除</span><br><span class="line">-d: 守护式容器，不加-d的话，会直接进入docker命令行，<span class="built_in">exit</span>后容器也退出了。</span><br><span class="line">--restart=on-failure:5 当容器退出代码为非0时，自动尝试重启5次</span><br><span class="line">--restart=always 容器退出时，总会自动启动</span><br><span class="line">-v <span class="variable">$PWD</span>/website:/var/www/html/website:ro 挂载目录到容器，挂载website目录到容器的var/www/htmlwebsite，权限为ro, rw为可读写(默认) ro为只读</span><br><span class="line">--volumes-from containername 把containername所有的VOLUME挂载到新容器中。</span><br></pre></td></tr></table></figure></p>
<p>显示正在运行的容器：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure></p>
<p>显示所有的容器：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure></p>
<p>显示所有的容器的id：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker ps -a -q</span><br></pre></td></tr></table></figure></p>
<p>显示最近一个运行的容器：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker ps -l</span><br></pre></td></tr></table></figure></p>
<p>删除：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker rm &lt;CONTAINER ID&gt;</span><br></pre></td></tr></table></figure></p>
<p>删除数据卷：<br>数据卷是被设计用来持久化数据的，它的生命周期独立于容器，Docker不会在容器被删除后自动删除数据卷，并且也不存在垃圾回收这样的机制来处理没有任何容器引用的数据卷。如果需要在删除容器的同时移除数据卷。可以在删除容器的时候使用 docker rm -v这个命令。无主的数据卷可能会占据很多空间，要清理会很麻烦。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker rm -vf &lt;CONTAINER ID&gt;</span><br></pre></td></tr></table></figure></p>
<p>-f：表示强制删除运行中的容器。</p>
<p>停止所有的docker容器：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker stop $(docker ps -q -a)</span><br></pre></td></tr></table></figure></p>
<p>启动与停止：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker start &lt;NAME&gt;</span><br><span class="line">docker stop &lt;NAME&gt;</span><br></pre></td></tr></table></figure></p>
<p>特权运行：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#true：Docker将拥有访问host所有设备的权限</span></span><br><span class="line">docker run --privileged=<span class="literal">true</span> ......</span><br></pre></td></tr></table></figure></p>
<p>进入已启动的容器:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker attach &lt;NAME&gt;</span><br></pre></td></tr></table></figure></p>
<p>注意：进入容器后，执行exit后，容器会关掉。要：CTRL+P+Q才不会退出容器<br>docker rm后，再创建容器会恢复到原始内容。</p>
<p>查看已运行的容器日志：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run --name daemon_dave -d docker.io/centos /bin/sh -c <span class="string">"while true;do echo hello world;sleep 1;done"</span></span><br><span class="line">docker run --<span class="built_in">log</span>-driver=<span class="string">"syslog"</span> --name dave -d docker.io/centos /bin/sh -c <span class="string">"while true;do echo hello world;sleep 1;done"</span></span><br><span class="line"><span class="comment">#显示最近100条的记录：</span></span><br><span class="line">docker logs --tail 100 web</span><br><span class="line"><span class="comment">#捕捉最新的日志：</span></span><br><span class="line">docker logs -f web</span><br><span class="line"></span><br><span class="line"><span class="comment">#将日志输出到/var/log/message中，通过docker logs会禁用</span></span><br><span class="line">--<span class="built_in">log</span>-driver=<span class="string">"syslog"</span></span><br></pre></td></tr></table></figure></p>
<p>容器内进程：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker top|stats &lt;NAME1&gt; &lt;NAME2&gt;</span><br></pre></td></tr></table></figure></p>
<p>在容器外部执行容器内的命令：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -d web touch /etc/new_config_file</span><br><span class="line">docker <span class="built_in">exec</span> -it web /bin/bash</span><br><span class="line"><span class="comment">#类似于docker attach web，但容器不会自动退出</span></span><br></pre></td></tr></table></figure></p>
<p>docker的目录：<br>/var/lib/docker，包括了镜像、配置。</p>
<p>显示本机中的docker镜像：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure></p>
<p>虚悬镜像:<br>镜像列表中，还可以看到一个特殊的镜像，这个镜像既没有仓库名，也没有标签，均为 <none>，这类无标签镜像也被称为 虚悬镜像(dangling image) ，可<br>以用下面的命令专门删除这类镜像：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#列出虚悬镜像：</span></span><br><span class="line">docker images -f dangling=<span class="literal">true</span></span><br><span class="line"><span class="comment">#删除虚悬镜像：</span></span><br><span class="line">docker rmi $(docker images -q -f dangling=<span class="literal">true</span>)</span><br><span class="line"><span class="comment">#删除所有在 mongo:3.2 之前的镜像：</span></span><br><span class="line">docker rmi $(docker images -q -f before=mongo:3.2)</span><br></pre></td></tr></table></figure></none></p>
<p>搜索：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker search redis</span><br></pre></td></tr></table></figure></p>
<p>checkout：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker login</span><br><span class="line">docker pull docker.io/redis</span><br></pre></td></tr></table></figure></p>
<p>commit到hub.docker.com：<br>commit本机：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker commit -m <span class="string">"A newcustom image"</span> -a <span class="string">"zhaoxunyong"</span> redis zhaoxunyong/redis:1.0.0-SNAPSHOT</span><br></pre></td></tr></table></figure></p>
<p>commit到hub.docker.com:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker push zhaoxunyong/redis:1.0.0-SNAPSHOT</span><br></pre></td></tr></table></figure></p>
<p>指定端口：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d -p 80 --name nginx zhaoxunyong/mycentos nginx -g <span class="string">"daemon off;"</span></span><br><span class="line">docker run -d -p 8080:80 --name nginx zhaoxunyong/mycentos nginx -g <span class="string">"daemon off;"</span></span><br></pre></td></tr></table></figure></p>
<p>-p 8080:80: 表示把容器中的80端口映射到宿主机的8080端口<br>run -d -P –name nginx zhaoxunyong/mycentos nginx -g “daemon off;”<br>-P：表示将Dockerfile中的EXPOSE端口对外分布</p>
<p>查看映射的端口：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker port nginx 80</span><br></pre></td></tr></table></figure></p>
<h2 id="导入或导出"><a href="#导入或导出" class="headerlink" title="导入或导出"></a>导入或导出</h2><h3 id="镜像导出"><a href="#镜像导出" class="headerlink" title="镜像导出"></a>镜像导出</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker save -o centos.tar centos:latest</span><br></pre></td></tr></table></figure>
<h3 id="导入到images-repo"><a href="#导入到images-repo" class="headerlink" title="导入到images repo"></a>导入到images repo</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker load -i centos.tar</span><br></pre></td></tr></table></figure>
<h3 id="容器导出"><a href="#容器导出" class="headerlink" title="容器导出"></a>容器导出</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#找到容器id</span></span><br><span class="line">docker ps</span><br><span class="line"><span class="comment">#导出：</span></span><br><span class="line">docker <span class="built_in">export</span> 19cb419ceb15 &gt; mycentos.tar</span><br></pre></td></tr></table></figure>
<p>注意：<br>导出的为运行中的容器内容，包括已经在容器中安装的软件都会一并导出。</p>
<h3 id="导入到images-repo-1"><a href="#导入到images-repo-1" class="headerlink" title="导入到images repo"></a>导入到images repo</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker import mycentos.tar mycentos</span><br></pre></td></tr></table></figure>
<p>注意：<br>import命令是将tar导入到images中，而不是创建一个运行的容器。可以通过docker images查看。</p>
<h2 id="数据卷容器"><a href="#数据卷容器" class="headerlink" title="数据卷容器"></a>数据卷容器</h2><p>如果你有一些持续更新的数据需要在容器之间共享，最好创建数据卷容器。数据卷容器，其实就是一个正常的容器，专门用来提供数据卷供其它容器挂载的。<br>首先，创建一个名为 dbdata 的数据卷容器：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d -v /dbdata --name dbdata training/postgres <span class="built_in">echo</span> Data-only container <span class="keyword">for</span> postgres</span><br></pre></td></tr></table></figure></p>
<p>然后，在其他容器中使用 –volumes-from 来挂载 dbdata 容器中的数据卷。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --volumes-from dbdata --name db1 training/postgres</span><br><span class="line">docker run -d --volumes-from dbdata --name db2 training/postgres</span><br></pre></td></tr></table></figure></p>
<p>可以使用超过一个的 –volumes-from 参数来指定从多个容器挂载不同的数据卷。 也可以从其他已经挂载了数据卷的容器来级联挂载数据卷。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name db3 --volumes-from db1 training/postgres</span><br></pre></td></tr></table></figure></p>
<p>注意：<br>使用 –volumes-from 参数所挂载数据卷的容器自己并不需要保持在运行状态。<br>如果删除了挂载的容器（包括 dbdata、db1 和 db2），数据卷并不会被自动删除。如果要删除一个数据卷，必须在删除最后一个还挂载着它的容器时使用 docker rm -v 命令来指定同时删除关联的容器。 这可以让用户在容器之间升级和移动数据卷。</p>
<h2 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h2><h3 id="基本指令"><a href="#基本指令" class="headerlink" title="基本指令"></a>基本指令</h3><h4 id="RUN"><a href="#RUN" class="headerlink" title="RUN"></a>RUN</h4><p>exec形式：RUN [“executable”, “param1”, “param2”]<br>shell形式：RUN command param1 param2<br>在Dockerfile构建镜像的过程(Build)中运行，最终被commit的到镜像。</p>
<h4 id="CMD"><a href="#CMD" class="headerlink" title="CMD"></a>CMD</h4><p>exec形式：CMD [“executable”, “param1”, “param2”]<br>shell形式：CMD command param1 param2<br>注意：CMD只能指定一条。如果docker run有传cmd的话，Dockerfile中的CMD无效</p>
<h4 id="ENTRYPOINT"><a href="#ENTRYPOINT" class="headerlink" title="ENTRYPOINT"></a>ENTRYPOINT</h4><p>exec形式：ENTRYPOINT [“executable”, “param1”, “param2”]<br>shell形式：ENTRYPOINT command param1 param2<br>不会被外面的参数覆盖，同时CMD或者外面传的参数会作为ENTRYPOINT的参数<br>也可以在外面：docker run –entrypoint覆盖ENTRYPOINT指令<br>ENTRYPOINT和CMD在容器运行(run、start)时运行。</p>
<p>exec与shell的区别：<br>shell形式和exec的形式的本质区别在于shell形式提供了默认的指令/bin/sh -c，所以其指定的command将在shell的环境下运行。因此指定command的pid将不会是1，因为pid为1的是shell，command进程是shell的子进程。<br>由于shell的pid不为1，因此我们无法直接向其发送信号，敲Ctrl+C是没有任何反应的。通过docker stop强制退出，退出状态为137，137=128 + 9，表明最后是被kill -9杀掉的。<br>shell形式还有一个严重的问题：由于其默认使用/bin/sh来运行命令，如果镜像中不包含/bin/sh，容器会无法启动。<br>exec形式则不然，其直接运行指定的指令，由于exec指定的命令不由shell启动，因此也就无法使用shell中的环境变量，如$HOME。如果希望能够使用环境变量，可以指定命令为sh：CMD [ “sh”, “-c”, “echo”, “$HOME” ]。<br>注意：<br>CMD与ENTRYPOINT要使用env变量的话，都要使用”sh”, “-c”，并且命令要在一个引号中，如：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">CMD [<span class="string">"sh"</span>, <span class="string">"-c"</span>, <span class="string">"java -Djava.security.egd=file:/dev/./urandom -jar /app/<span class="variable">$&#123;APPNAME&#125;</span>-<span class="variable">$&#123;VERSION&#125;</span>.jar"</span>]</span><br><span class="line">ENTRYPOINT [<span class="string">"sh"</span>, <span class="string">"-c"</span>, <span class="string">"java -Djava.security.egd=file:/dev/./urandom -jar /app/<span class="variable">$&#123;APPNAME&#125;</span>-<span class="variable">$&#123;VERSION&#125;</span>.jar --spring.profiles.active=docker"</span>]</span><br></pre></td></tr></table></figure></p>
<h4 id="WORKDIR"><a href="#WORKDIR" class="headerlink" title="WORKDIR"></a>WORKDIR</h4><p>脚本运行的工作目录,目录会自动创建。<br>也可以在外面： -w覆盖WORKDIR指令</p>
<h4 id="ENV"><a href="#ENV" class="headerlink" title="ENV"></a>ENV</h4><p>设置环境变更：<br>ENV WORK_HOME /zxy<br>WORKDIR $WORK_HOME<br>进入容器可以通过env查看<br>也可以通过外面：-e “WORK_HOME=/zxy”指定</p>
<h4 id="USER"><a href="#USER" class="headerlink" title="USER"></a>USER</h4><p>USER nginx<br>指定运行的用户，不指定默认root</p>
<h4 id="VOLUME"><a href="#VOLUME" class="headerlink" title="VOLUME"></a>VOLUME</h4><p>VOLUME [“/data”]<br>创建一个可以从本地主机或其他容器挂载的挂载点</p>
<h4 id="LABEL"><a href="#LABEL" class="headerlink" title="LABEL"></a>LABEL</h4><p>LABEL location=”New York” type=”Data Center” role=”Web Server”</p>
<h4 id="COPY-ADD"><a href="#COPY-ADD" class="headerlink" title="COPY/ADD"></a>COPY/ADD</h4><p>添加文件，ADD与COPY不同之处在于如果文件是压缩文件，ADD到容器中会自动解压。<br>支持http方式。</p>
<h4 id="ARG"><a href="#ARG" class="headerlink" title="ARG"></a>ARG</h4><p>构建时，传递参数给构建：<br>ARG build<br>ARG webapp_user=user(user为默认值)<br>传递参数：–build-arg build=1234<br>如：docker build –build-arg build=1234 -t zhaoxunyong/mycentos ./</p>
<h4 id="ONBUILD"><a href="#ONBUILD" class="headerlink" title="ONBUILD"></a>ONBUILD</h4><p>触发器：在另外有构建基于这个构建时触发，只能继承一次<br>如：ONBUILD ADD test.sh /software/</p>
<h3 id="构建"><a href="#构建" class="headerlink" title="构建"></a>构建</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker build --no-cache -t=<span class="string">"zhaoxunyong/mycentos:latest"</span> .</span><br></pre></td></tr></table></figure>
<p>–no-ache表示每次都会从头到尾构建，通过docker images就可以看到已经构建的镜像。<br>还可以查看历史记录：docker history zhaoxunyong/mycentos</p>
<h2 id="网络连接"><a href="#网络连接" class="headerlink" title="网络连接"></a>网络连接</h2><h3 id="Networking"><a href="#Networking" class="headerlink" title="Networking"></a>Networking</h3><p>版本&gt;=1.9推荐使用：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker network create app</span><br><span class="line">docker network inspect app</span><br><span class="line">docker network ls</span><br></pre></td></tr></table></figure></p>
<p>创建：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --net=app --name db docker.io/redis</span><br><span class="line">docker run -it --net=app --name centos docker.io/centos /bin/bash</span><br></pre></td></tr></table></figure></p>
<p>测试：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#ping db就可以ping通</span></span><br><span class="line">进入docker <span class="built_in">exec</span> -it centos /bin/bash</span><br><span class="line"><span class="comment">#ping centos也可以ping通</span></span><br><span class="line">进入docker <span class="built_in">exec</span> -it db /bin/bash</span><br></pre></td></tr></table></figure></p>
<p>加入到app网络：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d -p 8088:80 --name nginx docker.io/nginx</span><br><span class="line">docker network connect app nginx</span><br></pre></td></tr></table></figure></p>
<p>进入docker exec -it nginx /bin/bash，ping db或centos就能ping通</p>
<p>断开：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker network disconnect app nginx</span><br></pre></td></tr></table></figure></p>
<h3 id="Link"><a href="#Link" class="headerlink" title="Link"></a>Link</h3><p>link:1.9之前版本使用：<br>–link 原containername:别名<br>只支持在相同的宿主机中。<br>可以多次使用–link：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name db docker.io/redis </span><br><span class="line">docker run -d -p 8088:80 --name nginx --link db:redis_db docker.io/nginx</span><br></pre></td></tr></table></figure></p>
<p>进入docker exec -it nginx /bin/bash，ping redis_db就能ping通, /etc/hosts可以看到对应的记录。<br>可以在容器中通过env查看环境变量<br>–icc=false:关闭所有没有链接的容器间的通信</p>
<h2 id="Docker-compose"><a href="#Docker-compose" class="headerlink" title="Docker compose"></a>Docker compose</h2><blockquote>
<p>参考：<br><a href="http://debugo.com/docker-compose/" target="_blank" rel="noopener">http://debugo.com/docker-compose/</a><br><a href="http://www.cnblogs.com/freefei/p/5311294.html" target="_blank" rel="noopener">http://www.cnblogs.com/freefei/p/5311294.html</a></p>
</blockquote>
<p>在开发环境、临时服务器、CI中使用Compose是非常合适的。但是，我们目前不建议你在生产环境中使用。</p>
<h3 id="安装pip"><a href="#安装pip" class="headerlink" title="安装pip"></a>安装pip</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install epel-release</span><br><span class="line">yum install python2-pip</span><br></pre></td></tr></table></figure>
<h3 id="安装compose"><a href="#安装compose" class="headerlink" title="安装compose"></a>安装compose</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install -U docker-compose</span><br><span class="line">docker-compose version</span><br></pre></td></tr></table></figure>
<h3 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h3><p>编写Dockerfile:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim redis/Dockerfile</span><br><span class="line"><span class="comment"># Version: 1.0.0</span></span><br><span class="line">FROM centos</span><br><span class="line">MAINTAINER zhaoxunyong@qq.com</span><br><span class="line"></span><br><span class="line">RUN [<span class="string">"yum"</span>, <span class="string">"-y"</span>, <span class="string">"install"</span>, <span class="string">"epel-release"</span>]</span><br><span class="line">RUN yum -y install redis</span><br><span class="line"></span><br><span class="line">VOLUME [ <span class="string">"/var/lib/redis"</span>, <span class="string">"/var/log/redis"</span> ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#ENTRYPOINT [ "redis-server", "--protected-mode", "no", "--logfile", "/var/log/redis/redis-server.log" ]</span></span><br><span class="line">ENTRYPOINT [ <span class="string">"redis-server"</span> ]</span><br><span class="line">CMD [<span class="string">"--protected-mode"</span>, <span class="string">"no"</span>, <span class="string">"--logfile"</span>, <span class="string">"/var/log/redis/redis-server.log"</span>]</span><br><span class="line"></span><br><span class="line">EXPOSE 6379</span><br></pre></td></tr></table></figure></p>
<p>编译：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker build -t zhaoxunyong/redis ./</span><br></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim nginx/Dockerfile</span><br><span class="line"><span class="comment"># Version: 1.0.0</span></span><br><span class="line">FROM docker.io/centos</span><br><span class="line"></span><br><span class="line">RUN [<span class="string">"yum"</span>, <span class="string">"-y"</span>, <span class="string">"install"</span>, <span class="string">"epel-release"</span>]</span><br><span class="line">RUN yum -y install nginx</span><br><span class="line"></span><br><span class="line">EXPOSE 80</span><br><span class="line"></span><br><span class="line"><span class="comment">#CMD [ "nginx", "-g", "daemon off;"]</span></span><br><span class="line"></span><br><span class="line">docker build -t zhaoxunyong/nginx ./</span><br></pre></td></tr></table></figure>
<p>编译：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker build -t zhaoxunyong/nginx ./</span><br></pre></td></tr></table></figure></p>
<p>compose:<br>vim docker-compose.yml<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">web:</span><br><span class="line">  <span class="comment">#container_name: web</span></span><br><span class="line">  <span class="comment">#image: zhaoxunyong/nginx</span></span><br><span class="line">  build: ./nginx</span><br><span class="line">  <span class="built_in">command</span>: nginx -g <span class="string">'daemon off;'</span></span><br><span class="line">  ports:</span><br><span class="line">    - <span class="string">"8081:80"</span></span><br><span class="line">  volumes:</span><br><span class="line">    - <span class="variable">$PWD</span>:/<span class="built_in">pwd</span></span><br><span class="line">    - /webapp:/webapp</span><br><span class="line">  links:</span><br><span class="line">    - redis:db</span><br><span class="line">  <span class="comment">#net: app</span></span><br><span class="line">  <span class="comment">#hostname: web</span></span><br><span class="line">  <span class="comment">#dns:</span></span><br><span class="line">  <span class="comment">#  - 8.8.8.8</span></span><br><span class="line">  <span class="comment">#  - 9.9.9.9</span></span><br><span class="line">  <span class="comment">#dns_search:</span></span><br><span class="line">  <span class="comment">#  - domain1.example.com</span></span><br><span class="line">  <span class="comment">#mem_limit: 1000000000</span></span><br><span class="line">  <span class="comment">#privileged: true</span></span><br><span class="line">  <span class="comment">#restart: always</span></span><br><span class="line">  <span class="comment">#volumes_from:</span></span><br><span class="line">  <span class="comment">#  - service_name</span></span><br><span class="line">  <span class="comment">#  - container_name</span></span><br><span class="line">  <span class="comment">#expose:</span></span><br><span class="line">  <span class="comment">#  - "3000"</span></span><br><span class="line">  <span class="comment">#  - "8000"</span></span><br><span class="line">  <span class="comment">#environment:</span></span><br><span class="line">  <span class="comment">#  - DEBUG=false</span></span><br><span class="line">  <span class="comment">#  - SEND_EMAILS=false</span></span><br><span class="line">  <span class="comment">#env_file:</span></span><br><span class="line">  <span class="comment">#  - ./common.env</span></span><br><span class="line">  <span class="comment">#  - ./apps/web.env</span></span><br><span class="line">  <span class="comment">#  - /opt/secrets.env</span></span><br><span class="line"></span><br><span class="line">redis:</span><br><span class="line">  <span class="comment">#container_name: redis</span></span><br><span class="line">  <span class="comment">#image: zhaoxunyong/redis</span></span><br><span class="line">  build: ./redis</span><br><span class="line">  ports:</span><br><span class="line">    - <span class="string">"6379:6379"</span></span><br></pre></td></tr></table></figure></p>
<p>启动：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#docker run --name redis --rm -p 6379:6379 --rm zhaoxunyong/redis --protected-mode no --logfile /var/log/redis/redis-server.log</span></span><br><span class="line"><span class="comment">#docker run --name nginx -p 8081:80 --rm --link redis:db zhaoxunyong/nginx nginx -g "daemon off;"</span></span><br><span class="line">docker-compose up</span><br><span class="line">docker-compose up -d</span><br><span class="line">docker-compose ps</span><br><span class="line">docker-compose logs</span><br><span class="line">docker-compose logs -f</span><br><span class="line">docker-compose stop</span><br></pre></td></tr></table></figure></p>
<p>使用-f指定代替的compose文件。<br>使用-p指定代替compose文件所在的目录。</p>
<h2 id="查看已存在images的Dockfile"><a href="#查看已存在images的Dockfile" class="headerlink" title="查看已存在images的Dockfile"></a>查看已存在images的Dockfile</h2><blockquote>
<p>参考：<a href="https://github.com/lukapeschke/dockerfile-from-image" target="_blank" rel="noopener">https://github.com/lukapeschke/dockerfile-from-image</a><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-node1 ~]<span class="comment"># git clone https://github.com/lukapeschke/dockerfile-from-image.git</span></span><br><span class="line"><span class="built_in">cd</span> dockerfile-from-image</span><br><span class="line">docker build -t lukapeschke/dfa .</span><br><span class="line"></span><br><span class="line">[root@k8s-node1 ~]<span class="comment"># docker run --rm -v '/var/run/docker.sock:/var/run/docker.sock' lukapeschke/dfa &lt;IMAGE_ID&gt;</span></span><br><span class="line"></span><br><span class="line">[root@k8s-node1 ~]<span class="comment"># docker run --rm -v '/var/run/docker.sock:/var/run/docker.sock' lukapeschke/dfa 405a0b586f7e</span></span><br><span class="line">FROM kubeguide/redis-master:latest</span><br><span class="line">RUN</span><br><span class="line">ADD file:62400a49cced0d7521560b501f6c52227c60f5e2fecd0fef20e4d0e1558f7301 <span class="keyword">in</span> /</span><br><span class="line">RUN /bin/sh -c <span class="built_in">echo</span> <span class="string">'#!/bin/sh'</span> &gt; /usr/sbin/policy-rc.d         \</span><br><span class="line">    &amp;&amp; <span class="built_in">echo</span> <span class="string">'exit 101'</span> &gt;&gt; /usr/sbin/policy-rc.d         \</span><br><span class="line">    &amp;&amp; chmod +x /usr/sbin/policy-rc.d           \</span><br><span class="line">    &amp;&amp; dpkg-divert --<span class="built_in">local</span> --rename --add /sbin/initctl         \</span><br><span class="line">    &amp;&amp; cp -a /usr/sbin/policy-rc.d /sbin/initctl        \</span><br><span class="line">    &amp;&amp; sed -i <span class="string">'s/^exit.*/exit 0/'</span> /sbin/initctl                 \</span><br><span class="line">    &amp;&amp; <span class="built_in">echo</span> <span class="string">'force-unsafe-io'</span> &gt; /etc/dpkg/dpkg.cfg.d/docker-apt-speedup                 \</span><br><span class="line">    &amp;&amp; <span class="built_in">echo</span> <span class="string">'DPkg::Post-Invoke &#123; "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; &#125;;'</span> &gt; /etc/apt/apt.conf.d/docker-clean  \</span><br><span class="line">    &amp;&amp; <span class="built_in">echo</span> <span class="string">'APT::Update::Post-Invoke &#123; "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; &#125;;'</span> &gt;&gt; /etc/apt/apt.conf.d/docker-clean  \</span><br><span class="line">    &amp;&amp; <span class="built_in">echo</span> <span class="string">'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";'</span> &gt;&gt; /etc/apt/apt.conf.d/docker-clean          \</span><br><span class="line">    &amp;&amp; <span class="built_in">echo</span> <span class="string">'Acquire::Languages "none";'</span> &gt; /etc/apt/apt.conf.d/docker-no-languages              \</span><br><span class="line">    &amp;&amp; <span class="built_in">echo</span> <span class="string">'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";'</span> &gt; /etc/apt/apt.conf.d/docker-gzip-indexes</span><br><span class="line">RUN /bin/sh -c sed -i <span class="string">'s/^#\s*\(deb.*universe\)$/\1/g'</span> /etc/apt/sources.list</span><br><span class="line">CMD [/bin/bash]</span><br><span class="line">RUN /bin/sh -c sed -i <span class="string">'s/# \(.*multiverse$\)/\1/g'</span> /etc/apt/sources.list \</span><br><span class="line">    &amp;&amp;   apt-get update \</span><br><span class="line">    &amp;&amp;   apt-get -y upgrade \</span><br><span class="line">    &amp;&amp;   apt-get install -y build-essential \</span><br><span class="line">    &amp;&amp;   apt-get install -y software-properties-common \</span><br><span class="line">    &amp;&amp;   apt-get install -y byobu curl git htop man unzip vim wget \</span><br><span class="line">    &amp;&amp;   rm -rf /var/lib/apt/lists/*</span><br><span class="line">ADD file:1b7d66a2e6558a749e3bb8462c04292d941ca6456e4a0d27575774591c677768 <span class="keyword">in</span> /root/.bashrc</span><br><span class="line">ADD file:f21c0663779541419bb4a70154751df046dc27d6bfb93362b1d42ea1e4dceb37 <span class="keyword">in</span> /root/.gitconfig</span><br><span class="line">ADD dir:217b39958cc7efb346372d54c10f32da1230945a6041e9ca98ebb4fe18eb3c07 <span class="keyword">in</span> /root/.scripts</span><br><span class="line">ENV HOME=/root</span><br><span class="line">WORKDIR /root</span><br><span class="line">CMD [bash]</span><br><span class="line">RUN /bin/sh -c <span class="built_in">cd</span> /tmp \</span><br><span class="line">    &amp;&amp;   wget http://download.redis.io/redis-stable.tar.gz \</span><br><span class="line">    &amp;&amp;   tar xvzf redis-stable.tar.gz \</span><br><span class="line">    &amp;&amp;   <span class="built_in">cd</span> redis-stable \</span><br><span class="line">    &amp;&amp;   make \</span><br><span class="line">    &amp;&amp;   make install \</span><br><span class="line">    &amp;&amp;   cp -f src/redis-sentinel /usr/<span class="built_in">local</span>/bin \</span><br><span class="line">    &amp;&amp;   mkdir -p /etc/redis \</span><br><span class="line">    &amp;&amp;   cp -f *.conf /etc/redis \</span><br><span class="line">    &amp;&amp;   rm -rf /tmp/redis-stable* \</span><br><span class="line">    &amp;&amp;   sed -i <span class="string">'s/^\(bind .*\)$/# \1/'</span> /etc/redis/redis.conf \</span><br><span class="line">    &amp;&amp;   sed -i <span class="string">'s/^\(daemonize .*\)$/# \1/'</span> /etc/redis/redis.conf \</span><br><span class="line">    &amp;&amp;   sed -i <span class="string">'s/^\(dir .*\)$/# \1\ndir \/data/'</span> /etc/redis/redis.conf \</span><br><span class="line">    &amp;&amp;   sed -i <span class="string">'s/^\(logfile .*\)$/# \1/'</span> /etc/redis/redis.conf</span><br><span class="line">VOLUME [/data]</span><br><span class="line">WORKDIR /data</span><br><span class="line">ADD file:eb94b1ca7cdb7ea1553bfd01686f66b9e5dd9893a4749ce291a8071e40113465 <span class="keyword">in</span> /etc/redis/redis.conf</span><br><span class="line">EXPOSE map[6379/tcp:&#123;&#125;]</span><br><span class="line">ADD file:58911657b64982dea712ca78ee8811c96e522d06585d29d40a79b2d4f6e935c6 <span class="keyword">in</span> /etc/redis/redis.conf</span><br><span class="line">CMD [redis-server /etc/redis/redis.conf]</span><br><span class="line">EXPOSE map[6379/tcp:&#123;&#125;]</span><br><span class="line">MAINTAINER kubeguide</span><br><span class="line">ADD multi:0a8d9f4785c98c51ae6f30026e81df4b38fcbda87d73fe189656bdedfe016d32 <span class="keyword">in</span> /data/</span><br></pre></td></tr></table></figure></p>
</blockquote>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><blockquote>
<p><a href="http://c.isme.pub/2016/11/21/learn-docker-install/" target="_blank" rel="noopener">http://c.isme.pub/2016/11/21/learn-docker-install/</a></p>
</blockquote>
]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubeadm rpm安装包制作</title>
    <url>/2017/01/Kubeadm%20rpm%E5%AE%89%E8%A3%85%E5%8C%85%E5%88%B6%E4%BD%9C.html</url>
    <content><![CDATA[<p>本文记录一下Kubeadm rpm安装包的制作过程。</p>
<a id="more"></a>
<h2 id="生成rpm安装包"><a href="#生成rpm安装包" class="headerlink" title="生成rpm安装包"></a>生成rpm安装包</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/kubernetes/release.git</span><br><span class="line"><span class="built_in">cd</span> release/rpm/</span><br><span class="line">sh docker-build.sh</span><br></pre></td></tr></table></figure>
<p>如出现rpm.po的错误，可以不用理会。<br>生成的包在output/x86_64目录下，可以直接安装rpm包，安装包有：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubeadm-1.6.0-0.alpha.0.2074.a092d8e0f95f52.x86_64.rpm</span><br><span class="line">kubectl-1.5.1-0.x86_64.rpm</span><br><span class="line">kubelet-1.5.1-0.x86_64.rpm</span><br><span class="line">kubernetes-cni-0.3.0.1-0.07a8a2.x86_64.rpm</span><br></pre></td></tr></table></figure>
<p>可以直接安装rpm包，也可以通过yum源方式安装，具体参考下一节。<br>直接安装rpm包：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> output/x86_64</span><br><span class="line">yum localinstall *.rpm</span><br></pre></td></tr></table></figure></p>
<h2 id="添加yum源"><a href="#添加yum源" class="headerlink" title="添加yum源"></a>添加yum源</h2><p>对rpm签名，请参考: <a href="Centos-yum源搭建.html#rpm签名">rpm签名</a><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tee /etc/yum.repos.d/k8s.repo &lt;&lt;-<span class="string">'EOF'</span></span><br><span class="line">[k8s-repo]</span><br><span class="line">name=kubernetes Repository</span><br><span class="line">baseurl=file:///docker/works/yum</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///docker/works/yum/gpg</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></p>
<p>安装：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y kubelet kubectl kubernetes-cni kubeadm</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>Vagrant环境搭建</title>
    <url>/2017/01/Vagrant%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html</url>
    <content><![CDATA[<p>一般开发时，我们基本上都是在windows或mac上开发，测试与正式环境一般都使用centos系统。开发环境搭建起来非常费时，并且经常出现开发时功能是正常的，但测试环境和生产环境不正常的情况。并且有新同事来时，还得从头搭建相关的环境，费力又费时。我们可以通过vagrant很好地解决这个问题。</p>
<a id="more"></a>
<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Vagrant是一个基于Ruby的工具，用于创建和部署虚拟化开发环境。它使用Oracle的开源VirtualBox虚拟化系统，使用 Chef创建自动化虚拟环境。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>这边以mac为例介绍一下vagrant的安装与配置过程，安装过程很简单，直接下载以下两个软件安装即可。</p>
<p>vagrant<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://releases.hashicorp.com/vagrant/1.9.1/vagrant_1.9.1.dmg</span><br></pre></td></tr></table></figure></p>
<p>VirtualBox<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://download.virtualbox.org/virtualbox/5.1.10/VirtualBox-5.1.10-112026-OSX.dmg</span><br></pre></td></tr></table></figure></p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>以centos 7为例介绍一下vagrant的配置。</p>
<h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><p>下载vagrant-centos-7.2.box<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://github.com/CommanderK5/packer-centos-template/releases/download/0.7.2/vagrant-centos-7.2.box</span><br></pre></td></tr></table></figure></p>
<p>由于是国外的网站，下载很慢，其实我们可以自己创建box，具体制作方法请参考<a href="使用packer制作vagrant-box.html">使用packer制作vagrant-box.md</a></p>
<h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mkdir -p /Vagrant/boxes/centos-7.2</span><br><span class="line">sudo cp -a vagrant-centos-7.2.box /Vagrant/boxes/centos-7.2</span><br><span class="line"><span class="built_in">cd</span> /Vagrant/boxes/centos-7.2</span><br><span class="line">sudo vagrant box add centos-7.2 vagrant-centos-7.2.box</span><br><span class="line">sudo vagrant box list</span><br><span class="line">sudo vagrant init centos-7.2</span><br></pre></td></tr></table></figure>
<h3 id="配置Vagrantfile"><a href="#配置Vagrantfile" class="headerlink" title="配置Vagrantfile"></a>配置Vagrantfile</h3><p><strong>假设我们需要两台虚拟机</strong></p>
<table>
<thead>
<tr>
<th>主机IP</th>
<th>主机名称</th>
<th>内存</th>
</tr>
</thead>
<tbody>
<tr>
<td>192.168.10.6</td>
<td>k8s-master</td>
<td>1024m</td>
</tr>
<tr>
<td>192.168.10.6</td>
<td>k8s-node1</td>
<td>512m</td>
</tr>
</tbody>
</table>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- mode: ruby -*-</span></span><br><span class="line"><span class="comment"># vi: set ft=ruby :</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># All Vagrant configuration is done below. The "2" in Vagrant.configure</span></span><br><span class="line"><span class="comment"># configures the configuration version (we support older styles for</span></span><br><span class="line"><span class="comment"># backwards compatibility). Please don't change it unless you know what</span></span><br><span class="line"><span class="comment"># you're doing.</span></span><br><span class="line">Vagrant.configure(<span class="string">"2"</span>) <span class="keyword">do</span> |config|</span><br><span class="line"></span><br><span class="line">  <span class="comment">#config.vm.box = "centos-7.2"</span></span><br><span class="line">  <span class="comment">#config.vm.hostname = "mydocker"</span></span><br><span class="line">  <span class="comment">#config.vm.network "private_network", ip: "192.168.10.9"</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">  <span class="comment">#config.vm.synced_folder "/data/docker/registry", "/docker/registry"</span></span><br><span class="line">  <span class="comment">#config.vm.synced_folder "/data/docker/works", "/docker/works"</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">  <span class="comment">#config.vm.provider "virtualbox" do |vb|</span></span><br><span class="line">  <span class="comment">#  #vb.gui = true</span></span><br><span class="line">  <span class="comment">#  vb.memory = "2048"</span></span><br><span class="line">  <span class="comment">#end</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#config.vm.provision "shell", run: "always", inline: &lt;&lt;-SHELL</span></span><br><span class="line">  <span class="comment">#  systemctl restart network</span></span><br><span class="line">  <span class="comment">#SHELL</span></span><br><span class="line">  <span class="comment">#config.vm.provision "shell", path: "script.sh"</span></span><br><span class="line"></span><br><span class="line">  config.vm.define :k8s_master <span class="keyword">do</span> |k8s_master|</span><br><span class="line">    k8s_master.vm.box = <span class="string">"centos-7.2"</span></span><br><span class="line">    k8s_master.vm.hostname = <span class="string">"k8s-master"</span></span><br><span class="line">    k8s_master.vm.network <span class="string">"private_network"</span>, ip: <span class="string">"192.168.10.6"</span></span><br><span class="line">    k8s_master.vm.synced_folder <span class="string">"/data/docker/registry"</span>, <span class="string">"/docker/registry"</span></span><br><span class="line">    k8s_master.vm.synced_folder <span class="string">"/data/docker/works"</span>, <span class="string">"/docker/works"</span></span><br><span class="line">    k8s_master.vm.synced_folder <span class="string">"/data/docker/k8s"</span>, <span class="string">"/docker/k8s"</span></span><br><span class="line">    k8s_master.vm.provider <span class="string">"virtualbox"</span> <span class="keyword">do</span> |vb|</span><br><span class="line">      <span class="comment">#vb.gui = true</span></span><br><span class="line">      vb.memory = <span class="string">"1024"</span></span><br><span class="line">    end</span><br><span class="line">    k8s_master.vm.provision <span class="string">"shell"</span>, run: <span class="string">"always"</span>, inline: &lt;&lt;-SHELL</span><br><span class="line">      systemctl restart network</span><br><span class="line">    SHELL</span><br><span class="line">    k8s_master.vm.provision <span class="string">"shell"</span> <span class="keyword">do</span> |s|</span><br><span class="line">      s.path = <span class="string">"script.sh"</span></span><br><span class="line">      s.args = [<span class="string">"--bip=10.1.10.1/24"</span>]</span><br><span class="line">    end</span><br><span class="line">    <span class="comment">#k8s_master.vm.provision "shell", path: "script.sh"</span></span><br><span class="line">  end</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  config.vm.define :k8s_node1 <span class="keyword">do</span> |k8s_node1|</span><br><span class="line">    k8s_node1.vm.box = <span class="string">"centos-7.2"</span></span><br><span class="line">    k8s_node1.vm.hostname = <span class="string">"k8s-node1"</span></span><br><span class="line">    k8s_node1.vm.network <span class="string">"private_network"</span>, ip: <span class="string">"192.168.10.7"</span></span><br><span class="line">    k8s_node1.vm.synced_folder <span class="string">"/data/docker/registry"</span>, <span class="string">"/docker/registry"</span></span><br><span class="line">    k8s_node1.vm.synced_folder <span class="string">"/data/docker/works"</span>, <span class="string">"/docker/works"</span></span><br><span class="line">    k8s_node1.vm.synced_folder <span class="string">"/data/docker/k8s"</span>, <span class="string">"/docker/k8s"</span></span><br><span class="line">    k8s_node1.vm.provider <span class="string">"virtualbox"</span> <span class="keyword">do</span> |vb|</span><br><span class="line">      <span class="comment">#vb.gui = true</span></span><br><span class="line">      vb.memory = <span class="string">"1024"</span></span><br><span class="line">    end</span><br><span class="line">    k8s_node1.vm.provision <span class="string">"shell"</span>, run: <span class="string">"always"</span>, inline: &lt;&lt;-SHELL</span><br><span class="line">      systemctl restart network</span><br><span class="line">    SHELL</span><br><span class="line">    k8s_node1.vm.provision <span class="string">"shell"</span> <span class="keyword">do</span> |s|</span><br><span class="line">      s.path = <span class="string">"script.sh"</span></span><br><span class="line">      s.args = [<span class="string">"--bip=10.1.20.1/24"</span>]</span><br><span class="line">    end</span><br><span class="line">  end</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">#config.vm.define :k8s_node2 do |k8s_node2|</span></span><br><span class="line">  <span class="comment">#  k8s_node2.vm.box = "centos-7.2"</span></span><br><span class="line">  <span class="comment">#  k8s_node2.vm.hostname = "k8s-node2"</span></span><br><span class="line">  <span class="comment">#  k8s_node2.vm.network "private_network", ip: "192.168.10.8"</span></span><br><span class="line">  <span class="comment">#  k8s_node2.vm.synced_folder "/data/docker/registry", "/docker/registry"</span></span><br><span class="line">  <span class="comment">#  k8s_node2.vm.synced_folder "/data/docker/works", "/docker/works"</span></span><br><span class="line">  <span class="comment">#  k8s_node2.vm.synced_folder "/data/docker/k8s", "/docker/k8s"</span></span><br><span class="line">  <span class="comment">#  k8s_node2.vm.provider "virtualbox" do |vb|</span></span><br><span class="line">  <span class="comment">#    #vb.gui = true</span></span><br><span class="line">  <span class="comment">#    vb.memory = "512"</span></span><br><span class="line">  <span class="comment">#  end</span></span><br><span class="line">  <span class="comment">#  k8s_node2.vm.provision "shell", run: "always", inline: &lt;&lt;-SHELL</span></span><br><span class="line">  <span class="comment">#    systemctl restart network</span></span><br><span class="line">  <span class="comment">#  SHELL</span></span><br><span class="line">  <span class="comment">#  k8s_node2.vm.provision "shell" do |s|</span></span><br><span class="line">  <span class="comment">#    s.path = "script.sh"</span></span><br><span class="line">  <span class="comment">#    s.args = ["--bip=10.1.30.1/24"]</span></span><br><span class="line">  <span class="comment">#  end</span></span><br><span class="line">  <span class="comment">#end</span></span><br><span class="line">  </span><br><span class="line">end</span><br></pre></td></tr></table></figure>
<h3 id="定义shell脚本"><a href="#定义shell脚本" class="headerlink" title="定义shell脚本"></a>定义shell脚本</h3><p>编写script.sh脚本，安装一些基本的软件，具体可以参考：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment">#http://www.360doc.com/content/14/1125/19/7044580_428024359.shtml</span></span><br><span class="line"><span class="comment">#http://blog.csdn.net/54powerman/article/details/50684844</span></span><br><span class="line"><span class="comment">#http://c.biancheng.net/cpp/view/2739.html</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"scripting......"</span></span><br><span class="line"></span><br><span class="line">filepath=/vagrant</span><br><span class="line">bip=<span class="variable">$1</span></span><br><span class="line">hostname=<span class="variable">$2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">"<span class="variable">$hostname</span>"</span> != <span class="string">""</span> ]]; <span class="keyword">then</span></span><br><span class="line">  hostnamectl --static <span class="built_in">set</span>-hostname <span class="variable">$hostname</span></span><br><span class="line">  sysctl kernel.hostname=<span class="variable">$hostname</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#关闭内核安全(如果是vagrant方式，第一次完成后需要重启vagrant才能生效。)</span></span><br><span class="line">sed -i <span class="string">'s;SELINUX=.*;SELINUX=disabled;'</span> /etc/selinux/config</span><br><span class="line">setenforce 0</span><br><span class="line">getenforce</span><br><span class="line"></span><br><span class="line">cat /etc/NetworkManager/NetworkManager.conf|grep <span class="string">"dns=none"</span> &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"dns=none"</span> &gt;&gt; /etc/NetworkManager/NetworkManager.conf</span><br><span class="line">  systemctl restart NetworkManager.service</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">disable</span> iptables</span><br><span class="line">systemctl stop iptables</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br><span class="line">systemctl stop firewalld</span><br><span class="line"></span><br><span class="line">ln -sf /usr/share/zoneinfo/Asia/Chongqing /etc/localtime</span><br><span class="line"></span><br><span class="line"><span class="comment">#logined limit</span></span><br><span class="line">cat /etc/security/limits.conf|grep 100000 &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">cat &gt;&gt; /etc/security/limits.conf  &lt;&lt; EOF</span><br><span class="line">*               soft    nofile             100000</span><br><span class="line">*               hard    nofile             100000</span><br><span class="line">*               soft    nproc              100000</span><br><span class="line">*               hard    nproc              100000</span><br><span class="line">EOF</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">sed -i <span class="string">'s;4096;100000;g'</span> /etc/security/limits.d/20-nproc.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#systemd service limit</span></span><br><span class="line">cat /etc/systemd/system.conf|egrep <span class="string">'^DefaultLimitCORE'</span> &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">cat &gt;&gt; /etc/systemd/system.conf &lt;&lt; EOF</span><br><span class="line">DefaultLimitCORE=infinity</span><br><span class="line">DefaultLimitNOFILE=100000</span><br><span class="line">DefaultLimitNPROC=100000</span><br><span class="line">EOF</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">cat /etc/sysctl.conf|grep <span class="string">"net.ipv4.ip_local_port_range"</span> &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">cat &gt;&gt; /etc/sysctl.conf  &lt;&lt; EOF</span><br><span class="line">net.ipv4.tcp_fin_timeout = 30</span><br><span class="line">net.ipv4.tcp_keepalive_time = 300</span><br><span class="line">net.ipv4.tcp_tw_reuse = 1</span><br><span class="line">net.ipv4.tcp_tw_recycle = 1</span><br><span class="line">net.ipv4.ip_local_port_range = 1024 65535</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">EOF</span><br><span class="line">sysctl -p</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">su - root -c <span class="string">"ulimit -a"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#echo '192.168.10.6 k8s-master</span></span><br><span class="line"><span class="comment">#192.168.10.7   k8s-node1</span></span><br><span class="line"><span class="comment">#192.168.10.8   k8s-node2' &gt;&gt; /etc/hosts</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##sed -i 's;en_GB;zh_CN;' /etc/sysconfig/i18n</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#yum -y install gcc kernel-devel</span></span><br><span class="line">mv -f /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br><span class="line"><span class="comment">#wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.163.com/.help/CentOS7-Base-163.repo</span></span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line"></span><br><span class="line">tee /etc/yum.repos.d/docker.repo &lt;&lt;-<span class="string">'EOF'</span></span><br><span class="line">[docker]</span><br><span class="line">name=Docker Repository</span><br><span class="line">baseurl=http://mirrors.aliyun.com/docker-engine/yum/repo/main/centos/7/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/docker-engine/yum/gpg</span><br><span class="line">EOF</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#tee /etc/yum.repos.d/k8s.repo &lt;&lt;-'EOF'</span></span><br><span class="line"><span class="comment">#[k8s-repo]</span></span><br><span class="line"><span class="comment">#name=kubernetes Repository</span></span><br><span class="line"><span class="comment">##baseurl=https://rpm.mritd.me/centos/7/x86_64</span></span><br><span class="line"><span class="comment">##baseurl=file:///docker/works/yum</span></span><br><span class="line"><span class="comment">#baseurl=http://www.gcalls.cn/yum</span></span><br><span class="line"><span class="comment">#enabled=1</span></span><br><span class="line"><span class="comment">#gpgcheck=1</span></span><br><span class="line"><span class="comment">##gpgkey=https://cdn.mritd.me/keys/rpm.public.key</span></span><br><span class="line"><span class="comment">##gpgkey=file:///docker/works/yum/gpg</span></span><br><span class="line"><span class="comment">#gpgkey=http://www.gcalls.cn/yum/gpg</span></span><br><span class="line"><span class="comment">#EOF</span></span><br><span class="line"></span><br><span class="line">yum -y install epel-release</span><br><span class="line"></span><br><span class="line">yum clean all</span><br><span class="line">yum makecache</span><br><span class="line"></span><br><span class="line"><span class="comment">#yum -y install createrepo rpm-sign rng-tools yum-utils </span></span><br><span class="line">yum -y install <span class="built_in">bind</span>-utils bridge-utils ntpdate setuptool iptables system-config-securitylevel-tui system-config-network-tui \</span><br><span class="line"> ntsysv net-tools lrzsz telnet lsof vim dos2unix unix2dos zip unzip</span><br><span class="line"></span><br><span class="line"><span class="comment">#install docker-compose-----------------------------------------------</span></span><br><span class="line"></span><br><span class="line">rpm -e docker-1.10.3-59.el7.centos.x86_64 \</span><br><span class="line"> docker-common-1.10.3-59.el7.centos.x86_64 \</span><br><span class="line"> container-selinux-1.10.3-59.el7.centos.x86_64 &gt; /dev/null 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line">yum install docker-engine -y</span><br><span class="line"></span><br><span class="line">yum -y install python2-pip</span><br><span class="line">pip install -U docker-compose</span><br><span class="line"><span class="comment">##yum install -y etcd kubernetes</span></span><br><span class="line"><span class="comment">##sed -i "s;^ExecStart=/usr/bin/dockerd$;ExecStart=/usr/bin/dockerd --registry-mirror=https://3gbbfq7n.mirror.aliyuncs.com;" /usr/lib/systemd/system/docker.service</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#sed -i "s;^ExecStart=/usr/bin/dockerd$;ExecStart=/usr/bin/dockerd $&#123;bip&#125; --live-restore \</span></span><br><span class="line">sed -i <span class="string">"s;^ExecStart=/usr/bin/dockerd$;ExecStart=/usr/bin/dockerd \</span></span><br><span class="line"><span class="string">--registry-mirror=http://3fecfd09.m.daocloud.io \</span></span><br><span class="line"><span class="string">--registry-mirror=https://3gbbfq7n.mirror.aliyuncs.com \</span></span><br><span class="line"><span class="string">--registry-mirror=http://zhaoxunyong.m.alauda.cn;"</span> \</span><br><span class="line">/usr/lib/systemd/system/docker.service</span><br><span class="line"></span><br><span class="line"><span class="comment">#mkdir -p /etc/systemd/system/docker.service.d</span></span><br><span class="line"><span class="comment">#cat &gt;&gt; /etc/systemd/system/docker.service.d/http-proxy.conf  &lt;&lt; EOF</span></span><br><span class="line"><span class="comment">#[Service]</span></span><br><span class="line"><span class="comment">#Environment="HTTP_PROXY=http://thenorth.f.ftq.me:52579"</span></span><br><span class="line"><span class="comment">#Environment="HTTPS_PROXY=http://thenorth.f.ftq.me:52579"</span></span><br><span class="line"><span class="comment">#Environment="NO_PROXY=127.0.0.1,localhost,10.0.0.0/8,172.0.0.0/8,192.168.0.0/16,*.zerofinance.net"</span></span><br><span class="line"><span class="comment">#EOF</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#systemctl daemon-reload</span></span><br><span class="line"><span class="comment">#systemctl show --property=Environment docker</span></span><br><span class="line"></span><br><span class="line">systemctl restart docker</span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br><span class="line"></span><br><span class="line"><span class="comment">#cd /docker/works/images/Vagrant环境搭建/k8s/</span></span><br><span class="line"><span class="comment">#./importK8s.sh</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#docker load -i /docker/works/images/Vagrant环境搭建/others/redis-master.tar </span></span><br><span class="line"><span class="comment">#docker load -i /docker/works/images/Vagrant环境搭建/others/guestbook-redis-slave.tar </span></span><br><span class="line"><span class="comment">#docker load -i /docker/works/images/Vagrant环境搭建/others/guestbook-php-frontend.tar</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#docker load -i /docker/works/images/Vagrant环境搭建/k8s/tar/quagga.tar</span></span><br><span class="line"><span class="comment">#docker run -itd --name=router --privileged --net=host index.alauda.cn/georce/router</span></span><br><span class="line"><span class="comment">#docker start `docker ps -a |grep 'index.alauda.cn/georce/router'|awk '&#123;print $1&#125;'`</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#install docker-engine end-----------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#mkdir /usr/local/java &gt; /dev/null 2&gt;&amp;1 </span></span><br><span class="line"><span class="comment">#cd $filepath/files</span></span><br><span class="line"><span class="comment">#tar zxf jdk-8u111-linux-x64.tar.gz -C /usr/local/java/</span></span><br><span class="line"><span class="comment">#ln -sf /usr/local/java/jdk1.8.0_111 /usr/local/java/jdk</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#cat /etc/profile|grep "JAVA_HOME" &gt; /dev/null</span></span><br><span class="line"><span class="comment">#if [[ $? != 0 ]]; then</span></span><br><span class="line"><span class="comment">#cat &gt;&gt; /etc/profile  &lt;&lt; EOF</span></span><br><span class="line"><span class="comment"># export JAVA_HOME=/usr/local/java/jdk</span></span><br><span class="line"><span class="comment"># export PATH=\$JAVA_HOME/bin:\$PATH</span></span><br><span class="line"><span class="comment">#EOF</span></span><br><span class="line"><span class="comment"># source /etc/profile</span></span><br><span class="line"><span class="comment">#fi#</span></span><br></pre></td></tr></table></figure></p>
<p>centos6的脚本会有所不同，可以参考<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment">#http://www.360doc.com/content/14/1125/19/7044580_428024359.shtml</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"scripting......"</span></span><br><span class="line"></span><br><span class="line">filepath=/vagrant</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">'s;en_GB;zh_CN;'</span> /etc/sysconfig/i18n</span><br><span class="line"></span><br><span class="line">yum -y install yum-fastestmirror</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! -f <span class="string">"/etc/yum.repos.d/CentOS-Base.repo.from.aliyun.backup"</span> ]; <span class="keyword">then</span> </span><br><span class="line">  mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.from.aliyun.backup</span><br><span class="line">  <span class="comment">#wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.163.com/.help/CentOS6-Base-163.repo</span></span><br><span class="line">  wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo</span><br><span class="line">  yum clean all</span><br><span class="line">  yum makecache</span><br><span class="line"><span class="keyword">fi</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">#wget http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-8.noarch.rpm</span></span><br><span class="line">rpm -ivh http://download.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment">#yum install gcc gcc-c++ make bind-untils libevent libevent-devel sysstat autoconf \</span></span><br><span class="line"><span class="comment"># curl curl-devel -y</span></span><br><span class="line"><span class="comment">#yum install gcc gcc-c++ kernel-devel make autoconf libevent libevent-devel bind-untils</span></span><br><span class="line"></span><br><span class="line">yum -y install ntpdate net-tools setuptool iptables system-config-securitylevel-tui system-config-network-tui \</span><br><span class="line"> ntsysv net-tools lrzsz telnet lsof dos2unix unix2dos zip unzip vim curl curl-devel</span><br><span class="line"> </span><br><span class="line"><span class="comment">#升级内核为3.10</span></span><br><span class="line">rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</span><br><span class="line"><span class="comment">#cd /etc/yum.repos.d/</span></span><br><span class="line">rpm -ivh http://www.elrepo.org/elrepo-release-6-6.el6.elrepo.noarch.rpm</span><br><span class="line">yum --enablerepo=elrepo-kernel install kernel<span class="_">-lt</span> kernel<span class="_">-lt</span>-devel -y</span><br><span class="line"><span class="comment">#修改grub.conf文件的default=0</span></span><br><span class="line">sed -i <span class="string">'s;^default=.*;default=0;'</span> /etc/grub.conf</span><br><span class="line">sed -i <span class="string">'s;^default=.*;default=0;'</span> /boot/grub/grub.conf </span><br><span class="line"></span><br><span class="line">/opt/VBoxGuestAdditions-4.3.30/init/vboxadd setup</span><br><span class="line"><span class="comment">#reboot uname -r</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#chkconfig --level 35 memcached on</span></span><br><span class="line"><span class="comment">#service iptables stop</span></span><br><span class="line"><span class="comment">#chkconfig --level 35 iptables on</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#关闭内核安全(如果是vagrant方式，第一次完成后需要重启vagrant才能生效。)</span></span><br><span class="line">sed -i <span class="string">'s;SELINUX=.*;SELINUX=disabled;'</span> /etc/selinux/config</span><br><span class="line">setenforce 0</span><br><span class="line">getenforce</span><br><span class="line"></span><br><span class="line">ln -sf /usr/share/zoneinfo/Asia/Chongqing /etc/localtime</span><br><span class="line"></span><br><span class="line">cat /etc/security/limits.conf|grep 65535 &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">cat &gt;&gt; /etc/security/limits.conf  &lt;&lt; EOF</span><br><span class="line">    *               soft    nofile             65535</span><br><span class="line">    *               hard    nofile             65535</span><br><span class="line">    *               soft    nproc              65535</span><br><span class="line">    *               hard    nproc              65535</span><br><span class="line">EOF</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">cat /etc/sysctl.conf|grep <span class="string">"net.ipv4.ip_local_port_range"</span> &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">cat &gt;&gt; /etc/sysctl.conf  &lt;&lt; EOF</span><br><span class="line">  net.ipv4.tcp_fin_timeout = 30</span><br><span class="line">  net.ipv4.tcp_keepalive_time = 300</span><br><span class="line">  net.ipv4.tcp_tw_reuse = 1</span><br><span class="line">  net.ipv4.tcp_tw_recycle = 1</span><br><span class="line">  net.ipv4.ip_local_port_range = 1024 65535</span><br><span class="line">EOF</span><br><span class="line">  sysctl -p</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#mkdir /usr/local/java &gt; /dev/null 2&gt;&amp;1 </span></span><br><span class="line"><span class="comment">#cd $filepath/files</span></span><br><span class="line"><span class="comment">#tar zxf jdk-8u91-linux-x64.tar.gz -C /usr/local/java/</span></span><br><span class="line"><span class="comment">#ln -sf /usr/local/java/jdk1.8.0_91 /usr/local/java/jdk</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#cat /etc/profile|grep "JAVA_HOME" &gt; /dev/null</span></span><br><span class="line"><span class="comment">#if [[ $? != 0 ]]; then</span></span><br><span class="line"><span class="comment">#cat &gt;&gt; /etc/profile  &lt;&lt; EOF</span></span><br><span class="line"><span class="comment">#export JAVA_HOME=/usr/local/java/jdk</span></span><br><span class="line"><span class="comment">#export PATH=\$JAVA_HOME/bin:\$PATH</span></span><br><span class="line"><span class="comment">#EOF</span></span><br><span class="line"><span class="comment"># source /etc/profile</span></span><br><span class="line"><span class="comment">#fi</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#yum -y install libevent libevent-devel zlib zlib-devel pcre pcre-devel openssl openssl-devel</span></span><br></pre></td></tr></table></figure></p>
<h3 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h3><p>启动：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vagrant up</span><br></pre></td></tr></table></figure></p>
<p>第一次时初始化环境，会调用script.sh脚本。如果需要每次都调用script.sh脚本，需要为provision指定run:”always”属性<br>启动时运行，在启动命令加 –provision 参数,适用于 vagrant up 和 vagrant reload<br>vm启动状态时，执行 vagrant provision 命令。 </p>
<p>第一次启动后，运行sestatus命令显示的还是enable状态，需要重启一下vagrant才会显示disabled。</p>
<p>关闭：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vagrant halt</span><br></pre></td></tr></table></figure></p>
<p>重启：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vagrant reload</span><br></pre></td></tr></table></figure></p>
<p>销毁：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vagrant destroy</span><br></pre></td></tr></table></figure></p>
<p>注意：此操作会删除已创建虚拟机中的所有内容，操作请小心！！！</p>
<p>登录虚拟机：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vagrant ssh</span><br></pre></td></tr></table></figure></p>
<p>如果有多个虚拟机时，后面需要加上对应的名称<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vagrant ssh k8s_master</span><br></pre></td></tr></table></figure></p>
<p>导出:<br>将配置好的环境打包给其他同事使用<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vagrant package --output centos-export.box</span><br></pre></td></tr></table></figure></p>
<h2 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo rm -rf /Applications/Vagrant</span><br><span class="line">sudo rm -f /usr/<span class="built_in">local</span>/bin/vagrant</span><br><span class="line">sudo pkgutil --forget com.vagrant.vagrant</span><br></pre></td></tr></table></figure>
<h2 id="快照"><a href="#快照" class="headerlink" title="快照"></a>快照</h2><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vagrant plugin install vagrant-vbox-snapshot</span><br></pre></td></tr></table></figure>
<h3 id="操作命令"><a href="#操作命令" class="headerlink" title="操作命令"></a>操作命令</h3><p>参考<a href="http://blog.huatai.me/2015/12/03/use-vagrant-snapshot-create-backup/" target="_blank" rel="noopener">http://blog.huatai.me/2015/12/03/use-vagrant-snapshot-create-backup/</a><br>支持的参数如下：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vagrant snapshot take [vm-name] &lt;SNAPSHOT_NAME&gt;   <span class="comment"># take snapshot, labeled by NAME</span></span><br><span class="line">vagrant snapshot list [vm-name]                   <span class="comment"># list snapshots</span></span><br><span class="line">vagrant snapshot back [vm-name]                   <span class="comment"># restore last taken snapshot</span></span><br><span class="line">vagrant snapshot delete [vm-name] &lt;SNAPSHOT_NAME&gt; <span class="comment"># delete specified snapshot</span></span><br><span class="line">vagrant snapshot go [vm-name] &lt;SNAPSHOT_NAME&gt;     <span class="comment"># restore specified snapshot</span></span><br></pre></td></tr></table></figure></p>
<p>创建快照:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vagrant snapshot take k8s_master k8s_master_snapshot</span><br></pre></td></tr></table></figure></p>
<p>虚构机的名称可以通过以下命令查看：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vagrant status</span><br><span class="line">Current machine states:</span><br><span class="line"></span><br><span class="line">k8s_master                running (virtualbox)</span><br><span class="line">k8s_node1                 running (virtualbox)</span><br><span class="line">k8s_node2                 running (virtualbox)</span><br><span class="line"></span><br><span class="line">This environment represents multiple VMs. The VMs are all listed</span><br><span class="line">above with their current state. For more information about a specific</span><br><span class="line">VM, run `vagrant status NAME`.</span><br></pre></td></tr></table></figure></p>
<p>查看快照列表:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vagrant snapshot list</span><br></pre></td></tr></table></figure></p>
<p>含有多个虚拟机时，需要指定对应的名称：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vagrant snapshot list k8s_master</span><br></pre></td></tr></table></figure></p>
<p>从指定快照中恢复:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vagrant snapshot go <span class="string">"k8s_master_snapshot"</span></span><br></pre></td></tr></table></figure></p>
<p>删除一个快照:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vagrant snapshot delete <span class="string">"k8s_master_snapshot"</span></span><br></pre></td></tr></table></figure></p>
<h2 id="异常解决"><a href="#异常解决" class="headerlink" title="异常解决"></a>异常解决</h2><p>/sbin/mount.vboxsf: mounting failed with the error: No such device的解决办法：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install gcc kernel-devel make</span><br><span class="line">/opt/VBoxGuestAdditions-5.1.10/init/vboxadd setup</span><br><span class="line">sudo vagrant reload</span><br></pre></td></tr></table></figure></p>
<h2 id="Hyper-V"><a href="#Hyper-V" class="headerlink" title="Hyper-V"></a>Hyper-V</h2><p>如果有在windows 10安装docker的话，只能使用Hyper-V，VirtualBox启动不了，总结一下使用Hyper-V的使用过程：<br>(Hyper-V需要在管理员模式下运行才行)</p>
<h3 id="下载hyperv对应的box文件"><a href="#下载hyperv对应的box文件" class="headerlink" title="下载hyperv对应的box文件"></a>下载hyperv对应的box文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#centos 7.3</span></span><br><span class="line">wget https://vagrantcloud.com/centos/boxes/7/versions/1707.01/providers/hyperv.box</span><br><span class="line"><span class="comment">#centos 7.4</span></span><br><span class="line">wget https://vagrantcloud.com/centos/boxes/7/versions/1708.01/providers/hyperv.box</span><br></pre></td></tr></table></figure>
<h3 id="编写Vagrantfile"><a href="#编写Vagrantfile" class="headerlink" title="编写Vagrantfile"></a>编写Vagrantfile</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">config.vm.define :k8s_master <span class="keyword">do</span> |k8s_master|</span><br><span class="line">  k8s_master.vm.box = <span class="string">"centos-7.3"</span></span><br><span class="line">  k8s_master.vm.hostname = <span class="string">"k8s-master"</span></span><br><span class="line">  k8s_master.vm.network <span class="string">"private_network"</span>, ip: <span class="string">"192.168.10.6"</span></span><br><span class="line">  <span class="comment">#k8s_master.vm.synced_folder "d:/data/docker", "/docker"</span></span><br><span class="line">  k8s_master.vm.provider <span class="string">"hyperv"</span> <span class="keyword">do</span> |vb|</span><br><span class="line">    <span class="comment">#vb.gui = true</span></span><br><span class="line">    vb.memory = <span class="string">"1024"</span></span><br><span class="line">    vb.cpus = 1</span><br><span class="line">  end</span><br><span class="line">  k8s_master.vm.provision <span class="string">"shell"</span>, run: <span class="string">"always"</span>, inline: &lt;&lt;-SHELL</span><br><span class="line">    systemctl restart network</span><br><span class="line">  SHELL</span><br><span class="line">  k8s_master.vm.provision <span class="string">"shell"</span> <span class="keyword">do</span> |s|</span><br><span class="line">    s.path = <span class="string">"script.sh"</span></span><br><span class="line">    <span class="comment">#s.args = ["k8s-master", "--bip=10.1.10.1/24"]</span></span><br><span class="line">    s.args = [<span class="string">"k8s-master"</span>]</span><br><span class="line">  end</span><br><span class="line">  <span class="comment">#k8s_master.vm.provision "shell", path: "script.sh"</span></span><br><span class="line">end</span><br></pre></td></tr></table></figure>
<h3 id="配置Hyper-V网络"><a href="#配置Hyper-V网络" class="headerlink" title="配置Hyper-V网络"></a>配置Hyper-V网络</h3><p>参考<a href="https://quotidian-ennui.github.io/blog/2016/08/17/vagrant-windows10-hyperv/" target="_blank" rel="noopener">https://quotidian-ennui.github.io/blog/2016/08/17/vagrant-windows10-hyperv/</a><br>如果不配置网络的话，Hyper-V连接不到网络：</p>
<p>也可以手动添加：<br><img src="/images/Vagrant环境搭建/hyperv.png" alt="hyperv.png"></p>
<p>好像Hyper-V不能用private_network，只能用public_network…</p>
<p>注意：<br>对应的box没有wget，可能需要在script.sh脚本中加入：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install wget</span><br></pre></td></tr></table></figure></p>
<h3 id="生成Hyper-V-box"><a href="#生成Hyper-V-box" class="headerlink" title="生成Hyper-V box"></a>生成Hyper-V box</h3><p>还在继续研究中…</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><blockquote>
<p><a href="http://www.vincentguo.cn/default/26.html" target="_blank" rel="noopener">http://www.vincentguo.cn/default/26.html</a><br><a href="http://topmanopensource.iteye.com/blog/2002302" target="_blank" rel="noopener">http://topmanopensource.iteye.com/blog/2002302</a><br><a href="http://blog.csdn.net/54powerman/article/details/50684844" target="_blank" rel="noopener">http://blog.csdn.net/54powerman/article/details/50684844</a><br><a href="https://my.oschina.net/u/148605/blog/385049" target="_blank" rel="noopener">https://my.oschina.net/u/148605/blog/385049</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes集群搭建</title>
    <url>/2017/01/Kubernetes%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA.html</url>
    <content><![CDATA[<p>Kubernetes就不介绍了，用了都说好。</p>
<a id="more"></a>
<h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><h3 id="3台虚拟机"><a href="#3台虚拟机" class="headerlink" title="3台虚拟机"></a>3台虚拟机</h3><p>具体参考：<a href="Vagrant环境搭建.html">Vagrant环境搭建</a><br>docker版本为：1.12.5<br>kubernetes版本为：v1.5.1</p>
<table>
<thead>
<tr>
<th>主机IP</th>
<th>主机名称</th>
<th>软件</th>
<th>内存</th>
</tr>
</thead>
<tbody>
<tr>
<td>192.168.10.6</td>
<td>k8s-master</td>
<td>docker、kube-dns、kube-apiserver、kube-controller-manager、kube-scheduler</td>
<td>1024m</td>
</tr>
<tr>
<td>192.168.10.7</td>
<td>k8s-node1</td>
<td>docker、kube-proxy、kubelet</td>
<td>512m</td>
</tr>
<tr>
<td>192.168.10.8</td>
<td>k8s-node2</td>
<td>docker、kube-proxy、kubelet</td>
<td>512m</td>
</tr>
</tbody>
</table>
<h3 id="安装基础软件"><a href="#安装基础软件" class="headerlink" title="安装基础软件"></a>安装基础软件</h3><p>以下为每台都需要同样的操作</p>
<p>配置yum源：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-master ~]$ tee /etc/yum.repos.d/docker.repo &lt;&lt;-<span class="string">'EOF'</span></span><br><span class="line">[docker]</span><br><span class="line">name=Docker Repository</span><br><span class="line">baseurl=http://mirrors.aliyun.com/docker-engine/yum/repo/main/centos/7/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/docker-engine/yum/gpg</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></p>
<p>安装：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install docker-engine</span><br></pre></td></tr></table></figure></p>
<p>修改配置：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#修改dns</span></span><br><span class="line">cat /etc/NetworkManager/NetworkManager.conf|grep <span class="string">"dns=none"</span> &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"dns=none"</span> &gt;&gt; /etc/NetworkManager/NetworkManager.conf</span><br><span class="line">  systemctl restart NetworkManager.service</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#修改时区</span></span><br><span class="line">ln -sf /usr/share/zoneinfo/Asia/Chongqing /etc/localtime</span><br><span class="line"></span><br><span class="line"><span class="comment">#关闭内核安全(如果是vagrant方式，第一次完成后需要重启vagrant才能生效。)</span></span><br><span class="line">sed -i <span class="string">'s;SELINUX=.*;SELINUX=disabled;'</span> /etc/selinux/config</span><br><span class="line"><span class="comment">#setenforce 0</span></span><br><span class="line"><span class="comment">#getenforce</span></span><br><span class="line"><span class="comment">#reboot</span></span><br><span class="line">[root@k8s-node2 ~]<span class="comment"># sestatus</span></span><br><span class="line">SELinux status:                 disabled</span><br><span class="line"></span><br><span class="line"><span class="comment">#关闭防火墙</span></span><br><span class="line">systemctl <span class="built_in">disable</span> iptables</span><br><span class="line">systemctl stop iptables</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br><span class="line">systemctl stop firewalld</span><br><span class="line"></span><br><span class="line"><span class="comment">#优化内核</span></span><br><span class="line">cat /etc/security/limits.conf|grep 65535 &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">cat &gt;&gt; /etc/security/limits.conf  &lt;&lt; EOF</span><br><span class="line">*               soft    nofile             65535</span><br><span class="line">*               hard    nofile             65535</span><br><span class="line">*               soft    nproc              65535</span><br><span class="line">*               hard    nproc              65535</span><br><span class="line">EOF</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#打开端口转发</span></span><br><span class="line"><span class="comment">#永久修改：/etc/sysctl.conf中的net.ipv4.ip_forward=1，生效：sysctl -p</span></span><br><span class="line"><span class="comment">#临时修改：echo 1 &gt; /proc/sys/net/ipv4/ip_forward，重启后失效</span></span><br><span class="line"></span><br><span class="line">cat /etc/sysctl.conf|grep <span class="string">"net.ipv4.ip_forward"</span> &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">cat &gt;&gt; /etc/sysctl.conf  &lt;&lt; EOF</span><br><span class="line">net.ipv4.tcp_fin_timeout = 30</span><br><span class="line">net.ipv4.tcp_keepalive_time = 300</span><br><span class="line">net.ipv4.tcp_tw_reuse = 1</span><br><span class="line">net.ipv4.tcp_tw_recycle = 1</span><br><span class="line">net.ipv4.ip_local_port_range = 1024 65535</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">EOF</span><br><span class="line">sysctl -p</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">su - root -c <span class="string">"ulimit -a"</span></span><br></pre></td></tr></table></figure></p>
<p>docker加速：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">"s;^ExecStart=/usr/bin/dockerd$;ExecStart=/usr/bin/dockerd \</span></span><br><span class="line"><span class="string">  --registry-mirror=http://3fecfd09.m.daocloud.io;"</span> \</span><br><span class="line">  /usr/lib/systemd/system/docker.service</span><br></pre></td></tr></table></figure></p>
<p>docker启动:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br><span class="line">systemctl start docker</span><br><span class="line">systemctl status docker</span><br></pre></td></tr></table></figure></p>
<h3 id="镜像下载"><a href="#镜像下载" class="headerlink" title="镜像下载"></a>镜像下载</h3><p>由于kubernetes需要访问grc.io，国内无法访问。可以在安装完成docker后，先下载对应的docker镜像：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">images=(pause-amd64:3.0 kubernetes-dashboard-amd64:v1.5.0)</span><br><span class="line"><span class="keyword">for</span> imageName <span class="keyword">in</span> <span class="variable">$&#123;images[@]&#125;</span> ; <span class="keyword">do</span></span><br><span class="line">  docker pull mritd/<span class="variable">$imageName</span></span><br><span class="line">  docker tag mritd/<span class="variable">$imageName</span> gcr.io/google_containers/<span class="variable">$imageName</span></span><br><span class="line">  docker rmi mritd/<span class="variable">$imageName</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></p>
<h3 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h3><p>192.168.10.6执行：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hostnamectl --static <span class="built_in">set</span>-hostname k8s-master</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#初始化目录</span></span><br><span class="line">mkdir -p /etc/kubernetes/ssl/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不重启情况下使内核生效</span></span><br><span class="line">sysctl kernel.hostname=k8s-master</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'192.168.10.6 k8s-master</span></span><br><span class="line"><span class="string">192.168.10.7   k8s-node1</span></span><br><span class="line"><span class="string">192.168.10.8   k8s-node2'</span> &gt;&gt; /etc/hosts</span><br><span class="line"></span><br><span class="line"><span class="comment">#采用直接路由，docker0的网段不能一样，所以需要修改docker的子网地址--bip=10.1.10.1/24</span></span><br><span class="line"><span class="comment">#vim /usr/lib/systemd/system/docker.service</span></span><br><span class="line"><span class="comment">#在/etc/sysconfig/docker的OPTIONS添加：(1.10版本才生效)</span></span><br><span class="line">sed -i <span class="string">"s;^ExecStart=/usr/bin/dockerd.*;ExecStart=/usr/bin/dockerd --bip=10.1.10.1/24 \</span></span><br><span class="line"><span class="string">--registry-mirror=http://3fecfd09.m.daocloud.io;"</span> \</span><br><span class="line"> /usr/lib/systemd/system/docker.service</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br><span class="line"></span><br><span class="line"><span class="comment">#打通router</span></span><br><span class="line"><span class="comment">##192.168.10.6:</span></span><br><span class="line"><span class="comment">#route add -net 10.1.20.0 netmask 255.255.255.0 gw 192.168.10.7</span></span><br><span class="line"><span class="comment">#route add -net 10.1.30.0 netmask 255.255.255.0 gw 192.168.10.8</span></span><br><span class="line"><span class="comment">##192.168.10.7:</span></span><br><span class="line"><span class="comment">#route add -net 10.1.10.0 netmask 255.255.255.0 gw 192.168.10.6</span></span><br><span class="line"><span class="comment">#route add -net 10.1.30.0 netmask 255.255.255.0 gw 192.168.10.8</span></span><br><span class="line"><span class="comment">##192.168.10.8:</span></span><br><span class="line"><span class="comment">#route add -net 10.1.10.0 netmask 255.255.255.0 gw 192.168.10.6</span></span><br><span class="line"><span class="comment">#route add -net 10.1.20.0 netmask 255.255.255.0 gw 192.168.10.7</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#手动打通路由比较麻烦，建议通过Quagga打通</span></span><br><span class="line">docker pull index.alauda.cn/georce/router</span><br><span class="line"><span class="comment">#保存至文件，下次可以直接导入，不用再下载</span></span><br><span class="line"><span class="comment">#docker save -o /docker/works/images/Kubernetes集群搭建/k8s/tar/quagga.tar</span></span><br><span class="line"><span class="comment">#docker load -i /docker/works/images/Kubernetes集群搭建/k8s/tar/quagga.tar</span></span><br><span class="line">docker run -itd --name=router --privileged --net=host index.alauda.cn/georce/router</span><br><span class="line"><span class="comment">#注意，系统重启时要自动启动quagga，否则会有问题。可以把以下命令加到/etc/rc.local中：</span></span><br><span class="line"><span class="comment">#docker start `docker ps -a |grep 'index.alauda.cn/georce/router'|awk '&#123;print $1&#125;'`</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"docker start \`docker ps -a |grep 'index.alauda.cn/georce/router'|awk '&#123;print \$1&#125;'\`"</span> &gt;&gt; /etc/rc.local</span><br><span class="line"><span class="comment">#执行 ip route 查看下路由表，已有别的docker0的网段信息。</span></span><br></pre></td></tr></table></figure></p>
<p>192.168.10.7执行：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hostnamectl --static <span class="built_in">set</span>-hostname k8s-node1</span><br><span class="line"></span><br><span class="line"><span class="comment">#初始化目录</span></span><br><span class="line">/etc/kubernetes/ssl/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不重启情况下使内核生效</span></span><br><span class="line">sysctl kernel.hostname=k8s-node1</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'192.168.10.6 k8s-master</span></span><br><span class="line"><span class="string">192.168.10.7   k8s-node1</span></span><br><span class="line"><span class="string">192.168.10.8   k8s-node2'</span> &gt;&gt; /etc/hosts</span><br><span class="line"></span><br><span class="line"><span class="comment">#采用直接路由，docker0的网段不能一样，所以需要修改docker的子网地址--bip=10.1.20.1/24</span></span><br><span class="line"><span class="comment">#vim /usr/lib/systemd/system/docker.service</span></span><br><span class="line"><span class="comment">#在/etc/sysconfig/docker的OPTIONS添加：(1.10版本才生效)</span></span><br><span class="line">sed -i <span class="string">"s;^ExecStart=/usr/bin/dockerd.*;ExecStart=/usr/bin/dockerd --bip=10.1.20.1/24 \</span></span><br><span class="line"><span class="string">--registry-mirror=http://3fecfd09.m.daocloud.io;"</span> \</span><br><span class="line"> /usr/lib/systemd/system/docker.service</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br><span class="line"></span><br><span class="line"><span class="comment">#手动打通路由比较麻烦，建议通过Quagga打通</span></span><br><span class="line">docker pull index.alauda.cn/georce/router</span><br><span class="line"><span class="comment">#保存至文件，下次可以直接导入，不用再下载</span></span><br><span class="line"><span class="comment">#docker save -o /docker/works/images/Kubernetes集群搭建/k8s/tar/quagga.tar</span></span><br><span class="line"><span class="comment">#docker load -i /docker/works/images/Kubernetes集群搭建/k8s/tar/quagga.tar</span></span><br><span class="line">docker run -itd --name=router --privileged --net=host index.alauda.cn/georce/router</span><br><span class="line"><span class="comment">#注意，系统重启时要自动启动quagga，否则会有问题。可以把以下命令加到/etc/rc.local中：</span></span><br><span class="line"><span class="comment">#docker start `docker ps -a |grep 'index.alauda.cn/georce/router'|awk '&#123;print $1&#125;'`</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"docker start \`docker ps -a |grep 'index.alauda.cn/georce/router'|awk '&#123;print <span class="variable">$1</span>&#125;'\`"</span> &gt;&gt; /etc/rc.local</span><br><span class="line"><span class="comment">#执行 ip route 查看下路由表，已有别的docker0的网段信息。</span></span><br></pre></td></tr></table></figure></p>
<p>192.168.10.8执行：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hostnamectl --static <span class="built_in">set</span>-hostname k8s-node2</span><br><span class="line"></span><br><span class="line"><span class="comment">#初始化目录</span></span><br><span class="line">/etc/kubernetes/ssl/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不重启情况下使内核生效</span></span><br><span class="line">sysctl kernel.hostname=k8s-node2</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'192.168.10.6 k8s-master</span></span><br><span class="line"><span class="string">192.168.10.7   k8s-node1</span></span><br><span class="line"><span class="string">192.168.10.8   k8s-node2'</span> &gt;&gt; /etc/hosts</span><br><span class="line"></span><br><span class="line"><span class="comment">#采用直接路由，docker0的网段不能一样，所以需要修改docker的子网地址--bip=10.1.30.1/24</span></span><br><span class="line"><span class="comment">#vim /usr/lib/systemd/system/docker.service</span></span><br><span class="line"><span class="comment">#在/etc/sysconfig/docker的OPTIONS添加：(1.10版本才生效)</span></span><br><span class="line">sed -i <span class="string">"s;^ExecStart=/usr/bin/dockerd.*;ExecStart=/usr/bin/dockerd --bip=10.1.30.1/24 \</span></span><br><span class="line"><span class="string">--registry-mirror=http://3fecfd09.m.daocloud.io;"</span> \</span><br><span class="line"> /usr/lib/systemd/system/docker.service</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br><span class="line"></span><br><span class="line"><span class="comment">#手动打通路由比较麻烦，建议通过Quagga打通</span></span><br><span class="line">docker pull index.alauda.cn/georce/router</span><br><span class="line"><span class="comment">#保存至文件，下次可以直接导入，不用再下载</span></span><br><span class="line"><span class="comment">#docker save -o /docker/works/images/Kubernetes集群搭建/k8s/tar/quagga.tar</span></span><br><span class="line"><span class="comment">#docker load -i /docker/works/images/Kubernetes集群搭建/k8s/tar/quagga.tar</span></span><br><span class="line">docker run -itd --name=router --privileged --net=host index.alauda.cn/georce/router</span><br><span class="line"><span class="comment">#注意，系统重启时要自动启动quagga，否则会有问题。可以把以下命令加到/etc/rc.local中：</span></span><br><span class="line"><span class="comment">#docker start `docker ps -a |grep 'index.alauda.cn/georce/router'|awk '&#123;print $1&#125;'`</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"docker start \`docker ps -a |grep 'index.alauda.cn/georce/router'|awk '&#123;print <span class="variable">$1</span>&#125;'\`"</span> &gt;&gt; /etc/rc.local</span><br><span class="line"><span class="comment">#执行 ip route 查看下路由表，已有别的docker0的网段信息。</span></span><br></pre></td></tr></table></figure></p>
<h2 id="安装kubernetes"><a href="#安装kubernetes" class="headerlink" title="安装kubernetes"></a>安装kubernetes</h2><h3 id="yum安装"><a href="#yum安装" class="headerlink" title="yum安装"></a>yum安装</h3><p>每台添加yum源：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tee /etc/yum.repos.d/k8s.repo &lt;&lt;-<span class="string">'EOF'</span></span><br><span class="line">[k8s-repo]</span><br><span class="line">name=kubernetes Repository</span><br><span class="line">baseurl=https://rpm.mritd.me/centos/7/x86_64</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://cdn.mritd.me/keys/rpm.public.key</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></p>
<p>如果这个源不稳定的话，可以下载我创建好的源，直接通过yum localinstall *.rpm方式安装<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://git.coding.net/zhaoxunyong/repo.git</span><br><span class="line"><span class="built_in">cd</span> repo/yum/kubernetes/x86_64</span><br><span class="line">yum -y localinstall kubernetes-1.5.1-git82450d0.el7.centos.x86_64.rpm</span><br></pre></td></tr></table></figure></p>
<p><strong><em> master(192.168.10.6)执行 </em></strong><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y etcd kubernetes</span><br></pre></td></tr></table></figure></p>
<p>其他安装：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install kubernetes</span><br></pre></td></tr></table></figure></p>
<h3 id="二进制安装"><a href="#二进制安装" class="headerlink" title="二进制安装"></a>二进制安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://storage.googleapis.com/kubernetes-release/release/v1.5.1/kubernetes.tar.gz</span><br><span class="line">tar zxvf kubernetes.tar.gz</span><br><span class="line"><span class="comment">#下载对应的server与client文件</span></span><br><span class="line"><span class="built_in">cd</span> kubernetes</span><br><span class="line">sh cluster/get-kube-binaries.sh</span><br></pre></td></tr></table></figure>
<p>下载好的文件分别位于：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">server/kubernetes-server-linux-amd64.tar.gz</span><br><span class="line">client/kubernetes-client-linux-amd64.tar.gz</span><br></pre></td></tr></table></figure></p>
<p>具体安装步骤稍后补充</p>
<h2 id="rpm方式配置kubernetes"><a href="#rpm方式配置kubernetes" class="headerlink" title="rpm方式配置kubernetes"></a>rpm方式配置kubernetes</h2><h3 id="master-192-168-10-6-执行"><a href="#master-192-168-10-6-执行" class="headerlink" title="master(192.168.10.6)执行"></a>master(192.168.10.6)执行</h3><h4 id="证书制作"><a href="#证书制作" class="headerlink" title="证书制作"></a>证书制作</h4><p>如果不采用证书方式安装，请略过此节。</p>
<h5 id="自签-CA"><a href="#自签-CA" class="headerlink" title="自签 CA"></a>自签 CA</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建证书存放目录</span></span><br><span class="line">mkdir cert &amp;&amp; <span class="built_in">cd</span> cert</span><br><span class="line"><span class="comment"># 创建 CA 私钥</span></span><br><span class="line">openssl genrsa -out ca-key.pem 2048</span><br><span class="line"><span class="comment"># 自签 CA</span></span><br><span class="line">openssl req -x509 -new -nodes -key ca-key.pem -days 10000 -out ca.pem -subj <span class="string">"/CN=kube-ca"</span></span><br></pre></td></tr></table></figure>
<h5 id="签署-apiserver-证书"><a href="#签署-apiserver-证书" class="headerlink" title="签署 apiserver 证书"></a>签署 apiserver 证书</h5><p>首先先修改openssl的配置<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 复制 openssl 配置文件</span></span><br><span class="line"><span class="comment">#cp /etc/pki/tls/openssl.cnf .</span></span><br><span class="line"><span class="comment"># 编辑 openssl 配置使其支持 IP 认证</span></span><br><span class="line">vim openssl.cnf</span><br><span class="line">[req]</span><br><span class="line">req_extensions = v3_req</span><br><span class="line">distinguished_name = req_distinguished_name</span><br><span class="line">[req_distinguished_name]</span><br><span class="line">[ v3_req ]</span><br><span class="line">basicConstraints = CA:FALSE</span><br><span class="line">keyUsage = nonRepudiation, digitalSignature, keyEncipherment</span><br><span class="line">subjectAltName = @alt_names</span><br><span class="line">[alt_names]</span><br><span class="line">DNS.1 = kubernetes</span><br><span class="line">DNS.2 = kubernetes.default</span><br><span class="line">DNS.3 = kubernetes.default.svc</span><br><span class="line">DNS.4 = kubernetes.default.svc.cluster.local</span><br><span class="line"><span class="comment"># kubernetes server ip</span></span><br><span class="line">IP.1 = 10.254.0.1</span><br><span class="line"><span class="comment"># master ip(如果都在一台机器上写一个就行)</span></span><br><span class="line">IP.2 = 192.168.10.6</span><br></pre></td></tr></table></figure></p>
<h5 id="签署apiserver相关的证书"><a href="#签署apiserver相关的证书" class="headerlink" title="签署apiserver相关的证书"></a>签署apiserver相关的证书</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成apiserver私钥</span></span><br><span class="line">openssl genrsa -out apiserver-key.pem 2048</span><br><span class="line"><span class="comment"># 生成签署请求</span></span><br><span class="line">openssl req -new -key apiserver-key.pem -out apiserver.csr -subj <span class="string">"/CN=kube-apiserver"</span> -config openssl.cnf</span><br><span class="line"><span class="comment"># 使用自建 CA 签署</span></span><br><span class="line">openssl x509 -req -<span class="keyword">in</span> apiserver.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out apiserver.pem -days 365 -extensions v3_req -extfile openssl.cnf</span><br></pre></td></tr></table></figure>
<h5 id="签署-node-的证书"><a href="#签署-node-的证书" class="headerlink" title="签署 node 的证书"></a>签署 node 的证书</h5><p>还需要签署每个节点的证书先修改一下openssl配置<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># copy master 的 openssl 配置</span></span><br><span class="line"><span class="comment">#cp openssl.cnf worker-openssl.cnf</span></span><br><span class="line"><span class="comment"># 修改 worker-openssl 配置</span></span><br><span class="line">vim worker-openssl.cnf</span><br><span class="line">[req]</span><br><span class="line">req_extensions = v3_req</span><br><span class="line">distinguished_name = req_distinguished_name</span><br><span class="line">[req_distinguished_name]</span><br><span class="line">[ v3_req ]</span><br><span class="line">basicConstraints = CA:FALSE</span><br><span class="line">keyUsage = nonRepudiation, digitalSignature, keyEncipherment</span><br><span class="line">subjectAltName = @alt_names</span><br><span class="line">[alt_names]</span><br><span class="line"><span class="comment"># 此处填写node的内网ip，多个node ip地址以此类推IP.2 = NODE2-IP</span></span><br><span class="line">IP.1 = 192.168.10.7</span><br><span class="line">IP.2 = 192.168.10.8</span><br></pre></td></tr></table></figure></p>
<p>签署node1的证书</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成 node1 私钥</span></span><br><span class="line">openssl genrsa -out node1-worker-key.pem 2048</span><br><span class="line"><span class="comment"># 生成 签署请求</span></span><br><span class="line">openssl req -new -key node1-worker-key.pem -out node1-worker.csr -subj <span class="string">"/CN=node1"</span> -config worker-openssl.cnf</span><br><span class="line"><span class="comment"># 使用自建 CA 签署</span></span><br><span class="line">openssl x509 -req -<span class="keyword">in</span> node1-worker.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out node1-worker.pem -days 365 -extensions v3_req -extfile worker-openssl.cnf</span><br></pre></td></tr></table></figure>
<p>签署node2的证书<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成 node2 私钥</span></span><br><span class="line">openssl genrsa -out node2-worker-key.pem 2048</span><br><span class="line"><span class="comment"># 生成 签署请求</span></span><br><span class="line">openssl req -new -key node2-worker-key.pem -out node2-worker.csr -subj <span class="string">"/CN=node2"</span> -config worker-openssl.cnf</span><br><span class="line"><span class="comment"># 使用自建 CA 签署</span></span><br><span class="line">openssl x509 -req -<span class="keyword">in</span> node2-worker.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out node2-worker.pem -days 365 -extensions v3_req -extfile worker-openssl.cnf</span><br></pre></td></tr></table></figure></p>
<h5 id="生成集群管理证书"><a href="#生成集群管理证书" class="headerlink" title="生成集群管理证书"></a>生成集群管理证书</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 签署一个集群管理证书</span></span><br><span class="line">openssl genrsa -out admin-key.pem 2048</span><br><span class="line">openssl req -new -key admin-key.pem -out admin.csr -subj <span class="string">"/CN=kube-admin"</span></span><br><span class="line">openssl x509 -req -<span class="keyword">in</span> admin.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out admin.pem -days 365</span><br></pre></td></tr></table></figure>
<h5 id="配置证书"><a href="#配置证书" class="headerlink" title="配置证书"></a>配置证书</h5><h5 id="生成kubeconfig-yaml文件"><a href="#生成kubeconfig-yaml文件" class="headerlink" title="生成kubeconfig.yaml文件"></a>生成kubeconfig.yaml文件</h5><p>此文件供需要通过证书方式访问apiserver时使用：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-master ~]$ vim kubeconfig.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">clusters:</span><br><span class="line">- cluster:</span><br><span class="line">    certificate-authority: /etc/kubernetes/ssl/ca.pem</span><br><span class="line">    server: https://192.168.10.6:6443</span><br><span class="line">  name: default-cluster</span><br><span class="line">contexts:</span><br><span class="line">- context:</span><br><span class="line">    cluster: default-cluster</span><br><span class="line">    user: default-admin</span><br><span class="line">  name: default-system</span><br><span class="line">current-context: default-system</span><br><span class="line">kind: Config</span><br><span class="line">users:</span><br><span class="line">- name: default-admin</span><br><span class="line">  user:</span><br><span class="line">    client-certificate: /etc/kubernetes/ssl/admin.pem</span><br><span class="line">    client-key: /etc/kubernetes/ssl/admin-key.pem</span><br></pre></td></tr></table></figure></p>
<h5 id="生成worker1-kubeconfig-yaml文件"><a href="#生成worker1-kubeconfig-yaml文件" class="headerlink" title="生成worker1-kubeconfig.yaml文件"></a>生成worker1-kubeconfig.yaml文件</h5><p>此文件供需要通过证书方式访问kubelet时使用：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-master ~]$ vim worker1-kubeconfig.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Config</span><br><span class="line">clusters:</span><br><span class="line">- name: <span class="built_in">local</span></span><br><span class="line">  cluster:</span><br><span class="line">    certificate-authority: /etc/kubernetes/ssl/ca.pem</span><br><span class="line">users:</span><br><span class="line">- name: kubelet</span><br><span class="line">  user:</span><br><span class="line">    client-certificate: /etc/kubernetes/ssl/node1-worker.pem</span><br><span class="line">    client-key: /etc/kubernetes/ssl/node1-worker-key.pem</span><br><span class="line">contexts:</span><br><span class="line">- context:</span><br><span class="line">    cluster: <span class="built_in">local</span></span><br><span class="line">    user: kubelet</span><br><span class="line">  name: kubelet-context</span><br><span class="line">current-context: kubelet-context</span><br></pre></td></tr></table></figure></p>
<h5 id="生成worker2-kubeconfig-yaml文件"><a href="#生成worker2-kubeconfig-yaml文件" class="headerlink" title="生成worker2-kubeconfig.yaml文件"></a>生成worker2-kubeconfig.yaml文件</h5><p>此文件供需要通过证书方式访问kubelet时使用：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-master ~]$ vim worker2-kubeconfig.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Config</span><br><span class="line">clusters:</span><br><span class="line">- name: <span class="built_in">local</span></span><br><span class="line">  cluster:</span><br><span class="line">    certificate-authority: /etc/kubernetes/ssl/ca.pem</span><br><span class="line">users:</span><br><span class="line">- name: kubelet</span><br><span class="line">  user:</span><br><span class="line">    client-certificate: /etc/kubernetes/ssl/node2-worker.pem</span><br><span class="line">    client-key: /etc/kubernetes/ssl/node2-worker-key.pem</span><br><span class="line">contexts:</span><br><span class="line">- context:</span><br><span class="line">    cluster: <span class="built_in">local</span></span><br><span class="line">    user: kubelet</span><br><span class="line">  name: kubelet-context</span><br><span class="line">current-context: kubelet-context</span><br></pre></td></tr></table></figure></p>
<h5 id="copy证书"><a href="#copy证书" class="headerlink" title="copy证书"></a>copy证书</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 先把证书 copy 到配置目录</span></span><br><span class="line">mkdir -p /etc/kubernetes/ssl</span><br><span class="line">/bin/cp -a ca.pem apiserver.pem apiserver-key.pem \</span><br><span class="line">  admin.pem admin-key.pem \</span><br><span class="line">  kubeconfig.yaml \</span><br><span class="line">  /etc/kubernetes/ssl</span><br><span class="line"><span class="comment"># rpm 安装的 kubernetes 默认使用 kube 用户，需要更改权限</span></span><br><span class="line">chown kube:kube -R /etc/kubernetes/ssl</span><br><span class="line"></span><br><span class="line"><span class="comment"># copy证书到所有node节点：</span></span><br><span class="line">scp kubeconfig.yaml admin.pem admin-key.pem ca.pem \</span><br><span class="line"> node1-worker.pem node1-worker-key.pem worker1-kubeconfig.yaml root@192.168.10.7:/etc/kubernetes/ssl/</span><br><span class="line"></span><br><span class="line">scp kubeconfig.yaml admin.pem admin-key.pem ca.pem \</span><br><span class="line"> node2-worker.pem node2-worker-key.pem worker2-kubeconfig.yaml root@192.168.10.8:/etc/kubernetes/ssl/</span><br></pre></td></tr></table></figure>
<h4 id="etcd"><a href="#etcd" class="headerlink" title="etcd"></a>etcd</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">sed -i <span class="string">'s;^ETCD_LISTEN_CLIENT_URLS=.*;ETCD_LISTEN_CLIENT_URLS="http://localhost:2379,http://192.168.10.6:2379";'</span> /etc/etcd/etcd.conf</span><br><span class="line">sed -i <span class="string">'s;^ETCD_ADVERTISE_CLIENT_URLS=.*;ETCD_ADVERTISE_CLIENT_URLS="http://localhost:2379,http://192.168.10.6:2379";'</span> /etc/etcd/etcd.conf</span><br><span class="line"></span><br><span class="line">[root@k8s-master ~]$ grep -v ^<span class="comment"># /etc/etcd/etcd.conf </span></span><br><span class="line">ETCD_NAME=default</span><br><span class="line">ETCD_DATA_DIR=<span class="string">"/var/lib/etcd/default.etcd"</span></span><br><span class="line">ETCD_LISTEN_CLIENT_URLS=<span class="string">"http://localhost:2379,http://192.168.10.6:2379"</span></span><br><span class="line">ETCD_ADVERTISE_CLIENT_URLS=<span class="string">"http://localhost:2379,http://192.168.10.6:2379"</span></span><br><span class="line"></span><br><span class="line">systemctl restart etcd.service</span><br><span class="line">systemctl <span class="built_in">enable</span> etcd.service</span><br><span class="line">systemctl status etcd.service</span><br><span class="line"></span><br><span class="line">etcdctl cluster-health</span><br><span class="line"><span class="comment">#member 8e9e05c52164694d is healthy: got healthy result from http://192.168.10.6:2379</span></span><br><span class="line"><span class="comment">#cluster is healthy</span></span><br><span class="line"></span><br><span class="line">etcdctl member list</span><br><span class="line"><span class="comment">#8e9e05c52164694d: name=default peerURLs=http://localhost:2380 clientURLs=http://192.168.10.6:2379,http://localhost:2379 isLeader=true</span></span><br></pre></td></tr></table></figure>
<h4 id="config"><a href="#config" class="headerlink" title="config"></a>config</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tee /etc/kubernetes/config &lt;&lt;-<span class="string">'EOF'</span></span><br><span class="line">KUBE_LOGTOSTDERR=<span class="string">"--logtostderr=true"</span></span><br><span class="line">KUBE_LOG_LEVEL=<span class="string">"--v=0"</span></span><br><span class="line">KUBE_ALLOW_PRIV=<span class="string">"--allow-privileged=false"</span></span><br><span class="line">KUBE_MASTER=<span class="string">"--master=https://192.168.10.6:6443"</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">[root@k8s-master ~]$ grep -v ^<span class="comment"># /etc/kubernetes/config</span></span><br><span class="line">KUBE_LOGTOSTDERR=<span class="string">"--logtostderr=true"</span></span><br><span class="line">KUBE_LOG_LEVEL=<span class="string">"--v=0"</span></span><br><span class="line">KUBE_ALLOW_PRIV=<span class="string">"--allow-privileged=false"</span></span><br><span class="line">KUBE_MASTER=<span class="string">"--master=https://192.168.10.6:6443"</span></span><br></pre></td></tr></table></figure>
<h4 id="apiserver"><a href="#apiserver" class="headerlink" title="apiserver"></a>apiserver</h4><p>修改：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tee /etc/kubernetes/apiserver &lt;&lt;-<span class="string">'EOF'</span></span><br><span class="line">KUBE_API_ADDRESS=<span class="string">"--bind-address=192.168.10.6 --insecure-bind-address=127.0.0.1"</span></span><br><span class="line">KUBE_API_PORT=<span class="string">"--secure-port=6443 --insecure-port=8080"</span></span><br><span class="line">KUBE_ETCD_SERVERS=<span class="string">"--etcd-servers=http://192.168.10.6:2379"</span></span><br><span class="line">KUBE_SERVICE_ADDRESSES=<span class="string">"--service-cluster-ip-range=10.254.0.0/16"</span></span><br><span class="line">KUBE_ADMISSION_CONTROL=<span class="string">"--admission-control=NamespaceLifecycle,NamespaceExists,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota"</span></span><br><span class="line">KUBE_API_ARGS=<span class="string">"--tls-cert-file=/etc/kubernetes/ssl/apiserver.pem --tls-private-key-file=/etc/kubernetes/ssl/apiserver-key.pem --client-ca-file=/etc/kubernetes/ssl/ca.pem --service-account-key-file=/etc/kubernetes/ssl/apiserver-key.pem"</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">[root@k8s-master ~]$ grep -v ^<span class="comment"># /etc/kubernetes/apiserver</span></span><br><span class="line">KUBE_API_ADDRESS=<span class="string">"--bind-address=192.168.10.6 --insecure-bind-address=127.0.0.1"</span></span><br><span class="line">KUBE_API_PORT=<span class="string">"--secure-port=6443 --insecure-port=8080"</span></span><br><span class="line">KUBE_ETCD_SERVERS=<span class="string">"--etcd-servers=http://192.168.10.6:2379"</span></span><br><span class="line">KUBE_SERVICE_ADDRESSES=<span class="string">"--service-cluster-ip-range=10.254.0.0/16"</span></span><br><span class="line">KUBE_ADMISSION_CONTROL=<span class="string">"--admission-control=NamespaceLifecycle,NamespaceExists,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota"</span></span><br><span class="line">KUBE_API_ARGS=<span class="string">"--tls-cert-file=/etc/kubernetes/ssl/apiserver.pem --tls-private-key-file=/etc/kubernetes/ssl/apiserver-key.pem --client-ca-file=/etc/kubernetes/ssl/ca.pem --service-account-key-file=/etc/kubernetes/ssl/apiserver-key.pem"</span></span><br></pre></td></tr></table></figure></p>
<p>如果不使用证书的话：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-master ~]$ grep -v ^<span class="comment"># /etc/kubernetes/apiserver</span></span><br><span class="line">KUBE_API_ADDRESS=<span class="string">"--address=0.0.0.0"</span></span><br><span class="line">KUBE_API_PORT=<span class="string">"port=8080"</span></span><br><span class="line">KUBE_ETCD_SERVERS=<span class="string">"--etcd-servers=http://192.168.10.6:2379"</span></span><br><span class="line">KUBE_SERVICE_ADDRESSES=<span class="string">"--service-cluster-ip-range=10.254.0.0/16"</span></span><br><span class="line">KUBE_ADMISSION_CONTROL=<span class="string">"--admission-control=NamespaceLifecycle,NamespaceExists,LimitRanger,SecurityContextDeny,ResourceQuota"</span></span><br><span class="line">KUBE_API_ARGS=<span class="string">""</span></span><br></pre></td></tr></table></figure></p>
<p>启动：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> kube-apiserver</span><br><span class="line">systemctl restart kube-apiserver</span><br><span class="line">systemctl status kube-apiserver</span><br></pre></td></tr></table></figure></p>
<h4 id="controller-manager"><a href="#controller-manager" class="headerlink" title="controller-manager"></a>controller-manager</h4><p>修改：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tee /etc/kubernetes/controller-manager &lt;&lt;-<span class="string">'EOF'</span></span><br><span class="line">KUBE_CONTROLLER_MANAGER_ARGS=<span class="string">"--service-account-private-key-file=/etc/kubernetes/ssl/apiserver-key.pem  --root-ca-file=/etc/kubernetes/ssl/ca.pem --master=http://127.0.0.1:8080"</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">[root@k8s-master ~]$ grep -v ^<span class="comment"># /etc/kubernetes/controller-manager</span></span><br><span class="line">KUBE_CONTROLLER_MANAGER_ARGS=<span class="string">"--service-account-private-key-file=/etc/kubernetes/ssl/apiserver-key.pem  --root-ca-file=/etc/kubernetes/ssl/ca.pem --master=http://127.0.0.1:8080"</span></span><br></pre></td></tr></table></figure></p>
<p>如果不使用证书的话：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">KUBE_CONTROLLER_MANAGER_ARGS=<span class="string">""</span></span><br></pre></td></tr></table></figure></p>
<p>启动：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> kube-controller-manager</span><br><span class="line">systemctl restart kube-controller-manager</span><br><span class="line">systemctl status kube-controller-manager</span><br></pre></td></tr></table></figure></p>
<h4 id="scheduler"><a href="#scheduler" class="headerlink" title="scheduler"></a>scheduler</h4><p>修改：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tee /etc/kubernetes/scheduler &lt;&lt;-<span class="string">'EOF'</span></span><br><span class="line">KUBE_SCHEDULER_ARGS=<span class="string">"--kubeconfig=/docker/k8s/kubernetes/config"</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">[root@k8s-master ~]$ grep -v ^<span class="comment"># /etc/kubernetes/scheduler</span></span><br><span class="line">KUBE_SCHEDULER_ARGS=<span class="string">"--kubeconfig=/etc/kubernetes/ssl/kubeconfig.yaml"</span></span><br></pre></td></tr></table></figure></p>
<p>如果不使用证书的话：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">KUBE_SCHEDULER_ARGS=<span class="string">""</span></span><br></pre></td></tr></table></figure></p>
<p>启动：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> kube-scheduler</span><br><span class="line">systemctl restart kube-scheduler</span><br><span class="line">systemctl status kube-scheduler</span><br></pre></td></tr></table></figure></p>
<h4 id="kube-dns"><a href="#kube-dns" class="headerlink" title="kube-dns"></a>kube-dns</h4><p>参考：</p>
<blockquote>
<p><a href="http://www.pangxie.space/docker/1055" target="_blank" rel="noopener">http://www.pangxie.space/docker/1055</a><br><a href="https://my.oschina.net/fufangchun/blog/732762" target="_blank" rel="noopener">https://my.oschina.net/fufangchun/blog/732762</a><br><a href="https://seanzhau.com/blog/post/seanzhau/6261234da213" target="_blank" rel="noopener">https://seanzhau.com/blog/post/seanzhau/6261234da213</a></p>
</blockquote>
<p>随便说一下kube-dns的作用：<br>kubernetes服务发现有两种：</p>
<blockquote>
<p>环境变量方式:  这种方式必须要先创建service再创建pod，否则pod中没有对应的环境变量<br>dns服务方式:  通过dns解析对应的服务，推荐使用。</p>
</blockquote>
<p>域名规则：<br>SERVICENAME.NAMESPACENAME.svc.CLUSTERDOMAIN</p>
<ul>
<li>SERVICENAME：每个Service的名字</li>
<li>NAMESPACENAME：Service所属的namespace的名字</li>
<li>svc：固定值</li>
<li>CLUSTERDOMAIN：集群内部的域名</li>
</ul>
<p>解析特点：<br>从上面可以看出，我们的域名是又臭又长，看起来很不爽。但是在kubernetes集群中，我们在解析的时候不是必须完全输入完才可以解析。在同一个命令空间下如果我们引用的话，只需要引用对应的Service的名字。如果引用了非同一命名空间下的Service，那么我们只需要加上其对应的命名空间的名字即可。<br>例如：<br>a命名空间(namespace)下有个Service:s1 App: a1，b命名空间(namespace)下有个Service:s2 App: a2<br>现在App a1中需要使用a1 和 a2，那么只需要写出 a1 和 a2.b即可。反过来a2也是这样。</p>
<p>kube-dns为1.3新增的功能，不用再手动安装skyDns，使用更方便，但没有包括在rpm包中。我们可以手动从二进制包中copy到/usr/bin目录中:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp kube-dns /usr/bin/</span><br><span class="line"></span><br><span class="line"><span class="comment">#新建kube-dns配置文件</span></span><br><span class="line">tee /etc/kubernetes/kube-dns &lt;&lt;-<span class="string">'EOF'</span></span><br><span class="line"><span class="comment"># kubernetes kube-dns config</span></span><br><span class="line">KUBE_DNS_PORT=<span class="string">"--dns-port=53"</span></span><br><span class="line">KUBE_DNS_DOMAIN=<span class="string">"--domain=k8s.zxy.com"</span></span><br><span class="line"><span class="comment">#KUBE_DNS_MASTER="--kube-master-url=http://127.0.0.1:8080"</span></span><br><span class="line">KUBE_DNS_ARGS=<span class="string">"--kubecfg-file=/etc/kubernetes/ss/kubeconfig.yaml"</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">[root@k8s-master]<span class="comment"># grep -v ^# /etc/kubernetes/kube-dns</span></span><br><span class="line"><span class="comment">###</span></span><br><span class="line"><span class="comment"># kubernetes kube-dns config</span></span><br><span class="line">KUBE_DNS_PORT=<span class="string">"--dns-port=53"</span></span><br><span class="line">KUBE_DNS_DOMAIN=<span class="string">"--domain=k8s.zxy.com"</span></span><br><span class="line">KUBE_DNS_ARGS=<span class="string">"--kubecfg-file=/etc/kubernetes/ssl/kubeconfig.yaml"</span></span><br></pre></td></tr></table></figure></p>
<p>如果不使用证书的话：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">KUBE_DNS_PORT=<span class="string">"--dns-port=53"</span></span><br><span class="line">KUBE_DNS_DOMAIN=<span class="string">"--domain=k8s.zxy.com"</span></span><br><span class="line">KUBE_DNS_MASTER=<span class="string">"--kube-master-url=http://127.0.0.1:8080"</span></span><br><span class="line">KUBE_DNS_ARGS=<span class="string">""</span></span><br></pre></td></tr></table></figure></p>
<p>新建kube-dns.service配置文件<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tee /usr/lib/systemd/system/kube-dns.service &lt;&lt;-<span class="string">'EOF'</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Kube-dns Server</span><br><span class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</span><br><span class="line">After=kube-apiserver.service</span><br><span class="line">Requires=kube-apiserver.service</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">WorkingDirectory=/var/lib/kube-dns</span><br><span class="line">EnvironmentFile=-/etc/kubernetes/kube-dns</span><br><span class="line">ExecStart=/usr/bin/kube-dns \</span><br><span class="line">            <span class="variable">$KUBE_DNS_PORT</span> \</span><br><span class="line">            <span class="variable">$KUBE_DNS_DOMAIN</span> \</span><br><span class="line">            <span class="variable">$KUBE_DNS_MASTER</span> \</span><br><span class="line">            <span class="variable">$KUBE_DNS_ARGS</span></span><br><span class="line">Restart=on-failure</span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></p>
<p>创建工作目录：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p /var/lib/kube-dns</span><br></pre></td></tr></table></figure></p>
<p>启动：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> kube-dns</span><br><span class="line">systemctl restart kube-dns</span><br><span class="line">systemctl status kube-dns</span><br></pre></td></tr></table></figure></p>
<p>注意：kube-dns重启好慢…</p>
<h4 id="修改-etc-resolv-conf"><a href="#修改-etc-resolv-conf" class="headerlink" title="修改/etc/resolv.conf"></a>修改/etc/resolv.conf</h4><p>master主机添加域名：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tee /etc/resolv.conf &lt;&lt;-<span class="string">'EOF'</span></span><br><span class="line"><span class="comment"># k8s.zxy.com为对应的域名，其他保存不变</span></span><br><span class="line">search default.svc.k8s.zxy.com svc.k8s.zxy.com k8s.zxy.com</span><br><span class="line"><span class="comment"># dns服务的ip</span></span><br><span class="line">nameserver 192.168.10.6</span><br><span class="line"> </span><br><span class="line">nameserver 8.8.8.8</span><br><span class="line">nameserver 114.114.114.114</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></p>
<p>测试：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nslookup -<span class="built_in">type</span>=srv kubernetes</span><br><span class="line">Server:         192.168.10.6</span><br><span class="line">Address:        192.168.10.6<span class="comment">#53</span></span><br><span class="line"></span><br><span class="line">kubernetes.default.svc.k8s.zxy.com  service = 10 100 0 3563366661643766.kubernetes.default.svc.k8s.zxy.com.</span><br><span class="line"></span><br><span class="line">curl http://127.0.0.1:8081/readiness</span><br><span class="line">ok</span><br><span class="line">curl http://127.0.0.1:8081/cache</span><br></pre></td></tr></table></figure></p>
<h3 id="node1-192-168-10-7-执行"><a href="#node1-192-168-10-7-执行" class="headerlink" title="node1(192.168.10.7)执行"></a>node1(192.168.10.7)执行</h3><h4 id="修改-etc-resolv-conf-1"><a href="#修改-etc-resolv-conf-1" class="headerlink" title="修改/etc/resolv.conf"></a>修改/etc/resolv.conf</h4><p>添加域名：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tee /etc/resolv.conf &lt;&lt;-<span class="string">'EOF'</span></span><br><span class="line"><span class="comment"># k8s.zxy.com为对应的域名，其他保存不变</span></span><br><span class="line">search default.svc.k8s.zxy.com svc.k8s.zxy.com k8s.zxy.com</span><br><span class="line"><span class="comment"># dns服务的ip</span></span><br><span class="line">nameserver 192.168.10.6</span><br><span class="line"> </span><br><span class="line">nameserver 8.8.8.8</span><br><span class="line">nameserver 114.114.114.114</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></p>
<h4 id="config-1"><a href="#config-1" class="headerlink" title="config"></a>config</h4><p>修改：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tee /etc/kubernetes/config &lt;&lt;-<span class="string">'EOF'</span></span><br><span class="line">KUBE_LOGTOSTDERR=<span class="string">"--logtostderr=true"</span></span><br><span class="line">KUBE_LOG_LEVEL=<span class="string">"--v=0"</span></span><br><span class="line">KUBE_ALLOW_PRIV=<span class="string">"--allow-privileged=false"</span></span><br><span class="line">KUBE_MASTER=<span class="string">"--master=https://192.168.10.6:6443"</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">[root@k8s-node1 ~]$ grep -v ^<span class="comment"># /etc/kubernetes/config</span></span><br><span class="line">KUBE_LOGTOSTDERR=<span class="string">"--logtostderr=true"</span></span><br><span class="line">KUBE_LOG_LEVEL=<span class="string">"--v=0"</span></span><br><span class="line">KUBE_ALLOW_PRIV=<span class="string">"--allow-privileged=false"</span></span><br><span class="line">KUBE_MASTER=<span class="string">"--master=https://192.168.10.6:6443"</span></span><br></pre></td></tr></table></figure></p>
<p>如果不使用证书的话：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">KUBE_LOGTOSTDERR=<span class="string">"--logtostderr=true"</span></span><br><span class="line">KUBE_LOG_LEVEL=<span class="string">"--v=0"</span></span><br><span class="line">KUBE_ALLOW_PRIV=<span class="string">"--allow-privileged=false"</span></span><br><span class="line">KUBE_MASTER=<span class="string">"--master=http://127.0.0.1:8080"</span></span><br></pre></td></tr></table></figure></p>
<h4 id="kubelet"><a href="#kubelet" class="headerlink" title="kubelet"></a>kubelet</h4><p>修改：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tee /etc/kubernetes/kubelet &lt;&lt;-<span class="string">'EOF'</span></span><br><span class="line">KUBELET_ADDRESS=<span class="string">"--address=192.168.10.7"</span></span><br><span class="line">KUBELET_HOSTNAME=<span class="string">"--hostname-override=k8s-node1"</span></span><br><span class="line">KUBELET_API_SERVER=<span class="string">"--api-servers=https://192.168.10.6:6443"</span></span><br><span class="line">KUBELET_ARGS=<span class="string">"--tls-cert-file=/etc/kubernetes/ssl/node1-worker.pem --tls-private-key-file=/etc/kubernetes/ssl/node1-worker-key.pem --kubeconfig=/etc/kubernetes/ssl/worker1-kubeconfig.yaml --cluster-domain=k8s.zxy.com --cluster-dns=192.168.10.6"</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">[root@k8s-node1 ~]$ grep -v ^<span class="comment"># /etc/kubernetes/kubelet </span></span><br><span class="line">KUBELET_ADDRESS=<span class="string">"--address=192.168.10.7"</span></span><br><span class="line">KUBELET_HOSTNAME=<span class="string">"--hostname-override=k8s-node1"</span></span><br><span class="line">KUBELET_API_SERVER=<span class="string">"--api-servers=https://192.168.10.6:6443"</span></span><br><span class="line">KUBELET_ARGS=<span class="string">"--tls-cert-file=/etc/kubernetes/ssl/node1-worker.pem --tls-private-key-file=/etc/kubernetes/ssl/node1-worker-key.pem --kubeconfig=/etc/kubernetes/ssl/worker1-kubeconfig.yaml --cluster-domain=k8s.zxy.com --cluster-dns=192.168.10.6"</span></span><br></pre></td></tr></table></figure></p>
<p>如果不使用证书的话：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">KUBELET_ADDRESS=<span class="string">"--address=192.168.10.7"</span></span><br><span class="line">KUBELET_HOSTNAME=<span class="string">"--hostname-override=k8s-node1"</span></span><br><span class="line">KUBELET_API_SERVER=<span class="string">"--api-servers=http://192.168.10.6:8080"</span></span><br><span class="line">KUBELET_ARGS=<span class="string">"--cluster-domain=k8s.zxy.com --cluster-dns=192.168.10.6"</span></span><br></pre></td></tr></table></figure></p>
<p>启动：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> kubelet</span><br><span class="line">systemctl restart kubelet</span><br><span class="line">systemctl status kubelet</span><br></pre></td></tr></table></figure></p>
<h4 id="kube-proxy"><a href="#kube-proxy" class="headerlink" title="kube-proxy"></a>kube-proxy</h4><p>修改：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tee /etc/kubernetes/proxy &lt;&lt;-<span class="string">'EOF'</span></span><br><span class="line">KUBE_PROXY_ARGS=<span class="string">"--kubeconfig=/etc/kubernetes/ssl/worker1-kubeconfig.yaml"</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">[root@k8s-node1 ~]$ grep -v ^<span class="comment"># /etc/kubernetes/proxy</span></span><br><span class="line">KUBE_PROXY_ARGS=<span class="string">"--kubeconfig=/etc/kubernetes/ssl/worker1-kubeconfig.yaml"</span></span><br></pre></td></tr></table></figure></p>
<p>如果不使用证书的话：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">KUBE_PROXY_ARGS=<span class="string">""</span></span><br></pre></td></tr></table></figure></p>
<p>启动：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> kube-proxy</span><br><span class="line">systemctl restart kube-proxy</span><br><span class="line">systemctl status kube-proxy</span><br></pre></td></tr></table></figure></p>
<p>查看日志：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-node1 ~]$ tail -n10 -f /var/<span class="built_in">log</span>/messages  </span><br><span class="line">Jan  4 06:40:49 localhost systemd: Configuration file /usr/lib/systemd/system/wpa_supplicant.service is marked executable. Please remove executable permission bits. Proceeding anyway.</span><br><span class="line">Jan  4 06:40:49 localhost systemd: Started Kubernetes Kube-Proxy Server.</span><br><span class="line">Jan  4 06:40:49 localhost systemd: Starting Kubernetes Kube-Proxy Server...</span><br><span class="line">Jan  4 06:40:50 localhost kube-proxy: I0104 14:40:50.171482   12524 server.go:215] Using iptables Proxier.</span><br><span class="line">Jan  4 06:40:50 localhost kube-proxy: W0104 14:40:50.174673   12524 proxier.go:254] clusterCIDR not specified, unable to distinguish between internal and external traffic</span><br><span class="line">Jan  4 06:40:50 localhost kube-proxy: I0104 14:40:50.174701   12524 server.go:227] Tearing down userspace rules.</span><br><span class="line">Jan  4 06:40:50 localhost kube-proxy: I0104 14:40:50.188726   12524 conntrack.go:81] Set sysctl <span class="string">'net/netfilter/nf_conntrack_max'</span> to 131072</span><br><span class="line">Jan  4 06:40:50 localhost kube-proxy: I0104 14:40:50.189159   12524 conntrack.go:66] Setting conntrack hashsize to 32768</span><br><span class="line">Jan  4 06:40:50 localhost kube-proxy: I0104 14:40:50.189401   12524 conntrack.go:81] Set sysctl <span class="string">'net/netfilter/nf_conntrack_tcp_timeout_established'</span> to 86400</span><br><span class="line">Jan  4 06:40:50 localhost kube-proxy: I0104 14:40:50.189418   12524 conntrack.go:81] Set sysctl <span class="string">'net/netfilter/nf_conntrack_tcp_timeout_close_wait'</span> to 3600</span><br></pre></td></tr></table></figure></p>
<h4 id="node监控-ctAdvisor"><a href="#node监控-ctAdvisor" class="headerlink" title="node监控(ctAdvisor)"></a>node监控(ctAdvisor)</h4><p><a href="http://192.168.10.7:4194/" target="_blank" rel="noopener">http://192.168.10.7:4194/</a></p>
<h3 id="node2-192-168-10-8-执行"><a href="#node2-192-168-10-8-执行" class="headerlink" title="node2(192.168.10.8)执行"></a>node2(192.168.10.8)执行</h3><p>同node1一样，以下内容会有所不一样：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#kubelet</span></span><br><span class="line">KUBELET_ADDRESS=<span class="string">"--address=192.168.10.8"</span></span><br><span class="line">KUBELET_HOSTNAME=<span class="string">"--hostname-override=k8s-node2"</span></span><br><span class="line">KUBELET_ARGS=<span class="string">"--tls-cert-file=/etc/kubernetes/ssl/node2-worker.pem --tls-private-key-file=/etc/kubernetes/ssl/node2-worker-key.pem --kubeconfig=/etc/kubernetes/ssl/worker2-kubeconfig.yaml --cluster-domain=k8s.zxy.com --cluster-dns=192.168.10.6"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#proxy</span></span><br><span class="line">KUBE_PROXY_ARGS=<span class="string">"--master=https://192.168.10.6:6443 --kubeconfig=/etc/kubernetes/ssl/worker1-kubeconfig.yaml"</span></span><br></pre></td></tr></table></figure></p>
<p>启动服务<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> SERVICES <span class="keyword">in</span> kubelet kube-proxy; <span class="keyword">do</span></span><br><span class="line">systemctl <span class="built_in">enable</span> <span class="variable">$SERVICES</span></span><br><span class="line">systemctl start <span class="variable">$SERVICES</span></span><br><span class="line">systemctl status <span class="variable">$SERVICES</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></p>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>重启master所有服务：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> SERVICES <span class="keyword">in</span> etcd kube-dns kube-apiserver kube-controller-manager kube-scheduler; <span class="keyword">do</span></span><br><span class="line">systemctl restart <span class="variable">$SERVICES</span></span><br><span class="line">systemctl status <span class="variable">$SERVICES</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></p>
<p>重启node所有服务：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> SERVICES <span class="keyword">in</span> kubelet kube-proxy; <span class="keyword">do</span></span><br><span class="line">systemctl restart <span class="variable">$SERVICES</span></span><br><span class="line">systemctl status <span class="variable">$SERVICES</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></p>
<p>在master中可以查看node:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-master ~]$ kubectl get node</span><br><span class="line">NAME        STATUS    AGE</span><br><span class="line">k8s-node1   Ready     12m</span><br><span class="line">k8s-node2   Ready     7m</span><br><span class="line"><span class="comment">#非master需要：</span></span><br><span class="line">[root@k8s-master ~]$ kubectl --kubeconfig=/etc/kubernetes/ssl/kubeconfig.yaml get node</span><br><span class="line">NAME        STATUS    AGE</span><br><span class="line">k8s-node1   Ready     12m</span><br><span class="line">k8s-node2   Ready     7m</span><br><span class="line"></span><br><span class="line">[root@k8s-master ~]$ curl https://192.168.10.6:6443/api/v1/nodes \</span><br><span class="line">  --cert /etc/kubernetes/ssl/apiserver.pem --key /etc/kubernetes/ssl/apiserver-key.pem --cacert /etc/kubernetes/ssl/ca.pem</span><br><span class="line"></span><br><span class="line"><span class="comment">#node中开启代理</span></span><br><span class="line">[root@k8s-node1 ~]$ kubectl --kubeconfig=/etc/kubernetes/ssl/kubeconfig.yaml proxy</span><br></pre></td></tr></table></figure></p>
<h2 id="二进制方式配置kubernetes"><a href="#二进制方式配置kubernetes" class="headerlink" title="二进制方式配置kubernetes"></a>二进制方式配置kubernetes</h2><p>二进制方式与rpm方式差不多，此处只简单列出非加密方式的启动命令:</p>
<h3 id="master"><a href="#master" class="headerlink" title="master"></a>master</h3><p>kube-apiserver:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/bin/kube-apiserver --logtostderr=<span class="literal">true</span> --v=0 \</span><br><span class="line">  --etcd-servers=http://192.168.10.6:2379 \</span><br><span class="line">  --address=0.0.0.0 port=8080 \</span><br><span class="line">  --allow-privileged=<span class="literal">false</span> \</span><br><span class="line">  --service-cluster-ip-range=10.254.0.0/16 \</span><br><span class="line">  --admission-control=NamespaceLifecycle,NamespaceExists,LimitRanger,SecurityContextDeny,ResourceQuota</span><br></pre></td></tr></table></figure></p>
<p>kube-controller-manager:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/bin/kube-controller-manager --logtostderr=<span class="literal">true</span> --v=0 --master=http://127.0.0.1:8080</span><br></pre></td></tr></table></figure></p>
<p>kube-scheduler:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/bin/kube-scheduler --logtostderr=<span class="literal">true</span> --v=0 --master=http://192.168.10.6:8080</span><br></pre></td></tr></table></figure></p>
<p>kube-dns:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/bin/kube-dns --dns-port=53 --domain=k8s.zxy.com --kube-master-url=http://127.0.0.1:8080</span><br></pre></td></tr></table></figure></p>
<h3 id="node"><a href="#node" class="headerlink" title="node"></a>node</h3><p>kube-proxy:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/bin/kube-proxy --logtostderr=<span class="literal">true</span> --v=0 --master=http://192.168.10.6:8080</span><br></pre></td></tr></table></figure></p>
<p>kubelet:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/bin/kubelet --logtostderr=<span class="literal">true</span> --v=0 \</span><br><span class="line">  --api-servers=http://192.168.10.6:8080 \</span><br><span class="line">  --address=192.168.10.7 \</span><br><span class="line">  --hostname-override=k8s-node1 \</span><br><span class="line">  --allow-privileged=<span class="literal">false</span> --cluster-domain=k8s.zxy.com --cluster-dns=192.168.10.6</span><br></pre></td></tr></table></figure></p>
<h2 id="kube-dashboard"><a href="#kube-dashboard" class="headerlink" title="kube-dashboard"></a>kube-dashboard</h2><h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><p>对应的yaml文件可以参考<a href="https://github.com/zhaoxunyong/blog/tree/master/backup/k8s/yaml/dashborad" target="_blank" rel="noopener">dashborad</a></p>
<p>如果apiserver为非加密方式，需要添加args参数(与ports平行)：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">args:</span><br><span class="line"> - --apiserver-host=http://127.0.0.1:8080</span><br></pre></td></tr></table></figure></p>
<p>开始创建：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/kubernetes/kubernetes.git</span><br><span class="line"><span class="built_in">cd</span> kubernetes/cluster/addons/dashboard/</span><br><span class="line"></span><br><span class="line"><span class="comment">#docker load -i /docker/works/images/Kubernetes集群搭建/k8s/tar/kubernetes-dashboard-amd64.tar</span></span><br><span class="line"><span class="comment">#docker load -i /docker/works/images/Kubernetes集群搭建/k8s/tar/pause-amd64.tar</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#create service</span></span><br><span class="line">[root@k8s-master ~]$ kubectl create -f dashboard-service.yaml </span><br><span class="line">service <span class="string">"kubernetes-dashboard"</span> created</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看service</span></span><br><span class="line">[root@k8s-master ~]$ kubectl get svc -o wide -n kube-system</span><br><span class="line">NAME                   CLUSTER-IP      EXTERNAL-IP   PORT(S)   AGE       SELECTOR</span><br><span class="line">kubernetes-dashboard   10.254.142.79   &lt;none&gt;        80/TCP    12s       k8s-app=kubernetes-dashboard</span><br><span class="line"></span><br><span class="line"><span class="comment"># create rc</span></span><br><span class="line">[root@k8s-master ~]$ kubectl create -f dashboard-controller.yaml </span><br><span class="line">replicationcontroller <span class="string">"kubernetes-dashboard-v1.5.0"</span> created</span><br></pre></td></tr></table></figure></p>
<p>如出现以下的日志表示创建成功：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-master dashboard]<span class="comment"># kubectl logs kubernetes-dashboard-v1.5.0-fnlhb -n kube-system</span></span><br><span class="line">Using HTTP port: 9090</span><br><span class="line">Creating API server client <span class="keyword">for</span> https://10.254.0.1:443</span><br><span class="line">Successful initial request to the apiserver, version: 1.5.1</span><br><span class="line">Creating <span class="keyword">in</span>-cluster Heapster client</span><br></pre></td></tr></table></figure></p>
<h3 id="异常解决"><a href="#异常解决" class="headerlink" title="异常解决"></a>异常解决</h3><h4 id="ContainerCreating"><a href="#ContainerCreating" class="headerlink" title="ContainerCreating"></a>ContainerCreating</h4><p>查看pod:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-master ~]$ kubectl get po -o wide -n kube-system</span><br><span class="line">NAME                                READY     STATUS              RESTARTS   AGE       IP        NODE</span><br><span class="line">kubernetes-dashboard-v1.5.0-7tjjx   0/1       ContainerCreating   0          1m        &lt;none&gt;    k8s-node2</span><br></pre></td></tr></table></figure></p>
<p>查看pod详情:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-master dashboard]<span class="comment"># kubectl describe pod kubernetes-dashboard-v1.5.0-7tjjx -n kube-system    </span></span><br><span class="line">...</span><br><span class="line">Events:</span><br><span class="line">  FirstSeen     LastSeen        Count   From                    SubObjectPath   Type            Reason          Message</span><br><span class="line">  ---------     --------        -----   ----                    -------------   --------        ------          -------</span><br><span class="line">  2m            2m              1       &#123;default-scheduler &#125;                    Normal          Scheduled       Successfully assigned kubernetes-dashboard-v1.5.0-7tjjx to k8s-node2</span><br><span class="line">  1m            27s             2       &#123;kubelet k8s-node2&#125;                     Warning         FailedSync      Error syncing pod, skipping: failed to <span class="string">"StartContainer"</span> <span class="keyword">for</span> <span class="string">"POD"</span> with ErrImagePull: <span class="string">"image pull failed for gcr.io/google_containers/pause-amd64:3.0, this may be because there are no credentials on this request.  details: (Error response from daemon: &#123;\"message\":\"Get https://gcr.io/v1/_ping: dial tcp 74.125.204.82:443: i/o timeout\"&#125;)"</span></span><br><span class="line"></span><br><span class="line">  12s   12s     1       &#123;kubelet k8s-node2&#125;             Warning FailedSync      Error syncing pod, skipping: failed to <span class="string">"StartContainer"</span> <span class="keyword">for</span> <span class="string">"POD"</span> with ImagePullBackOff: <span class="string">"Back-off pulling image \"gcr.io/google_containers/pause-amd64:3.0\""</span></span><br></pre></td></tr></table></figure></p>
<p>通过日志可以看到连不到gcr.io，需要事先下载：</p>
<blockquote>
<p>gcr.io/google_containers/pause-amd64:3.0<br>gcr.io/google_containers/kubernetes-dashboard-amd64:v1.5.0<br>注意：需要下载并导入到node节点，而不是master节点。具体请参考<a href="#镜像下载">镜像下载</a></p>
</blockquote>
<h4 id="CrashLoopBackOff"><a href="#CrashLoopBackOff" class="headerlink" title="CrashLoopBackOff"></a>CrashLoopBackOff</h4><blockquote>
<p>参考：<a href="https://github.com/kubernetes/dashboard/issues/374" target="_blank" rel="noopener">https://github.com/kubernetes/dashboard/issues/374</a><br>查看pod日志：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl logs kubernetes-dashboard-v1.5.0-sp8qv -n kube-system            </span><br><span class="line">Using HTTP port: 9090</span><br><span class="line">Creating API server client <span class="keyword">for</span> https://10.254.0.1:443</span><br><span class="line">Error <span class="keyword">while</span> initializing connection to Kubernetes apiserver. This most likely means that the cluster is misconfigured (e.g., it has invalid apiserver certificates or service accounts configuration) or the --apiserver-host param points to a server that does not exist. Reason: the server has asked <span class="keyword">for</span> the client to provide credentials</span><br><span class="line">Refer to the troubleshooting guide <span class="keyword">for</span> more information: https://github.com/kubernetes/dashboard/blob/master/docs/user-guide/troubleshooting.md</span><br></pre></td></tr></table></figure></p>
</blockquote>
<p>请安装以下方式操作：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-master ~]$ kubectl get secrets --namespace=kube-system</span><br><span class="line">NAME                  TYPE                                  DATA      AGE</span><br><span class="line">default-token-fwvl9   kubernetes.io/service-account-token   3         1h</span><br><span class="line"></span><br><span class="line"><span class="comment">#kubectl delete secret `kubectl get secrets --namespace=kube-system |awk '&#123;print $1&#125;' | sed -e '1d'` --namespace=kube-system</span></span><br><span class="line">[root@k8s-master ~]$ kubectl delete secret default-token-fwvl9 --namespace=kube-system</span><br><span class="line">secret <span class="string">"default-token-fwvl9"</span> deleted</span><br><span class="line"></span><br><span class="line">[root@k8s-master ~]$ kubectl get rc -n kube-system</span><br><span class="line">NAME                          DESIRED   CURRENT   READY     AGE</span><br><span class="line">kubernetes-dashboard-v1.5.0   1         1         0         6m</span><br><span class="line"></span><br><span class="line"><span class="comment">#kubectl delete rc `kubectl get rc -n kube-system |awk '&#123;print $1&#125;' | sed -e '1d'` --namespace=kube-system </span></span><br><span class="line">[root@k8s-master ~]$ kubectl delete rc kubernetes-dashboard-v1.5.0 --namespace=kube-system      </span><br><span class="line">replicationcontroller <span class="string">"kubernetes-dashboard-v1.5.0"</span> deleted</span><br><span class="line"></span><br><span class="line">[root@k8s-master ~]$ kubectl create -f dashboard-controller.yaml </span><br><span class="line">replicationcontroller <span class="string">"kubernetes-dashboard-v1.5.0"</span> created</span><br></pre></td></tr></table></figure></p>
<p>访问：<br><a href="https://192.168.10.6:6443/ui" target="_blank" rel="noopener">https://192.168.10.6:6443/ui</a><br>如果提示Unauthorized的话，需要在/etc/kubernetes/apiserver中KUBE_API_ARGS参数后添加：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">KUBE_API_ARGS=<span class="string">"--basic-auth-file=/etc/kubernetes/basic_auth.csv"</span></span><br></pre></td></tr></table></figure></p>
<p>basic_auth.csv格式为：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">password,username,uid</span><br></pre></td></tr></table></figure></p>
<p>重启服务：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart kube-apiserver</span><br></pre></td></tr></table></figure></p>
<p>具体node请用get pod命令查看:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get pod -o wide -n kube-system</span><br><span class="line">NAME                                READY     STATUS    RESTARTS   AGE       IP          NODE</span><br><span class="line">kubernetes-dashboard-v1.5.0-8hsb9   1/1       Running   0          13m       10.1.20.2   k8s-node1</span><br></pre></td></tr></table></figure></p>
<h2 id="创建服务"><a href="#创建服务" class="headerlink" title="创建服务"></a>创建服务</h2><blockquote>
<p>参考：<a href="http://running.iteye.com/blog/2322959" target="_blank" rel="noopener">http://running.iteye.com/blog/2322959</a><br>本例以kubernetes源码中的guestbook为例讲解如何创建服务</p>
</blockquote>
<p>先下载源码：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#docker load -i /docker/works/images/Kubernetes集群搭建/others/redis-master.tar</span></span><br><span class="line"><span class="comment">#docker load -i /docker/works/images/Kubernetes集群搭建/others/guestbook-redis-slave.tar</span></span><br><span class="line"><span class="comment">#docker load -i /docker/works/images/Kubernetes集群搭建/others/guestbook-php-frontend.tar</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/kubernetes/kubernetes.git</span><br><span class="line"><span class="built_in">cd</span> examples/guestbook/</span><br></pre></td></tr></table></figure></p>
<p>由于不能访问gcr.io，可以修改相应的yaml文件：<br>修改legacy/redis-master-controller.yaml中的images，替换:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">image: gcr.io/google_containers/redis:e2e  <span class="comment"># or just image: redis</span></span><br></pre></td></tr></table></figure></p>
<p>为<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">image: kubeguide/redis-master</span><br><span class="line">imagePullPolicy: IfNotPresent</span><br></pre></td></tr></table></figure></p>
<p>修改legacy/redis-slave-controller.yaml中的images，替换：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">image: gcr.io/google_samples/gb-redisslave:v1</span><br></pre></td></tr></table></figure></p>
<p>为<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">image: kubeguide/guestbook-redis-slave</span><br><span class="line">imagePullPolicy: IfNotPresent</span><br></pre></td></tr></table></figure></p>
<p>并添加：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">env:</span><br><span class="line">- name: GET_HOSTS_FROM</span><br><span class="line">  value: env</span><br></pre></td></tr></table></figure></p>
<p>修改frontend-service.yaml，添加：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">type</span>: NodePort</span><br><span class="line">  ports:</span><br><span class="line">  - port: 80</span><br><span class="line">    nodePort: 30001</span><br></pre></td></tr></table></figure></p>
<p>添加type: NodePort与nodePort: 30001参数，对外暴露30001</p>
<p>暴露对外端口方式：</p>
<ol>
<li><p>在service中通过nodePort定义：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">type</span>: NodePort</span><br><span class="line">  ports:</span><br><span class="line">  - port: 80</span><br><span class="line">    nodePort: 30001</span><br></pre></td></tr></table></figure>
<p>其中端口号必须在：30000-32767之间</p>
</li>
<li><p>通过rc定义：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ports:</span><br><span class="line"> - containerPort: 80</span><br><span class="line">   hostPort: 80</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>创建redis-master的service与rc:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl create -f redis-slave-service.yaml</span><br><span class="line">kubectl create -f legacy/redis-master-controller.yaml</span><br></pre></td></tr></table></figure></p>
<p>创建redis-slave的service与rc:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl create -f redis-slave-service.yaml</span><br><span class="line">kubectl create -f legacy/redis-slave-controller.yaml</span><br></pre></td></tr></table></figure></p>
<p>创建frontend的service与rc:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl create -f frontend-service.yaml</span><br><span class="line">kubectl create -f legacy/frontend-controller.yaml</span><br></pre></td></tr></table></figure></p>
<p>或者直接下载已经修改后的<a href="https://github.com/zhaoxunyong/blog/tree/master/backup/k8s/examples/guestbook" target="_blank" rel="noopener">guestbook</a></p>
<p>查看pod：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-master ~]$ kubectl get pod -o wide                                     </span><br><span class="line">NAME                 READY     STATUS    RESTARTS   AGE       IP          NODE</span><br><span class="line">frontend-5l5kp       1/1       Running   0          2s        10.1.20.3   k8s-node1</span><br><span class="line">redis-master-2r7p7   1/1       Running   0          4m        10.1.30.2   k8s-node2</span><br><span class="line">redis-slave-n6nz6    1/1       Running   0          2m        10.1.20.5   k8s-node1</span><br><span class="line">redis-slave-rrl87    1/1       Running   0          2m        10.1.30.3   k8s-node2</span><br></pre></td></tr></table></figure></p>
<p>异常问题：<br>该demo是基于环境变量，所以必须先创建service，再创建rc，否则会出现STATUS为Running，但功能会报错。</p>
<p>发现有一台始终没有iptables规则：<br>通过tail -n100 -f /var/log/message查看，发现有一台node，没有修改/etc/kubernetes/config中的apiserver的地址。</p>
<h2 id="docker-registry"><a href="#docker-registry" class="headerlink" title="docker registry"></a>docker registry</h2><p>此章节为通过kubernetes方式部署。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/kubernetes/kubernetes.git</span><br><span class="line"><span class="built_in">cd</span> kubernetes/cluster/addons/registry</span><br></pre></td></tr></table></figure>
<p>vim registry-pv.yaml<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolume</span><br><span class="line">metadata:</span><br><span class="line">  name: kube-system-kube-registry-pv</span><br><span class="line">  labels:</span><br><span class="line">    kubernetes.io/cluster-service: <span class="string">"true"</span></span><br><span class="line">spec:</span><br><span class="line">  capacity:</span><br><span class="line">    storage: 10Gi</span><br><span class="line">  accessModes:</span><br><span class="line">  - ReadWriteOnce</span><br><span class="line">  hostPath:</span><br><span class="line">    path: /data</span><br><span class="line">  <span class="comment">#nfs:</span></span><br><span class="line">  <span class="comment">#  path: /data/k8s</span></span><br><span class="line">  <span class="comment">#  server: 192.168.12.171</span></span><br><span class="line">  persistentVolumeReclaimPolicy: Recycle</span><br></pre></td></tr></table></figure></p>
<p>vim registry-pvc.yaml<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolumeClaim</span><br><span class="line">metadata:</span><br><span class="line">  name: kube-registry-pvc</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  labels:</span><br><span class="line">    kubernetes.io/cluster-service: <span class="string">"true"</span></span><br><span class="line">spec:</span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteOnce</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      storage: 10Gi</span><br></pre></td></tr></table></figure></p>
<p>创建：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl create -f registry-pv.yaml </span><br><span class="line">kubectl create -f registry-pvc.yaml</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">查看pv：</span><br><span class="line">```bash</span><br><span class="line">kubectl get pv</span><br></pre></td></tr></table></figure></p>
<p>新建registry svc和rc:<br>vim registry-rc.yaml<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: ReplicationController</span><br><span class="line">metadata:</span><br><span class="line">  name: kube-registry-v0</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-registry</span><br><span class="line">    version: v0</span><br><span class="line">    kubernetes.io/cluster-service: <span class="string">"true"</span></span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: kube-registry</span><br><span class="line">    version: v0</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        k8s-app: kube-registry</span><br><span class="line">        version: v0</span><br><span class="line">        kubernetes.io/cluster-service: <span class="string">"true"</span></span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: registry</span><br><span class="line">        image: registry:2</span><br><span class="line">        resources:</span><br><span class="line">          <span class="comment"># keep request = limit to keep this container in guaranteed class</span></span><br><span class="line">          limits:</span><br><span class="line">            cpu: 100m</span><br><span class="line">            memory: 100Mi</span><br><span class="line">          requests:</span><br><span class="line">            cpu: 100m</span><br><span class="line">            memory: 100Mi</span><br><span class="line">        env:</span><br><span class="line">        - name: REGISTRY_HTTP_ADDR</span><br><span class="line">          value: :5000</span><br><span class="line">        - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY</span><br><span class="line">          value: /var/lib/registry</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: image-store</span><br><span class="line">          mountPath: /var/lib/registry</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 5000</span><br><span class="line">          name: registry</span><br><span class="line">          protocol: TCP</span><br><span class="line">      volumes:</span><br><span class="line">      - name: image-store</span><br><span class="line">        persistentVolumeClaim:</span><br><span class="line">          claimName: kube-registry-pvc</span><br></pre></td></tr></table></figure></p>
<p>vim registry-svc.yaml<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: kube-registry</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-registry</span><br><span class="line">    kubernetes.io/cluster-service: <span class="string">"true"</span></span><br><span class="line">    kubernetes.io/name: <span class="string">"KubeRegistry"</span></span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: kube-registry</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line">  ports:</span><br><span class="line">  - name: registry</span><br><span class="line">    port: 5000</span><br><span class="line">    nodePort: 30009</span><br><span class="line">    protocol: TCP</span><br></pre></td></tr></table></figure></p>
<p>创建rc、svc:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl create -f registry-rc.yaml </span><br><span class="line">kubectl create -f registry-svc.yaml</span><br></pre></td></tr></table></figure></p>
<p>查看状态:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get svc --namespace=kube-system</span><br></pre></td></tr></table></figure></p>
<p>每台修改docker的配置文件:<br>注意：insecure-registry不能加上http://<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">"s;^ExecStart=/usr/bin/dockerd.*;ExecStart=/usr/bin/dockerd --bip=10.1.20.1/24 \</span></span><br><span class="line"><span class="string">  --insecure-registry=192.168.10.8:30009 \</span></span><br><span class="line"><span class="string">  --registry-mirror=http://3fecfd09.m.daocloud.io;"</span> \</span><br><span class="line"> /usr/lib/systemd/system/docker.service</span><br></pre></td></tr></table></figure></p>
<p>每台重启docker:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br><span class="line">systemctl status docker</span><br></pre></td></tr></table></figure></p>
<p>测试：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker tag registry:2 192.168.10.8:30009/registry:2</span><br><span class="line">docker push 192.168.10.8:30009/registry:2</span><br></pre></td></tr></table></figure></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><blockquote>
<p><a href="http://blog.csdn.net/air_penguin/article/details/51350910" target="_blank" rel="noopener">http://blog.csdn.net/air_penguin/article/details/51350910</a><br><a href="https://mritd.me/2016/09/07/Kubernetes-%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/" target="_blank" rel="noopener">https://mritd.me/2016/09/07/Kubernetes-%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/</a><br><a href="https://mritd.me/2016/09/11/kubernetes-%E5%8F%8C%E5%90%91-TLS-%E9%85%8D%E7%BD%AE/" target="_blank" rel="noopener">https://mritd.me/2016/09/11/kubernetes-%E5%8F%8C%E5%90%91-TLS-%E9%85%8D%E7%BD%AE/</a><br><a href="http://www.pangxie.space/docker/1055" target="_blank" rel="noopener">http://www.pangxie.space/docker/1055</a></p>
</blockquote>
]]></content>
      <categories>
        <category>kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>使用packer制作vagrant box</title>
    <url>/2017/01/%E4%BD%BF%E7%94%A8packer%E5%88%B6%E4%BD%9Cvagrant-box.html</url>
    <content><![CDATA[<p>box可以从官网下载，但有时候下载很慢，并且对应的版本可能不是自己想要的。本文以centos7为例介绍一下怎样制作vagrant box。</p>
<a id="more"></a>
<h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><h3 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p /Vagrant/packer/</span><br><span class="line"><span class="built_in">cd</span> /Vagrant/packer/</span><br></pre></td></tr></table></figure>
<h3 id="下载centos镜像"><a href="#下载centos镜像" class="headerlink" title="下载centos镜像"></a>下载centos镜像</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#wget http://mirrors.aliyun.com/centos/7.2.1511/isos/x86_64/CentOS-7-x86_64-DVD-1511.iso</span></span><br><span class="line"><span class="comment">#wget http://mirrors.aliyun.com/centos/7.3.1611/isos/x86_64/CentOS-7-x86_64-DVD-1611.iso</span></span><br><span class="line">wget http://mirrors.aliyun.com/centos/7.4.1708/isos/x86_64/CentOS-7-x86_64-DVD-1708.iso</span><br></pre></td></tr></table></figure>
<p>注意：不要用Minimal版本，否则创建后使用时会出现/sbin/mount.vboxsf: mounting failed with the error的错误。</p>
<h3 id="安装packer工具"><a href="#安装packer工具" class="headerlink" title="安装packer工具"></a>安装packer工具</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#MacOS</span></span><br><span class="line"><span class="comment">#wget https://releases.hashicorp.com/packer/0.12.1/packer_0.12.1_darwin_amd64.zip</span></span><br><span class="line"><span class="comment">#unzip packer_0.12.1_darwin_amd64.zip </span></span><br><span class="line">wget https://releases.hashicorp.com/packer/1.1.0/packer_1.1.0_darwin_amd64.zip</span><br><span class="line">unzip packer_1.1.0_darwin_amd64.zip</span><br><span class="line">sudo mv packer /usr/<span class="built_in">local</span>/bin/</span><br></pre></td></tr></table></figure>
<h3 id="下载centos-json"><a href="#下载centos-json" class="headerlink" title="下载centos.json"></a>下载centos.json</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#git clone https://github.com/chef/bento.git</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/boxcutter/centos.git</span><br></pre></td></tr></table></figure>
<h2 id="开始制作"><a href="#开始制作" class="headerlink" title="开始制作"></a>开始制作</h2><h3 id="修改centos7-json"><a href="#修改centos7-json" class="headerlink" title="修改centos7.json"></a>修改centos7.json</h3><p>先进入centos目录，然后修改cento7.json文件：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"_comment"</span>: <span class="string">"Build with `packer build -var-file=centos7.json centos.json`"</span>,</span><br><span class="line">  <span class="string">"vm_name"</span>: <span class="string">"centos7"</span>,</span><br><span class="line">  <span class="string">"cpus"</span>: <span class="string">"1"</span>,</span><br><span class="line">  <span class="string">"disk_size"</span>: <span class="string">"102400"</span>,</span><br><span class="line">  <span class="string">"http_directory"</span>: <span class="string">"kickstart/centos7"</span>,</span><br><span class="line">  <span class="string">"iso_checksum"</span>: <span class="string">"ec7500d4b006702af6af023b1f8f1b890b6c7ee54400bb98cef968b883cd6546"</span>,</span><br><span class="line">  <span class="string">"iso_checksum_type"</span>: <span class="string">"sha256"</span>,</span><br><span class="line">  <span class="string">"iso_name"</span>: <span class="string">"CentOS-7-x86_64-DVD-1708.iso"</span>,</span><br><span class="line">  <span class="string">"iso_url"</span>: <span class="string">"/Vagrant/packer/CentOS-7-x86_64-DVD-1708.iso"</span>,</span><br><span class="line">  <span class="string">"memory"</span>: <span class="string">"1024"</span>,</span><br><span class="line">  <span class="string">"parallels_guest_os_type"</span>: <span class="string">"centos7"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>主要修改iso_checksum、iso_name、iso_url几个参数，其中iso_checksum值可以通过以下命令获取：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ shasum -a 256 CentOS-7-x86_64-DVD-1708.iso</span><br><span class="line">ec7500d4b006702af6af023b1f8f1b890b6c7ee54400bb98cef968b883cd6546  CentOS-7-x86_64-DVD-1708.iso</span><br></pre></td></tr></table></figure></p>
<h3 id="开始生成"><a href="#开始生成" class="headerlink" title="开始生成"></a>开始生成</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> centos</span><br><span class="line"><span class="comment">#默认会生成所有虚拟机环境的文件，包括vmware/virtualbox/parallels，前提是安装了相应的虚拟机。</span></span><br><span class="line">packer build -var-file=centos7.json centos.json</span><br><span class="line">(或者bin/box build centos7，只能在unix环境下执行)</span><br><span class="line"></span><br><span class="line"><span class="comment">#也可以指定生成的是哪个虚拟机：</span></span><br><span class="line"><span class="comment"># packer build -only=virtualbox-iso -var-file=centos7.json centos.json</span></span><br><span class="line"><span class="comment"># 或者bin/box build centos72 virtualbox</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># packer build -only=parallels-iso -var-file=centos7.json centos.json</span></span><br><span class="line"><span class="comment"># 或者bin/box build centos7 parallels</span></span><br></pre></td></tr></table></figure>
<p>如果使用parallels，vagrant需要安装plugin：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vagrant plugin install vagrant-parallels</span><br></pre></td></tr></table></figure></p>
<p>使用parallels时，如出现ImportError: No module named prlsdkapi错误，需要安装ParallelsVirtualizationSDK：<br>参考：<a href="https://forum.parallels.com/threads/error-while-building-with-packer.339491/" target="_blank" rel="noopener">https://forum.parallels.com/threads/error-while-building-with-packer.339491/</a><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#brew cask install parallels-virtualization-sdk</span></span><br><span class="line"><span class="comment">#wget http://download.parallels.com/desktop/v11/11.2.0-32581/ParallelsVirtualizationSDK-11.2.0-32581-mac.dmg</span></span><br><span class="line">wget http://download.parallels.com/desktop/v12/12.1.3-41532/ParallelsVirtualizationSDK-12.1.3-41532-mac.dmg</span><br></pre></td></tr></table></figure></p>
<p>注意生成期间不要进入虚拟机进行任何操作。</p>
<p>如果想自定义安装一些软件，可以在script/update.sh中定义，比如：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash -eux</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$UPDATE</span>  =~ <span class="literal">true</span> || <span class="variable">$UPDATE</span> =~ 1 || <span class="variable">$UPDATE</span> =~ yes ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"==&gt; Applying updates"</span> </span><br><span class="line">    yum -y update</span><br><span class="line">    <span class="comment"># 安装自定义软件</span></span><br><span class="line">    <span class="comment">#yum -y install gcc gcc-c++ make wget autoconf kernel-devel</span></span><br><span class="line">    yum -y install gcc kernel-devel</span><br><span class="line"></span><br><span class="line">    <span class="comment"># reboot</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Rebooting the machine..."</span></span><br><span class="line">    reboot</span><br><span class="line">    sleep 60</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p>
<p>如出现以下表示制作成功：<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">==&gt; Builds finished. The artifacts of successful builds are:</span><br><span class="line">--&gt; virtualbox-iso: 'virtualbox' provider box: box/virtualbox/centos7-0.0.99.box</span><br></pre></td></tr></table></figure></p>
<p>生成的文件很小，只有439M：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ls -lh box/virtualbox/centos7-0.0.99.box</span><br><span class="line">-rw-r--r--  1 zxy  wheel   439M  1  3 10:19 box/virtualbox/centos7-0.0.99.box</span><br></pre></td></tr></table></figure></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><blockquote>
<p><a href="http://www.cnblogs.com/qinqiao/p/packer-vagrant-centos-box.html" target="_blank" rel="noopener">http://www.cnblogs.com/qinqiao/p/packer-vagrant-centos-box.html</a><br><a href="https://www.zzxworld.com/post/create-vagrant-box-base-on-centos.html" target="_blank" rel="noopener">https://www.zzxworld.com/post/create-vagrant-box-base-on-centos.html</a><br><a href="http://www.tuicool.com/articles/F7ZjQvy" target="_blank" rel="noopener">http://www.tuicool.com/articles/F7ZjQvy</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>kubernetes常用命令</title>
    <url>/2017/01/kubernetes%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html</url>
    <content><![CDATA[<p>本文记录一下kubernetes的常用命令。</p>
<a id="more"></a>
<h2 id="kubectl常用使用"><a href="#kubectl常用使用" class="headerlink" title="kubectl常用使用"></a>kubectl常用使用</h2><h3 id="查看类命令"><a href="#查看类命令" class="headerlink" title="查看类命令"></a>查看类命令</h3><h4 id="查看集群信息"><a href="#查看集群信息" class="headerlink" title="查看集群信息"></a>查看集群信息</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl cluster-info</span><br></pre></td></tr></table></figure>
<h4 id="查看各组件信息"><a href="#查看各组件信息" class="headerlink" title="查看各组件信息"></a>查看各组件信息</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl -s http://localhost:8080 get componentstatuses</span><br></pre></td></tr></table></figure>
<h4 id="查看pods所在的运行节点"><a href="#查看pods所在的运行节点" class="headerlink" title="查看pods所在的运行节点"></a>查看pods所在的运行节点</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get pods(po) -o wide</span><br><span class="line">kubectl get pod -o wide -n kube-system</span><br><span class="line">kubectl get pods -o wide --all-namespaces</span><br></pre></td></tr></table></figure>
<h4 id="查看pods定义的详细信息"><a href="#查看pods定义的详细信息" class="headerlink" title="查看pods定义的详细信息"></a>查看pods定义的详细信息</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get pods -o yaml</span><br></pre></td></tr></table></figure>
<h4 id="查看Replication-Controller信息"><a href="#查看Replication-Controller信息" class="headerlink" title="查看Replication Controller信息"></a>查看Replication Controller信息</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get rc</span><br></pre></td></tr></table></figure>
<h4 id="查看service的信息"><a href="#查看service的信息" class="headerlink" title="查看service的信息"></a>查看service的信息</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get service(svc)</span><br></pre></td></tr></table></figure>
<h4 id="查看节点信息"><a href="#查看节点信息" class="headerlink" title="查看节点信息"></a>查看节点信息</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get nodes(no)</span><br></pre></td></tr></table></figure>
<h4 id="按selector名来查找pod"><a href="#按selector名来查找pod" class="headerlink" title="按selector名来查找pod"></a>按selector名来查找pod</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get pod --selector name=redis</span><br></pre></td></tr></table></figure>
<h4 id="查看运行的pod的环境变量"><a href="#查看运行的pod的环境变量" class="headerlink" title="查看运行的pod的环境变量"></a>查看运行的pod的环境变量</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl <span class="built_in">exec</span> pod名 env</span><br></pre></td></tr></table></figure>
<h4 id="查看运行的pod的日志"><a href="#查看运行的pod的日志" class="headerlink" title="查看运行的pod的日志"></a>查看运行的pod的日志</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl logs -f --tail 100 pod名</span><br></pre></td></tr></table></figure>
<h4 id="查看pod的endpoint"><a href="#查看pod的endpoint" class="headerlink" title="查看pod的endpoint"></a>查看pod的endpoint</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-master ~]$ kubectl get endpoints(ep)</span><br></pre></td></tr></table></figure>
<h4 id="查看namespaces"><a href="#查看namespaces" class="headerlink" title="查看namespaces"></a>查看namespaces</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get namespaces</span><br><span class="line">NAME          STATUS    AGE</span><br><span class="line">default       Active    5h</span><br><span class="line">kube-system   Active    5h</span><br></pre></td></tr></table></figure>
<h3 id="操作类命令"><a href="#操作类命令" class="headerlink" title="操作类命令"></a>操作类命令</h3><h4 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl create -f 文件名</span><br></pre></td></tr></table></figure>
<h4 id="重建"><a href="#重建" class="headerlink" title="重建"></a>重建</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl replace -f 文件名  [--force]</span><br></pre></td></tr></table></figure>
<h4 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl delete -f 文件名</span><br><span class="line">kubectl delete pod pod名</span><br><span class="line">kubectl delete rc rc名</span><br><span class="line">kubectl delete service service名</span><br><span class="line">kubectl delete pod --all</span><br></pre></td></tr></table></figure>
<h4 id="删除所有pods"><a href="#删除所有pods" class="headerlink" title="删除所有pods"></a>删除所有pods</h4><p>比如需要删除所有的curl实例：参考<a href="https://www.58jb.com/html/155.html" target="_blank" rel="noopener">https://www.58jb.com/html/155.html</a><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kubectl get pods --all-namespaces -o wide</span><br><span class="line">NAMESPACE     NAME                                 READY     STATUS    RESTARTS   AGE       IP             NODE</span><br><span class="line">default       curl-57077659-swdxm                  1/1       Running   0          9m        10.244.3.3     k8s-node2</span><br></pre></td></tr></table></figure></p>
<p>先查看对应的rs：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get rs</span><br><span class="line">NAME            DESIRED   CURRENT   READY     AGE</span><br><span class="line">curl-57077659   1         1         1         50m</span><br></pre></td></tr></table></figure></p>
<p>再查看对应的deployment：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get deployment</span><br><span class="line">NAME      DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">curl      1         1         1            1           52m</span><br></pre></td></tr></table></figure></p>
<p>需要把deployment删除才行：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl delete deployment curl</span><br></pre></td></tr></table></figure></p>
<h4 id="动态调整rc-replicas"><a href="#动态调整rc-replicas" class="headerlink" title="动态调整rc replicas"></a>动态调整rc replicas</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-master ~]$ kubectl scale rc redis-slave --replicas=3</span><br><span class="line">[root@k8s-master ~]$ kubectl get rc</span><br><span class="line">NAME           DESIRED   CURRENT   AGE</span><br><span class="line">frontend       3         3         2h</span><br><span class="line">redis-master   1         1         2h</span><br><span class="line">redis-slave    3         3         2h</span><br></pre></td></tr></table></figure>
<h4 id="node-unschedule"><a href="#node-unschedule" class="headerlink" title="node unschedule"></a>node unschedule</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-master x86_64]<span class="comment"># vim unschedule_node.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Node</span><br><span class="line">metadata:</span><br><span class="line">  name: k8s-node1</span><br><span class="line">  labels:</span><br><span class="line">    kubernetes.io/hostname: k8s-node1</span><br><span class="line">spec:</span><br><span class="line">  unschedulable: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">[root@k8s-master x86_64]<span class="comment"># kubectl replace -f unschedule_node.yaml</span></span><br></pre></td></tr></table></figure>
<p>或者：<br>unschedule:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-master x86_64]<span class="comment"># kubectl patch node k8s-node1 -p '&#123;"spec": &#123;"unschedulable": true&#125;&#125;'</span></span><br><span class="line"></span><br><span class="line">[root@k8s-master x86_64]<span class="comment"># kubectl get no</span></span><br><span class="line">NAME        STATUS                     AGE</span><br><span class="line">127.0.0.1   NotReady                   8d</span><br><span class="line">k8s-node1   Ready,SchedulingDisabled   8d</span><br><span class="line">k8s-node2   Ready                      8d</span><br></pre></td></tr></table></figure></p>
<p>schedule:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-master x86_64]<span class="comment"># kubectl patch node k8s-node1 -p '&#123;"spec": &#123;"unschedulable": false&#125;&#125;'</span></span><br></pre></td></tr></table></figure></p>
<h4 id="动态调用deployment"><a href="#动态调用deployment" class="headerlink" title="动态调用deployment"></a>动态调用deployment</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl scale deployment elasticsearch --replicas=1 -n kube-system</span><br></pre></td></tr></table></figure>
<h4 id="创建namespaces"><a href="#创建namespaces" class="headerlink" title="创建namespaces"></a>创建namespaces</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl create -f namespace-dev.yaml</span><br><span class="line">kubectl get pods --namespace=development</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux网络</title>
    <url>/2017/01/Linux%E7%BD%91%E7%BB%9C.html</url>
    <content><![CDATA[<p>Linux网络可以通过命名空间进行网络隔离，本文记录一下相应的创建命令。</p>
<a id="more"></a>
<h2 id="网络命名空间"><a href="#网络命名空间" class="headerlink" title="网络命名空间"></a>网络命名空间</h2><h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip netns add netns0</span><br><span class="line">ip netns add netns1</span><br><span class="line"></span><br><span class="line"><span class="comment">#不加ip netns exec netns0 会在默认的root空间创建</span></span><br><span class="line">ip netns <span class="built_in">exec</span> netns0 ip link add veth0 <span class="built_in">type</span> veth peer name veth1</span><br></pre></td></tr></table></figure>
<h3 id="查看ip"><a href="#查看ip" class="headerlink" title="查看ip"></a>查看ip</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s1 ~]$ ip netns <span class="built_in">exec</span> netns0 ip link show</span><br><span class="line">1: lo: &lt;LOOPBACK&gt; mtu 65536 qdisc noop state DOWN mode DEFAULT </span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">2: veth1@veth0: &lt;BROADCAST,MULTICAST,M-DOWN&gt; mtu 1500 qdisc noop state DOWN mode DEFAULT qlen 1000</span><br><span class="line">    link/ether a6:b1:72:af:2d:a1 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">3: veth0@veth1: &lt;BROADCAST,MULTICAST,M-DOWN&gt; mtu 1500 qdisc noop state DOWN mode DEFAULT qlen 1000</span><br><span class="line">    link/ether 42:90:6e:1e:e6:b9 brd ff:ff:ff:ff:ff:ff</span><br></pre></td></tr></table></figure>
<h3 id="将veth1给netns1空间"><a href="#将veth1给netns1空间" class="headerlink" title="将veth1给netns1空间"></a>将veth1给netns1空间</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s1 ~]$ ip netns <span class="built_in">exec</span> netns0 ip link <span class="built_in">set</span> veth1 netns netns1</span><br><span class="line">[root@k8s1 ~]$ ip netns <span class="built_in">exec</span> netns0 ip link show </span><br><span class="line">1: lo: &lt;LOOPBACK&gt; mtu 65536 qdisc noop state DOWN mode DEFAULT </span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">3: veth0@if2: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN mode DEFAULT qlen 1000</span><br><span class="line">    link/ether 42:90:6e:1e:e6:b9 brd ff:ff:ff:ff:ff:ff link-netnsid 0</span><br><span class="line"></span><br><span class="line">[root@k8s1 ~]$ ip netns <span class="built_in">exec</span> netns1 ip link show</span><br><span class="line">1: lo: &lt;LOOPBACK&gt; mtu 65536 qdisc noop state DOWN mode DEFAULT </span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">2: veth1@if3: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN mode DEFAULT qlen 1000</span><br><span class="line">    link/ether a6:b1:72:af:2d:a1 brd ff:ff:ff:ff:ff:ff link-netnsid 0</span><br></pre></td></tr></table></figure>
<h3 id="添加ip"><a href="#添加ip" class="headerlink" title="添加ip"></a>添加ip</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip netns <span class="built_in">exec</span> netns0 ip addr add 10.1.1.2/24 dev veth0</span><br><span class="line">ip netns <span class="built_in">exec</span> netns0 ip link <span class="built_in">set</span> dev veth0 up</span><br><span class="line"></span><br><span class="line">ip netns <span class="built_in">exec</span> netns1 ip addr add 10.1.1.1/24 dev veth1</span><br><span class="line">ip netns <span class="built_in">exec</span> netns1 ip link <span class="built_in">set</span> dev veth1 up</span><br></pre></td></tr></table></figure>
<h3 id="ping"><a href="#ping" class="headerlink" title="ping"></a>ping</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s1 ~]$ ip netns <span class="built_in">exec</span> netns0 ifconfig</span><br><span class="line">veth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 10.1.1.2  netmask 255.255.255.0  broadcast 0.0.0.0</span><br><span class="line">        inet6 fe80::4090:6eff:fe1e:e6b9  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether 42:90:6e:1e:e6:b9  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 13  bytes 1026 (1.0 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 13  bytes 1026 (1.0 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">[root@k8s1 ~]$ ip netns <span class="built_in">exec</span> netns1 ifconfig</span><br><span class="line">veth1: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 10.1.1.1  netmask 255.255.255.0  broadcast 0.0.0.0</span><br><span class="line">        inet6 fe80::a4b1:72ff:feaf:2da1  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether a6:b1:72:af:2d:a1  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 13  bytes 1026 (1.0 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 13  bytes 1026 (1.0 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">[root@k8s1 ~]$ ip netns <span class="built_in">exec</span> netns1 ping 10.1.1.2</span><br><span class="line">PING 10.1.1.2 (10.1.1.2) 56(84) bytes of data.</span><br><span class="line">64 bytes from 10.1.1.2: icmp_seq=1 ttl=64 time=0.035 ms</span><br><span class="line">64 bytes from 10.1.1.2: icmp_seq=2 ttl=64 time=0.055 ms</span><br></pre></td></tr></table></figure>
<h3 id="查看配对"><a href="#查看配对" class="headerlink" title="查看配对"></a>查看配对</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s1 ~]$ ip netns <span class="built_in">exec</span> netns1 ethtool -S veth1</span><br><span class="line">NIC statistics:</span><br><span class="line">     peer_ifindex: 3</span><br><span class="line">[root@k8s1 ~]$ ip netns <span class="built_in">exec</span> netns0 ip link</span><br><span class="line">1: lo: &lt;LOOPBACK&gt; mtu 65536 qdisc noop state DOWN mode DEFAULT </span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">3: veth0@if2: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP mode DEFAULT qlen 1000</span><br><span class="line">    link/ether 42:90:6e:1e:e6:b9 brd ff:ff:ff:ff:ff:ff link-netnsid 0</span><br></pre></td></tr></table></figure>
<h2 id="网桥"><a href="#网桥" class="headerlink" title="网桥"></a>网桥</h2><blockquote>
<p>参考: <a href="http://fp-moon.iteye.com/blog/1468650" target="_blank" rel="noopener">http://fp-moon.iteye.com/blog/1468650</a><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install bridge-utils</span><br><span class="line">brctl addbr br0</span><br><span class="line">brctl addif br0 enp0s8 &amp;&amp; ifconfig enp0s8 0.0.0.0 &amp;&amp; ifconfig br0 192.168.10.6</span><br><span class="line">注意：brctl addif br0 enp0s8执行后断网，所以后面的命令需要一起执行。</span><br><span class="line"></span><br><span class="line">[root@k8s1 ~]$ ifconfig</span><br><span class="line"><span class="comment">#192.168.10.6已经转移到br0中了</span></span><br><span class="line">br0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.10.6  netmask 255.255.255.0  broadcast 192.168.10.255</span><br><span class="line">        inet6 fe80::a00:27ff:fec4:969a  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether 08:00:27:c4:96:9a  txqueuelen 0  (Ethernet)</span><br><span class="line">        RX packets 28  bytes 2821 (2.7 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 23  bytes 2826 (2.7 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure></p>
</blockquote>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>etcd集群安装</title>
    <url>/2017/01/etcd%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85.html</url>
    <content><![CDATA[<p>etcd是一个应用在分布式环境下的 key/value 存储服务。利用etcd的特性，应用程序可以在集群中共享信息、配置或作服务发现，etcd会在集群的各个节点中复制这些数据并保证这些数据始终正确。etcd无论是在 CoreOS还是Kubernetes体系中都是不可或缺的一环。</p>
<a id="more"></a>
<h2 id="rpm安装"><a href="#rpm安装" class="headerlink" title="rpm安装"></a>rpm安装</h2><p>安装：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y etcd-3.3.11-2.el7.centos.x86_64</span><br><span class="line"><span class="comment">#yum install etcd-3.1.9-2.el7.x86_64</span></span><br></pre></td></tr></table></figure></p>
<p>版本：3.3.11</p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>etcd0:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tee /etc/etcd/etcd.conf &lt;&lt; EOF</span><br><span class="line"><span class="comment">#[Member]</span></span><br><span class="line">ETCD_DATA_DIR=<span class="string">"/var/lib/etcd/default.etcd"</span></span><br><span class="line">ETCD_LISTEN_PEER_URLS=<span class="string">"http://0.0.0.0:2380"</span></span><br><span class="line">ETCD_LISTEN_CLIENT_URLS=<span class="string">"http://0.0.0.0:2379,http://0.0.0.0:4001"</span></span><br><span class="line">ETCD_NAME=<span class="string">"master"</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#[Clustering]</span></span><br><span class="line">ETCD_INITIAL_ADVERTISE_PEER_URLS=<span class="string">"http://192.168.80.94:2380"</span></span><br><span class="line">ETCD_ADVERTISE_CLIENT_URLS=<span class="string">"http://192.168.80.94:2379,http://192.168.80.94:4001"</span></span><br><span class="line">ETCD_INITIAL_CLUSTER=<span class="string">"master=http://192.168.80.94:2380,node1=http://192.168.80.97:2380,node2=http://192.168.80.99:2380"</span></span><br><span class="line">ETCD_INITIAL_CLUSTER_TOKEN=<span class="string">"etcd-cluster"</span></span><br><span class="line">ETCD_INITIAL_CLUSTER_STATE=<span class="string">"new"</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看是否正确</span></span><br><span class="line">grep -v ^<span class="comment"># /etc/etcd/etcd.conf</span></span><br></pre></td></tr></table></figure></p>
<p>etcd1:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tee /etc/etcd/etcd.conf &lt;&lt; EOF</span><br><span class="line"><span class="comment">#[Member]</span></span><br><span class="line">ETCD_DATA_DIR=<span class="string">"/var/lib/etcd/default.etcd"</span></span><br><span class="line">ETCD_LISTEN_PEER_URLS=<span class="string">"http://0.0.0.0:2380"</span></span><br><span class="line">ETCD_LISTEN_CLIENT_URLS=<span class="string">"http://0.0.0.0:2379,http://0.0.0.0:4001"</span></span><br><span class="line">ETCD_NAME=<span class="string">"node1"</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#[Clustering]</span></span><br><span class="line">ETCD_INITIAL_ADVERTISE_PEER_URLS=<span class="string">"http://192.168.80.97:2380"</span></span><br><span class="line">ETCD_ADVERTISE_CLIENT_URLS=<span class="string">"http://192.168.80.97:2379,http://192.168.80.97:4001"</span></span><br><span class="line">ETCD_INITIAL_CLUSTER=<span class="string">"master=http://192.168.80.94:2380,node1=http://192.168.80.97:2380,node2=http://192.168.80.99:2380"</span></span><br><span class="line">ETCD_INITIAL_CLUSTER_TOKEN=<span class="string">"etcd-cluster"</span></span><br><span class="line">ETCD_INITIAL_CLUSTER_STATE=<span class="string">"new"</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></p>
<p>etcd2:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tee /etc/etcd/etcd.conf &lt;&lt; EOF</span><br><span class="line"><span class="comment">#[Member]</span></span><br><span class="line">ETCD_DATA_DIR=<span class="string">"/var/lib/etcd/default.etcd"</span></span><br><span class="line">ETCD_LISTEN_PEER_URLS=<span class="string">"http://0.0.0.0:2380"</span></span><br><span class="line">ETCD_LISTEN_CLIENT_URLS=<span class="string">"http://0.0.0.0:2379,http://0.0.0.0:4001"</span></span><br><span class="line">ETCD_NAME=<span class="string">"node2"</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#[Clustering]</span></span><br><span class="line">ETCD_INITIAL_ADVERTISE_PEER_URLS=<span class="string">"http://192.168.80.99:2380"</span></span><br><span class="line">ETCD_ADVERTISE_CLIENT_URLS=<span class="string">"http://192.168.80.99:2379,http://192.168.80.99:4001"</span></span><br><span class="line">ETCD_INITIAL_CLUSTER=<span class="string">"master=http://192.168.80.94:2380,node1=http://192.168.80.97:2380,node2=http://192.168.80.99:2380"</span></span><br><span class="line">ETCD_INITIAL_CLUSTER_TOKEN=<span class="string">"etcd-cluster"</span></span><br><span class="line">ETCD_INITIAL_CLUSTER_STATE=<span class="string">"new"</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></p>
<h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl <span class="built_in">enable</span> etcd</span><br><span class="line">systemctl start etcd</span><br><span class="line">systemctl status etcd</span><br></pre></td></tr></table></figure>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">etcdctl cluster-health</span><br><span class="line">etcdctl --endpoints <span class="string">"http://192.168.80.94:2379,http://192.168.80.97:2379,http://192.168.80.99:2379"</span> member list</span><br></pre></td></tr></table></figure>
<h2 id="基于已有集群的服务发现"><a href="#基于已有集群的服务发现" class="headerlink" title="基于已有集群的服务发现"></a>基于已有集群的服务发现</h2><p>获取集群标识 size 代表要创建的集群大小：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -w <span class="string">"\n"</span> <span class="string">'https://discovery.etcd.io/new?size=3'</span></span><br><span class="line"><span class="comment"># 返回如下</span></span><br><span class="line">https://discovery.etcd.io/f6a252c5240cc89b91fa00dac95d5732</span><br></pre></td></tr></table></figure></p>
<p>设置集群标识,删除掉 ETCD_INITIAL_CLUSTER 字段,添加：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ETCD_DISCOVERY=<span class="string">"https://discovery.etcd.io/f6a252c5240cc89b91fa00dac95d5732"</span></span><br></pre></td></tr></table></figure></p>
<p>也可以通过已有的集群自动发现：<br>首先需要在已经搭建的etcd中创建用于发现的url<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -X PUT http://192.168.10.16:2379/v2/keys/discovery/6c007a14875d53d9bf0ef5a6fc0257c817f0fb83/_config/size -d value=3</span><br><span class="line"><span class="comment">#返回：</span></span><br><span class="line">&#123;<span class="string">"action"</span>:<span class="string">"set"</span>,<span class="string">"node"</span>:&#123;<span class="string">"key"</span>:<span class="string">"/discovery/6c007a14875d53d9bf0ef5a6fc0257c817f0fb83/_config/size"</span>,<span class="string">"value"</span>:<span class="string">"3"</span>,<span class="string">"modifiedIndex"</span>:170010,<span class="string">"createdIndex"</span>:170010&#125;&#125;</span><br></pre></td></tr></table></figure></p>
<p>其中192.168.10.16为另外的etcd集群环境。</p>
<p>如上表示创建一个集群大小为3的etcd发现url，创建成功后按如下配置启动各节点，可以参考手动启动的命令：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./etcd --name infra0 --initial-advertise-peer-urls http://192.168.10.6:2380 \</span><br><span class="line">  --listen-peer-urls http://192.168.10.6:2380 \</span><br><span class="line">  --listen-client-urls http://192.168.10.6:2379,http://127.0.0.1:2379 \</span><br><span class="line">  --advertise-client-urls http://192.168.10.6:2379 \ </span><br><span class="line"> --discovery http://192.168.10.16:2379/v2/keys/discovery/6c007a14875d53d9bf0ef5a6fc0257c817f0fb83</span><br></pre></td></tr></table></figure></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><blockquote>
<p><a href="https://mritd.me/2016/09/01/Etcd-%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/" target="_blank" rel="noopener">https://mritd.me/2016/09/01/Etcd-%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/</a><br><a href="http://blog.csdn.net/u010511236/article/details/52386229" target="_blank" rel="noopener">http://blog.csdn.net/u010511236/article/details/52386229</a></p>
</blockquote>
]]></content>
      <categories>
        <category>docker</category>
        <category>kubernetes</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Flannel搭建docker网络</title>
    <url>/2017/01/%E4%BD%BF%E7%94%A8Flannel%E6%90%AD%E5%BB%BAdocker%E7%BD%91%E7%BB%9C.html</url>
    <content><![CDATA[<p>docker跨宿主机的网络解决方案有几种：</p>
<ol>
<li>直接路由+quagga</li>
<li>calico</li>
<li>flannel</li>
<li>weave</li>
</ol>
<p>calico与flannel综合性能比还是很不错，建议使用。本文详细介绍flannel的安装与配置。</p>
<a id="more"></a>
<p>具体网络模型如图所示：<br><img src="/images/使用Flannel搭建docker网络/packet-01.png" alt="flannel"></p>
<p>本文详细介绍一下flannel的安装与配置。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="安装etcd"><a href="#安装etcd" class="headerlink" title="安装etcd"></a>安装etcd</h3><p>参考<a href="etcd集群安装.html">etcd集群安装</a></p>
<h3 id="rpm安装"><a href="#rpm安装" class="headerlink" title="rpm安装"></a>rpm安装</h3><h4 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y flannel</span><br></pre></td></tr></table></figure>
<p>版本：0.7.1</p>
<h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>在etcd中设置flannel所使用的ip段:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">etcdctl --endpoints <span class="string">"http://192.168.10.6:2379,http://192.168.10.7:2379,http://192.168.10.8:2379"</span> <span class="built_in">set</span> /coreos.com/network/config <span class="string">'&#123;"NetWork":"10.244.0.0/16"&#125;'</span></span><br></pre></td></tr></table></figure></p>
<p>每台执行：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sed -i <span class="string">'s;^FLANNEL_ETCD_ENDPOINTS=.*;FLANNEL_ETCD_ENDPOINTS="http://192.168.10.6:2379,http://192.168.10.7:2379,http://192.168.10.8:2379";g'</span> \</span><br><span class="line">/etc/sysconfig/flanneld</span><br><span class="line"></span><br><span class="line">$ sed -i <span class="string">'s;^FLANNEL_ETCD_PREFIX=.*;FLANNEL_ETCD_PREFIX="/coreos.com/network";g'</span> \</span><br><span class="line">/etc/sysconfig/flanneld</span><br><span class="line"></span><br><span class="line">$ grep -v ^<span class="comment"># /etc/sysconfig/flanneld</span></span><br><span class="line">FLANNEL_ETCD_ENDPOINTS=<span class="string">"http://192.168.10.6:2379,http://192.168.10.7:2379,http://192.168.10.8:2379"</span></span><br><span class="line">FLANNEL_ETCD_PREFIX=<span class="string">"/coreos.com/network"</span></span><br></pre></td></tr></table></figure></p>
<p>如果是vagrant启动的虚拟机的话，会多个10.0.2.15的eth0网段，需要添加–iface参数，需要修改/usr/lib/systemd/system/flanneld.service：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sed -i <span class="string">'s;^ExecStart=.*;ExecStart=/usr/bin/flanneld-start --iface=eth1 -etcd-endpoints=$&#123;FLANNEL_ETCD_ENDPOINTS&#125; -etcd-prefix=$&#123;FLANNEL_ETCD_PREFIX&#125; $FLANNEL_OPTIONS;g'</span> \</span><br><span class="line">/usr/lib/systemd/system/flanneld.service</span><br><span class="line"></span><br><span class="line">启动服务：</span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl <span class="built_in">enable</span> flanneld</span><br><span class="line">systemctl start flanneld</span><br><span class="line">systemctl status flanneld</span><br></pre></td></tr></table></figure></p>
<p>在service脚本中，会自动通过以下命令生成docker bip所需要的环境变量：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-master ~]<span class="comment"># /usr/libexec/flannel/mk-docker-opts.sh -k DOCKER_NETWORK_OPTIONS -d /run/flannel/docker</span></span><br><span class="line"></span><br><span class="line">[root@k8s-master ~]<span class="comment"># cat /run/flannel/docker</span></span><br><span class="line">DOCKER_OPT_BIP=<span class="string">"--bip=10.244.38.1/24"</span></span><br><span class="line">DOCKER_OPT_IPMASQ=<span class="string">"--ip-masq=true"</span></span><br><span class="line">DOCKER_OPT_MTU=<span class="string">"--mtu=1472"</span></span><br><span class="line">DOCKER_NETWORK_OPTIONS=<span class="string">" --bip=10.244.38.1/24 --ip-masq=true --mtu=1472"</span></span><br></pre></td></tr></table></figure></p>
<p>docker网段修改：<br>a. 修改docker网段：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i -e <span class="string">'/ExecStart=/iEnvironmentFile=/run/flannel/docker'</span> -e <span class="string">'s;^ExecStart=/usr/bin/dockerd;ExecStart=/usr/bin/dockerd $DOCKER_NETWORK_OPTIONS;g'</span> \</span><br><span class="line">/usr/lib/systemd/system/docker.service</span><br><span class="line"></span><br><span class="line"><span class="comment">#$ vim /usr/lib/systemd/system/docker.service</span></span><br><span class="line"><span class="comment">#EnvironmentFile=/run/flannel/docker</span></span><br><span class="line"><span class="comment">#ExecStart=/usr/bin/dockerd $DOCKER_NETWORK_OPTIONS</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#重启docker服务</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure></p>
<p>b. 手动修改docker网段：<br>不建议。<br>也可以在docker服务启动后，手动修改docker网段，不过每次开机都要执行，很麻烦。建议采用：<a href="#a. 修改docker网段">修改docker网段</a>：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /run/flannel/subnet.env</span><br><span class="line">ifconfig docker0 <span class="variable">$&#123;FLANNEL_SUBNET&#125;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="docker方式"><a href="#docker方式" class="headerlink" title="docker方式"></a>docker方式</h3><p>不建议。<br>安装flannel:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">etcdctl rm /coreos.com/network/ --recursive</span><br><span class="line">etcdctl mk /coreos.com/network/config <span class="string">'&#123;"NetWork":"10.244.0.0/16"&#125;'</span></span><br><span class="line"><span class="comment">#etcdctl set /coreos.com/network/config '&#123;"NetWork":"10.244.0.0/16"&#125;'</span></span><br><span class="line"></span><br><span class="line">docker run --net=host -d --privileged=<span class="literal">true</span> --restart=always \</span><br><span class="line"> --name flannel \</span><br><span class="line"> -v /run:/run \</span><br><span class="line"> -v /etc/kubernetes:/etc/kubernetes \</span><br><span class="line"> quay.io/coreos/flannel-git:v0.6.1-28-g5dde68d-amd64 /opt/bin/flanneld --iface=eth1 \</span><br><span class="line"> -etcd-endpoints=http://192.168.10.6:2379,http://192.168.10.7:2379,http://192.168.10.8:2379 -etcd-prefix=/coreos.com/network</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看网络段：</span></span><br><span class="line">etcdctl ls /coreos.com/network/subnets</span><br></pre></td></tr></table></figure></p>
<p>宿主机执行：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /run/flannel/subnet.env</span><br><span class="line">ifconfig docker0 <span class="variable">$&#123;FLANNEL_SUBNET&#125;</span></span><br></pre></td></tr></table></figure></p>
<p><del>#修改docker启动文件：<br>vim /usr/lib/systemd/system/docker.service<br>EnvironmentFile=/run/flannel/subnet.env<br>ExecStart=/usr/bin/dockerd –bip=$FLANNEL_SUBNET –ip-masq=$FLANNEL_IPMASQ –mtu=$FLANNEL_MTU</del></p>
<h3 id="二进制文件安装"><a href="#二进制文件安装" class="headerlink" title="二进制文件安装"></a>二进制文件安装</h3><p>安装：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://github.com/coreos/flannel/releases/download/v0.6.1/flannel-v0.6.1-linux-amd64.tar.gz</span><br><span class="line">tar -zxvf flannel-v0.6.1-linux-amd64.tar.gz</span><br></pre></td></tr></table></figure></p>
<p>解压后的文件有：flanneld、mk-docker-opts.sh，其中flanneld为执行文件，sh脚本用于生成Docker启动参数。</p>
<p>在etcd中设置flannel所使用的ip段:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">etcdctl --endpoints <span class="string">"http://192.168.10.6:2379,http://192.168.10.7:2379,http://192.168.10.8:2379"</span> <span class="built_in">set</span> /coreos.com/network/config <span class="string">'&#123;"NetWork":"10.244.0.0/16"&#125;'</span></span><br></pre></td></tr></table></figure></p>
<p>启动：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">flanneld --iface=eth1 -etcd-endpoints=http://192.168.10.6:2379,http://192.168.10.7:2379,http://192.168.10.8:2379 -etcd-prefix=/coreos.com/network</span><br></pre></td></tr></table></figure></p>
<p>手动生成docker变量：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-master ~]<span class="comment"># mk-docker-opts.sh -d /run/flannel/docker_opts.env -c</span></span><br><span class="line">[root@k8s-master ~]<span class="comment"># cat /run/flannel/docker_opts.env</span></span><br><span class="line">DOCKER_OPTS=<span class="string">" --bip=10.244.38.1/24 --ip-masq=true --mtu=1472"</span></span><br></pre></td></tr></table></figure></p>
<p>修改docker启动文件：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ vim /usr/lib/systemd/system/docker.service</span><br><span class="line">EnvironmentFile=/run/docker_opts.env</span><br><span class="line">ExecStart=/usr/bin/dockerd <span class="variable">$DOCKER_OPTS</span></span><br></pre></td></tr></table></figure></p>
<p>重启docker服务:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ systemctl daemon-reload</span><br><span class="line">$ systemctl <span class="built_in">enable</span> docker</span><br><span class="line">$ systemctl restart docker</span><br></pre></td></tr></table></figure></p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>在3台机器上运行：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -it --rm --name centos centos bash</span><br></pre></td></tr></table></figure></p>
<p>进入bash后，ip addr查看各自ip，互相ping一下对方的ip，如果可以ping通，表示安装正常，否则请检查相关的安装步骤。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><blockquote>
<p><a href="https://mritd.me/2016/09/03/Dokcer-%E4%BD%BF%E7%94%A8-Flannel-%E8%B7%A8%E4%B8%BB%E6%9C%BA%E9%80%9A%E8%AE%AF/" target="_blank" rel="noopener">https://mritd.me/2016/09/03/Dokcer-%E4%BD%BF%E7%94%A8-Flannel-%E8%B7%A8%E4%B8%BB%E6%9C%BA%E9%80%9A%E8%AE%AF/</a><br><a href="http://qkxue.net/info/108138/docker-kubernetes-flannel" target="_blank" rel="noopener">http://qkxue.net/info/108138/docker-kubernetes-flannel</a><br><a href="https://segmentfault.com/a/1190000007585313" target="_blank" rel="noopener">https://segmentfault.com/a/1190000007585313</a><br><a href="http://blog.dataman-inc.com/shurenyun-docker-133/" target="_blank" rel="noopener">http://blog.dataman-inc.com/shurenyun-docker-133/</a><br><a href="http://cmgs.me/life/docker-network-cloud" target="_blank" rel="noopener">http://cmgs.me/life/docker-network-cloud</a><br><a href="http://dockone.io/article/1115" target="_blank" rel="noopener">http://dockone.io/article/1115</a><br><a href="http://blog.liuker.cn/index.php/docker/30.html" target="_blank" rel="noopener">http://blog.liuker.cn/index.php/docker/30.html</a></p>
</blockquote>
]]></content>
      <categories>
        <category>docker</category>
        <category>kubernetes</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>用fpm制作RPM包</title>
    <url>/2017/01/%E7%94%A8fpm%E5%88%B6%E4%BD%9CRPM%E5%8C%85.html</url>
    <content><![CDATA[<p>生成自己的RPM包太麻烦了，使用FPM可以很轻松地生成RPM包，在此记录一下centos7的安装过程。</p>
<a id="more"></a>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#yum install gcc gcc-c++ make autoconf libevent libevent-devel</span></span><br><span class="line">[root@k8s-master etcd]<span class="comment"># yum -y install ruby rubygems ruby-devel gcc rpm-build</span></span><br><span class="line">[root@k8s-master etcd]<span class="comment"># gem sources --add https://gems.ruby-china.org/ --remove https://rubygems.org/</span></span><br><span class="line"></span><br><span class="line">[root@k8s-master etcd]<span class="comment"># gem sources -l</span></span><br><span class="line">*** CURRENT SOURCES ***</span><br><span class="line"></span><br><span class="line">https://gems.ruby-china.org/</span><br><span class="line"></span><br><span class="line">[root@k8s-master etcd]<span class="comment"># gem install fpm</span></span><br><span class="line"></span><br><span class="line">[root@k8s-master rpmfiles]<span class="comment"># fpm -v</span></span><br><span class="line">1.7.0</span><br></pre></td></tr></table></figure>
<h2 id="基于已存在rpm包制作"><a href="#基于已存在rpm包制作" class="headerlink" title="基于已存在rpm包制作"></a>基于已存在rpm包制作</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-master rpmfiles]<span class="comment"># mkdir rpmfiles</span></span><br><span class="line">[root@k8s-master rpmfiles]<span class="comment"># cp etcd-3.0.15-1.x86_64.rpm ./rpmfiles/</span></span><br><span class="line">[root@k8s-master rpmfiles]<span class="comment"># cd rpmfiles/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看script:</span></span><br><span class="line">[root@k8s-master rpmfiles]<span class="comment"># rpm -qp --scripts etcd-3.0.15-1.x86_64.rpm</span></span><br><span class="line">warning: etcd-3.0.15-1.x86_64.rpm: Header V4 RSA/SHA1 Signature, key ID c33abc74: NOKEY</span><br><span class="line">preinstall scriptlet (using /bin/sh):</span><br><span class="line">getent group etcd &gt;/dev/null || groupadd -r etcd</span><br><span class="line">getent passwd etcd &gt;/dev/null || useradd -r -g etcd -d /var/lib/etcd \</span><br><span class="line">        -s /sbin/nologin -c <span class="string">"etcd user"</span> etcd</span><br><span class="line">postinstall scriptlet (using /bin/sh):</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$1</span> -eq 1 ] ; <span class="keyword">then</span></span><br><span class="line">        <span class="comment"># Initial installation</span></span><br><span class="line">        systemctl preset etcd.service &gt;/dev/null 2&gt;&amp;1 || :</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">chown -R etcd.etcd /var/lib/etcd</span><br><span class="line">preuninstall scriptlet (using /bin/sh):</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$1</span> -eq 0 ] ; <span class="keyword">then</span></span><br><span class="line">        <span class="comment"># Package removal, not upgrade</span></span><br><span class="line">        systemctl --no-reload <span class="built_in">disable</span> etcd.service  || :</span><br><span class="line">        systemctl stop etcd.service  || :</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">postuninstall scriptlet (using /bin/sh):</span><br><span class="line">systemctl daemon-reload &gt;/dev/null 2&gt;&amp;1 || :</span><br><span class="line"></span><br><span class="line"><span class="comment">#将以上内容生成为以下文件：</span></span><br><span class="line">postinstall.sh</span><br><span class="line">postuninstall.sh</span><br><span class="line">preinstall.sh</span><br><span class="line">preuninstall.sh</span><br><span class="line"></span><br><span class="line"><span class="comment">#解压文件:</span></span><br><span class="line">[root@k8s-master rpmfiles]<span class="comment"># rpm2cpio etcd-3.0.15-1.x86_64.rpm | cpio -idmv</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#制作：</span></span><br><span class="line">fpm -s dir -t rpm -n <span class="string">"etcd"</span> -v 3.x-1.x86_64 --pre-install preinstall.sh --post-install postinstall.sh --pre-uninstall preuninstall.sh --post-uninstall postuninstall.sh etc usr var</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><blockquote>
<p><a href="https://mritd.me/2016/08/02/yum-%E7%AC%94%E8%AE%B0/" target="_blank" rel="noopener">https://mritd.me/2016/08/02/yum-%E7%AC%94%E8%AE%B0/</a><br><a href="https://mritd.me/2016/09/13/%E5%9F%BA%E4%BA%8E%E5%AE%98%E6%96%B9-rpm-%E5%BF%AB%E9%80%9F%E5%88%9B%E5%BB%BA%E8%87%AA%E5%AE%9A%E4%B9%89-rpm/" target="_blank" rel="noopener">https://mritd.me/2016/09/13/%E5%9F%BA%E4%BA%8E%E5%AE%98%E6%96%B9-rpm-%E5%BF%AB%E9%80%9F%E5%88%9B%E5%BB%BA%E8%87%AA%E5%AE%9A%E4%B9%89-rpm/</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>ssl证书制作</title>
    <url>/2017/01/ssl%E8%AF%81%E4%B9%A6%E5%88%B6%E4%BD%9C.html</url>
    <content><![CDATA[<p>之前公司网站转为使用https方式访问，在此记录一下过程。</p>
<a id="more"></a>
<h2 id="EasyRSA"><a href="#EasyRSA" class="headerlink" title="EasyRSA"></a>EasyRSA</h2><p>参考<a href="https://sskaje.me/2015/09/easy-rsa-3-howto/" target="_blank" rel="noopener">https://sskaje.me/2015/09/easy-rsa-3-howto/</a></p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://github.com/OpenVPN/easy-rsa/releases/download/v3.0.3/EasyRSA-3.0.3.zip</span><br><span class="line">unzip EasyRSA-3.0.3.zip &amp;&amp; mv EasyRSA-3.0.3 /usr/<span class="built_in">local</span>/ </span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/EasyRSA-3.0.3</span><br><span class="line">wget -O vars https://raw.githubusercontent.com/OpenVPN/easy-rsa/master/easyrsa3/vars.example</span><br><span class="line"></span><br><span class="line">cat &gt;&gt; /usr/<span class="built_in">local</span>/EasyRSA-3.0.3/vars &lt;&lt; EOF</span><br><span class="line">set_var EASYRSA                 <span class="string">"\$PWD"</span></span><br><span class="line">set_var EASYRSA_PKI             <span class="string">"\$EASYRSA/pki"</span></span><br><span class="line">set_var EASYRSA_DN              <span class="string">"cn_only"</span></span><br><span class="line">set_var EASYRSA_REQ_COUNTRY     <span class="string">"CN"</span></span><br><span class="line">set_var EASYRSA_REQ_PROVINCE    <span class="string">"Guangdong"</span></span><br><span class="line">set_var EASYRSA_REQ_CITY        <span class="string">"Shenzhen"</span></span><br><span class="line">set_var EASYRSA_REQ_ORG         <span class="string">"PTC"</span></span><br><span class="line">set_var EASYRSA_REQ_EMAIL       <span class="string">"zhaoxunyong@qq.com"</span></span><br><span class="line">set_var EASYRSA_REQ_OU          <span class="string">"Devops"</span></span><br><span class="line">set_var EASYRSA_KEY_SIZE        2048</span><br><span class="line">set_var EASYRSA_ALGO            rsa</span><br><span class="line">set_var EASYRSA_CA_EXPIRE       7500</span><br><span class="line">set_var EASYRSA_CERT_EXPIRE     365</span><br><span class="line">set_var EASYRSA_NS_SUPPORT      <span class="string">"no"</span></span><br><span class="line">set_var EASYRSA_NS_COMMENT      <span class="string">"SSKAJE CERTIFICATE AUTHORITY"</span></span><br><span class="line">set_var EASYRSA_EXT_DIR         <span class="string">"\$EASYRSA/x509-types"</span></span><br><span class="line">set_var EASYRSA_SSL_CONF        <span class="string">"\$EASYRSA/openssl-1.0.cnf"</span></span><br><span class="line">set_var EASYRSA_DIGEST          <span class="string">"sha256"</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>
<h3 id="初始化PKI"><a href="#初始化PKI" class="headerlink" title="初始化PKI"></a>初始化PKI</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./easyrsa init-pki</span><br></pre></td></tr></table></figure>
<h3 id="创建CA"><a href="#创建CA" class="headerlink" title="创建CA"></a>创建CA</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./easyrsa build-ca</span><br></pre></td></tr></table></figure>
<h3 id="生成证书"><a href="#生成证书" class="headerlink" title="生成证书"></a>生成证书</h3><p>生成证书的操作步骤就两步，生成请求文件，根据请求文件签发证书。<br>easy-rsa 3.0签发证书时要求制定type，可选的值参考x509-types目录下的文件名，包括</p>
<p>server：TLS服务端，适用于https服务端和vpn服务端<br>client：TLS客户端，适用于web浏览器和vpn客户端<br>ca：签发子CA证书<br>gen-req, build-client-full, build-server-full 可以使用 nopass 参数生成不加密的私钥。</p>
<p>一步创建：<br>可以使用 build-client-full 和 build-server-full 直接完成 gen-req 和 sign-req 的过程：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#./easyrsa build-client-full abc.com nopass</span></span><br><span class="line"><span class="comment">#./easyrsa build-client-full abc.com nopass</span></span><br><span class="line"><span class="comment">#gen-req and sign-req，对应的文件位于pki/reqs/与pki/private目录下</span></span><br><span class="line"><span class="comment">#./easyrsa build-server-full abc.com</span></span><br><span class="line"><span class="variable">$HOSTNAME</span>=abc</span><br><span class="line">./easyrsa --subject-alt-name=<span class="string">"DNS:<span class="variable">$HOSTNAME</span>,DNS:www.example.net"</span> build-server-full <span class="variable">$HOSTNAME</span> nopass</span><br></pre></td></tr></table></figure>
<p>abc.com:为文件名称。<br>nopass:生成不加密的私钥。</p>
<p>也可以分步创建：<br>生成请求:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./easyrsa  gen-req abc.com</span><br></pre></td></tr></table></figure>
<p>abc.com为文件名称，最终会生成abc.com.key给你abc.com.req文件。</p>
<p>签发证书:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./easyrsa sign-req server abc.com</span><br></pre></td></tr></table></figure>
<p>abc.com为文件名称。</p>
<p>签发req文件:<br>如果req文件是外部创建的，可以使用 import-req 导入，再用 sign-req 签发:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./easyrsa import-req &lt;request_file_path&gt; &lt;short_basename&gt;</span><br></pre></td></tr></table></figure>
<h3 id="导出PKCS-7-PKCS-12"><a href="#导出PKCS-7-PKCS-12" class="headerlink" title="导出PKCS 7/PKCS 12"></a>导出PKCS 7/PKCS 12</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./easyrsa <span class="built_in">export</span>-p7 abc.com</span><br></pre></td></tr></table></figure>
<h3 id="查看证书-查看请求文件"><a href="#查看证书-查看请求文件" class="headerlink" title="查看证书/查看请求文件"></a>查看证书/查看请求文件</h3><p>使用 show-cert 和 show-req 查看请求文件，参数是请求时的名字：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./easyrsa show-cert abc.com</span><br><span class="line">./easyrsa show-req abc.com</span><br></pre></td></tr></table></figure>
<h3 id="更新数据库"><a href="#更新数据库" class="headerlink" title="更新数据库"></a>更新数据库</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./easyrsa update-db</span><br></pre></td></tr></table></figure>
<h3 id="使用2-x版本"><a href="#使用2-x版本" class="headerlink" title="使用2.x版本"></a>使用2.x版本</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install epel-release</span><br><span class="line">yum install easy-rsa</span><br><span class="line"><span class="built_in">cd</span> /usr/share/easy-rsa/2.0</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改vars 相关变量：</span></span><br><span class="line"><span class="built_in">export</span> KEY_COUNTRY=<span class="string">"CN"</span></span><br><span class="line"><span class="built_in">export</span> KEY_PROVINCE=<span class="string">"Guangdong"</span></span><br><span class="line"><span class="built_in">export</span> KEY_CITY=<span class="string">"shenzhen"</span></span><br><span class="line"><span class="built_in">export</span> KEY_ORG=<span class="string">"abc.com"</span></span><br><span class="line"><span class="built_in">export</span> KEY_EMAIL=<span class="string">"admin@abc.com"</span></span><br><span class="line"><span class="built_in">export</span> KEY_OU=<span class="string">"OPS"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#执行以下命令：</span></span><br><span class="line">. vars </span><br><span class="line"><span class="comment">#清除文件</span></span><br><span class="line">./clean-all</span><br><span class="line"><span class="comment">#生成服务端CA</span></span><br><span class="line">./build-ca</span><br><span class="line"><span class="comment">#生成服务端证书</span></span><br><span class="line">./build-key-server server</span><br><span class="line"><span class="comment">#生成客户端证书</span></span><br><span class="line">./build-key client1</span><br></pre></td></tr></table></figure>
<h2 id="openssl生成https-ssl的证书"><a href="#openssl生成https-ssl的证书" class="headerlink" title="openssl生成https/ssl的证书"></a>openssl生成https/ssl的证书</h2><p>假设生成根域名证书，域名为：*.abc.com。</p>
<h3 id="颁发证书"><a href="#颁发证书" class="headerlink" title="颁发证书"></a>颁发证书</h3><p>如果是对外的服务，需要公共CA机构签署，不需要这步。<br>内网环境CA要给别人颁发证书，首先自己得有一个作为根证书：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#初始化</span></span><br><span class="line"><span class="built_in">cd</span> /etc/pki/CA/</span><br><span class="line">touch index.txt serial</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'01'</span> &gt; serial</span><br><span class="line"></span><br><span class="line"><span class="comment">#生成根密钥</span></span><br><span class="line"><span class="comment">#为了安全起见，修改cakey.pem私钥文件权限为600或400</span></span><br><span class="line"><span class="built_in">umask</span> 077; openssl genrsa -out private/cakey.pem 2048</span><br><span class="line"></span><br><span class="line"><span class="comment">#生成根证书</span></span><br><span class="line">openssl req \</span><br><span class="line">-subj <span class="string">"/C=CN/ST=GuangDong/L=ShenZhen/O=PTC/OU=Devops/CN=*.abc.com"</span> \</span><br><span class="line">-new -x509 -key private/cakey.pem -out cacert.pem</span><br></pre></td></tr></table></figure></p>
<p>如果没有加-subj参数时，需要输入以下相关信息：<br><img src="/images/ssl证书制作/openssl.png" alt="openssl"></p>
<h3 id="为web服务器生成ssl密钥"><a href="#为web服务器生成ssl密钥" class="headerlink" title="为web服务器生成ssl密钥"></a>为web服务器生成ssl密钥</h3><p>方法一：创建签名请求，然后通过私有CA签署：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#openssl req -newkey rsa:4096 -nodes -sha256 -keyout abc.com.key -out abc.com.csr</span></span><br><span class="line"><span class="comment">#-reqexts SAN -config参数为添加SAN信息，如果不需要SAN的话，可以不用。</span></span><br><span class="line">openssl req \</span><br><span class="line">-subj <span class="string">"/C=CN/ST=GuangDong/L=ShenZhen/O=PTC/OU=Devops/CN=*.abc.com"</span> \</span><br><span class="line">-reqexts SAN -config &lt;(cat /etc/pki/tls/openssl.cnf &lt;(<span class="built_in">printf</span> <span class="string">"[SAN]\nsubjectAltName=DNS:www.abc.com,IP:192.168.10.6"</span>)) \</span><br><span class="line">-newkey rsa:2048 -keyout abc.com.key -out abc.com.csr</span><br><span class="line"><span class="comment">#或者</span></span><br><span class="line"><span class="comment">#openssl genrsa -out abc.com.key 2048</span></span><br><span class="line"><span class="comment">#openssl req -subj "/C=CN/ST=GuangDong/L=ShenZhen/O=PTC/OU=Devops/CN=*.abc.com" -new -key abc.com.key -out abc.com.csr</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自己签署</span></span><br><span class="line"><span class="comment">#一般内网环境采用自己签署(如果是对外的服务，需要公共CA机构签署)：</span></span><br><span class="line">openssl ca -<span class="keyword">in</span> abc.com.csr -out abc.com.crt -cert /etc/pki/CA/cacert.pem -keyfile /etc/pki/CA/private/cakey.pem -outdir ./</span><br><span class="line"><span class="comment">#openssl x509 -req -in abc.com.csr -CA /etc/pki/CA/cacert.pem -CAkey /etc/pki/CA/private/cakey.pem -CAcreateserial -out abc.com.crt -days 365 -extensions v3_req -extfile openssl.cnf</span></span><br></pre></td></tr></table></figure></p>
<p>方法二：创建签名请求，创建一个加密的私钥，然后通过私钥签署：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成私钥：</span></span><br><span class="line">openssl genrsa -des3 -out abc.key.pem.encrypted 2048</span><br><span class="line"><span class="comment"># 生成解密后的private key：</span></span><br><span class="line">openssl rsa -<span class="keyword">in</span> abc.key.pem.encrypted -out abc.com.key</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建签名请求：</span></span><br><span class="line"><span class="comment">#-reqexts SAN -config参数为添加SAN信息，如果不需要SAN的话，可以不用。</span></span><br><span class="line">openssl req -utf8 -config /etc/pki/tls/openssl.cnf \</span><br><span class="line">-subj <span class="string">"/C=CN/ST=GuangDong/L=ShenZhen/O=PTC/OU=Devops/CN=*.abc.com"</span> \</span><br><span class="line">-reqexts SAN -config &lt;(cat /etc/pki/tls/openssl.cnf &lt;(<span class="built_in">printf</span> <span class="string">"[SAN]\nsubjectAltName=DNS:www.abc.com,IP:192.168.10.6"</span>)) \</span><br><span class="line">-new -key abc.key.pem.encrypted \</span><br><span class="line">-out abc.req.csr -days 365</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自己签署</span></span><br><span class="line"><span class="comment">#一般内网环境采用自己签署(如果是对外的服务，需要公共CA机构签署)：</span></span><br><span class="line">openssl x509 -req -days 365 -signkey abc.key.pem.encrypted -<span class="keyword">in</span> abc.req.csr -out abc.cert.crt</span><br></pre></td></tr></table></figure></p>
<h3 id="公共CA机构签署"><a href="#公共CA机构签署" class="headerlink" title="公共CA机构签署"></a>公共CA机构签署</h3><p>可以购买geotrust服务或者申请startssl免费一年的服务，具体请参考<a href="https://mritd.me/2016/06/22/%E5%85%8D%E8%B4%B9%E7%94%B3%E8%AF%B7-StartSSL-%E8%AF%81%E4%B9%A6/" target="_blank" rel="noopener">免费申请-StartSSL-证书</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成key與csr</span></span><br><span class="line">openssl req -newkey rsa:2048 -keyout abc.com.key -out abc.com.csr</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将csr内容上传geotrust后，会生成IntermediateCA.crt、ssl_certificate.crt两个文件</span></span><br><span class="line">cat ssl_certificate.crt IntermediateCA.crt &gt;&gt; abc.com.crt</span><br><span class="line"></span><br><span class="line"><span class="comment">### 添加</span></span><br><span class="line"><span class="comment">#将abc.com.crt与abc.key.pem加入到nginx中即可，比如：</span></span><br><span class="line">server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  server_name abc.com;</span><br><span class="line">  rewrite ^(.*) https://<span class="variable">$server_name</span><span class="variable">$1</span> permanent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">  listen 443;</span><br><span class="line">  server_name abc.com;</span><br><span class="line">  access_log /var/<span class="built_in">log</span>/nginx/your-domain.log main;</span><br><span class="line"></span><br><span class="line">  ssl on;</span><br><span class="line">  ssl_certificate      /etc/nginx/ssl/abc.com.crt;</span><br><span class="line">  ssl_certificate_key  /etc/nginx/ssl/abc.com.key;</span><br><span class="line"></span><br><span class="line">  location / &#123;</span><br><span class="line"></span><br><span class="line">    log_not_found on;</span><br><span class="line"></span><br><span class="line">    proxy_pass http://127.0.0.1:8080;</span><br><span class="line">    proxy_read_timeout 300;</span><br><span class="line">    proxy_connect_timeout 300;</span><br><span class="line">    proxy_redirect off;</span><br><span class="line"></span><br><span class="line">    proxy_set_header X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">    proxy_set_header Host              <span class="variable">$http_host</span>;</span><br><span class="line">    proxy_set_header X-Real-IP         <span class="variable">$remote_addr</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="私有CA签署时，浏览器不信任证书的解决方案"><a href="#私有CA签署时，浏览器不信任证书的解决方案" class="headerlink" title="私有CA签署时，浏览器不信任证书的解决方案"></a>私有CA签署时，浏览器不信任证书的解决方案</h3><p>以macos为例：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#下载ca文件</span></span><br><span class="line">sz /etc/pki/CA/cacert.pem</span><br></pre></td></tr></table></figure></p>
<p>然后再导入系统，具体请参考：<a href="http://www.cnblogs.com/snandy/p/3262661.html" target="_blank" rel="noopener">解决Mac Chrome打开HTTPS证书错误问题</a></p>
<h2 id="SAN"><a href="#SAN" class="headerlink" title="SAN"></a>SAN</h2><p>什么是 SAN，SAN（Subject Alternative Name）是 SSL 标准 x509 中定义的一个扩展。使用了 SAN 字段的 SSL 证书，可以扩展此证书支持的域名，使得一个证书可以支持多个不同域名的解析。比如说：Common Name 字段是 *.google.com，这张证书通过SAN就能够被 <a href="http://www.youtube.com" target="_blank" rel="noopener">www.youtube.com</a> 这个域名所使用。原因就是这是一张带有 SAN 扩展的证书。<br>所以，只执行 NO SAN 命令也可以签发证书，不过却不能够添加多个域名。</p>
<p>想要添加多个域名或泛域名，你需要使用到该扩展。那么默认的 OpenSSL 的配置是不能够满足的，我们需要复制或下载一份默认的 openssl.cnf 文件到本地。如 <a href="https://github.com/openssl/openssl/blob/master/apps/openssl.cnf" target="_blank" rel="noopener">github openssl</a>。</p>
<p>修改匹配策略：<br>默认匹配策略是：国家名，省份，组织名必须相同（match）。我们改为可选（optional），这样避免我们生成证书请求文件时（csr）去参考 CA 证书。</p>
<p>编辑/etc/pki/tls/openssl.cnf文件：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># For the CA policy</span><br><span class="line">[ policy_match ]</span><br><span class="line">countryName         = match</span><br><span class="line">stateOrProvinceName     = optional</span><br><span class="line">organizationName        = optional</span><br><span class="line">organizationalUnitName      = optional</span><br><span class="line">commonName          = supplied</span><br><span class="line">emailAddress            = optional</span><br></pre></td></tr></table></figure></p>
<p>以上为可选项。</p>
<p>修改默认值：<br>修改默认值，可以让你更快的颁发证书，一直回车就可以了：<br>编辑/etc/pki/tls/openssl.cnf文件：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[ req_distinguished_name ]</span><br><span class="line">countryName                     = Country Name (2 letter code)</span><br><span class="line">countryName_default             = CN</span><br><span class="line">countryName_min                 = 2</span><br><span class="line">countryName_max                 = 2</span><br><span class="line"></span><br><span class="line">stateOrProvinceName             = State or Province Name (full name)</span><br><span class="line">stateOrProvinceName_default    = Guangdong</span><br><span class="line"></span><br><span class="line">localityName                    = Locality Name (eg, city)</span><br><span class="line">localityName_default            = Shenzhen</span><br><span class="line"></span><br><span class="line">0.organizationName              = Organization Name (eg, company)</span><br><span class="line">0.organizationName_default      = Dev</span><br><span class="line"></span><br><span class="line"># we can do this but it is not needed normally :-)</span><br><span class="line">#1.organizationName             = Second Organization Name (eg, company)</span><br><span class="line">#1.organizationName_default     = World Wide Web Pty Ltd</span><br><span class="line"></span><br><span class="line">organizationalUnitName          = Organizational Unit Name (eg, section)</span><br><span class="line">organizationalUnitName_default = Dev</span><br><span class="line"></span><br><span class="line">commonName                      = Common Name (eg, your name or your server\&apos;s hostname)</span><br><span class="line">commonName_max                  = 64</span><br><span class="line"></span><br><span class="line">emailAddress                    = zhaoxunyong@qq.com</span><br><span class="line">emailAddress_max                = 64</span><br><span class="line"></span><br><span class="line"># SET-ex3                       = SET extension number 3</span><br></pre></td></tr></table></figure></p>
<p>关键步骤：<br>最关键的地方是修改 v3_req。添加成如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[ v3_req ]</span><br><span class="line"></span><br><span class="line"># Extensions to add to a certificate request</span><br><span class="line"></span><br><span class="line">basicConstraints        = CA:FALSE</span><br><span class="line">keyUsage            = nonRepudiation, digitalSignature, keyEncipherment</span><br><span class="line">subjectAltName          = @alt_names</span><br><span class="line"></span><br><span class="line">[ alt_names ]</span><br><span class="line">DNS.1 = abc.com</span><br><span class="line">DNS.2 = *.abc.com</span><br><span class="line">DNS.3 = localhost</span><br><span class="line">IP.1 = 127.0.0.1</span><br><span class="line">IP.2 = 192.168.10.6</span><br><span class="line">IP.3 = 192.168.10.7</span><br><span class="line">IP.4 = 192.168.10.8</span><br></pre></td></tr></table></figure>
<p>环境变量：<br>openssl 通过 $ENV::name 获取环境变量，在配置文件里使用的时候只需将 name 替换为需要用到的环境变量的名称就可以了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">export</span> SNAS=DNS:abc.com,DNS:*.abc.com,DNS:xyz.com,IP:127.0.0.1</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 修改 openssl.cnf</span><br><span class="line">[ v3_req ]</span><br><span class="line"></span><br><span class="line"># Extensions to add to a certificate request</span><br><span class="line"></span><br><span class="line">basicConstraints        = CA:FALSE</span><br><span class="line">keyUsage            = nonRepudiation, digitalSignature, keyEncipherment</span><br><span class="line">subjectAltName          = $ENV::SANS</span><br><span class="line"></span><br><span class="line"># 注释掉这段配置</span><br><span class="line">#[ alt_names ]</span><br><span class="line">#DNS.1 = abc.com</span><br><span class="line">#DNS.2 = *.abc.com</span><br><span class="line">#DNS.3 = localhost</span><br><span class="line">#IP.1 = 127.0.0.1</span><br><span class="line">#IP.2 = 192.168.10.6</span><br><span class="line">#IP.3 = 192.168.10.7</span><br><span class="line">#IP.4 = 192.168.10.8</span><br></pre></td></tr></table></figure>
<h2 id="jks证书"><a href="#jks证书" class="headerlink" title="jks证书"></a>jks证书</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#生成jks：</span></span><br><span class="line">keytool -genkey -<span class="built_in">alias</span> abc.com -keyalg RSA -keystore abc.jks -keysize 2048 -dname <span class="string">"CN=*.abc.com,OU=,O=xxxx有限公司,L=深圳市,ST=广东省,C=CN"</span> -storepass <span class="string">"Aa123456"</span> -keypass <span class="string">"Aa123456"</span></span><br><span class="line"><span class="comment">#注意：CN表示颁发给哪个url，可以用*.abc.com表示所有</span></span><br></pre></td></tr></table></figure>
<p>转换jks为OpenSSL的PEM格式文件(.key + .crt)</p>
<blockquote>
<p><a href="http://ju.outofmemory.cn/entry/212469" target="_blank" rel="noopener">http://ju.outofmemory.cn/entry/212469</a></p>
</blockquote>
<p>先导出p12：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">keytool -importkeystore -srckeystore abc.jks -destkeystore abc.p12 -srcstoretype jks -deststoretype pkcs12</span><br></pre></td></tr></table></figure></p>
<p>方式一：<br>生成pem证书(包含了key，server证书和ca证书)：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成key 加密的pem证书</span></span><br><span class="line">$ openssl pkcs12 -<span class="keyword">in</span> abc.p12 -out abc.key.pem</span><br><span class="line">Enter Import Password:</span><br><span class="line">MAC verified OK</span><br><span class="line">Enter PEM pass phrase:</span><br><span class="line">Verifying - Enter PEM pass phrase:</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 生成key 非加密的pem证书</span></span><br><span class="line">$ openssl pkcs12 -nodes -<span class="keyword">in</span> server.p12 -out abc.key.pem</span><br><span class="line">Enter Import Password:</span><br><span class="line">MAC verified OK</span><br></pre></td></tr></table></figure></p>
<p>剩下步骤与<a href="#为web服务器生成ssl密钥">为web服务器生成ssl密钥</a>类似。</p>
<p>方式二：<br>单独导出key：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#生成key加密的pem证书：</span></span><br><span class="line">$ openssl pkcs12 -<span class="keyword">in</span> server.p12 -out abc.key.pem</span><br><span class="line"></span><br><span class="line"><span class="comment">#生成非加密的key：</span></span><br><span class="line"><span class="comment">#(只保留BEGIN与END中的内容，包括BEGIN与END)</span></span><br><span class="line">openssl pkcs12 -<span class="keyword">in</span> abc.p12 -nocerts -nodes -out abc.key.pem</span><br></pre></td></tr></table></figure></p>
<p>单独导出server证书:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl pkcs12 -<span class="keyword">in</span> abc.p12  -nokeys -cacerts -out abc.cert.crt</span><br></pre></td></tr></table></figure></p>
<p>单独导出ca证书:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl pkcs12 -<span class="keyword">in</span> abc.p12  -nokeys -cacerts -out ca.crt</span><br></pre></td></tr></table></figure></p>
<p>方式三：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#生成csr文件：</span></span><br><span class="line">keytool -certreq -keyalg RSA -<span class="built_in">alias</span> abc.com -file abc.req.csr -keystore abc.jks -storepass <span class="string">"Aa123456"</span> -keypass <span class="string">"Aa123456"</span></span><br></pre></td></tr></table></figure></p>
<p>生成私钥:<br>windows下运行<a href="/files/ssl证书制作/kestore-export.zip">kestore-export</a>中的工具：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">JKS2PFX.bat abc.jks <span class="string">"Aa123456"</span> <span class="string">"abc.com"</span> <span class="string">"key/abc"</span> <span class="string">"D:\Developer\java\jdk1.7.0_51\jre\bin"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#上传key/abc.com.key到linux下并执行：</span></span><br><span class="line">openssl rsa -<span class="keyword">in</span> abc.com.key -des3 -out abc.key.encrypted</span><br><span class="line"></span><br><span class="line"><span class="comment">#自己签署csr文件：</span></span><br><span class="line"><span class="comment">#openssl x509 -req -days 365 -in abc.req.csr -signkey abc.key.encrypted -out abc.cert.crt</span></span><br></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#将csr内容上传geotrust后，会生成IntermediateCA.crt、ssl_certificate.crt两个文件</span></span><br><span class="line">cat ssl_certificate.crt IntermediateCA.crt &gt;&gt; abc.com.crt</span><br></pre></td></tr></table></figure>
<h2 id="格式转换"><a href="#格式转换" class="headerlink" title="格式转换"></a>格式转换</h2><blockquote>
<p><a href="https://support.wosign.com/index.php?/Knowledgebase/Article/View/36/0/" target="_blank" rel="noopener">https://support.wosign.com/index.php?/Knowledgebase/Article/View/36/0/</a></p>
</blockquote>
<h3 id="key、crt转换为p12"><a href="#key、crt转换为p12" class="headerlink" title="key、crt转换为p12"></a>key、crt转换为p12</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl pkcs12 -<span class="built_in">export</span> -clcerts -<span class="keyword">in</span> abc.cert.crt -inkey abc.key.pem -out abc.p12</span><br></pre></td></tr></table></figure>
<h3 id="key、crt转换为pfx"><a href="#key、crt转换为pfx" class="headerlink" title="key、crt转换为pfx"></a>key、crt转换为pfx</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl pkcs12 -<span class="built_in">export</span> -inkey abc.key.pem -<span class="keyword">in</span> abc.com.crt -out abc.pfx</span><br></pre></td></tr></table></figure>
<h3 id="pfx转换jks"><a href="#pfx转换jks" class="headerlink" title="pfx转换jks"></a>pfx转换jks</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">keytool -importkeystore -srckeystore abc.pfx -destkeystore abc.com.jks -srcstoretype PKCS12 -deststoretype JKS</span><br></pre></td></tr></table></figure>
<h3 id="crt转换为jks"><a href="#crt转换为jks" class="headerlink" title="crt转换为jks"></a>crt转换为jks</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">keytool -import -v -trustcacerts -storepass <span class="string">"Aa123456"</span> -<span class="built_in">alias</span> abc.com -file abc.cert.crt -keystore abc.jks</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><blockquote>
<p><a href="https://deepzz.com/post/based-on-openssl-privateCA-issuer-cert.html" target="_blank" rel="noopener">https://deepzz.com/post/based-on-openssl-privateCA-issuer-cert.html</a><br><a href="http://liaoph.com/openssl-san/" target="_blank" rel="noopener">http://liaoph.com/openssl-san/</a><br><a href="https://mritd.me/2016/07/03/Harbor-%E4%BC%81%E4%B8%9A%E7%BA%A7-Docker-Registry-HTTPS%E9%85%8D%E7%BD%AE/" target="_blank" rel="noopener">https://mritd.me/2016/07/03/Harbor-%E4%BC%81%E4%B8%9A%E7%BA%A7-Docker-Registry-HTTPS%E9%85%8D%E7%BD%AE/</a><br><a href="https://mritd.me/2016/07/02/%E4%BA%92%E8%81%94%E7%BD%91%E5%8A%A0%E5%AF%86%E5%8F%8AOpenSSL%E4%BB%8B%E7%BB%8D%E5%92%8C%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/" target="_blank" rel="noopener">https://mritd.me/2016/07/02/%E4%BA%92%E8%81%94%E7%BD%91%E5%8A%A0%E5%AF%86%E5%8F%8AOpenSSL%E4%BB%8B%E7%BB%8D%E5%92%8C%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</a><br><a href="https://mritd.me/2016/06/22/%E5%85%8D%E8%B4%B9%E7%94%B3%E8%AF%B7-StartSSL-%E8%AF%81%E4%B9%A6/" target="_blank" rel="noopener">https://mritd.me/2016/06/22/%E5%85%8D%E8%B4%B9%E7%94%B3%E8%AF%B7-StartSSL-%E8%AF%81%E4%B9%A6/</a><br><a href="http://seanlook.com/2015/01/18/openssl-self-sign-ca/" target="_blank" rel="noopener">http://seanlook.com/2015/01/18/openssl-self-sign-ca/</a><br><a href="http://seanlook.com/2015/01/15/openssl-certificate-encryption/" target="_blank" rel="noopener">http://seanlook.com/2015/01/15/openssl-certificate-encryption/</a><br><a href="http://seanlook.com/2015/01/07/tls-ssl/#comments" target="_blank" rel="noopener">http://seanlook.com/2015/01/07/tls-ssl/#comments</a><br><a href="http://netsecurity.51cto.com/art/200602/21066.htm" target="_blank" rel="noopener">http://netsecurity.51cto.com/art/200602/21066.htm</a><br><a href="http://cnzhx.net/blog/self-signed-certificate-as-trusted-root-ca-in-windows/" target="_blank" rel="noopener">http://cnzhx.net/blog/self-signed-certificate-as-trusted-root-ca-in-windows/</a><br><a href="http://www.cnblogs.com/snandy/p/3262661.html" target="_blank" rel="noopener">http://www.cnblogs.com/snandy/p/3262661.html</a><br><a href="http://www.iloveandroid.net/2015/10/14/jksTopm/" target="_blank" rel="noopener">http://www.iloveandroid.net/2015/10/14/jksTopm/</a></p>
</blockquote>
]]></content>
      <categories>
        <category>SSL</category>
      </categories>
      <tags>
        <tag>SSL</tag>
      </tags>
  </entry>
  <entry>
    <title>Centos ULIMIT资源限制</title>
    <url>/2017/02/Centos-ULIMIT%E8%B5%84%E6%BA%90%E9%99%90%E5%88%B6.html</url>
    <content><![CDATA[<p>Centos下是通过ulimit进行资源限制，本文介绍一下ulimit的详细设置。</p>
<a id="more"></a>
<h2 id="默认配置"><a href="#默认配置" class="headerlink" title="默认配置"></a>默认配置</h2><p>默认情况下，ulimit是最小设置。重点参数为open files与max user processes，open files默认为1024，max user processes默认为3870。</p>
<p>可能通过以下命令查看：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看所有的参数：</span></span><br><span class="line">[root@zhaoxy ~]<span class="comment"># ulimit -a</span></span><br><span class="line">core file size          (blocks, -c) 0</span><br><span class="line">data seg size           (kbytes, -d) unlimited</span><br><span class="line">scheduling priority             (-e) 0</span><br><span class="line">file size               (blocks, -f) unlimited</span><br><span class="line">pending signals                 (-i) 3870</span><br><span class="line">max locked memory       (kbytes, -l) 64</span><br><span class="line">max memory size         (kbytes, -m) unlimited</span><br><span class="line">open files                      (-n) 1024</span><br><span class="line">pipe size            (512 bytes, -p) 8</span><br><span class="line">POSIX message queues     (bytes, -q) 819200</span><br><span class="line">real-time priority              (-r) 0</span><br><span class="line">stack size              (kbytes, -s) 8192</span><br><span class="line">cpu time               (seconds, -t) unlimited</span><br><span class="line">max user processes              (-u) 3870</span><br><span class="line">virtual memory          (kbytes, -v) unlimited</span><br><span class="line">file locks                      (-x) unlimited</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看max user processes参数：</span></span><br><span class="line">[root@zhaoxy ~]<span class="comment"># ulimit -u</span></span><br><span class="line">3870</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看open files参数：</span></span><br><span class="line">[root@zhaoxy ~]<span class="comment"># ulimit -n</span></span><br><span class="line">1024</span><br></pre></td></tr></table></figure></p>
<p>尤其是open files参数，过小时会造成程序在高并发时出现Too many open files的错误。</p>
<h2 id="登录用户配置调整"><a href="#登录用户配置调整" class="headerlink" title="登录用户配置调整"></a>登录用户配置调整</h2><p>在centos 5/6 等版本中，资源限制的配置可以在/etc/security/limits.conf设置，针对root/user等各个用户或者*代表所有用户来设置。 当然，/etc/security/limits.d/ 中可以配置，系统是先加载limits.conf然后按照英文字母顺序加载limits.d目录下的配置文件，后加载配置覆盖之前的配置。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#添加以下参数：</span></span><br><span class="line">[root@zhaoxy ~]<span class="comment"># vim /etc/security/limits.conf</span></span><br><span class="line"><span class="comment">#*                -       nofile             65535</span></span><br><span class="line"><span class="comment">#*                -       nproc              65535</span></span><br><span class="line">*               soft    nofile             65535</span><br><span class="line">*               hard    nofile             65535</span><br><span class="line">*               soft    nproc              65535</span><br><span class="line">*               hard    nproc              65535</span><br></pre></td></tr></table></figure>
<p>其中：<br>*：     代表所有的用户<br>nofile：代表open files<br>nproc： 代表max user processes<br>soft：  代表一个警告值，超过这个范围，会出现警告，但不会报错<br>hard：  代表一个真正意义的阀值，超过就会报错<br>-:      代表soft与hard</p>
<p>注意：<br>系统是先加载/etc/security/limits.conf中的配置，再加载/etc/security/limits.d/中的配置，后者会覆盖前者。<br>当用户为*时，受/etc/security/limits.d/中的配置限制，当指定具体的用户时，不受/etc/security/limits.d/中的限制。</p>
<p>当/etc/security/limits.conf中指定的用户为*时，需要修改/etc/security/limits.d/20-nproc.conf文件：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@zhaoxy ~]<span class="comment"># vim /etc/security/limits.d/20-nproc.conf</span></span><br><span class="line"><span class="comment">#*          soft    nproc     65535</span></span><br><span class="line">root       soft    nproc     unlimited</span><br></pre></td></tr></table></figure></p>
<h2 id="SYSTEMD-SERVICE配置调整"><a href="#SYSTEMD-SERVICE配置调整" class="headerlink" title="SYSTEMD SERVICE配置调整"></a>SYSTEMD SERVICE配置调整</h2><p>在CentOS 7/RHEL 7的系统中，使用Systemd替代了之前的SysV，因此/etc/security/limits.conf文件的配置作用域缩小了一些。limits.conf这里的配置，只适用于通过PAM认证登录用户的资源限制，它对systemd的service的资源限制不生效。登录用户的限制，通过/etc/security/limits.conf和limits.d来配置即可。</p>
<p>对于systemd service的资源限制，全局的配置，放在文件/etc/systemd/system.conf和/etc/systemd/user.conf。 同时，也会加载两个对应的目录中的所有.conf文件/etc/systemd/system.conf.d/<em>.conf和/etc/systemd/user.conf.d/</em>.conf<br>其中，system.conf是系统实例使用的，user.conf用户实例使用的。一般的sevice，使用system.conf中的配置即可。systemd.conf.d/*.conf中配置会覆盖system.conf。</p>
<p>可以添加默认参数，修改/etc/systemd/system.conf配置：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[Manager]</span><br><span class="line">DefaultLimitCORE=infinity</span><br><span class="line">DefaultLimitNOFILE=100000</span><br><span class="line">DefaultLimitNPROC=100000</span><br></pre></td></tr></table></figure></p>
<p>注意：修改了system.conf后，需要重启系统才会生效。</p>
<p>针对单个Service，也可以设置，以nginx为例。虽然我们修改了/etc/security/limits.conf与/etc/security/limits.d/20-nproc.conf文件，但通过systemctl启动的服务还是默认的参数：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@zhaoxy proc]<span class="comment"># cat /proc/3347/limits           </span></span><br><span class="line">Limit                     Soft Limit           Hard Limit           Units     </span><br><span class="line">...    </span><br><span class="line">Max processes             3870                 3870                 processes </span><br><span class="line">Max open files            1024                 4096                 files     </span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<p>我们需要编辑/usr/lib/systemd/system/nginx.service 文件，添加以下参数：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[Service]</span><br><span class="line">LimitCORE=infinity</span><br><span class="line">LimitNOFILE=100000</span><br><span class="line">LimitNPROC=100000</span><br></pre></td></tr></table></figure></p>
<p>然后重启：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart nginx.service</span><br></pre></td></tr></table></figure></p>
<p>再看看修改后的配置：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@zhaoxy proc]<span class="comment"># cat /proc/3347/limits           </span></span><br><span class="line">Limit                     Soft Limit           Hard Limit           Units     </span><br><span class="line">...    </span><br><span class="line">Max processes             100000               100000               processes </span><br><span class="line">Max open files            100000               100000               files    </span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<p>参考</p>
<blockquote>
<p><a href="http://www.cnblogs.com/MYSQLZOUQI/p/5054559.html" target="_blank" rel="noopener">http://www.cnblogs.com/MYSQLZOUQI/p/5054559.html</a><br><a href="http://smilejay.com/2016/06/centos-7-systemd-conf-limits" target="_blank" rel="noopener">http://smilejay.com/2016/06/centos-7-systemd-conf-limits</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Minikube安装与配置</title>
    <url>/2017/09/Minikube%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE.html</url>
    <content><![CDATA[<p>在容器编排工具中安装配置最复杂的就是Kubernetes，想要运行一个简单的容器集群环境，对于没有使用过Kubernetes的人来说，需要花费一定的时间去理解各组件的概念和功能，再做大量的安装配置工作才能运行一个kubernetes集群。</p>
<p>从Kubernetes1.3开始提供了一个叫Minikube的强大测试工具，可以在任意主机上运行单节点的小型集群，这个工具默认安装和配置了一个Linux VM，Docker和Kubernetes的相关组件，并且提供Dashboard。目前支持在Linux, OS X及Windows上安装，今天我们介绍的是在Windows上如何安装Minitube。</p>
<p>2020-12-10更新：Windows10下建议直接使用Docker-Desktop On WSL2，不要开启systemd。具体参考：<a href="http://blog.gcalls.cn/blog/2020/12/WSL.html">http://blog.gcalls.cn/blog/2020/12/WSL.html</a></p>
<a id="more"></a>
<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>以Windows为例，记录minikube的安装与使用。</p>
<p>Minitube项目地址：<a href="https://github.com/kubernetes/minikube" target="_blank" rel="noopener">https://github.com/kubernetes/minikube</a></p>
<p>Minikube要求在BIOS中开户了VT-x/AMD-v虚拟化。</p>
<p>Kubernetes版本： v1.19.4</p>
<h3 id="安装virtualbox"><a href="#安装virtualbox" class="headerlink" title="安装virtualbox"></a>安装virtualbox</h3><p>安装版本为VirtualBox 6.1.x</p>
<h3 id="安装choco"><a href="#安装choco" class="headerlink" title="安装choco"></a>安装choco</h3><p>在Linux世界中，安装一个软件不需要在浏览器中寻找软件的官网，然后将其下载下来，然后双击进行安装。只需要一条简单的命令，就可以完成搜索、安装、更新、卸载等所有操作。其实Windows下,也有这么一个包管理器，功能虽然不及Linux中那些包管理器强大，但是也让Windows下的软件安装方便了不少。这就是Chocolatey。</p>
<p>Chocolatey官网：<a href="https://chocolatey.org/" target="_blank" rel="noopener">https://chocolatey.org/</a></p>
<p>安装choco：</p>
<p>以管理员模式开启PowerShell：<br><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Set</span>-ExecutionPolicy Bypass -Scope Process -Force; [System.<span class="built_in">Net</span>.ServicePointManager]::SecurityProtocol = [System.<span class="built_in">Net</span>.ServicePointManager]::SecurityProtocol -bor <span class="number">3072</span>; iex ((New-Object System.<span class="built_in">Net</span>.WebClient).DownloadString('https://chocolatey.org/install.ps1'))</span><br><span class="line"></span><br><span class="line">setx ChocolateyInstall E:\Chocolatey /M</span><br></pre></td></tr></table></figure></p>
<p>可以测试是否能正常安装curl：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">C:\&gt;<span class="title">choco</span> <span class="title">install</span> <span class="title">curl</span> -<span class="title">y</span></span></span><br><span class="line"><span class="function">#测试：</span></span><br><span class="line"><span class="function"><span class="title">C</span>:\&gt;<span class="title">curl</span> <span class="title">baidu.com</span></span></span><br><span class="line"><span class="function">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line"><span class="function">&lt;<span class="title">meta</span> <span class="title">http</span>-<span class="title">equiv</span>="<span class="title">refresh</span>" <span class="title">content</span>="0;<span class="title">url</span>=<span class="title">http</span>://<span class="title">www.baidu.com</span>/"&gt;</span></span><br><span class="line"><span class="function">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="安装minikube"><a href="#安装minikube" class="headerlink" title="安装minikube"></a>安装minikube</h2><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><p>以管理员模式开启CMD：<br><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">C:\&gt;<span class="title">choco</span> <span class="title">install</span> <span class="title">minikube</span> -<span class="title">y</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\&gt;<span class="title">minikube</span> <span class="title">version</span></span></span><br><span class="line"><span class="function"><span class="title">minikube</span> <span class="title">version</span>: <span class="title">v1</span>.19.4</span></span><br></pre></td></tr></table></figure></p>
<p>如果安装速度慢的话，可以开启代理：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">SET</span> HTTP_PROXY=http://<span class="number">192</span>.<span class="number">168</span>.<span class="number">101</span>.<span class="number">175</span>:<span class="number">1082</span></span><br><span class="line"><span class="built_in">SET</span> HTTPS_PROXY=http://<span class="number">192</span>.<span class="number">168</span>.<span class="number">101</span>.<span class="number">175</span>:<span class="number">1082</span></span><br></pre></td></tr></table></figure>
<h3 id="MacOS"><a href="#MacOS" class="headerlink" title="MacOS"></a>MacOS</h3><p>下载对应的文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-darwin-amd64 &amp;&amp; chmod +x minikube &amp;&amp; sudo mv minikube /usr/<span class="built_in">local</span>/bin/</span><br><span class="line"></span><br><span class="line">curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.19.4/bin/darwin/amd64/kubectl &amp;&amp; chmod +x kubectl &amp;&amp; sudo mv kubectl /usr/<span class="built_in">local</span>/bin/</span><br></pre></td></tr></table></figure>
<h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><p>推荐使用microk8s安装，参考：<a href="http://blog.gcalls.cn/blog/2020/12/Kubernetes-Development-Environment.html#microk8s">http://blog.gcalls.cn/blog/2020/12/Kubernetes-Development-Environment.html#microk8s</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install bash-completion -y </span><br><span class="line">~/.bash_profile</span><br><span class="line"><span class="built_in">alias</span> k=kubectl</span><br><span class="line"><span class="built_in">source</span> &lt;(kubectl completion bash | sed s/kubectl/k/g)</span><br><span class="line"><span class="built_in">source</span> /usr/share/bash-completion/bash_completion</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cul -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 &amp;&amp; chmod +x minikube &amp;&amp; sudo mv minikube /usr/<span class="built_in">local</span>/bin/</span><br><span class="line"></span><br><span class="line">curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.19.4/bin/linux/amd64/kubectl</span><br><span class="line">chmod +x kubectl &amp;&amp; sudo mv kubectl /usr/<span class="built_in">local</span>/bin/</span><br><span class="line"><span class="comment">#启动</span></span><br><span class="line"><span class="comment">#使用driver=none时，不需要安装VirtualBox，但需要安装docker</span></span><br><span class="line">sudo minikube start --driver=none</span><br><span class="line"></span><br><span class="line"><span class="comment">#Base on VirtualBox:</span></span><br><span class="line">yum localinstall VirtualBox-6.1-6.1.16_140961_el7-1.x86_64.rpm</span><br><span class="line">yum localinstall kernel-devel-3.10.0-957.el7.x86_64.rpm </span><br><span class="line">rcvboxdrv setup</span><br><span class="line">su - dev</span><br><span class="line"><span class="comment">#Starting minikube</span></span><br><span class="line"><span class="comment">#https://minikube.sigs.k8s.io/docs/handbook/vpn_and_proxy/</span></span><br><span class="line"><span class="built_in">export</span> http_proxy=<span class="string">"http://192.168.101.175:1082"</span></span><br><span class="line"><span class="built_in">export</span> https_proxy=<span class="variable">$http_proxy</span></span><br><span class="line"><span class="built_in">export</span> no_proxy=<span class="string">"127.0.0.1,localhost,10.0.0.0/8,172.0.0.0/8,192.168.0.0/16,*.zerofinance.net,*.aliyun.com,*.163.com,*.docker-cn.com,registry.gcalls.cn"</span></span><br><span class="line">minikube start --memory=8192 --cpus=4 --kubernetes-version=v1.19.4</span><br></pre></td></tr></table></figure>
<h2 id="WSL"><a href="#WSL" class="headerlink" title="WSL"></a>WSL</h2><p>参考：<a href="http://blog.gcalls.cn/blog/2020/12/WSL.html#配置WSL为独立的系统">http://blog.gcalls.cn/blog/2020/12/WSL.html</a></p>
<p>安装docker，参考：<a href="http://blog.gcalls.cn/blog/2018/12/ubuntu-os.html#Docker">http://blog.gcalls.cn/blog/2018/12/ubuntu-os.html#Docker</a></p>
<p>minikube安装：</p>
<p>参考：<a href="https://kubernetes.io/blog/2020/05/21/wsl-docker-kubernetes-on-the-windows-desktop/#minikube-kubernetes-from-everywhere" target="_blank" rel="noopener">https://kubernetes.io/blog/2020/05/21/wsl-docker-kubernetes-on-the-windows-desktop/#minikube-kubernetes-from-everywhere</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Download the latest version of Minikube</span></span><br><span class="line">curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64</span><br><span class="line">chmod +x ./minikube &amp;&amp; sudo mv minikube /usr/<span class="built_in">local</span>/bin/</span><br><span class="line">curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.19.4/bin/linux/amd64/kubectl</span><br><span class="line">chmod +x kubectl &amp;&amp; sudo mv kubectl /usr/<span class="built_in">local</span>/bin/</span><br><span class="line"></span><br><span class="line"><span class="comment"># Check if the KUBECONFIG is not set</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$KUBECONFIG</span></span><br><span class="line"><span class="comment"># Check if the .kube directory is created &gt; if not, no need to create it</span></span><br><span class="line">ls <span class="variable">$HOME</span>/.kube</span><br><span class="line"><span class="comment"># Check if the .minikube directory is created &gt; if yes, delete it</span></span><br><span class="line">ls <span class="variable">$HOME</span>/.minikube</span><br><span class="line"><span class="comment"># Create the cluster with sudo</span></span><br><span class="line">sudo sysctl fs.protected_regular=0</span><br><span class="line"><span class="built_in">export</span> http_proxy=<span class="string">"http://192.168.101.175:1082"</span></span><br><span class="line"><span class="built_in">export</span> https_proxy=<span class="variable">$http_proxy</span></span><br><span class="line"><span class="built_in">export</span> no_proxy=<span class="string">"127.0.0.1,localhost,10.0.0.0/8,172.0.0.0/8,192.168.0.0/16,*.zerofinance.net,*.aliyun.com,*.163.com,*.docker-cn.com,registry.gcalls.cn"</span></span><br><span class="line">sudo minikube start --driver=none</span><br><span class="line"><span class="comment">#每次执行以上命令均需要执行以下命令才行（root账户下不需要），否则会报以下错误：</span></span><br><span class="line"><span class="comment">#Unable to connect to the server: dial tcp 172.21.114.172:8443: connect: no route to host</span></span><br><span class="line">sudo cp -a /root/.kube /root/.minikube <span class="variable">$HOME</span></span><br><span class="line">sudo chown -R <span class="variable">$USER</span> <span class="variable">$HOME</span>/.kube <span class="variable">$HOME</span>/.minikube</span><br><span class="line"><span class="comment">#需要修改以上的$HOME/.kube/config中的/root为当前用户目录</span></span><br><span class="line">sed -i <span class="string">'s;/root/;/home/dave/;g'</span> ~/.kube/config</span><br><span class="line"><span class="comment">#minikube start --driver=docker</span></span><br></pre></td></tr></table></figure>
<h2 id="minikube常用命令"><a href="#minikube常用命令" class="headerlink" title="minikube常用命令"></a>minikube常用命令</h2><p>启动minikube：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">export http_proxy="http://<span class="number">192</span>.<span class="number">168</span>.<span class="number">101</span>.<span class="number">175</span>:<span class="number">1082</span>"</span><br><span class="line">export https_proxy=$http_proxy</span><br><span class="line">export no_proxy="<span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>,localhost,<span class="number">10</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>/<span class="number">8</span>,<span class="number">172</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>/<span class="number">8</span>,<span class="number">192</span>.<span class="number">168</span>.<span class="number">0</span>.<span class="number">0</span>/<span class="number">16</span>,*.zerofinance.<span class="built_in">net</span>"</span><br><span class="line"><span class="function">C:\&gt;<span class="title">minikube</span> <span class="title">start</span> --<span class="title">memory</span>=8192 --<span class="title">cpus</span>=4 --<span class="title">kubernetes</span>-<span class="title">version</span>=<span class="title">v1</span>.19.4</span></span><br><span class="line"><span class="function"><span class="title">Starting</span> <span class="title">local</span> <span class="title">Kubernetes</span> <span class="title">v1</span>.7.5 <span class="title">cluster</span>...</span></span><br><span class="line"><span class="function"><span class="title">Starting</span> <span class="title">VM</span>...</span></span><br><span class="line"><span class="function"><span class="title">Getting</span> <span class="title">VM</span> <span class="title">IP</span> <span class="title">address</span>...</span></span><br><span class="line"><span class="function"><span class="title">Moving</span> <span class="title">files</span> <span class="title">into</span> <span class="title">cluster</span>...</span></span><br><span class="line"><span class="function"><span class="title">Setting</span> <span class="title">up</span> <span class="title">certs</span>...</span></span><br><span class="line"><span class="function"><span class="title">Connecting</span> <span class="title">to</span> <span class="title">cluster</span>...</span></span><br><span class="line"><span class="function"><span class="title">Setting</span> <span class="title">up</span> <span class="title">kubeconfig</span>...</span></span><br><span class="line"><span class="function"><span class="title">Starting</span> <span class="title">cluster</span> <span class="title">components</span>...</span></span><br><span class="line"><span class="function"><span class="title">Kubectl</span> <span class="title">is</span> <span class="title">now</span> <span class="title">configured</span> <span class="title">to</span> <span class="title">use</span> <span class="title">the</span> <span class="title">cluster</span>.</span></span><br></pre></td></tr></table></figure>
<p>如果是Hyper-V的话：</p>
<p>最新：新版本的minikube不再需要执行以下操作。以下只作备份记录而也。</p>
<p>注意：需要先创建外部网络，具体请参考<a href="https://docs.microsoft.com/en-us/windows-server/virtualization/hyper-v/get-started/create-a-virtual-switch-for-hyper-v-virtual-machines" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/windows-server/virtualization/hyper-v/get-started/create-a-virtual-switch-for-hyper-v-virtual-machines</a></p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">minikube.exe <span class="built_in">start</span> --cpus <span class="number">2</span> --memory <span class="number">2048</span> --vm-driver="hyperv" --hyperv-virtual-switch="OuterNetwork" --docker-env HTTP_PROXY=http://<span class="number">192</span>.<span class="number">168</span>.<span class="number">10</span>.<span class="number">1</span>:<span class="number">1080</span> --docker-env HTTPS_PROXY=http://<span class="number">192</span>.<span class="number">168</span>.<span class="number">10</span>.<span class="number">1</span>:<span class="number">1080</span></span><br><span class="line">minikube <span class="built_in">start</span> --driver=none --docker-env HTTP_PROXY=http://<span class="number">192</span>.<span class="number">168</span>.<span class="number">101</span>.<span class="number">175</span>:<span class="number">1082</span> --docker-env HTTPS_PROXY=http://<span class="number">192</span>.<span class="number">168</span>.<span class="number">101</span>.<span class="number">175</span>:<span class="number">1082</span></span><br></pre></td></tr></table></figure>
<p>注意：要加上代理，否则下载不了grc.io中的镜像。</p>
<p>停止minikube：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">C:\&gt;<span class="title">minikube</span> <span class="title">stop</span></span></span><br></pre></td></tr></table></figure>
<p>删除minikube：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">C:\&gt;<span class="title">minikube</span> <span class="title">delete</span></span></span><br></pre></td></tr></table></figure>
<p>测试minikube：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">C:\&gt;<span class="title">kubectl</span> <span class="title">get</span> <span class="title">no</span></span></span><br><span class="line"><span class="function"><span class="title">NAME</span>       <span class="title">STATUS</span>    <span class="title">AGE</span>       <span class="title">VERSION</span></span></span><br><span class="line"><span class="function"><span class="title">minikube</span>   <span class="title">Ready</span>     2<span class="title">h</span>        <span class="title">v1</span>.19.4</span></span><br></pre></td></tr></table></figure>
<p>登录minikube虚拟机：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">C:\&gt;<span class="title">minikube</span> <span class="title">ssh</span></span></span><br></pre></td></tr></table></figure>
<p>查看状态：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">C:\&gt;<span class="title">minikube</span> <span class="title">status</span></span></span><br><span class="line"><span class="function"><span class="title">minikube</span>: <span class="title">Running</span></span></span><br><span class="line"><span class="function"><span class="title">cluster</span>: <span class="title">Running</span></span></span><br><span class="line"><span class="function"><span class="title">kubectl</span>: <span class="title">Correctly</span> <span class="title">Configured</span>: <span class="title">pointing</span> <span class="title">to</span> <span class="title">minikube</span>-<span class="title">vm</span> <span class="title">at</span> 192.168.99.100</span></span><br></pre></td></tr></table></figure>
<h2 id="安装一个程序"><a href="#安装一个程序" class="headerlink" title="安装一个程序"></a>安装一个程序</h2><p>参考<a href="https://kubernetes.io/zh/docs/setup/learning-environment/minikube/" target="_blank" rel="noopener">https://kubernetes.io/zh/docs/setup/learning-environment/minikube/</a></p>
<h2 id="Dashboard"><a href="#Dashboard" class="headerlink" title="Dashboard"></a>Dashboard</h2><p>Minikube自带了Kubernetes Dashboard。要浏览这个界面，可以使用内置的minikube dashboard命令：<br><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">C:\&gt; <span class="title">minikube</span> <span class="title">dashboard</span></span></span><br><span class="line"><span class="function"><span class="title">Opening</span> <span class="title">kubernetes</span> <span class="title">dashboard</span> <span class="title">in</span> <span class="title">default</span> <span class="title">browser</span>...</span></span><br></pre></td></tr></table></figure></p>
<p><img src="/images/Minikube安装与配置/dashboard.png" alt="dashboard"></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://github.com/kubernetes/minikube" target="_blank" rel="noopener">https://github.com/kubernetes/minikube</a><br><a href="https://kubernetes.io/docs/getting-started-guides/minikube/" target="_blank" rel="noopener">https://kubernetes.io/docs/getting-started-guides/minikube/</a><br><a href="https://kubernetes.io/zh/docs/setup/learning-environment/minikube/" target="_blank" rel="noopener">https://kubernetes.io/zh/docs/setup/learning-environment/minikube/</a></p>
]]></content>
      <categories>
        <category>kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubeadm集群搭建</title>
    <url>/2017/09/Kubeadm%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA.html</url>
    <content><![CDATA[<p>传统的集群安装方式还是比如麻烦，比如说添加新的node节点，需要安装kubelet/proxy，还要配置。kubeadm旨在简化这些繁琐的操作。</p>
<a id="more"></a>
<h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>docker版本为：1.12.6<br>kubeadm版本为：v1.7.5</p>
<table>
<thead>
<tr>
<th>主机IP</th>
<th>主机名称</th>
<th>内存</th>
</tr>
</thead>
<tbody>
<tr>
<td>192.168.10.6</td>
<td>k8s-master</td>
<td>1024m</td>
</tr>
<tr>
<td>192.168.10.7</td>
<td>k8s-node1</td>
<td>1024m</td>
</tr>
<tr>
<td>192.168.10.8</td>
<td>k8s-node2</td>
<td>1024m</td>
</tr>
</tbody>
</table>
<p>系统优化<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">'s;SELINUX=.*;SELINUX=disabled;'</span> /etc/selinux/config</span><br><span class="line">setenforce 0</span><br><span class="line">getenforce</span><br><span class="line"></span><br><span class="line"><span class="comment">#LANG="en_US.UTF-8"</span></span><br><span class="line">sed -i <span class="string">'s;LANG=.*;LANG="zh_CN.UTF-8";'</span> /etc/locale.conf</span><br><span class="line"></span><br><span class="line">cat /etc/NetworkManager/NetworkManager.conf|grep <span class="string">"dns=none"</span> &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"dns=none"</span> &gt;&gt; /etc/NetworkManager/NetworkManager.conf</span><br><span class="line">  systemctl restart NetworkManager.service</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">disable</span> iptables</span><br><span class="line">systemctl stop iptables</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br><span class="line">systemctl stop firewalld</span><br><span class="line"></span><br><span class="line"><span class="comment">#ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span></span><br><span class="line">timedatectl <span class="built_in">set</span>-timezone Asia/Shanghai</span><br><span class="line"></span><br><span class="line"><span class="comment">#logined limit</span></span><br><span class="line">cat /etc/security/limits.conf|grep 100000 &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">cat &gt;&gt; /etc/security/limits.conf  &lt;&lt; EOF</span><br><span class="line">*               -    nofile             100000</span><br><span class="line">*               -    nproc              100000</span><br><span class="line">EOF</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">sed -i <span class="string">'s;4096;100000;g'</span> /etc/security/limits.d/20-nproc.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#systemd service limit</span></span><br><span class="line">cat /etc/systemd/system.conf|egrep <span class="string">'^DefaultLimitCORE'</span> &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">cat &gt;&gt; /etc/systemd/system.conf &lt;&lt; EOF</span><br><span class="line">DefaultLimitCORE=infinity</span><br><span class="line">DefaultLimitNOFILE=100000</span><br><span class="line">DefaultLimitNPROC=100000</span><br><span class="line">EOF</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">cat /etc/sysctl.conf|grep <span class="string">"net.ipv4.ip_local_port_range"</span> &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">cat &gt;&gt; /etc/sysctl.conf  &lt;&lt; EOF</span><br><span class="line">net.ipv4.tcp_fin_timeout = 30</span><br><span class="line">net.ipv4.tcp_keepalive_time = 300</span><br><span class="line">net.ipv4.tcp_tw_reuse = 1</span><br><span class="line">net.ipv4.tcp_tw_recycle = 1</span><br><span class="line">net.ipv4.ip_local_port_range = 1024 65535</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">EOF</span><br><span class="line">sysctl -p</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">su - root -c <span class="string">"ulimit -a"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 同步时间</span></span><br><span class="line">yum -y install ntp</span><br><span class="line">systemctl start ntpd</span><br><span class="line">systemctl <span class="built_in">enable</span> ntpd</span><br></pre></td></tr></table></figure></p>
<p>修改主机名<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#192.168.10.6</span></span><br><span class="line">hostnamectl --static <span class="built_in">set</span>-hostname k8s-master</span><br><span class="line">sysctl kernel.hostname=k8s-master</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'192.168.10.6 k8s-master</span></span><br><span class="line"><span class="string">192.168.10.7 k8s-node1</span></span><br><span class="line"><span class="string">192.168.10.8 k8s-node2'</span> &gt;&gt; /etc/hosts</span><br><span class="line"></span><br><span class="line"><span class="comment">#192.168.10.7</span></span><br><span class="line">hostnamectl --static <span class="built_in">set</span>-hostname k8s-node1</span><br><span class="line">sysctl kernel.hostname=k8s-node1</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'192.168.10.6 k8s-master</span></span><br><span class="line"><span class="string">192.168.10.7 k8s-node1</span></span><br><span class="line"><span class="string">192.168.10.8 k8s-node2'</span> &gt;&gt; /etc/hosts</span><br><span class="line"></span><br><span class="line"><span class="comment">#192.168.10.8</span></span><br><span class="line">hostnamectl --static <span class="built_in">set</span>-hostname k8s-node2</span><br><span class="line">sysctl kernel.hostname=k8s-node2</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'192.168.10.6 k8s-master</span></span><br><span class="line"><span class="string">192.168.10.7 k8s-node1</span></span><br><span class="line"><span class="string">192.168.10.8 k8s-node2'</span> &gt;&gt; /etc/hosts</span><br></pre></td></tr></table></figure></p>
<p>修改系统参数<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat &gt;&gt; /etc/sysctl.d/k8s.conf  &lt;&lt; EOF</span><br><span class="line"><span class="comment">#k8s</span></span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">sysctl -p /etc/sysctl.d/k8s.conf</span><br></pre></td></tr></table></figure></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="yum安装"><a href="#yum安装" class="headerlink" title="yum安装"></a>yum安装</h3><p>每台添加yum源：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># docker repo</span></span><br><span class="line">tee /etc/yum.repos.d/docker.repo &lt;&lt;-<span class="string">'EOF'</span></span><br><span class="line">[docker-repo]</span><br><span class="line">name=Docker Repository</span><br><span class="line">baseurl=https://mirrors.aliyun.com/docker-engine/yum/repo/main/centos/7/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/docker-engine/yum/gpg</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># k8s repo</span></span><br><span class="line">tee /etc/yum.repos.d/kubernetes.repo &lt;&lt;EOF</span><br><span class="line">[kubernetes-repo]</span><br><span class="line">name=Kubernetes Repository</span><br><span class="line">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></p>
<p>yum安装：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y docker-engine-1.12.6-1.el7.centos.x86_64</span><br><span class="line"><span class="comment">#yum install -y kubelet kubectl kubernetes-cni kubeadm</span></span><br><span class="line">yum install -y kubernetes-cni-0.5.1-0.x86_64 kubelet-1.7.5-0.x86_64 kubectl-1.7.5-0.x86_64 kubeadm-1.7.5-0.x86_64</span><br><span class="line">systemctl <span class="built_in">enable</span> kubelet</span><br></pre></td></tr></table></figure></p>
<p>二进制安装：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://dl.k8s.io/v1.7.5/kubernetes-server-linux-amd64.tar.gz</span><br></pre></td></tr></table></figure></p>
<h2 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h2><h3 id="镜像列表"><a href="#镜像列表" class="headerlink" title="镜像列表"></a>镜像列表</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker pull gcr.io/google_containers/kube-proxy-amd64:v1.7.5</span><br><span class="line">docker pull gcr.io/google_containers/kube-apiserver-amd64:v1.7.5</span><br><span class="line">docker pull gcr.io/google_containers/kube-controller-manager-amd64:v1.7.5</span><br><span class="line">docker pull gcr.io/google_containers/kube-scheduler-amd64:v1.7.5</span><br><span class="line">docker pull gcr.io/google_containers/etcd-amd64:3.0.17</span><br><span class="line">docker pull gcr.io/google_containers/k8s-dns-sidecar-amd64:1.14.1</span><br><span class="line">docker pull gcr.io/google_containers/k8s-dns-kube-dns-amd64:1.14.1</span><br><span class="line">docker pull gcr.io/google_containers/k8s-dns-dnsmasq-nanny-amd64:1.14.1</span><br><span class="line">docker pull gcr.io/google_containers/pause-amd64:3.0</span><br></pre></td></tr></table></figure>
<p>注意：以上镜像在创建时会自动下载，无需手动下载。以上镜像需要先翻墙才行。</p>
<h2 id="master初始化"><a href="#master初始化" class="headerlink" title="master初始化"></a>master初始化</h2><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>统一docker与kubernetes的driver：<br>可以直接执行以下命令修改：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">'s;systemd;cgroupfs;g'</span> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf</span><br></pre></td></tr></table></figure></p>
<p>保存配置, 重启：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart kubelet</span><br></pre></td></tr></table></figure></p>
<p>kubeadmn创建的etcd为单节点，不建议使用。建议使用外部的etcd集群。具体安装请参考<a href="etcd集群安装.html">etcd集群安装</a><br>v1.6.x版本后，–external-etcd-endpoints参数已不能使用。所以要使用–config参数外挂配置文件kubeadm-config.yml：<br><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubeadm.k8s.io/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">MasterConfiguration</span></span><br><span class="line"><span class="attr">api:</span></span><br><span class="line">  <span class="attr">advertiseAddress:</span> <span class="number">192.168</span><span class="number">.10</span><span class="number">.6</span></span><br><span class="line"><span class="attr">networking:</span></span><br><span class="line">  <span class="comment">#dnsDomain: myk8s.com</span></span><br><span class="line">  <span class="attr">podSubnet:</span> <span class="number">10.244</span><span class="number">.0</span><span class="number">.0</span><span class="string">/16</span></span><br><span class="line"><span class="attr">etcd:</span></span><br><span class="line">  <span class="attr">endpoints:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">http://192.168.10.6:2379</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">http://192.168.10.7:2379</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">http://192.168.10.8:2379</span></span><br><span class="line"><span class="attr">kubernetesVersion:</span> <span class="string">v1.7.5</span></span><br></pre></td></tr></table></figure></p>
<p>具体请参考：<a href="/files/Kubeadm集群搭建/config.zip">kubeadm-config.yml</a><br>注意：最好不要修改dnsDomain，不然会有一些奇怪的问题。</p>
<p>初始化<br>在master上执行：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubeadm init --config kubeadm-config.yml</span><br></pre></td></tr></table></figure></p>
<p>另外一种初始化方式<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#export KUBE_COMPONENT_LOGLEVEL='--v=0'</span></span><br><span class="line">kubeadm init --kubernetes-version=v1.7.5 --apiserver-advertise-address=192.168.10.6</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果是使用flannel网络的话，要加上--pod-network-cidr 10.244.0.0/16</span></span><br><span class="line">kubeadm init --kubernetes-version=v1.7.5 --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address=192.168.10.6</span><br></pre></td></tr></table></figure></p>
<h3 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h3><h4 id="初始化时-会发现卡死不动-可以通过系统日志查看错误"><a href="#初始化时-会发现卡死不动-可以通过系统日志查看错误" class="headerlink" title="初始化时, 会发现卡死不动, 可以通过系统日志查看错误"></a>初始化时, 会发现卡死不动, 可以通过系统日志查看错误</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">journalctl -f -u kubelet.server</span><br><span class="line"><span class="comment"># tail -n100 -f /var/log/messages</span></span><br><span class="line"></span><br><span class="line">failed to create kubelet: misconfiguration: kubelet cgroup driver: <span class="string">"cgroupfs"</span> is different from docker cgroup driver: <span class="string">"systemd"</span></span><br></pre></td></tr></table></figure>
<p>这个是K8S v1.6.x的一个变化, 文件驱动与docker使用的文件驱动不一致, 导致镜像无法启动。<br>此处可以修改kubelet的文件驱动，请参考<a href="http://www.jianshu.com/p/02dc13d2f651" target="_blank" rel="noopener">http://www.jianshu.com/p/02dc13d2f651</a><br>先确认docker的Cgroup Driver：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-node1 ~]<span class="comment"># docker info</span></span><br><span class="line">......</span><br><span class="line">Cgroup Driver: cgroupfs</span><br></pre></td></tr></table></figure></p>
<p>需要将kubeadm.conf的systemd修改为cgroupfs。注意: 每台都要修改：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 进入kubelet启动配置文件</span></span><br><span class="line">vim /etc/systemd/system/kubelet.service.d/10-kubeadm.conf</span><br></pre></td></tr></table></figure>
<p>将<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Environment=<span class="string">"KUBELET_CGROUP_ARGS=--cgroup-driver=systemd"</span></span><br></pre></td></tr></table></figure></p>
<p>替换为：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Environment=<span class="string">"KUBELET_CGROUP_ARGS=--cgroup-driver=cgroupfs"</span></span><br></pre></td></tr></table></figure></p>
<p>可以直接执行以下命令修改：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">'s;systemd;cgroupfs;g'</span> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf</span><br></pre></td></tr></table></figure></p>
<p>保存配置, 重启：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart kubelet</span><br></pre></td></tr></table></figure></p>
<p>然后再重新初始化<br>在master上执行：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubeadm reset</span><br><span class="line"><span class="comment">#kubeadm init --kubernetes-version=v1.7.5 --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address=192.168.10.6</span></span><br><span class="line">kubeadm init --config kubeadm-config.yml</span><br></pre></td></tr></table></figure></p>
<h4 id="kubeadm-init时出现"><a href="#kubeadm-init时出现" class="headerlink" title="kubeadm init时出现"></a>kubeadm init时出现</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[apiclient] Temporarily unable to list nodes (will retry)</span><br><span class="line">[apiclient] Temporarily unable to list nodes (will retry)</span><br><span class="line">[apiclient] Temporarily unable to list nodes (will retry)</span><br></pre></td></tr></table></figure>
<p>应该是dns server把localhost解析到其他地址去了。可以通过nslookup 命令验证：<br>[root@master ~]# nslookup localhost<br>修改的/etc/resolv.conf中的search内容后问题解决。</p>
<h4 id="configmaps-“cluster-info”-already-exists"><a href="#configmaps-“cluster-info”-already-exists" class="headerlink" title="configmaps “cluster-info” already exists"></a>configmaps “cluster-info” already exists</h4><p>需要清理etcd数据：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop etcd</span><br><span class="line">rm -fr /var/lib/etcd/etcd/*</span><br><span class="line">systemctl restart etcd</span><br></pre></td></tr></table></figure></p>
<p>正常情况下，应该能显示以下的日志：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubeadm init --kubernetes-version=v1.7.5 --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address=192.168.10.6</span><br><span class="line">[kubeadm] WARNING: kubeadm is <span class="keyword">in</span> beta, please <span class="keyword">do</span> not use it <span class="keyword">for</span> production clusters.</span><br><span class="line">[init] Using Kubernetes version: v1.7.5</span><br><span class="line">[init] Using Authorization mode: RBAC</span><br><span class="line">[preflight] Running pre-flight checks</span><br><span class="line">[preflight] WARNING: kubelet service is not enabled, please run <span class="string">'systemctl enable kubelet.service'</span></span><br><span class="line">[preflight] Starting the kubelet service</span><br><span class="line">[certificates] Generated CA certificate and key.</span><br><span class="line">[certificates] Generated API server certificate and key.</span><br><span class="line">[certificates] API Server serving cert is signed <span class="keyword">for</span> DNS names [k8s-master kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 192.168.10.6]</span><br><span class="line">[certificates] Generated API server kubelet client certificate and key.</span><br><span class="line">[certificates] Generated service account token signing key and public key.</span><br><span class="line">[certificates] Generated front-proxy CA certificate and key.</span><br><span class="line">[certificates] Generated front-proxy client certificate and key.</span><br><span class="line">[certificates] Valid certificates and keys now exist <span class="keyword">in</span> <span class="string">"/etc/kubernetes/pki"</span></span><br><span class="line">[kubeconfig] Wrote KubeConfig file to disk: <span class="string">"/etc/kubernetes/controller-manager.conf"</span></span><br><span class="line">[kubeconfig] Wrote KubeConfig file to disk: <span class="string">"/etc/kubernetes/scheduler.conf"</span></span><br><span class="line">[kubeconfig] Wrote KubeConfig file to disk: <span class="string">"/etc/kubernetes/admin.conf"</span></span><br><span class="line">[kubeconfig] Wrote KubeConfig file to disk: <span class="string">"/etc/kubernetes/kubelet.conf"</span></span><br><span class="line">[apiclient] Created API client, waiting <span class="keyword">for</span> the control plane to become ready</span><br><span class="line">[apiclient] All control plane components are healthy after 126.837475 seconds</span><br><span class="line">[apiclient] Waiting <span class="keyword">for</span> at least one node to register</span><br><span class="line">[apiclient] First node has registered after 6.516528 seconds</span><br><span class="line">[token] Using token: 67a477.959aa53030fd8444</span><br><span class="line">[apiconfig] Created RBAC rules</span><br><span class="line">[addons] Created essential addon: kube-proxy</span><br><span class="line">[addons] Created essential addon: kube-dns</span><br><span class="line"></span><br><span class="line">Your Kubernetes master has initialized successfully!</span><br><span class="line"></span><br><span class="line">To start using your cluster, you need to run (as a regular user):</span><br><span class="line"></span><br><span class="line">  sudo cp /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/</span><br><span class="line">  sudo chown $(id -u):$(id -g) <span class="variable">$HOME</span>/admin.conf</span><br><span class="line">  <span class="built_in">export</span> KUBECONFIG=<span class="variable">$HOME</span>/admin.conf</span><br><span class="line"></span><br><span class="line">You should now deploy a pod network to the cluster.</span><br><span class="line">Run <span class="string">"kubectl apply -f [podnetwork].yaml"</span> with one of the options listed at:</span><br><span class="line">  http://kubernetes.io/docs/admin/addons/</span><br><span class="line"></span><br><span class="line">You can now join any number of machines by running the following on each node</span><br><span class="line">as root:</span><br><span class="line"></span><br><span class="line">  kubeadm join --token 67a477.959aa53030fd8444 192.168.10.6:6443</span><br></pre></td></tr></table></figure></p>
<p>之前的版本, 当我们初始化成功之后, 会发现token不会保留, 如果一旦没有记录下来, 其他节点就没法加入了, 这里添加了kubeadm token命令<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubeadm token list</span><br><span class="line">TOKEN                     TTL         EXPIRES   USAGES                   DESCRIPTION</span><br><span class="line">67a477.959aa53030fd8444   &lt;forever&gt;   &lt;never&gt;   authentication,signing   The default bootstrap token generated by <span class="string">'kubeadm init'</span>.</span><br></pre></td></tr></table></figure></p>
<p>默认情况下, master节点是不会调度pod, 也就是说, 只有一台主机的情况下, 我们无法启动pod, 但有的时候我们的确只有一台机器, 这个时候可以执行命令, 允许master调度pod(这个命令和1.5.x版本不一样)<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl taint nodes --all node-role.kubernetes.io/master-</span><br></pre></td></tr></table></figure></p>
<h3 id="查询node情况"><a href="#查询node情况" class="headerlink" title="查询node情况"></a>查询node情况</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl --kubeconfig=/etc/kubernetes/admin.conf get nodes</span><br></pre></td></tr></table></figure>
<h3 id="kubectl-命令"><a href="#kubectl-命令" class="headerlink" title="kubectl 命令"></a>kubectl 命令</h3><p>这个命令是我们经常使用的, 几乎所有的k8s相关操作都需要, 但当我们集群安装好后, 发现这个命令会报错。<br>最直接的方法是带上参数 –kubeconfig<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kubectl --kubeconfig=/etc/kubernetes/admin.conf get nodes</span><br></pre></td></tr></table></figure></p>
<p>注意：<br>只有master中才有admin.conf文件，另外node上只有kubelet.conf。所以只能在master进行logs/exec等命令。<br>可以将admin.conf拷贝到其他node机器中：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scp /etc/kubernetes/admin.conf root@192.168.10.7:/etc/kubernetes/</span><br><span class="line">scp /etc/kubernetes/admin.conf root@192.168.10.8:/etc/kubernetes/</span><br></pre></td></tr></table></figure></p>
<p>如果不想每次都带上参数, 可以配置环境变量<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加</span></span><br><span class="line">tee &gt;&gt; ~/.bash_profile &lt;&lt; EOF</span><br><span class="line"><span class="built_in">export</span> KUBECONFIG=/etc/kubernetes/admin.conf</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></p>
<p>执行<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure></p>
<p>这样就可以不用带–kubeconfig参数了<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get nodes</span><br></pre></td></tr></table></figure></p>
<h2 id="node加入"><a href="#node加入" class="headerlink" title="node加入"></a>node加入</h2><h3 id="加入node到集群中"><a href="#加入node到集群中" class="headerlink" title="加入node到集群中"></a>加入node到集群中</h3><p>请记得init后的join命令(类似于下面，但token不一样)，其他的node要加入集群的话，必须用下面的命令：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kubeadm join --token 67a477.959aa53030fd8444 192.168.10.6:6443</span><br><span class="line"></span><br><span class="line">[kubeadm] WARNING: kubeadm is in beta, please do not use it for production clusters.</span><br><span class="line">[preflight] Running pre-flight checks</span><br><span class="line">[preflight] WARNING: kubelet service is not enabled, please run &apos;systemctl enable kubelet.service&apos;</span><br><span class="line">[preflight] Starting the kubelet service</span><br><span class="line">[discovery] Trying to connect to API Server &quot;192.168.10.6:6443&quot;</span><br><span class="line">[discovery] Created cluster-info discovery client, requesting info from &quot;https://192.168.10.6:6443&quot;</span><br><span class="line">[discovery] Cluster info signature and contents are valid, will use API Server &quot;https://192.168.10.6:6443&quot;</span><br><span class="line">[discovery] Successfully established connection with API Server &quot;192.168.10.6:6443&quot;</span><br><span class="line">[bootstrap] Detected server version: v1.7.5</span><br><span class="line">[bootstrap] The server supports the Certificates API (certificates.k8s.io/v1beta1)</span><br><span class="line">[csr] Created API client to obtain unique certificate for this node, generating keys and certificate signing request</span><br><span class="line">[csr] Received signed certificate from the API server, generating KubeConfig...</span><br><span class="line">[kubeconfig] Wrote KubeConfig file to disk: &quot;/etc/kubernetes/kubelet.conf&quot;</span><br><span class="line"></span><br><span class="line">Node join complete:</span><br><span class="line">* Certificate signing request sent to master and response</span><br><span class="line">  received.</span><br><span class="line">* Kubelet informed of new secure connection details.</span><br><span class="line"></span><br><span class="line">Run &apos;kubectl get nodes&apos; on the master to see this machine join.</span><br></pre></td></tr></table></figure></p>
<p>查看node信息<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> kubectl get no</span><br><span class="line">NAME         STATUS     AGE       VERSION</span><br><span class="line">k8s-master   NotReady   39m       v1.7.5</span><br><span class="line">k8s-node1    NotReady   32s       v1.7.5</span><br><span class="line">k8s-node2    NotReady   53s       v1.7.5</span><br></pre></td></tr></table></figure></p>
<h3 id="异常处理-1"><a href="#异常处理-1" class="headerlink" title="异常处理"></a>异常处理</h3><h4 id="node加入后，STATUS状态为：NotReady"><a href="#node加入后，STATUS状态为：NotReady" class="headerlink" title="node加入后，STATUS状态为：NotReady"></a>node加入后，STATUS状态为：NotReady</h4><p>查看kubelet日志：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl status -l kubelet</span><br><span class="line">kubeadm network plugin is not ready: cni config uninitialized</span><br></pre></td></tr></table></figure></p>
<p>如果采用了非cni方式部署flannel网络，需要去掉cni网络参数，参考<a href="https://github.com/kubernetes/kubernetes/issues/43815" target="_blank" rel="noopener">https://github.com/kubernetes/kubernetes/issues/43815</a>:</p>
<p>you need to edit /etc/systemd/system/kubelet.service.d/10-kubeadm.conf<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ExecStart=/usr/bin/kubelet <span class="variable">$KUBELET_KUBECONFIG_ARGS</span> <span class="variable">$KUBELET_SYSTEM_PODS_ARGS</span> <span class="variable">$KUBELET_NETWORK_ARGS</span> <span class="variable">$KUBELET_DNS_ARGS</span> <span class="variable">$KUBELET_AUTHZ_ARGS</span> <span class="variable">$KUBELET_EXTRA_ARGS</span></span><br></pre></td></tr></table></figure></p>
<p>remove $KUBELET_NETWORK_ARGS, and then restart kubelet after that kubeadm init should work.</p>
<p>重启kubelet服务后正常：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart kubelet</span><br></pre></td></tr></table></figure></p>
<p>查看pod信息：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-master v1.7.5]<span class="comment"># kubectl get pod -o wide -n kube-system</span></span><br><span class="line">NAME                                 READY     STATUS    RESTARTS   AGE       IP             NODE</span><br><span class="line">kube-apiserver-k8s-master            1/1       Running   0          10m       192.168.10.6   k8s-master</span><br><span class="line">kube-controller-manager-k8s-master   1/1       Running   0          10m       192.168.10.6   k8s-master</span><br><span class="line">kube-dns-1783747724-bh3g3            3/3       Running   0          2h        10.244.3.2     k8s-node2</span><br><span class="line">kube-proxy-3l1wf                     1/1       Running   0          2h        192.168.10.7   k8s-node1</span><br><span class="line">kube-proxy-5mwcl                     1/1       Running   0          2h        192.168.10.8   k8s-node2</span><br><span class="line">kube-proxy-s02wm                     1/1       Running   0          2h        192.168.10.6   k8s-master</span><br><span class="line">kube-scheduler-k8s-master            1/1       Running   0          10m       192.168.10.6   k8s-master</span><br></pre></td></tr></table></figure>
<h4 id="不能查看pod日志"><a href="#不能查看pod日志" class="headerlink" title="不能查看pod日志"></a>不能查看pod日志</h4><p>报以下的错误：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl logs kube-dns-1783747724-bh3g3 -n kube-system                </span><br><span class="line">Error from server (BadRequest): a container name must be specified <span class="keyword">for</span> pod kube-dns-1783747724-bh3g3, choose one of: [kubedns dnsmasq sidecar]</span><br></pre></td></tr></table></figure></p>
<p>这个是因为为kubectl没有admin权限，所以需要修改~/.bash_profile中的<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">export KUBECONFIG=/etc/kubernetes/admin.conf</span><br></pre></td></tr></table></figure></p>
<p>执行<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure></p>
<h4 id="kube-dns是不能正常运行的，STATUS为Pending"><a href="#kube-dns是不能正常运行的，STATUS为Pending" class="headerlink" title="kube-dns是不能正常运行的，STATUS为Pending"></a>kube-dns是不能正常运行的，STATUS为Pending</h4><p>这是因为没有部署网络，具体请参考<a href="#部署网络">部署网络</a><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-master ~]<span class="comment"># kubectl get pod -o wide -n kube-system</span></span><br><span class="line">NAME                                 READY     STATUS    RESTARTS   AGE       IP             NODE</span><br><span class="line">etcd-k8s-master                      1/1       Running   0          37m       192.168.10.6   k8s-master</span><br><span class="line">kube-apiserver-k8s-master            1/1       Running   0          37m       192.168.10.6   k8s-master</span><br><span class="line">kube-controller-manager-k8s-master   1/1       Running   0          37m       192.168.10.6   k8s-master</span><br><span class="line">kube-dns-3913472980-gx5zn            0/3       Pending   0          42m       &lt;none&gt;         </span><br><span class="line">kube-proxy-3970g                     1/1       Running   0          4m        192.168.10.8   k8s-node2</span><br><span class="line">kube-proxy-t8zhh                     1/1       Running   0          42m       192.168.10.6   k8s-master</span><br><span class="line">kube-proxy-xvsdk                     1/1       Running   0          3m        192.168.10.7   k8s-node1</span><br><span class="line">kube-scheduler-k8s-master            1/1       Running   0          37m       192.168.10.6   k8s-master</span><br></pre></td></tr></table></figure></p>
<h2 id="部署网络"><a href="#部署网络" class="headerlink" title="部署网络"></a>部署网络</h2><h3 id="cni网络"><a href="#cni网络" class="headerlink" title="cni网络"></a>cni网络</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br></pre></td></tr></table></figure>
<p>如果是使用vagrant，需要修改kube-flannel.yml：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">command</span>: [ <span class="string">"/opt/bin/flanneld"</span>, <span class="string">"--iface=eth1"</span>, <span class="string">"--ip-masq"</span>, <span class="string">"--kube-subnet-mgr"</span> ]</span><br></pre></td></tr></table></figure></p>
<p>参考修改后的文件：<a href="/files/Kubeadm集群搭建/config.zip">kube-flannel.yml</a></p>
<p>创建网络:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl create -f kube-flannel.yml</span><br></pre></td></tr></table></figure>
<h3 id="flannel网络"><a href="#flannel网络" class="headerlink" title="flannel网络"></a>flannel网络</h3><p>也可以手动部署flannel网络，这种为非cni网络。具体请参考<a href="/blog/2017/01/%E4%BD%BF%E7%94%A8Flannel%E6%90%AD%E5%BB%BAdocker%E7%BD%91%E7%BB%9C.html">使用Flannel搭建docker网络</a></p>
<p>需要去掉cni网络：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">'s;$KUBELET_NETWORK_ARGS ;;g'</span> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf</span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart kubelet</span><br></pre></td></tr></table></figure>
<h2 id="测试dns"><a href="#测试dns" class="headerlink" title="测试dns"></a>测试dns</h2><p>#<a href="https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/" target="_blank" rel="noopener">https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/</a><br>Create a file named busybox.yaml with the following contents:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tee busybox.yaml &lt;&lt; EOF</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: busybox</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - image: busybox</span><br><span class="line">    <span class="built_in">command</span>:</span><br><span class="line">      - sleep</span><br><span class="line">      - <span class="string">"3600"</span></span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    name: busybox</span><br><span class="line">  restartPolicy: Always</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></p>
<p>Then create a pod using this file:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl create -f busybox.yaml</span><br></pre></td></tr></table></figure></p>
<p>测试：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#kubectl run busybox --rm -ti --image=busybox --restart=Never -- nslookup -type=srv kubernetes</span></span><br><span class="line"><span class="comment">#以上每次退出后会自动删除images中的镜像，每次执行都会重新下载image，所以每次执行都会有些慢。</span></span><br><span class="line"></span><br><span class="line">[root@k8s-master config]<span class="comment"># kubectl exec -ti busybox -- nslookup kubernetes.default</span></span><br><span class="line">Server:    10.96.0.10</span><br><span class="line">Address 1: 10.96.0.10 kube-dns.kube-system.svc.cluster.local</span><br><span class="line"></span><br><span class="line">Name:      kubernetes.default</span><br><span class="line">Address 1: 10.96.0.1 kubernetes.default.svc.cluster.local</span><br></pre></td></tr></table></figure></p>
<h2 id="dashboard"><a href="#dashboard" class="headerlink" title="dashboard"></a>dashboard</h2><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><h4 id="最新方式"><a href="#最新方式" class="headerlink" title="最新方式"></a>最新方式</h4><p><a href="https://forums.docker.com/t/docker-for-mac-kubernetes-dashboard/44116/6" target="_blank" rel="noopener">https://forums.docker.com/t/docker-for-mac-kubernetes-dashboard/44116/6</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/alternative/kubernetes-dashboard.yaml</span><br><span class="line">kubectl get pod --namespace=kube-system | grep dashboard</span><br><span class="line">kubectl port-forward kubernetes-dashboard-57b79cdfb5-5bj6m 9090:9090 --namespace=kube-system</span><br></pre></td></tr></table></figure>
<p>Then, open your browser on <a href="http://127.0.0.1:9090" target="_blank" rel="noopener">http://127.0.0.1:9090</a> 12 and the dashboard should work without any authentification!</p>
<p>或者：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kubectl proxy</span><br></pre></td></tr></table></figure></p>
<p>直接访问： <a href="http://localhost:8001/api/v1/namespaces/kube-system/services/http:kubernetes-dashboard:/proxy/#!/overview?namespace=default" target="_blank" rel="noopener">http://localhost:8001/api/v1/namespaces/kube-system/services/http:kubernetes-dashboard:/proxy/#!/overview?namespace=default</a></p>
<p>如果不能访问看是不是为http:kubernetes-dashboard，如果是https:kubernetes-dashboard的话会报Error: ‘tls: oversized record received with length 20527’的错误。</p>
<p>see: <a href="https://github.com/kubernetes/dashboard/wiki/Accessing-Dashboard---1.7.X-and-above" target="_blank" rel="noopener">https://github.com/kubernetes/dashboard/wiki/Accessing-Dashboard---1.7.X-and-above</a></p>
<h4 id="其他方式"><a href="#其他方式" class="headerlink" title="其他方式"></a>其他方式</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1.6.3版本已经不能下载了</span></span><br><span class="line"><span class="comment">#wget https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/kubernetes-dashboard.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#1.7.0版本</span></span><br><span class="line"><span class="comment">#https://github.com/kubernetes/dashboard/tree/v1.7.1/src/deploy/recommended</span></span><br><span class="line">wget https://github.com/kubernetes/dashboard/raw/v1.7.1/src/deploy/recommended/kubernetes-dashboard.yaml</span><br><span class="line"></span><br><span class="line">kubectl create -f kubernetes-dashboard.yaml</span><br></pre></td></tr></table></figure>
<p>1.6请参考：<a href="/files/Kubeadm集群搭建/dashboard-1.6.zip">kubernetes-dashboard.yaml</a><br>1.7请参考：<a href="/files/Kubeadm集群搭建/dashboard-1.7.zip">kubernetes-dashboard.yaml</a></p>
<h3 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get pod,svc -n kube-system -l k8s-app=kubernetes-dashboard</span><br><span class="line">NAME                                       READY     STATUS    RESTARTS   AGE</span><br><span class="line">po/kubernetes-dashboard-2315583659-qt0vm   1/1       Running   1          21h</span><br><span class="line"></span><br><span class="line">NAME                       CLUSTER-IP      EXTERNAL-IP   PORT(S)   AGE</span><br><span class="line">svc/kubernetes-dashboard   10.106.184.36   &lt;none&gt;        80/TCP    21h</span><br></pre></td></tr></table></figure>
<h3 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h3><h4 id="第1种访问方式"><a href="#第1种访问方式" class="headerlink" title="第1种访问方式"></a>第1种访问方式</h4><blockquote>
<p><a href="https://192.168.10.6:6443/ui" target="_blank" rel="noopener">https://192.168.10.6:6443/ui</a><br><a href="https://192.168.10.6:6443/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy" target="_blank" rel="noopener">https://192.168.10.6:6443/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy</a></p>
</blockquote>
<p>注意：1.7版本后<a href="https://192.168.10.6:6443/ui" target="_blank" rel="noopener">https://192.168.10.6:6443/ui</a>已不能访问。否则访问时会出现以下错误：<br>Error: ‘malformed HTTP response “\x15\x03\x01\x00\x02\x02”‘<br>Trying to reach: ‘<a href="http://10.244.2.6:8443/&#39;" target="_blank" rel="noopener">http://10.244.2.6:8443/&#39;</a><br>参考<a href="http://tonybai.com/2017/09/26/some-notes-about-deploying-kubernetes-dashboard-1-7-0/" target="_blank" rel="noopener">http://tonybai.com/2017/09/26/some-notes-about-deploying-kubernetes-dashboard-1-7-0/</a></p>
<p>访问该地址后，我们在浏览器中看到如下登录页面：</p>
<p><img src="/images/Kubeadm集群搭建/dashboard_login.png" alt="dashboard_login.png"></p>
<p>dashboard v1.7默认支持两种身份校验登录方式：kubeconfig和token两种。<br>我们说说token这种方式。点击选择:Token单选框，提示你输入token。可以通过以下方式获取token：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-master ~]<span class="comment"># kubectl  get secret -n kube-system|grep dashboard</span></span><br><span class="line">kubernetes-dashboard-token-wlzb0         kubernetes.io/service-account-token   3         3m</span><br><span class="line"></span><br><span class="line">[root@k8s-master ~]<span class="comment"># kubectl describe secret/kubernetes-dashboard-token-wlzb0 -n kube-system                          </span></span><br><span class="line">Name:           kubernetes-dashboard-token-wlzb0</span><br><span class="line">Namespace:      kube-system</span><br><span class="line">Labels:         &lt;none&gt;</span><br><span class="line">Annotations:    kubernetes.io/service-account.name=kubernetes-dashboard</span><br><span class="line">                kubernetes.io/service-account.uid=07dd79c6-a58d-11e7-985e-080027a8da33</span><br><span class="line"></span><br><span class="line">Type:   kubernetes.io/service-account-token</span><br><span class="line"></span><br><span class="line">Data</span><br><span class="line">====</span><br><span class="line">ca.crt:         1025 bytes</span><br><span class="line">namespace:      11 bytes</span><br><span class="line">token:          eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJrdWJlcm5ldGVzLWRhc2hib2FyZC10b2tlbi13bHpiMCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJrdWJlcm5ldGVzLWRhc2hib2FyZCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjA3ZGQ3OWM2LWE1OGQtMTFlNy05ODVlLTA4MDAyN2E4ZGEzMyIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTprdWJlcm5ldGVzLWRhc2hib2FyZCJ9.a81oQ8XkR87luB6MeClqq5OTKXgfK_Dn8ku4uQdh4Y03aMHNwLYRdCzHZ67d_1sFndeX5FaKHr-hCxVz5eLYMVyexcQoegHvJtOA5tOyX1RRF55LCotrfsigG_4IGU9caOBmODV1HSPpQGuVcGtky3-9KIUR1r8JlEsxuFl4aaBp9YmJg_TJx7sDwF5Io_S4M21JrXOP_6Wly-hJnOW5_KF0eUyyUSHPN1HCBx-4l2CANbrK9xONAFUl9cgisfLjNZDhbBvQBZi-Ru6Ugxxkxxok1fADWkJMiwILsW9gV724OfWfnTNM8PUDQYZX1tegRGfm8vnjxEdyKXuuERaLRg</span><br></pre></td></tr></table></figure>
<p>登录后出现：<br><img src="/images/Kubeadm集群搭建/dashboard_error1.png" alt="dashboard_error1.png"></p>
<p>这个是由于1.7后，默认为最小权限。需要创建权限：<br>参考<a href="https://github.com/kubernetes/dashboard/wiki/Access-control#official-release" target="_blank" rel="noopener">official-release</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tee dashboard-admin.yaml &lt;&lt; EOF</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1beta1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: cluster-admin</span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">  namespace: kube-system</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">kubectl create -f dashboard-admin.yaml</span><br></pre></td></tr></table></figure>
<p>让Dashboard v1.7.0支持basic auth login方式：</p>
<p>我们要用basic auth方式登录dashboard，需要对kubernetes-dashboard.yaml进行如下修改：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">args:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">--tls-key-file=/certs/dashboard.key</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">--tls-cert-file=/certs/dashboard.crt</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">--authentication-mode=basic</span>    <span class="string">&lt;----</span> <span class="string">添加这一行</span></span><br></pre></td></tr></table></figure>
<p>重新创建即可。</p>
<h4 id="第2种访问方式"><a href="#第2种访问方式" class="headerlink" title="第2种访问方式"></a>第2种访问方式</h4><blockquote>
<p><a href="http://192.168.10.6:9090/ui" target="_blank" rel="noopener">http://192.168.10.6:9090/ui</a><br><a href="http://192.168.10.6:8443/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy" target="_blank" rel="noopener">http://192.168.10.6:8443/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy</a></p>
</blockquote>
<p>可以通过kubectl proxy代理访问：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-master ~]<span class="comment"># kubectl get ep -n kube-system   </span></span><br><span class="line">NAME                      ENDPOINTS                     AGE</span><br><span class="line">kubernetes-dashboard      10.244.1.5:8443               19m</span><br><span class="line"></span><br><span class="line"><span class="comment">#kubectl proxy --address 192.168.10.6 --port=8443 --accept-hosts='^*$'</span></span><br><span class="line">kubectl proxy --address=<span class="string">'0.0.0.0'</span> --port=8443 --accept-hosts=<span class="string">'^*$'</span></span><br></pre></td></tr></table></figure>
<p>这样就可以访问了。此访问为非安全方式，如果提示输入密码或者token时，直接SKIP就可以了。</p>
<p>可能会出现pod为error的错误，将所有的dashboard yaml重新创建一下就可以了。<br>注意：如果是1.6版本，访问地址为：<a href="http://192.168.10.6:9090/ui" target="_blank" rel="noopener">http://192.168.10.6:9090/ui</a></p>
<p>1.6版本还可以通过NodePort方式访问，但1.7版本不行：<br>参考：<br><a href="https://github.com/qianlei90/Blog/issues/28" target="_blank" rel="noopener">https://github.com/qianlei90/Blog/issues/28</a><br><a href="https://github.com/kubernetes/dashboard/issues/692" target="_blank" rel="noopener">https://github.com/kubernetes/dashboard/issues/692</a><br>因为使用kubeadm安装的集群是不带认证的，所以无法直接从https://<master ip>/ui访问，可以添加NodePort方式访问：<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">9090</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">30000</span></span><br></pre></td></tr></table></figure></master></p>
<h3 id="异常处理-2"><a href="#异常处理-2" class="headerlink" title="异常处理"></a>异常处理</h3><h4 id="User-“system-anonymous”-cannot-get-at-the-cluster-scope"><a href="#User-“system-anonymous”-cannot-get-at-the-cluster-scope" class="headerlink" title="User “system:anonymous” cannot get  at the cluster scope"></a>User “system:anonymous” cannot get  at the cluster scope</h4><p>参考<a href="http://www.tongtongxue.com/archives/16338.html" target="_blank" rel="noopener">http://www.tongtongxue.com/archives/16338.html</a><br>编辑/etc/kubernetes/manifests/kube-apiserver.yaml，添加- –anonymous-auth=false：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - <span class="built_in">command</span>:</span><br><span class="line">    - kube-apiserver</span><br><span class="line">    - --anonymous-auth=<span class="literal">false</span></span><br></pre></td></tr></table></figure></p>
<p>kube-apiserver周期性异常重启:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl describe pod kube-apiserver-k8s-master -n kube-system|grep health</span><br><span class="line">Liveness:        http-get https://127.0.0.1:6443/healthz delay=15s timeout=15s period=10s <span class="comment">#success=1 #failure=8</span></span><br></pre></td></tr></table></figure></p>
<p>可以看到liveness check有8次failure！8次是kube-apiserver的failure门槛值，这个值在/etc/kubernetes/manifests/kube-apiserver.yaml中我们可以看到：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">livenessProbe:</span><br><span class="line">      failureThreshold: 8</span><br><span class="line">      httpGet:</span><br><span class="line">        host: 127.0.0.1</span><br><span class="line">        path: /healthz</span><br><span class="line">        port: 6443</span><br><span class="line">        scheme: HTTPS</span><br><span class="line">      initialDelaySeconds: 15</span><br><span class="line">      timeoutSeconds: 15</span><br></pre></td></tr></table></figure></p>
<p>这样，一旦failure次数超限，kubelet会尝试Restart kube-apiserver，这就是问题的原因。那么为什么kube-apiserver的 liveness check 会fail呢？这缘于我们关闭了匿名请求的身份验证权。还是来看/etc/kubernetes/manifests/kube-apiserver.yaml中的livenessProbe段，对于kube-apiserver来说，kubelet会通过访问: <a href="https://127.0.0.1:6443/healthz的方式去check是否ok？并且kubelet使用的是anonymous" target="_blank" rel="noopener">https://127.0.0.1:6443/healthz的方式去check是否ok？并且kubelet使用的是anonymous</a> requests。由于上面我们已经关闭了对anonymous-requests的身份验证权，kubelet就会一直无法访问kube-apiserver的/healthz端点，导致kubelet认为kube-apiserver已经死亡，并尝试重启它。</p>
<p>调整/healthz检测的端点:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - <span class="built_in">command</span>:</span><br><span class="line">    - kube-apiserver</span><br><span class="line">    - --anonymous-auth=<span class="literal">false</span></span><br><span class="line">    ... ...</span><br><span class="line">    - --insecure-bind-address=127.0.0.1</span><br><span class="line">    - --insecure-port=8080</span><br><span class="line"></span><br><span class="line">   livenessProbe:</span><br><span class="line">      failureThreshold: 8</span><br><span class="line">      httpGet:</span><br><span class="line">        host: 127.0.0.1</span><br><span class="line">        path: /healthz</span><br><span class="line">        port: 8080</span><br><span class="line">        scheme: HTTP</span><br><span class="line">      initialDelaySeconds: 15</span><br><span class="line">      timeoutSeconds: 15</span><br><span class="line">... ...</span><br></pre></td></tr></table></figure></p>
<p>我们不再用anonymous-requests，但我们可以利用–insecure-bind-address和–insecure-port。让kubelet的请求到insecure port，而不是secure port。由于insecure port的流量不会受到身份验证、授权等功能的限制，因此可以成功probe到kube-apiserver的liveness，kubelet不会再重启kube-apiserver了。</p>
<p>重启kubelet服务：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart kubelet</span><br></pre></td></tr></table></figure></p>
<h4 id="Unauthorized"><a href="#Unauthorized" class="headerlink" title="Unauthorized"></a>Unauthorized</h4><p>参考<a href="http://tonybai.com/2017/07/20/fix-cannot-access-dashboard-in-k8s-1-6-4/" target="_blank" rel="noopener">http://tonybai.com/2017/07/20/fix-cannot-access-dashboard-in-k8s-1-6-4/</a><br>k8s 1.6.x版本与1.5.x版本的一个很大不同在于1.6.x版本启用了RBAC的Authorization mode(授权模型)，但我们依旧通过basic auth方式进行apiserver的Authentication，而不是用客户端数字证书校验等其他方式：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - <span class="built_in">command</span>:</span><br><span class="line">    - kube-apiserver</span><br><span class="line">    ... ...</span><br><span class="line">    - --basic-auth-file=/etc/kubernetes/basic_auth_file</span><br><span class="line">    ... ...</span><br></pre></td></tr></table></figure></p>
<p>添加basic_auth_file内容：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"admin,admin,2017"</span> &gt; /etc/kubernetes/basic_auth_file</span><br></pre></td></tr></table></figure></p>
<p>basic_auth_file格式为：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">password,username,uid</span><br></pre></td></tr></table></figure></p>
<p>参考完整的/etc/kubernetes/manifests/kube-apiserver.yaml内容：<br>主要添加了以下内容：<br><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">--anonymous-auth=false</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">--basic-auth-file=/etc/kubernetes/basic_auth_file</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">--insecure-bind-address=127.0.0.1</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">--insecure-port=8080</span></span><br><span class="line"></span><br><span class="line"><span class="attr">host:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/healthz</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">    <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br></pre></td></tr></table></figure></p>
<p>完整的内容：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">creationTimestamp:</span> <span class="literal">null</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">component:</span> <span class="string">kube-apiserver</span></span><br><span class="line">    <span class="attr">tier:</span> <span class="string">control-plane</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kube-apiserver</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">command:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">kube-apiserver</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--anonymous-auth=false</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--basic-auth-file=/etc/kubernetes/basic_auth_file</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--insecure-bind-address=127.0.0.1</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--insecure-port=8080</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--secure-port=6443</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--requestheader-group-headers=X-Remote-Group</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--requestheader-extra-headers-prefix=X-Remote-Extra-</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--client-ca-file=/etc/kubernetes/pki/ca.crt</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--tls-private-key-file=/etc/kubernetes/pki/apiserver.key</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--allow-privileged=true</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--storage-backend=etcd3</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,PersistentVolumeLabel,DefaultStorageClass,ResourceQuota,DefaultTolerationSeconds</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--requestheader-allowed-names=front-proxy-client</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--service-account-key-file=/etc/kubernetes/pki/sa.pub</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--service-cluster-ip-range=10.96.0.0/12</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--tls-cert-file=/etc/kubernetes/pki/apiserver.crt</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--experimental-bootstrap-token-auth=true</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--requestheader-username-headers=X-Remote-User</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--authorization-mode=RBAC</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--advertise-address=192.168.10.6</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--etcd-servers=http://192.168.10.6:2379,http://192.168.10.7:2379,http://192.168.10.8:2379</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">gcr.io/google_containers/kube-apiserver-amd64:v1.7.5</span></span><br><span class="line">    <span class="attr">livenessProbe:</span></span><br><span class="line">      <span class="attr">failureThreshold:</span> <span class="number">8</span></span><br><span class="line">      <span class="attr">httpGet:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/healthz</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">        <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">      <span class="attr">initialDelaySeconds:</span> <span class="number">15</span></span><br><span class="line">      <span class="attr">timeoutSeconds:</span> <span class="number">15</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">kube-apiserver</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="attr">requests:</span></span><br><span class="line">        <span class="attr">cpu:</span> <span class="string">250m</span></span><br><span class="line">    <span class="attr">volumeMounts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/etc/kubernetes/</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">k8s</span></span><br><span class="line">      <span class="attr">readOnly:</span> <span class="literal">true</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/etc/ssl/certs</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">certs</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/etc/pki</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">pki</span></span><br><span class="line">  <span class="attr">hostNetwork:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">hostPath:</span></span><br><span class="line">      <span class="attr">path:</span> <span class="string">/etc/kubernetes</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">k8s</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">hostPath:</span></span><br><span class="line">      <span class="attr">path:</span> <span class="string">/etc/ssl/certs</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">certs</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">hostPath:</span></span><br><span class="line">      <span class="attr">path:</span> <span class="string">/etc/pki</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">pki</span></span><br><span class="line"><span class="attr">status:</span> <span class="string">&#123;&#125;</span></span><br></pre></td></tr></table></figure>
<h3 id="User-“admin”-cannot-get-at-the-cluster-scope"><a href="#User-“admin”-cannot-get-at-the-cluster-scope" class="headerlink" title="User “admin” cannot get  at the cluster scope"></a>User “admin” cannot get  at the cluster scope</h3><p>admin这个user并未得到足够的授权。这里我们要做的就是给admin选择一个合适的clusterrole。但kubectl并不支持查看user的信息，初始的clusterrolebinding又那么多，一一查看十分麻烦。我们知道cluster-admin这个clusterrole是全权限的，我们就来将admin这个user与clusterrole: cluster-admin bind到一起：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl create clusterrolebinding login-on-dashboard-with-cluster-admin --clusterrole=cluster-admin --user=admin</span><br></pre></td></tr></table></figure></p>
<p>重启kubelet服务后问题解决：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart kubelet</span><br></pre></td></tr></table></figure></p>
<p>访问<a href="https://192.168.10.6:6443/ui" target="_blank" rel="noopener">https://192.168.10.6:6443/ui</a>，用admin/admin就可以正常登录了。</p>
<h2 id="heapster插件部署"><a href="#heapster插件部署" class="headerlink" title="heapster插件部署"></a>heapster插件部署</h2><h3 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h3><p>下面安装Heapster为集群添加使用统计和监控功能，为Dashboard添加仪表盘。 使用InfluxDB做为Heapster的后端存储，开始部署：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p ~/k8s/heapster</span><br><span class="line"><span class="built_in">cd</span> ~/k8s/heapster</span><br><span class="line">wget https://raw.githubusercontent.com/kubernetes/heapster/master/deploy/kube-config/influxdb/grafana.yaml</span><br><span class="line">wget https://raw.githubusercontent.com/kubernetes/heapster/master/deploy/kube-config/rbac/heapster-rbac.yaml</span><br><span class="line">wget https://raw.githubusercontent.com/kubernetes/heapster/master/deploy/kube-config/influxdb/heapster.yaml</span><br><span class="line">wget https://raw.githubusercontent.com/kubernetes/heapster/master/deploy/kube-config/influxdb/influxdb.yaml</span><br><span class="line"></span><br><span class="line">kubectl create -f ./</span><br></pre></td></tr></table></figure></p>
<p>或者</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://github.com/kubernetes/heapster/archive/v1.4.2.zip</span><br><span class="line">unzip v1.4.2.zip</span><br><span class="line"><span class="built_in">cd</span> heapster-1.4.2/deploy/kube-config/influxdb</span><br><span class="line">kubectl create -f ./</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> heapster-1.4.2/deploy/kube-config/rbac</span><br><span class="line">kubectl create -f ./</span><br></pre></td></tr></table></figure>
<p>具体可参考<a href="/files/Kubeadm集群搭建/heapster.zip">heapster.zip</a></p>
<p>如果是通过heapster.zip创建的话，因为有修改一些内容，需要执行：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl create configmap influxdb-config --from-file=config.toml  -n kube-system</span><br><span class="line">kubectl create -f ./</span><br></pre></td></tr></table></figure></p>
<p>访问地址：<br>cAdvisor:<br><a href="http://192.168.10.6:4194/" target="_blank" rel="noopener">http://192.168.10.6:4194/</a><br><a href="http://192.168.10.7:4194/" target="_blank" rel="noopener">http://192.168.10.7:4194/</a><br><a href="http://192.168.10.8:4194/" target="_blank" rel="noopener">http://192.168.10.8:4194/</a><br>注意：1.7版本cAdvisor已不能访问，可以手动在每台机器上安装cAdvisor：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run --restart=always \</span><br><span class="line">  --volume=/:/rootfs:ro \</span><br><span class="line">  --volume=/var/run:/var/run:rw \</span><br><span class="line">  --volume=/sys:/sys:ro \</span><br><span class="line">  --volume=/var/lib/docker/:/var/lib/docker:ro \</span><br><span class="line">  --volume=/dev/disk/:/dev/disk:ro \</span><br><span class="line">  --publish=4194:8080 \</span><br><span class="line">  --detach=<span class="literal">true</span> \</span><br><span class="line">  --name=cadvisor \</span><br><span class="line">  google/cadvisor:latest</span><br></pre></td></tr></table></figure></p>
<p>grafana:<br><del><a href="https://192.168.10.6:6443/api/v1/proxy/namespaces/kube-system/services/monitoring-grafana/" target="_blank" rel="noopener">https://192.168.10.6:6443/api/v1/proxy/namespaces/kube-system/services/monitoring-grafana/</a></del><br><a href="http://192.168.10.6:30015/" target="_blank" rel="noopener">http://192.168.10.6:30015/</a></p>
<p>influxdb:<br><del><a href="https://192.168.10.6:6443/api/v1/proxy/namespaces/kube-system/services/monitoring-influxdb" target="_blank" rel="noopener">https://192.168.10.6:6443/api/v1/proxy/namespaces/kube-system/services/monitoring-influxdb</a></del><br><a href="http://192.168.10.6:8083/" target="_blank" rel="noopener">http://192.168.10.6:8083/</a></p>
<p>最后确认所有的pod都处于running状态，打开Dashboard,集群的使用统计会以仪表盘的形式显示出来。<br><img src="/images/Kubeadm集群搭建/heapster.png" alt="heapster"></p>
<h3 id="异常处理-3"><a href="#异常处理-3" class="headerlink" title="异常处理"></a>异常处理</h3><h4 id="ErrImagePull"><a href="#ErrImagePull" class="headerlink" title="ErrImagePull"></a>ErrImagePull</h4><p>查看pod状态：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-master temp]<span class="comment"># kubectl get pod -o wide -n kube-system</span></span><br><span class="line">NAME                                    READY     STATUS         RESTARTS   AGE       IP             NODE</span><br><span class="line">heapster-1528902802-hjjh8               1/1       Running        0          13s       10.244.66.3    k8s-node2</span><br><span class="line">kube-apiserver-k8s-master               1/1       Running        3          20h       192.168.10.6   k8s-master</span><br><span class="line">kube-controller-manager-k8s-master      1/1       Running        27         21h       192.168.10.6   k8s-master</span><br><span class="line">kube-dns-1783747724-3jb47               3/3       Running        3          4h        10.244.100.2   k8s-node1</span><br><span class="line">kube-proxy-3l1wf                        1/1       Running        8          2d        192.168.10.7   k8s-node1</span><br><span class="line">kube-proxy-5mwcl                        1/1       Running        10         2d        192.168.10.8   k8s-node2</span><br><span class="line">kube-proxy-s02wm                        1/1       Running        7          2d        192.168.10.6   k8s-master</span><br><span class="line">kube-scheduler-k8s-master               1/1       Running        27         21h       192.168.10.6   k8s-master</span><br><span class="line">kubernetes-dashboard-2315583659-qt0vm   1/1       Running        13         1d        10.244.100.3   k8s-node1</span><br><span class="line">monitoring-grafana-973508798-wg055      0/1       ErrImagePull   0          13s       10.244.66.2    k8s-node2</span><br><span class="line">monitoring-influxdb-3871661022-jvpt9    0/1       ErrImagePull   0          12s       10.244.100.4   k8s-node1</span><br></pre></td></tr></table></figure></p>
<p>发现grafana与influxdb状态为ErrImagePull，查看monitoring-grafana-973508798-wg055给你monitoring-influxdb-3871661022-jvpt9日志：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl describe pod monitoring-influxdb-3871661022-jvpt9 -n kube-system</span><br><span class="line">  1m    10s     4       kubelet, k8s-node1                                      Warning FailedSync      Error syncing pod, skipping: failed to <span class="string">"StartContainer"</span> <span class="keyword">for</span> <span class="string">"influxdb"</span> with ErrImagePull: <span class="string">"rpc error: code = 2 desc = Error: Status 405 trying to pull repository google_containers/heapster-influxdb-amd64: \"v1 Registry API is disabled. If you are not explicitly using the v1 Registry API, it is possible your v2 image could not be found. Verify that your image is available, or retry with `dockerd --disable-legacy-registry`. See https://cloud.google.com/container-registry/docs/support/deprecation-notices\""</span></span><br></pre></td></tr></table></figure></p>
<p>应该是images的版本在registry中找不到。修改grafana.yaml与influxdb.yaml中image的路径：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#grafana.yaml</span></span><br><span class="line"><span class="comment">#image: gcr.io/google_containers/heapster-grafana-amd64:v4.4.3</span></span><br><span class="line">image: gcr.io/google_containers/heapster-grafana-amd64:v4.0.2</span><br><span class="line"></span><br><span class="line"><span class="comment">#influxdb.yaml</span></span><br><span class="line"><span class="comment">#image: gcr.io/google_containers/heapster-influxdb-amd64:v1.3.3</span></span><br><span class="line">image: gcr.io/google_containers/heapster-influxdb-amd64:v1.1.1</span><br></pre></td></tr></table></figure></p>
<p>删除后重新创建正常：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl delete -f ./</span><br><span class="line">kubectl create -f ./</span><br></pre></td></tr></table></figure></p>
<h4 id="cannot-list-nodes-at-the-cluster-scope"><a href="#cannot-list-nodes-at-the-cluster-scope" class="headerlink" title="cannot list nodes at the cluster scope"></a>cannot list nodes at the cluster scope</h4><p>查看日志：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl logs -f --tail 100 heapster-1528902802-6kzfk -n kube-system</span><br><span class="line">E0903 07:09:35.016005       1 reflector.go:190] k8s.io/heapster/metrics/util/util.go:51: Failed to list *v1.Node: User <span class="string">"system:serviceaccount:kube-system:heapster"</span> cannot list nodes at the cluster scope. (get nodes)</span><br></pre></td></tr></table></figure></p>
<p>这个是由于rbac问题，需要执行：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl create -f heapster-rbac.yaml</span><br></pre></td></tr></table></figure></p>
<h4 id="ServiceUnavailable"><a href="#ServiceUnavailable" class="headerlink" title="ServiceUnavailable"></a>ServiceUnavailable</h4><p>请等待kubernetes创建完成即可。</p>
<h4 id="grafana-Problem-the-server-could-not-find-the-requested-resource"><a href="#grafana-Problem-the-server-could-not-find-the-requested-resource" class="headerlink" title="grafana: Problem! the server could not find the requested resource"></a>grafana: Problem! the server could not find the requested resource</h4><p>当访问<a href="https://192.168.10.6:6443/api/v1/proxy/namespaces/kube-system/services/monitoring-grafana/时，出现Problem" target="_blank" rel="noopener">https://192.168.10.6:6443/api/v1/proxy/namespaces/kube-system/services/monitoring-grafana/时，出现Problem</a>! the server could not find the requested resource。两种方案解决：<br>方案1:<br>修改grafana.yaml:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#value: /</span></span><br><span class="line">value: /api/v1/proxy/namespaces/kube-system/services/monitoring-grafana/</span><br></pre></td></tr></table></figure></p>
<p>重新创建grafana：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl delete -f grafana.yaml</span><br><span class="line">kubectl create -f grafana.yaml</span><br></pre></td></tr></table></figure></p>
<p>访问<a href="https://192.168.10.6:6443/api/v1/proxy/namespaces/kube-system/services/monitoring-grafana" target="_blank" rel="noopener">https://192.168.10.6:6443/api/v1/proxy/namespaces/kube-system/services/monitoring-grafana</a>，正常。</p>
<p>方案2:<br>修改grafana.yaml:<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="comment"># In a production setup, we recommend accessing Grafana through an external Loadbalancer</span></span><br><span class="line">  <span class="comment"># or through a public IP.</span></span><br><span class="line">  <span class="comment"># type: LoadBalancer</span></span><br><span class="line">  <span class="comment"># You could also use NodePort to expose the service at a randomly-generated port</span></span><br><span class="line">  <span class="comment"># type: NodePort</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">3000</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">3000</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">grafana</span></span><br><span class="line">  <span class="comment">#externalIPs:</span></span><br><span class="line">  <span class="comment">#- 192.168.10.6</span></span><br></pre></td></tr></table></figure></p>
<p>访问<a href="http://192.168.10.6:3000" target="_blank" rel="noopener">http://192.168.10.6:3000</a>，正常。</p>
<p>或者：<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="comment"># In a production setup, we recommend accessing Grafana through an external Loadbalancer</span></span><br><span class="line">  <span class="comment"># or through a public IP.</span></span><br><span class="line">  <span class="comment"># type: LoadBalancer</span></span><br><span class="line">  <span class="comment"># You could also use NodePort to expose the service at a randomly-generated port</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">3000</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">30015</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">grafana</span></span><br></pre></td></tr></table></figure></p>
<p>访问<a href="http://192.168.10.6:30015" target="_blank" rel="noopener">http://192.168.10.6:30015</a>，正常。</p>
<h4 id="influxdb-404-page-not-found"><a href="#influxdb-404-page-not-found" class="headerlink" title="influxdb 404 page not found"></a>influxdb 404 page not found</h4><p>访问<a href="https://192.168.10.6:6443/api/v1/proxy/namespaces/kube-system/services/monitoring-influxdb时出现404" target="_blank" rel="noopener">https://192.168.10.6:6443/api/v1/proxy/namespaces/kube-system/services/monitoring-influxdb时出现404</a> page not found，这是因为influxdb 官方建议使用命令行或 HTTP API 接口来查询数据库，从 v1.1.0 版本开始默认关闭 admin UI，将在后续版本中移除 admin UI 插件。解决方案如下：</p>
<p>下载config.toml:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/kubernetes/heapster/master/influxdb/config.toml</span><br><span class="line"></span><br><span class="line">添加：</span><br><span class="line">[admin]</span><br><span class="line">  enabled = <span class="literal">true</span></span><br><span class="line">  <span class="built_in">bind</span>-address = <span class="string">":8083"</span></span><br><span class="line">  https-enabled = <span class="literal">false</span></span><br><span class="line">  https-certificate = <span class="string">"/etc/ssl/influxdb.pem"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将修改后的配置写入到 ConfigMap 对象中</span></span><br><span class="line"><span class="comment">#kubectl delete configmap influxdb-config  -n kube-system</span></span><br><span class="line">kubectl create configmap influxdb-config --from-file=config.toml  -n kube-system</span><br></pre></td></tr></table></figure></p>
<p>修改influxdb.yaml：<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">task:</span> <span class="string">monitoring</span></span><br><span class="line">        <span class="attr">k8s-app:</span> <span class="string">influxdb</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">influxdb</span></span><br><span class="line">        <span class="comment">#image: gcr.io/google_containers/heapster-influxdb-amd64:v1.3.3</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">gcr.io/google_containers/heapster-influxdb-amd64:v1.1.1</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/data</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">influxdb-storage</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/etc/</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">influxdb-config</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">influxdb-storage</span></span><br><span class="line">        <span class="attr">emptyDir:</span> <span class="string">&#123;&#125;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">influxdb-config</span></span><br><span class="line">        <span class="attr">configMap:</span></span><br><span class="line">         <span class="attr">name:</span> <span class="string">influxdb-config</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">     <span class="attr">port:</span> <span class="number">8083</span></span><br><span class="line">     <span class="attr">targetPort:</span> <span class="number">8083</span></span><br><span class="line">   <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">api</span></span><br><span class="line">     <span class="attr">port:</span> <span class="number">8086</span></span><br><span class="line">     <span class="attr">targetPort:</span> <span class="number">8086</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">influxdb</span></span><br><span class="line">  <span class="attr">externalIPs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">192.168</span><span class="number">.10</span><span class="number">.6</span></span><br></pre></td></tr></table></figure></p>
<p>重新创建influxdb：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl delete -f influxdb.yaml</span><br><span class="line">kubectl create -f influxdb.yaml</span><br></pre></td></tr></table></figure></p>
<p>访问<a href="http://192.168.10.6:8083" target="_blank" rel="noopener">http://192.168.10.6:8083</a>，正常。</p>
<p>或者：<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">task:</span> <span class="string">monitoring</span></span><br><span class="line">        <span class="attr">k8s-app:</span> <span class="string">influxdb</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">influxdb</span></span><br><span class="line">        <span class="comment">#image: gcr.io/google_containers/heapster-influxdb-amd64:v1.3.3</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">gcr.io/google_containers/heapster-influxdb-amd64:v1.1.1</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/data</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">influxdb-storage</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/etc/</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">influxdb-config</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">influxdb-storage</span></span><br><span class="line">        <span class="attr">emptyDir:</span> <span class="string">&#123;&#125;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">influxdb-config</span></span><br><span class="line">        <span class="attr">configMap:</span></span><br><span class="line">         <span class="attr">name:</span> <span class="string">influxdb-config</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">"NodePort"</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">8083</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8083</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">30016</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">api</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">8086</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8086</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">influxdb</span></span><br></pre></td></tr></table></figure></p>
<p>重新创建influxdb：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl delete -f influxdb.yaml</span><br><span class="line">kubectl create -f influxdb.yaml</span><br></pre></td></tr></table></figure></p>
<p>访问<a href="http://192.168.10.6:30016" target="_blank" rel="noopener">http://192.168.10.6:30016</a>，正常。</p>
<p>重新创建influxdb：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl delete -f influxdb.yaml</span><br><span class="line">kubectl create -f influxdb.yaml</span><br></pre></td></tr></table></figure></p>
<p>访问<a href="http://192.168.10.6:8083" target="_blank" rel="noopener">http://192.168.10.6:8083</a>，正常。</p>
<h2 id="efk插件插件部署"><a href="#efk插件插件部署" class="headerlink" title="efk插件插件部署"></a>efk插件插件部署</h2><h3 id="安装-3"><a href="#安装-3" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/kubernetes/kubernetes.git</span><br><span class="line">git checkout v1.7.5</span><br></pre></td></tr></table></figure>
<p>进入源码的kubernetes/cluster/addons/fluentd-elasticsearch目录，需要定义了 elasticsearch 和 fluentd 使用的 Role 和 RoleBinding。添加es-rbac.yaml与fluentd-es-rbac.yaml两个文件：<br>es-rbac.yml：<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">elasticsearch</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1alpha1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">elasticsearch</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">elasticsearch</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">view</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br></pre></td></tr></table></figure></p>
<p>fluentd-es-rbac.yaml：<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">fluentd</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1alpha1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">fluentd</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">fluentd</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">view</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br></pre></td></tr></table></figure></p>
<p>修改es-controller.yaml，添加serviceAccountName:<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">serviceAccountName:</span> <span class="string">elasticsearch</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">gcr.io/google_containers/elasticsearch:v2.4.1-2</span></span><br></pre></td></tr></table></figure></p>
<p>修改fluentd-es-ds.yaml，添加serviceAccountName：<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">serviceAccountName:</span> <span class="string">fluentd</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">fluentd-es</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">gcr.io/google_containers/fluentd-elasticsearch:1.22</span></span><br></pre></td></tr></table></figure></p>
<p>给 Node 设置标签：<br>DaemonSet fluentd-es-v1.22 只会调度到设置了标签 beta.kubernetes.io/fluentd-ds-ready=true 的 Node，需要在期望运行 fluentd 的 Node 上设置该标签；<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ kubectl get nodes</span><br><span class="line">NAME        STATUS    AGE       VERSION</span><br><span class="line">k8s-node1   Ready     1d        v1.7.5</span><br><span class="line"></span><br><span class="line">$ kubectl label nodes k8s-node1 beta.kubernetes.io/fluentd-ds-ready=<span class="literal">true</span></span><br><span class="line">$ kubectl label nodes k8s-node2 beta.kubernetes.io/fluentd-ds-ready=<span class="literal">true</span></span><br></pre></td></tr></table></figure></p>
<p>创建：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl create -f ./</span><br></pre></td></tr></table></figure></p>
<p>具体文件可参考<a href="/files/Kubeadm集群搭建/EFK.zip">EFK.zip</a></p>
<p>访问Kibana：<br>地址为：<a href="https://192.168.10.6:6443/api/v1/proxy/namespaces/kube-system/services/kibana-logging" target="_blank" rel="noopener">https://192.168.10.6:6443/api/v1/proxy/namespaces/kube-system/services/kibana-logging</a></p>
<p>如果出现Error: ‘dial tcp 10.244.2.5:5601: connection refused的错误：<br>查询kibana-logging日志：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-master EFK]<span class="comment"># kubectl logs kibana-logging-3757371098-bjrlh -n kube-system</span></span><br><span class="line">ELASTICSEARCH_URL=http://elasticsearch-logging:9200</span><br><span class="line">server.basePath: /api/v1/proxy/namespaces/kube-system/services/kibana-logging</span><br><span class="line">&#123;<span class="string">"type"</span>:<span class="string">"log"</span>,<span class="string">"@timestamp"</span>:<span class="string">"2017-09-04T09:28:51Z"</span>,<span class="string">"tags"</span>:[<span class="string">"info"</span>,<span class="string">"optimize"</span>],<span class="string">"pid"</span>:5,<span class="string">"message"</span>:<span class="string">"Optimizing and caching bundles for kibana and statusPage. This may take a few minutes"</span>&#125;</span><br></pre></td></tr></table></figure></p>
<p>请耐心等待kibana后台完成即可。</p>
<h2 id="prometheus监控"><a href="#prometheus监控" class="headerlink" title="prometheus监控"></a>prometheus监控</h2><h3 id="安装-4"><a href="#安装-4" class="headerlink" title="安装"></a>安装</h3><p>参考<a href="https://github.com/giantswarm/kubernetes-prometheus" target="_blank" rel="noopener">kubernetes-prometheus</a><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/giantswarm/kubernetes-prometheus/master/manifests-all.yaml</span><br><span class="line">kubectl create -f manifests-all.yaml</span><br></pre></td></tr></table></figure></p>
<p>配置文件请参考：<a href="/files/Kubeadm集群搭建/prometheus.zip">prometheus.zip</a></p>
<h3 id="More-Dashboards"><a href="#More-Dashboards" class="headerlink" title="More Dashboards"></a>More Dashboards</h3><p>以下已经自动添加，无需再手动添加。</p>
<p>See grafana.net for some example dashboards and plugins.</p>
<p>Configure Prometheus data source for Grafana.<br>Grafana UI / Data Sources / Add data source</p>
<p>Name: prometheus<br>Type: Prometheus<br>Url: <a href="http://prometheus:9090" target="_blank" rel="noopener">http://prometheus:9090</a><br>Add<br>Import Prometheus Stats:<br>Grafana UI / Dashboards / Import</p>
<p>Grafana.net Dashboard: <a href="https://grafana.net/dashboards/2" target="_blank" rel="noopener">https://grafana.net/dashboards/2</a><br>Load<br>Prometheus: prometheus<br>Save &amp; Open<br>Import Kubernetes cluster monitoring:<br>Grafana UI / Dashboards / Import</p>
<p>Grafana.net Dashboard: <a href="https://grafana.net/dashboards/162" target="_blank" rel="noopener">https://grafana.net/dashboards/162</a><br>Load<br>Prometheus: prometheus<br>Save &amp; Open</p>
<p>访问地址：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-node1 ~]<span class="comment"># kubectl get svc,ep -n monitoring</span></span><br><span class="line">NAME                           CLUSTER-IP       EXTERNAL-IP   PORT(S)          AGE</span><br><span class="line">svc/alertmanager               10.111.106.237   &lt;nodes&gt;       9093:30582/TCP   14h</span><br><span class="line">svc/grafana                    10.108.245.18    &lt;nodes&gt;       3000:30718/TCP   14h</span><br><span class="line">svc/kube-state-metrics         10.109.29.182    &lt;none&gt;        8080/TCP         14h</span><br><span class="line">svc/prometheus                 10.101.186.72    &lt;nodes&gt;       9090:32617/TCP   14h</span><br><span class="line">svc/prometheus-node-exporter   None             &lt;none&gt;        9100/TCP         14h</span><br><span class="line"></span><br><span class="line">NAME                          ENDPOINTS                             AGE</span><br><span class="line">ep/alertmanager               10.244.100.6:9093                     14h</span><br><span class="line">ep/grafana                    10.244.100.8:3000                     14h</span><br><span class="line">ep/kube-state-metrics         10.244.100.9:8080,10.244.15.4:8080    14h</span><br><span class="line">ep/prometheus                 10.244.15.5:9090                      14h</span><br><span class="line">ep/prometheus-node-exporter   192.168.10.6:9100,192.168.10.7:9100   14h</span><br></pre></td></tr></table></figure></p>
<p>可以看到：<br>prometheus: <a href="http://192.168.10.6:32617" target="_blank" rel="noopener">http://192.168.10.6:32617</a><br>grafana: <a href="http://192.168.10.6:30718" target="_blank" rel="noopener">http://192.168.10.6:30718</a></p>
<h2 id="状态查询"><a href="#状态查询" class="headerlink" title="状态查询"></a>状态查询</h2><h3 id="查看集群状态"><a href="#查看集群状态" class="headerlink" title="查看集群状态"></a>查看集群状态</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl cluster-info</span><br><span class="line"></span><br><span class="line">Kubernetes master is running at https://192.168.10.6:6443</span><br><span class="line">Heapster is running at https://192.168.10.6:6443/api/v1/proxy/namespaces/kube-system/services/heapster</span><br><span class="line">KubeDNS is running at https://192.168.10.6:6443/api/v1/proxy/namespaces/kube-system/services/kube-dns</span><br><span class="line">monitoring-grafana is running at https://192.168.10.6:6443/api/v1/proxy/namespaces/kube-system/services/monitoring-grafana</span><br><span class="line">monitoring-influxdb is running at https://192.168.10.6:6443/api/v1/proxy/namespaces/kube-system/services/monitoring-influxdb</span><br><span class="line"></span><br><span class="line">To further debug and diagnose cluster problems, use <span class="string">'kubectl cluster-info dump'</span>.</span><br></pre></td></tr></table></figure>
<h3 id="查看所有信息："><a href="#查看所有信息：" class="headerlink" title="查看所有信息："></a>查看所有信息：</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#kubectl get pod,svc,ep -o wide -n kube-system</span></span><br><span class="line"><span class="comment">#kubectl get no,pod,svc,ep,deploy -o wide -n kube-system</span></span><br><span class="line">[root@k8s-master prometheus]<span class="comment"># kubectl get pod,svc,ep -o wide --all-namespaces</span></span><br><span class="line">NAMESPACE     NAME                                       READY     STATUS    RESTARTS   AGE       IP             NODE</span><br><span class="line">kube-system   po/elasticsearch-logging-v1-0wlf2          1/1       Running   0          36m       10.244.96.4    k8s-node2</span><br><span class="line">kube-system   po/elasticsearch-logging-v1-v7sg7          1/1       Running   0          36m       10.244.3.5     k8s-node1</span><br><span class="line">kube-system   po/fluentd-es-v1.22-h8f5d                  1/1       Running   0          36m       10.244.96.5    k8s-node2</span><br><span class="line">kube-system   po/fluentd-es-v1.22-mrs8k                  1/1       Running   0          36m       10.244.3.6     k8s-node1</span><br><span class="line">kube-system   po/heapster-1528902802-h8grp               1/1       Running   0          44m       10.244.3.3     k8s-node1</span><br><span class="line">kube-system   po/kibana-logging-3757371098-x5k1r         1/1       Running   0          36m       10.244.3.4     k8s-node1</span><br><span class="line">kube-system   po/kube-apiserver-k8s-master               1/1       Running   0          43m       192.168.10.6   k8s-master</span><br><span class="line">kube-system   po/kube-controller-manager-k8s-master      1/1       Running   1          1h        192.168.10.6   k8s-master</span><br><span class="line">kube-system   po/kube-dns-3913472980-sr3sh               3/3       Running   0          1h        10.244.18.2    k8s-master</span><br><span class="line">kube-system   po/kube-proxy-dkmd4                        1/1       Running   0          1h        192.168.10.7   k8s-node1</span><br><span class="line">kube-system   po/kube-proxy-lbx6h                        1/1       Running   0          1h        192.168.10.6   k8s-master</span><br><span class="line">kube-system   po/kube-proxy-lfw5w                        1/1       Running   0          1h        192.168.10.8   k8s-node2</span><br><span class="line">kube-system   po/kube-scheduler-k8s-master               1/1       Running   1          1h        192.168.10.6   k8s-master</span><br><span class="line">kube-system   po/kubernetes-dashboard-2315583659-rjt21   1/1       Running   0          1h        10.244.3.2     k8s-node1</span><br><span class="line">kube-system   po/monitoring-grafana-241275065-n1wkt      1/1       Running   0          44m       10.244.96.2    k8s-node2</span><br><span class="line">kube-system   po/monitoring-influxdb-2075516717-td73m    1/1       Running   0          44m       10.244.96.3    k8s-node2</span><br><span class="line">monitoring    po/alertmanager-1970416631-v460d           1/1       Running   0          7m        10.244.96.6    k8s-node2</span><br><span class="line">monitoring    po/grafana-core-2777256714-lvx7p           1/1       Running   0          7m        10.244.3.7     k8s-node1</span><br><span class="line">monitoring    po/kube-state-metrics-2949788559-1ks16     1/1       Running   0          7m        10.244.96.8    k8s-node2</span><br><span class="line">monitoring    po/kube-state-metrics-2949788559-2bx02     1/1       Running   0          7m        10.244.3.9     k8s-node1</span><br><span class="line">monitoring    po/node-directory-size-metrics-9722j       2/2       Running   0          7m        10.244.3.8     k8s-node1</span><br><span class="line">monitoring    po/node-directory-size-metrics-z1sqn       2/2       Running   0          7m        10.244.96.7    k8s-node2</span><br><span class="line">monitoring    po/prometheus-core-466509865-3qt1c         1/1       Running   0          7m        10.244.96.9    k8s-node2</span><br><span class="line">monitoring    po/prometheus-node-exporter-7l4bf          1/1       Running   0          7m        192.168.10.7   k8s-node1</span><br><span class="line">monitoring    po/prometheus-node-exporter-b9v2w          1/1       Running   0          7m        192.168.10.8   k8s-node2</span><br><span class="line"></span><br><span class="line">NAMESPACE     NAME                           CLUSTER-IP       EXTERNAL-IP    PORT(S)             AGE       SELECTOR</span><br><span class="line">default       svc/kubernetes                 10.96.0.1        &lt;none&gt;         443/TCP             1h        &lt;none&gt;</span><br><span class="line">kube-system   svc/elasticsearch-logging      10.110.232.165   &lt;none&gt;         9200/TCP            37m       k8s-app=elasticsearch-logging</span><br><span class="line">kube-system   svc/heapster                   10.99.36.89      &lt;none&gt;         80/TCP              44m       k8s-app=heapster</span><br><span class="line">kube-system   svc/kibana-logging             10.101.178.124   &lt;none&gt;         5601/TCP            36m       k8s-app=kibana-logging</span><br><span class="line">kube-system   svc/kube-dns                   10.96.0.10       &lt;none&gt;         53/UDP,53/TCP       1h        k8s-app=kube-dns</span><br><span class="line">kube-system   svc/kubernetes-dashboard       10.99.64.238     &lt;none&gt;         80/TCP              1h        k8s-app=kubernetes-dashboard</span><br><span class="line">kube-system   svc/monitoring-grafana         10.99.186.236    &lt;nodes&gt;        80:30015/TCP        44m       k8s-app=grafana</span><br><span class="line">kube-system   svc/monitoring-influxdb        10.98.97.215     192.168.10.6   8083/TCP,8086/TCP   44m       k8s-app=influxdb</span><br><span class="line">monitoring    svc/alertmanager               10.101.35.35     &lt;nodes&gt;        9093:32099/TCP      7m        app=alertmanager</span><br><span class="line">monitoring    svc/grafana                    10.97.63.144     &lt;nodes&gt;        3000:31989/TCP      7m        app=grafana,component=core</span><br><span class="line">monitoring    svc/kube-state-metrics         10.101.180.83    &lt;none&gt;         8080/TCP            7m        app=kube-state-metrics</span><br><span class="line">monitoring    svc/prometheus                 10.110.91.88     &lt;nodes&gt;        9090:30059/TCP      7m        app=prometheus,component=core</span><br><span class="line">monitoring    svc/prometheus-node-exporter   None             &lt;none&gt;         9100/TCP            7m        app=prometheus,component=node-exporter</span><br><span class="line"></span><br><span class="line">NAMESPACE     NAME                          ENDPOINTS                             AGE</span><br><span class="line">default       ep/kubernetes                 192.168.10.6:6443                     1h</span><br><span class="line">kube-system   ep/elasticsearch-logging      10.244.3.5:9200,10.244.96.4:9200      37m</span><br><span class="line">kube-system   ep/heapster                   10.244.3.3:8082                       44m</span><br><span class="line">kube-system   ep/kibana-logging             10.244.3.4:5601                       36m</span><br><span class="line">kube-system   ep/kube-controller-manager    &lt;none&gt;                                39m</span><br><span class="line">kube-system   ep/kube-dns                   10.244.18.2:53,10.244.18.2:53         1h</span><br><span class="line">kube-system   ep/kube-scheduler             &lt;none&gt;                                39m</span><br><span class="line">kube-system   ep/kubernetes-dashboard       10.244.3.2:9090                       1h</span><br><span class="line">kube-system   ep/monitoring-grafana         10.244.96.2:3000                      44m</span><br><span class="line">kube-system   ep/monitoring-influxdb        10.244.96.3:8086,10.244.96.3:8083     44m</span><br><span class="line">monitoring    ep/alertmanager               10.244.96.6:9093                      7m</span><br><span class="line">monitoring    ep/grafana                    10.244.3.7:3000                       7m</span><br><span class="line">monitoring    ep/kube-state-metrics         10.244.3.9:8080,10.244.96.8:8080      7m</span><br><span class="line">monitoring    ep/prometheus                 10.244.96.9:9090                      7m</span><br><span class="line">monitoring    ep/prometheus-node-exporter   192.168.10.7:9100,192.168.10.8:9100   7m</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><blockquote>
<p><a href="http://zerosre.com/2017/05/11/k8s%E6%96%B0%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85/" target="_blank" rel="noopener">http://zerosre.com/2017/05/11/k8s%E6%96%B0%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85/</a><br><a href="http://www.tongtongxue.com/archives/16338.html" target="_blank" rel="noopener">http://www.tongtongxue.com/archives/16338.html</a><br><a href="http://tonybai.com/2017/07/20/fix-cannot-access-dashboard-in-k8s-1-6-4/" target="_blank" rel="noopener">http://tonybai.com/2017/07/20/fix-cannot-access-dashboard-in-k8s-1-6-4/</a><br><a href="http://blog.frognew.com/2017/04/install-ha-kubernetes-1.6-cluster.html" target="_blank" rel="noopener">http://blog.frognew.com/2017/04/install-ha-kubernetes-1.6-cluster.html</a><br><a href="http://blog.frognew.com/2017/04/kubeadm-install-kubernetes-1.6.html" target="_blank" rel="noopener">http://blog.frognew.com/2017/04/kubeadm-install-kubernetes-1.6.html</a><br><a href="http://blog.frognew.com/2017/07/kubeadm-install-kubernetes-1.7.html" target="_blank" rel="noopener">http://blog.frognew.com/2017/07/kubeadm-install-kubernetes-1.7.html</a><br><a href="https://cloudnil.com/2017/07/10/Deploy-kubernetes1.6.7-with-kubeadm/" target="_blank" rel="noopener">https://cloudnil.com/2017/07/10/Deploy-kubernetes1.6.7-with-kubeadm/</a><br><a href="https://www.centos.bz/2017/05/centos-7-kubeadm-install-k8s-kubernetes/" target="_blank" rel="noopener">https://www.centos.bz/2017/05/centos-7-kubeadm-install-k8s-kubernetes/</a><br><a href="http://leonlibraries.github.io/2017/06/15/Kubeadm%E6%90%AD%E5%BB%BAKubernetes%E9%9B%86%E7%BE%A4/" target="_blank" rel="noopener">http://leonlibraries.github.io/2017/06/15/Kubeadm%E6%90%AD%E5%BB%BAKubernetes%E9%9B%86%E7%BE%A4/</a><br><a href="http://www.jianshu.com/p/60069089c981" target="_blank" rel="noopener">http://www.jianshu.com/p/60069089c981</a><br><a href="https://github.com/opsnull/follow-me-install-kubernetes-cluster/blob/master/10-%E9%83%A8%E7%BD%B2Heapster%E6%8F%92%E4%BB%B6.md" target="_blank" rel="noopener">https://github.com/opsnull/follow-me-install-kubernetes-cluster/blob/master/10-%E9%83%A8%E7%BD%B2Heapster%E6%8F%92%E4%BB%B6.md</a><br><a href="http://jimmysong.io/blogs/kubernetes-installation-on-centos/" target="_blank" rel="noopener">http://jimmysong.io/blogs/kubernetes-installation-on-centos/</a><br><a href="http://jimmysong.io/blogs/kubernetes-ha-master-installation/" target="_blank" rel="noopener">http://jimmysong.io/blogs/kubernetes-ha-master-installation/</a><br><a href="http://c.isme.pub/2016/11/22/docker-kubernetes/" target="_blank" rel="noopener">http://c.isme.pub/2016/11/22/docker-kubernetes/</a></p>
</blockquote>
]]></content>
      <categories>
        <category>kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes安装Docker registry</title>
    <url>/2017/10/Kubernetes%E5%AE%89%E8%A3%85Docker-registry.html</url>
    <content><![CDATA[<p>记录一下Kubernetes安装Docker registry的过程。</p>
<a id="more"></a>
<h2 id="生成证书"><a href="#生成证书" class="headerlink" title="生成证书"></a>生成证书</h2><p>参考<a href="http://blog.gcalls.cn/blog/2017/01/Docker学习总结.html#证书安装方式">http://blog.gcalls.cn/blog/2017/01/Docker学习总结.html#证书安装方式</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl req \</span><br><span class="line">  -subj <span class="string">"/C=CN/ST=GuangDong/L=ShenZhen/CN=registry.gcalls.cn"</span> \</span><br><span class="line">  -reqexts SAN -config &lt;(cat /etc/pki/tls/openssl.cnf &lt;(<span class="built_in">printf</span> <span class="string">"[SAN]\nsubjectAltName=DNS:www.abc.com,IP:192.168.10.6"</span>)) \</span><br><span class="line">  -newkey rsa:4096 -nodes -sha256 -keyout domain.key \</span><br><span class="line">  -x509 -days 365 -out domain.crt</span><br></pre></td></tr></table></figure>
<h2 id="ConfigMap"><a href="#ConfigMap" class="headerlink" title="ConfigMap"></a>ConfigMap</h2><p>将domain.crt与domain.key通过configmap方式mount在容器中：</p>
<p>registry-configMap.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">registry-configmap</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">registry-configmap</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">domain.crt:</span> <span class="string">|</span></span><br><span class="line">    <span class="string">-----BEGIN</span> <span class="string">CERTIFICATE-----</span></span><br><span class="line">    <span class="string">...</span></span><br><span class="line">    <span class="string">-----END</span> <span class="string">CERTIFICATE-----</span></span><br><span class="line">  <span class="attr">domain.key:</span> <span class="string">|</span></span><br><span class="line">    <span class="string">-----BEGIN</span> <span class="string">PRIVATE</span> <span class="string">KEY-----</span></span><br><span class="line">    <span class="string">...</span></span><br><span class="line">    <span class="string">-----END</span> <span class="string">PRIVATE</span> <span class="string">KEY-----</span></span><br></pre></td></tr></table></figure>
<h2 id="PV"><a href="#PV" class="headerlink" title="PV"></a>PV</h2><p>registry-pv.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolume</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kube-system-kube-registry-pv</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">kubernetes.io/cluster-service:</span> <span class="string">"true"</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">capacity:</span></span><br><span class="line">    <span class="attr">storage:</span> <span class="string">10Gi</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">  <span class="attr">hostPath:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/data</span></span><br><span class="line">  <span class="comment">#nfs:</span></span><br><span class="line">  <span class="comment">#  path: /data/k8s</span></span><br><span class="line">  <span class="comment">#  server: 192.168.12.171</span></span><br><span class="line">  <span class="attr">persistentVolumeReclaimPolicy:</span> <span class="string">Recycle</span></span><br></pre></td></tr></table></figure>
<h2 id="PVC"><a href="#PVC" class="headerlink" title="PVC"></a>PVC</h2><p>registry-pvc.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kube-registry-pvc</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">kubernetes.io/cluster-service:</span> <span class="string">"true"</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="attr">requests:</span></span><br><span class="line">      <span class="attr">storage:</span> <span class="string">10Gi</span></span><br></pre></td></tr></table></figure>
<h2 id="registry-ds"><a href="#registry-ds" class="headerlink" title="registry-ds"></a>registry-ds</h2><p>registry-ds.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kube-registry-v0</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kube-registry</span></span><br><span class="line">    <span class="attr">version:</span> <span class="string">v0</span></span><br><span class="line">    <span class="attr">kubernetes.io/cluster-service:</span> <span class="string">"true"</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">k8s-app:</span> <span class="string">kube-registry</span></span><br><span class="line">      <span class="attr">version:</span> <span class="string">v0</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">k8s-app:</span> <span class="string">kube-registry</span></span><br><span class="line">        <span class="attr">version:</span> <span class="string">v0</span></span><br><span class="line">        <span class="attr">kubernetes.io/cluster-service:</span> <span class="string">"true"</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">registry</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">registry:2</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="comment"># keep request = limit to keep this container in guaranteed class</span></span><br><span class="line">          <span class="attr">limits:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">100m</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">100Mi</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">100m</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">100Mi</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">REGISTRY_HTTP_ADDR</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">:5000</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">/var/lib/registry</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">REGISTRY_HTTP_TLS_CERTIFICATE</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">/certs/domain.crt</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">REGISTRY_HTTP_TLS_KEY</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">/certs/domain.key</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">image-store</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/var/lib/registry</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cert-volume</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/certs</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">5000</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">registry</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">image-store</span></span><br><span class="line">        <span class="attr">persistentVolumeClaim:</span></span><br><span class="line">          <span class="attr">claimName:</span> <span class="string">kube-registry-pvc</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cert-volume</span></span><br><span class="line">        <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">registry-configmap</span></span><br></pre></td></tr></table></figure>
<h2 id="registry-svc"><a href="#registry-svc" class="headerlink" title="registry-svc"></a>registry-svc</h2><p>registry-svc.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kube-registry</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kube-registry</span></span><br><span class="line">    <span class="attr">kubernetes.io/cluster-service:</span> <span class="string">"true"</span></span><br><span class="line">    <span class="attr">kubernetes.io/name:</span> <span class="string">"KubeRegistry"</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kube-registry</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">registry</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">5000</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">30009</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br></pre></td></tr></table></figure>
<h2 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl create -f registry-configMap.yaml</span><br><span class="line">kubectl create -f registry-pv.yaml</span><br><span class="line">kubectl create -f registry-pvc.yaml</span><br><span class="line">kubectl create -f registry-ds.yaml</span><br><span class="line">kubectl create -f registry-svc.yaml</span><br></pre></td></tr></table></figure>
<p>参考<a href="/files/Kubernetes安装Docker-registry/registry.zip">registry.zip</a></p>
<h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><p>如果要用docker pull或者docker push的客户端，都需要执行以下命令：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p /etc/docker/certs.d/192.168.10.6:30009</span><br><span class="line">cp domain.crt /etc/docker/certs.d/192.168.10.6:30009/ca.crt</span><br></pre></td></tr></table></figure></p>
<p>否则，会报以下错误：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Error response from daemon: Get https://192.168.10.6:30009/v1/_ping: x509: certificate signed by unknown authority</span><br></pre></td></tr></table></figure></p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull hello-world</span><br><span class="line">docker tag hello-world 192.168.10.6:30009/hello-world</span><br><span class="line">docker push 192.168.10.6:30009/hello-world</span><br></pre></td></tr></table></figure>
<h2 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h2><p>如测试出现：<br>Get <a href="https://192.168.10.6:30009/v1/_ping" target="_blank" rel="noopener">https://192.168.10.6:30009/v1/_ping</a>: net/http: TLS handshake timeout<br>有可以本地与docker开启了代理，需要关闭docker代理或者将ip添加到NO_PROXY中，文件位于：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/etc/systemd/system/docker.service.d/http-proxy.conf</span><br></pre></td></tr></table></figure></p>
<p>Get <a href="https://192.168.10.6:30009/v1/_ping" target="_blank" rel="noopener">https://192.168.10.6:30009/v1/_ping</a>: x509: cannot validate certificate for 192.168.10.6 because it doesn’t contain any IP SANs<br>这个是由于CN为registry.gcalls.cn，但通过ip，需要添加SAN信息：<br>先/etc/pki/tls/openssl.cnf配置，在该文件中找到[ v3_ca ]，在它下面添加如下内容：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[ v3_ca ]</span><br><span class="line"><span class="comment"># Extensions for a typical CA</span></span><br><span class="line">subjectAltName = IP:192.168.10.6</span><br></pre></td></tr></table></figure></p>
<p>也可以直接在创建crt时，传-reqexts SAN参数。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><blockquote>
<p><a href="https://github.com/kubernetes/kubernetes/blob/v1.7.5/cluster/addons/registry/" target="_blank" rel="noopener">https://github.com/kubernetes/kubernetes/blob/v1.7.5/cluster/addons/registry/</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Kubernetes</category>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>Kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>kubernetes学习总结</title>
    <url>/2017/09/kubernetes%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93.html</url>
    <content><![CDATA[<p>本文记录一下kubernetes的常用功能。</p>
<a id="more"></a>
<h2 id="Deployment"><a href="#Deployment" class="headerlink" title="Deployment"></a>Deployment</h2><p>Kubernetes Deployment提供了官方的用于更新Pod和Replica Set（下一代的Replication Controller）的方法，您可以在Deployment对象中只描述您所期望的理想状态（预期的运行状态），Deployment控制器为您将现在的实际状态转换成您期望的状态，例如，您想将所有的webapp:v1.0.9升级成webapp:v1.1.0，您只需创建一个Deployment，Kubernetes会按照Deployment自动进行升级。现在，您可以通过Deployment来创建新的资源（pod，rs，rc），替换已经存在的资源等。</p>
<p>Deployment集成了上线部署、滚动升级、创建副本、暂停上线任务，恢复上线任务，回滚到以前某一版本（成功/稳定）的Deployment等功能，在某种程度上，Deployment可以帮我们实现无人值守的上线，大大降低我们的上线过程的复杂沟通、操作风险。</p>
<p>Deployment的使用场景</p>
<p> 下面是Deployment的典型用例：</p>
<p>使用Deployment来启动（上线/部署）一个Pod或者ReplicaSet<br>检查一个Deployment是否成功执行<br>更新Deployment来重新创建相应的Pods（例如，需要使用一个新的Image）<br>如果现有的Deployment不稳定，那么回滚到一个早期的稳定的Deployment版本<br>暂停或者恢复一个Deployment</p>
<p>kind: 定义的对象： Replicationcontroller,  ReplicaSet  Deployment 区别</p>
<p>Replicationcontroller 的升级版是 ReplicaSet , ReplicaSet支持基于集合的 Label selector, 而RC只支持基于等式的 Lable select</p>
<p>Deployment其实就是内部调用 ReplicaSet.</p>
<p>DaemonSet 根据标签指定pod 在那个服务器上运行，需要与nodeselect 公用。</p>
<p>server定义的selector 与 Deployment 中的 template 的 lables 对应：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: tomcat-deployment</span><br><span class="line">spec:</span><br><span class="line">  replicas: 2</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: tomcat</span><br><span class="line">        tier: frontend</span><br><span class="line">    spec:</span><br><span class="line">      #hostNetwork: true</span><br><span class="line">      containers:</span><br><span class="line">      - name: tomcat</span><br><span class="line">        image: tomcat:8.5.20</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 8080</span><br><span class="line">          #hostPort: 80</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: workdir</span><br><span class="line">          mountPath: /opt</span><br><span class="line">      volumes:</span><br><span class="line">      - name: workdir</span><br><span class="line">        emptyDir: &#123;&#125;</span><br><span class="line">        #hostPath:</span><br><span class="line">        #  path: &quot;/data/works/tomcat/logs&quot;</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: tomcat-server</span><br><span class="line">spec:</span><br><span class="line">  type: NodePort</span><br><span class="line">  ports:</span><br><span class="line">  - port: 11111   # cluster IP 的端口，也就是service的ip，默认为containerPort</span><br><span class="line">    targetPort: 8080  # container容器的端口</span><br><span class="line">    nodePort: 30001</span><br><span class="line">  selector:</span><br><span class="line">    tier: frontend</span><br><span class="line">#  externalIPs: </span><br><span class="line">#  - 192.168.10.6</span><br><span class="line">#  - 192.168.10.7</span><br><span class="line">#  - 192.168.10.8</span><br></pre></td></tr></table></figure></p>
<h2 id="外部系统访问service-问题"><a href="#外部系统访问service-问题" class="headerlink" title="外部系统访问service 问题"></a>外部系统访问service 问题</h2><p>kubernetes 中三种IP 包括</p>
<blockquote>
<ol>
<li>NodeIP   node节点的IP地址</li>
<li>PodIP     pod的IP地址</li>
<li>clusterIP   service的IP地址</li>
</ol>
</blockquote>
<p>nodeIP 是kubernetes集群中每个节点的物理网卡的IP地址， client 访问kubernetes集群使用的IP地址。<br>Pod ip地址 是更具创建的网络类型，网桥分配的IP地址。<br>clusterIP 是一个虚拟的IP， cluster ip 仅作用于kubernetes service 这个对象， 是由kubernetes管理和分配ip地址，源于cluster ip地址池：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">[root@kubernetes</span> <span class="string">nginx]#</span> <span class="string">vim</span> <span class="string">/etc/kubernetes/apiserver</span></span><br><span class="line"><span class="comment"># Address range to use for services</span></span><br><span class="line"><span class="string">KUBE_SERVICE_ADDRESSES="--service-cluster-ip-range=10.254.0.0/16"</span></span><br></pre></td></tr></table></figure>
<p>cluster IP 无法ping通， 因为没有一个实体网络对象响应；</p>
<p>cluster ip 只能结合 service port 组成一个具体的通信接口，单独的cluster IP不具备tcp/ip通信基础；</p>
<p>如果 pod 对外访问，需要在servcie 中 指定 type 为 NodePort；</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-master yaml]<span class="comment"># kubectl describe service tomcat-server</span></span><br><span class="line">Name:                   tomcat-server</span><br><span class="line">Namespace:              default</span><br><span class="line">Labels:                 &lt;none&gt;</span><br><span class="line">Annotations:            &lt;none&gt;</span><br><span class="line">Selector:               tier=frontend</span><br><span class="line">Type:                   NodePort</span><br><span class="line">IP:                     10.100.53.62</span><br><span class="line">Port:                   &lt;<span class="built_in">unset</span>&gt; 11111/TCP</span><br><span class="line">NodePort:               &lt;<span class="built_in">unset</span>&gt; 30002/TCP</span><br><span class="line">Endpoints:              10.244.36.10:8080,10.244.36.13:8080,10.244.36.7:8080 + 1 more...</span><br><span class="line">Session Affinity:       None</span><br><span class="line">Events:                 &lt;none&gt;</span><br></pre></td></tr></table></figure>
<p>访问node IP ＋ node port ,可以访问页面。</p>
<p>nodeport 并没有完全解决外部访问service 的问题， 比如负载均衡问题，如果有10 pod 节点， 如果是用谷歌的GCE公有云，那么可以把 service  type=NodePort 修改为 LoadBalancer。</p>
<p>另外也可以通过设置pod(daemonset) hostNetwork=true, 将pod中所有容器的端口号直接映射到物理机上， 设置hostNetwork=true的时候需要注意，如果不指定hostport，默认hostport 等于containerport, 如果指定了hostPort, 则hostPort 必须等于containerPort的值。</p>
<h2 id="deployment创建部署"><a href="#deployment创建部署" class="headerlink" title="deployment创建部署"></a>deployment创建部署</h2><h3 id="命令行方式"><a href="#命令行方式" class="headerlink" title="命令行方式"></a>命令行方式</h3><h4 id="创建deployment"><a href="#创建deployment" class="headerlink" title="创建deployment"></a>创建deployment</h4><p>类似于docker run方式：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-master ~]<span class="comment"># kubectl create deploy --image=nginx nginx-app --port=80</span></span><br><span class="line">deployment.apps/nginx-app created</span><br><span class="line"></span><br><span class="line">[root@k8s-master ~]<span class="comment"># kubectl get deploy nginx-app   </span></span><br><span class="line">NAME        DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">nginx-app   1         1         1            1           1m</span><br><span class="line">[root@k8s-master ~]<span class="comment"># kubectl get pod |grep nginx-app</span></span><br><span class="line">nginx-app-2778402574-zv4r6           1/1       Running       0          1m</span><br></pre></td></tr></table></figure></p>
<p>以上实际上创建的是一个由deployment来管理的Pod。</p>
<p>kubectl run并不是直接创建一个Pod，而是先创建一个Deployment资源（replicas=1），再由与Deployment关联的ReplicaSet来自动创建Pod，这等价于这样一个配置：<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">run:</span> <span class="string">nginx-app</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-app</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">nginx-app</span></span><br><span class="line">  <span class="attr">strategy:</span></span><br><span class="line">    <span class="attr">rollingUpdate:</span></span><br><span class="line">      <span class="attr">maxSurge:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">maxUnavailable:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">RollingUpdate</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">nginx-app</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nginx-app</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">dnsPolicy:</span> <span class="string">ClusterFirst</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br></pre></td></tr></table></figure></p>
<p>等到容器变成Running后，就可以用kubectl命令来操作它了，比如</p>
<ul>
<li>kubectl get - 类似于docker ps，查询资源列表</li>
<li>kubectl describe - 类似于docker inspect，获取资源的详细信息</li>
<li>kubectl logs - 类似于docker logs，获取容器的日志</li>
<li>kubectl exec - 类似于docker exec，在容器内执行一个命令</li>
</ul>
<p>也可以通过api访问：<br>node:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://192.168.10.6:6443/api/v1/nodes</span><br></pre></td></tr></table></figure></p>
<p>namespaces:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://192.168.10.6:6443/api/v1/namespaces</span><br></pre></td></tr></table></figure></p>
<p>pods:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://192.168.10.6:6443/api/v1/pods</span><br></pre></td></tr></table></figure></p>
<p>services:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://192.168.10.6:6443/api/v1/services</span><br><span class="line">https://192.168.10.6:6443/api/v1/namespaces/default/services/nginx-app</span><br></pre></td></tr></table></figure></p>
<p>endpoint:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https://192.168.10.6:6443/api/v1/endpoints</span><br><span class="line">https://192.168.10.6:6443/api/v1/namespaces/default/endpoints/nginx-app</span><br></pre></td></tr></table></figure></p>
<h4 id="创建Service"><a href="#创建Service" class="headerlink" title="创建Service"></a>创建Service</h4><p>前面虽然创建了Pod，但是在kubernetes中，Pod的IP地址会随着Pod的重启而变化，并不建议直接拿Pod的IP来交互。那如何来访问这些Pod提供的服务呢？使用Service。Service为一组Pod（通过labels来选择）提供一个统一的入口，并为它们提供负载均衡和自动服务发现。比如，可以为前面的nginx-app创建一个service：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#kubectl create deployment hello-world --image=datawire/hello-world</span></span><br><span class="line"><span class="comment">#kubectl expose deployment hello-world --type=LoadBalancer --port=8000</span></span><br><span class="line">$ kubectl expose deployment nginx-app --port=80 --target-port=80 --<span class="built_in">type</span>=NodePort</span><br><span class="line">NAME         TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)        AGE</span><br><span class="line">nginx-app    NodePort    10.102.156.233   &lt;none&gt;        80:32295/TCP   2s</span><br><span class="line">curl 127.0.0.1:32295</span><br><span class="line">$ kubectl expose deployment nginx-app --port=8000 --target-port=80 --<span class="built_in">type</span>=LoadBalancer</span><br><span class="line">NAME         TYPE           CLUSTER-IP     EXTERNAL-IP   PORT(S)          AGE</span><br><span class="line">nginx-app    LoadBalancer   10.107.61.70   localhost     8000:31876/TCP   8m59s</span><br><span class="line">$ curl 127.0.0.1:8000</span><br><span class="line"><span class="comment">#curl 127.0.0.1:31876 doesn't work</span></span><br><span class="line">service <span class="string">"nginx-app"</span> exposed</span><br><span class="line">$ kubectl describe service nginx-app</span><br><span class="line">Name:                     nginx-app</span><br><span class="line">Namespace:                default</span><br><span class="line">Labels:                   app=nginx-app</span><br><span class="line">Annotations:              &lt;none&gt;</span><br><span class="line">Selector:                 app=nginx-app</span><br><span class="line">Type:                     LoadBalancer</span><br><span class="line">IP:                       10.107.61.70</span><br><span class="line">LoadBalancer Ingress:     localhost</span><br><span class="line">Port:                     &lt;<span class="built_in">unset</span>&gt;  8000/TCP</span><br><span class="line">TargetPort:               80/TCP</span><br><span class="line">NodePort:                 &lt;<span class="built_in">unset</span>&gt;  31876/TCP</span><br><span class="line">Endpoints:                10.1.0.126:80</span><br><span class="line">Session Affinity:         None</span><br><span class="line">External Traffic Policy:  Cluster</span><br><span class="line">Events:                   &lt;none&gt;</span><br></pre></td></tr></table></figure></p>
<p>该命令不能设置nodePort，如果需要指定nodePort，需要通过kubectl edit service nginx-app修改：<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">...</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">clusterIP:</span> <span class="number">10.97</span><span class="number">.111</span><span class="number">.200</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">nodePort:</span> <span class="number">31798</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">32222</span></span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure></p>
<p>测试：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-master ~]<span class="comment"># kubectl get svc</span></span><br><span class="line">NAME            CLUSTER-IP       EXTERNAL-IP   PORT(S)           AGE</span><br><span class="line">nginx-app       10.97.111.200    &lt;nodes&gt;       80:32222/TCP      10m</span><br><span class="line"></span><br><span class="line">[root@k8s-master ~]<span class="comment"># kubectl run busybox --rm -ti --image=busybox --restart=Never /bin/sh</span></span><br><span class="line"><span class="comment">#以上每次退出后会自动删除images中的镜像，每次执行都会重新下载image，所以每次执行都会有些慢。</span></span><br><span class="line">If you don<span class="string">'t see a command prompt, try pressing enter.</span></span><br><span class="line"><span class="string">/ # ping nginx-app</span></span><br><span class="line"><span class="string">PING nginx-app (10.97.111.200): 56 data bytes</span></span><br><span class="line"><span class="string">^C</span></span><br><span class="line"><span class="string">--- nginx-app ping statistics ---</span></span><br><span class="line"><span class="string">1 packets transmitted, 0 packets received, 100% packet loss</span></span><br></pre></td></tr></table></figure></p>
<p>这样，在cluster内部就可以通过<a href="http://10.97.111.200和http://node-ip:32222来访问nginx-app。" target="_blank" rel="noopener">http://10.97.111.200和http://node-ip:32222来访问nginx-app。</a><br>而在cluster外面，则只能通过<a href="http://node-ip:32222来访问。" target="_blank" rel="noopener">http://node-ip:32222来访问。</a></p>
<h3 id="deployment部署文件"><a href="#deployment部署文件" class="headerlink" title="deployment部署文件"></a>deployment部署文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-deployment</span><br><span class="line">spec:</span><br><span class="line">  replicas: 2</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: nginx</span><br><span class="line">        tier: frontend</span><br><span class="line">    spec:</span><br><span class="line">      <span class="comment">#hostNetwork: true</span></span><br><span class="line">      containers:</span><br><span class="line">      - name: nginx</span><br><span class="line">        image: nginx:1.12.1</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 80</span><br><span class="line">          <span class="comment">#hostPort: 80</span></span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: workdir</span><br><span class="line">          mountPath: /opt</span><br><span class="line">      volumes:</span><br><span class="line">      - name: workdir</span><br><span class="line">        emptyDir: &#123;&#125;</span><br><span class="line">        <span class="comment">#emptyDir:</span></span><br><span class="line">        <span class="comment">#  medium: Memory</span></span><br><span class="line">        <span class="comment">#hostPath:</span></span><br><span class="line">        <span class="comment">#  path: "/data/works/nginx/logs"</span></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-server</span><br><span class="line">spec:</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line">  ports:</span><br><span class="line">  - port: 22222   <span class="comment"># cluster IP 的端口</span></span><br><span class="line">    targetPort: 80  <span class="comment"># container容器的端口</span></span><br><span class="line">    nodePort: 30002</span><br><span class="line">  selector:</span><br><span class="line">    tier: frontend</span><br><span class="line"><span class="comment">#  externalIPs: </span></span><br><span class="line"><span class="comment">#  - 192.168.10.6</span></span><br><span class="line"><span class="comment">#  - 192.168.10.7</span></span><br><span class="line"><span class="comment">#  - 192.168.10.8</span></span><br></pre></td></tr></table></figure>
<p>容易混淆的概念：<br>1、NodePort和port</p>
<p>前者是将服务暴露给外部用户使用并在node上、后者则是为内部组件相互通信提供服务的，是在service上的端口。</p>
<p>2、targetPort<br>targetPort是pod上的端口，用来将pod内的container与外部进行通信的端口</p>
<p>3、port、NodePort、ContainerPort和targetPort在哪儿？</p>
<p>port在service上，负责处理对内的通信，clusterIP:port</p>
<p>NodePort在node上，负责对外通信，NodeIP:NodePort</p>
<p>ContainerPort在容器上，用于被pod绑定</p>
<p>targetPort在pod上、负责与kube-proxy代理的port和Nodeport数据进行通信</p>
<h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl create -f nginx.yaml</span><br></pre></td></tr></table></figure>
<h3 id="查看状态"><a href="#查看状态" class="headerlink" title="查看状态"></a>查看状态</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-master yaml]<span class="comment"># kubectl get deploy nginx -o wide           </span></span><br><span class="line">NAME      DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE       CONTAINER(S)   IMAGE(S)       SELECTOR</span><br><span class="line">nginx     1         1         1            1           1d        nginx          nginx:1.12.1   app=nginx</span><br></pre></td></tr></table></figure>
<p>DESIRED 期望的副本数<br>CURRENT 当前副本数<br>UP-TO-DATA 最新副本数<br>AVALLABLE  可用副本数</p>
<h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl delete -f nginx.yaml</span><br></pre></td></tr></table></figure>
<p>如果没有原始的yaml，有两种方式可以删除：</p>
<p>先删除deployment:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-master ~]<span class="comment"># kubectl get deploy</span></span><br><span class="line">NAME                DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">nginx               1         1         1            1           30m</span><br><span class="line"></span><br><span class="line">kubectl delete deploy nginx</span><br><span class="line"><span class="comment">#或者</span></span><br><span class="line">kubectl delete deployment/nginx</span><br></pre></td></tr></table></figure></p>
<p>再删除service:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@k8s-master ~]# kubectl get svc</span><br><span class="line">NAME            CLUSTER-IP       EXTERNAL-IP   PORT(S)           AGE</span><br><span class="line">nginx           10.100.125.137   &lt;nodes&gt;       80:32222/TCP      10m</span><br><span class="line"></span><br><span class="line">kubectl delete service nginx</span><br></pre></td></tr></table></figure></p>
<p>另外一种方式可以先把deployment与service生成yaml，再通过yaml文件生成：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get deploy,svc nginx-app -o yaml &gt; nginx-app.yaml</span><br><span class="line">kubectl delete -f nginx.yaml</span><br></pre></td></tr></table></figure></p>
<h3 id="使用RS管理Pod"><a href="#使用RS管理Pod" class="headerlink" title="使用RS管理Pod"></a>使用RS管理Pod</h3><p>Replica Set（简称RS）是k8s新一代的Pod controller。与RC相比仅有selector存在差异，RS支持了set-based selector（可以使用in、notin、key存在、key不存在四种方式来选择满足条件的label集合）。Deployment是基于RS实现的，我们可以使用kubectl get rs命令来查看Deployment创建的RS：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-master ~]<span class="comment"># kubectl get rs    </span></span><br><span class="line">NAME                           DESIRED   CURRENT   READY     AGE</span><br><span class="line">nginx-app-2778402574           1         1         1         34m</span><br></pre></td></tr></table></figure></p>
<p>由Deployment创建的RS的命名规则为”&lt;Deployment名称&gt;-<pod template摘要值>“。</pod></p>
<h3 id="更新部署"><a href="#更新部署" class="headerlink" title="更新部署"></a>更新部署</h3><p>（镜像升级）：<br>把image镜像从 nginx:1.12.1 升级到 nginx:1.13<br>kubectl set image deployment/tomcat-deployment nginx=nginx:1.13</p>
<h3 id="直接使用edit修改"><a href="#直接使用edit修改" class="headerlink" title="直接使用edit修改"></a>直接使用edit修改</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl edit deployment/nginx-deployment</span><br></pre></td></tr></table></figure>
<h3 id="扩展副本数"><a href="#扩展副本数" class="headerlink" title="扩展副本数"></a>扩展副本数</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl scale deployment nginx-deployment --replicas=3</span><br></pre></td></tr></table></figure>
<h2 id="kubernetes-volume"><a href="#kubernetes-volume" class="headerlink" title="kubernetes volume"></a>kubernetes volume</h2><p>（存储卷）:</p>
<h3 id="emptyDir"><a href="#emptyDir" class="headerlink" title="emptyDir"></a>emptyDir</h3><p>EmptyDir类型的volume创建于pod被调度到某个宿主机上的时候，而同一个pod内的容器都能读写EmptyDir中的同一个文件。一旦这个pod离开了这个宿主机，EmptyDirr中的数据就会被永久删除。所以目前EmptyDir类型的volume主要用作临时空间，比如Web服务器写日志或者tmp文件需要的临时目录。<br>默认的，emptyDir 磁盘会存储在主机所使用的媒介上，可能是SSD，或者网络硬盘，这主要取决于你的环境。当然，我们也可以将emptyDir.medium的值设置为Memory来告诉Kubernetes 来挂在一个基于内存的目录tmpfs，因为tmpfs速度会比硬盘块度了，但是，当主机重启的时候所有的数据都会丢失。<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test-pd</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">gcr.io/google_containers/test-webserver</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">test-container</span></span><br><span class="line">    <span class="attr">volumeMounts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/cache</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">cache-volume</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cache-volume</span></span><br><span class="line">    <span class="comment">#emptyDir: &#123;&#125;</span></span><br><span class="line">    <span class="attr">emptyDir:</span></span><br><span class="line">      <span class="attr">medium:</span> <span class="string">Memory</span></span><br></pre></td></tr></table></figure></p>
<h3 id="hostPath"><a href="#hostPath" class="headerlink" title="hostPath"></a>hostPath</h3><p>为在pod上挂载宿主机上的文件或者目录<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="comment">#hostNetwork: true</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">tomcat</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">tomcat:8.5.20</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8080</span></span><br><span class="line">      <span class="comment">#hostPort: 80</span></span><br><span class="line">    <span class="attr">volumeMounts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">workdir</span></span><br><span class="line">      <span class="attr">mountPath:</span> <span class="string">/opt</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">workdir</span></span><br><span class="line">    <span class="attr">hostPath:</span></span><br><span class="line">      <span class="attr">path:</span> <span class="string">"/data/works/tomcat/logs"</span></span><br></pre></td></tr></table></figure></p>
<h3 id="nfs"><a href="#nfs" class="headerlink" title="nfs"></a>nfs</h3><p>使用nfs网络文件服务器提供的共享目录存储数据时，需要部署一个nfs server，定义nfs类型volume 如：<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">volumeMounts:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">workdir</span></span><br><span class="line">  <span class="attr">nfs:</span></span><br><span class="line">    <span class="attr">server:</span> <span class="string">nfs-server</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">"/"</span></span><br></pre></td></tr></table></figure></p>
<h3 id="持久卷"><a href="#持久卷" class="headerlink" title="持久卷"></a>持久卷</h3><p>静态供应需要管理员手动创建 PV，然后创建 PVC 绑定 PV，最后创建 Pod 声明使用 PVC</p>
<p>创建 PV</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat PersistentVolume.yaml </span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolume</span><br><span class="line">metadata:</span><br><span class="line">  name: task-pv-volume</span><br><span class="line">  labels:</span><br><span class="line">    <span class="built_in">type</span>: <span class="built_in">local</span></span><br><span class="line">spec:</span><br><span class="line">  storageClassName: manual <span class="comment">#静态供应，名字可以任意取</span></span><br><span class="line">  capacity:</span><br><span class="line">    storage: 10Gi</span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteOnce</span><br><span class="line">  hostPath:</span><br><span class="line">    path: <span class="string">"/works/loki/data"</span> <span class="comment">#在创建pod的节点上会新建该目录</span></span><br><span class="line"></span><br><span class="line">cat PersistentVolumeClaim.yaml </span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolumeClaim</span><br><span class="line">metadata:</span><br><span class="line">  name: task-pv-claim</span><br><span class="line">spec:</span><br><span class="line">  storageClassName: manual <span class="comment">#storageClassName要和PV中的一致</span></span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteOnce <span class="comment">#accessMode要和PV中的一致</span></span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      storage: 3Gi <span class="comment">#申请3G容量，申请就近原则，如果有一个10G的和一个20G的PV满足要求，那么使用10G的PV</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Test</span></span><br><span class="line">cat Nginx.yaml </span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: task-pv-pod</span><br><span class="line">spec:</span><br><span class="line">  volumes:</span><br><span class="line">    - name: task-pv-storage</span><br><span class="line">      persistentVolumeClaim:</span><br><span class="line">        claimName: task-pv-claim  <span class="comment">#使用的PVC的名字</span></span><br><span class="line">  containers:</span><br><span class="line">    - name: task-pv-container1</span><br><span class="line">      image: nginx</span><br><span class="line">      ports:</span><br><span class="line">        - containerPort: 80</span><br><span class="line">          name: <span class="string">"http-server"</span></span><br><span class="line">      volumeMounts:</span><br><span class="line">        - mountPath: <span class="string">"/usr/share/nginx/html"</span> <span class="comment">#容器中挂载的目录</span></span><br></pre></td></tr></table></figure>
<p>创建后：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /works/loki/data</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"volume nginx"</span> &gt; index.html</span><br></pre></td></tr></table></figure>
<p>curl一下kubectl get pod -o wide中的IP就可以显示了。注意：</p>
<p>由于指定的是本地目录，如果飘逸到另外一台，目录会自动创建好。（可以考虑mount某个目录。多机器不建议。）</p>
<p>删除要按照 Pod–&gt;PVC–&gt;PV 的顺序删除，如果先删除了 PVC 会等 Pod 删除掉，才会删除 PVC ，如果先删除了 PV，会等 pod 和 PVC 删除了才会删除 PV。</p>
<p>清理：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl delete po task-pv-pod</span><br><span class="line">kubectl delete pvc task-pv-claim</span><br><span class="line">kubectl delete pv task-pv-volume</span><br></pre></td></tr></table></figure>
<p>还有NFS等模式，参考以下：</p>
<ul>
<li><a href="https://cloud.tencent.com/developer/article/1825527" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/1825527</a></li>
<li><a href="https://blog.csdn.net/zhaikaiyun/article/details/104481456" target="_blank" rel="noopener">https://blog.csdn.net/zhaikaiyun/article/details/104481456</a></li>
<li><a href="https://kubernetes.io/zh/docs/concepts/storage/persistent-volumes/" target="_blank" rel="noopener">https://kubernetes.io/zh/docs/concepts/storage/persistent-volumes/</a></li>
</ul>
<h2 id="Namespace"><a href="#Namespace" class="headerlink" title="Namespace"></a>Namespace</h2><p>命名空间<br>Namespace 在很多情况下用于多租户的资源隔离，Namespace通过将集群内部的资源对象“分配”到不通的Namespace中， 形成逻辑上的分组的不同项目，小组或者 用户组，便于不同的分组在共享使用这个集群的资源的同时还能被分别管理。<br>如果不特别指明namespace，则用户创建的 pod rc service 都将被系统创建到defalut中</p>
<p>kubernetes集群在启动后，会创建一个 default 的 namespace:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-master ~]<span class="comment"># kubectl get namespace</span></span><br><span class="line">NAME          STATUS    AGE</span><br><span class="line">default       Active    6d</span><br><span class="line">kube-public   Active    6d</span><br><span class="line">kube-system   Active    6d</span><br><span class="line">monitoring    Active    2d</span><br><span class="line">sock-shop     Active    5d</span><br><span class="line">xxx           Active    5d</span><br></pre></td></tr></table></figure></p>
<p>如果不特别指明namespace，则用户创建的 pod rc service 都将被系统创建到defalut中。<br>创建namespace：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#创建fengjian20170221 的命名空间</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Namespace</span><br><span class="line">metadata:</span><br><span class="line">  name: monitoring</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: tomcat-deployment</span><br><span class="line">  namespace: monitoring</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<h2 id="ConfigMap"><a href="#ConfigMap" class="headerlink" title="ConfigMap"></a>ConfigMap</h2><p>configmap 供容器使用的典型方案如下：</p>
<ol>
<li>生成为容器内的环境变量</li>
<li>设置容器启动命令的启动参数</li>
<li>以volume的形式挂载为容器内部的文件或者目录<br>4: 注意必须先创建 configMap, 然后pod 才能创建，如果已经创建的pod，升级，环境变量无法找到，一定要做好提前规划。</li>
</ol>
<h3 id="生成为容器内的环境变量"><a href="#生成为容器内的环境变量" class="headerlink" title="生成为容器内的环境变量"></a>生成为容器内的环境变量</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">testenv</span></span><br><span class="line"><span class="comment">#  namespace: test</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">mysql_server:</span> <span class="number">192.168</span><span class="number">.10</span><span class="number">.1</span></span><br><span class="line">  <span class="attr">redis_server:</span> <span class="number">192.168</span><span class="number">.20</span><span class="number">.1</span></span><br><span class="line">  <span class="attr">mongo_server:</span> <span class="number">192.168</span><span class="number">.30</span><span class="number">.1</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="comment">#  namespace: test</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">nginx:1.12.1</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mysql_server</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">configMapKeyRef:</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">testenv</span></span><br><span class="line">              <span class="attr">key:</span> <span class="string">mysql_server</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">redis_server</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">configMapKeyRef:</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">testenv</span></span><br><span class="line">              <span class="attr">key:</span> <span class="string">redis_server</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mongo_server</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">configMapKeyRef:</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">testenv</span></span><br><span class="line">              <span class="attr">key:</span> <span class="string">mongo_server</span></span><br></pre></td></tr></table></figure>
<h3 id="mount的方式"><a href="#mount的方式" class="headerlink" title="mount的方式"></a>mount的方式</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">db-hosts</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">|</span></span><br><span class="line">    <span class="number">192.168</span><span class="number">.10</span><span class="number">.6</span>  <span class="string">k8s-master</span></span><br><span class="line">    <span class="number">192.168</span><span class="number">.10</span><span class="number">.7</span>  <span class="string">k8s-node1</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="comment">#  namespace: test</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">hosts-volume</span></span><br><span class="line">        <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">db-hosts</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">nginx:1.12.1</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">hosts-volume</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/mnt/hosts.append</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br></pre></td></tr></table></figure>
<p>查询mount的内容：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-master yaml]<span class="comment"># kubectl exec nginx-1688079652-917zh cat /mnt/hosts.append/hosts                      </span></span><br><span class="line">192.168.10.6  k8s-master</span><br><span class="line">192.168.10.7  k8s-node1</span><br></pre></td></tr></table></figure></p>
<p>查询所有的configmap：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-master yaml]<span class="comment"># kubectl get configmap</span></span><br><span class="line">NAME             DATA      AGE</span><br><span class="line">db-hosts         1         1d</span><br><span class="line">special-config   2         3d</span><br></pre></td></tr></table></figure></p>
<h2 id="Nginx-Ingress"><a href="#Nginx-Ingress" class="headerlink" title="Nginx Ingress"></a>Nginx Ingress</h2><p>Kubernetes 暴露服务的方式目前只有三种：LoadBlancer Service、NodePort Service、Ingress。</p>
<h3 id="部署默认后端"><a href="#部署默认后端" class="headerlink" title="部署默认后端"></a>部署默认后端</h3><p>我们知道 前端的 Nginx 最终要负载到后端 service 上，那么如果访问不存在的域名咋整？官方给出的建议是部署一个 默认后端，对于未知请求全部负载到这个默认后端上；这个后端啥也不干，就是返回 404，部署如下：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/kubernetes/ingress/master/examples/deployment/nginx/default-backend.yaml</span><br><span class="line">kubectl create -f default-backend.yaml</span><br></pre></td></tr></table></figure></p>
<h3 id="部署Ingress-Controller"><a href="#部署Ingress-Controller" class="headerlink" title="部署Ingress Controller"></a>部署Ingress Controller</h3><p>部署完后端就得把最重要的组件Nginx Ingres Controller部署：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/kubernetes/ingress/master/examples/daemonset/nginx/nginx-ingress-daemonset.yaml</span><br><span class="line">kubectl create -f nginx-ingress-daemonset.yaml</span><br></pre></td></tr></table></figure></p>
<p>注意：如果需要nginx controller监听80端口的话，需要添加hostNetwork: true的参数：<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">terminationGracePeriodSeconds:</span> <span class="number">60</span></span><br><span class="line">  <span class="attr">hostNetwork:</span> <span class="literal">true</span></span><br><span class="line">  <span class="string">...</span></span><br></pre></td></tr></table></figure></p>
<p>也可以采用deployment方式，参考<a href="https://github.com/kubernetes/ingress/tree/master/examples/deployment/nginx" target="_blank" rel="noopener">https://github.com/kubernetes/ingress/tree/master/examples/deployment/nginx</a>。</p>
<h3 id="部署Ingress"><a href="#部署Ingress" class="headerlink" title="部署Ingress"></a>部署Ingress</h3><p>希望通过frontend.zhaoxy.com访问frontend:80的服务，nginx.zhaoxy.com访问nginx-app:80的服务：<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">web-ingress</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">frontend.zhaoxy.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">frontend</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">80</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">nginx.zhaoxy.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">nginx-app</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure></p>
<h3 id="查看ingress状态"><a href="#查看ingress状态" class="headerlink" title="查看ingress状态"></a>查看ingress状态</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@k8s-master yaml]<span class="comment"># kubectl get ing -o wide</span></span><br><span class="line">NAME          HOSTS                                                 ADDRESS                     PORTS     AGE</span><br><span class="line">web-ingress   www.zhaoxy.com,frontend.zhaoxy.com,nginx.zhaoxy.com   192.168.10.6,192.168.10.7   80        21m</span><br></pre></td></tr></table></figure>
<p>完成后我们可以通过keppalived对nginx做集群即可。</p>
<h2 id="部署Traefik"><a href="#部署Traefik" class="headerlink" title="部署Traefik"></a>部署Traefik</h2><p>参考<a href="http://huxos.me/kubernetes/2017/09/19/kubernetes-cluster-07-ingress.html" target="_blank" rel="noopener">http://huxos.me/kubernetes/2017/09/19/kubernetes-cluster-07-ingress.html</a><br>Ingress的引入主要解决创建入口站点规则的问题，主要作用于7层入口(http)。 可以通过K8s的Ingress对象定义类似于nginx中的vhost、localtion、upstream等。 Nginx官方也有Ingress的实现nginxinc/kubernetes-ingress来对接k8s。</p>
<p>考虑到<a href="https://github.com/containous/traefik" target="_blank" rel="noopener">Traefik</a>部署较为方便，使用traefik提供Ingress服务。</p>
<p><img src="/images/kubernetes学习总结/traefik.png" alt="traefik"></p>
<h3 id="定义traefik需要的RBAC规则"><a href="#定义traefik需要的RBAC规则" class="headerlink" title="定义traefik需要的RBAC规则"></a>定义traefik需要的RBAC规则</h3><p>traefik-rbac.yaml:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">traefik-ingress-controller</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">traefik-ingress-controller</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">""</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">pods</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">services</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">endpoints</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">secrets</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">extensions</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ingresses</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">traefik-ingress-controller</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">traefik-ingress-controller</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">traefik-ingress-controller</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br></pre></td></tr></table></figure>
<h3 id="定义ingress编排的daemonset模版"><a href="#定义ingress编排的daemonset模版" class="headerlink" title="定义ingress编排的daemonset模版"></a>定义ingress编排的daemonset模版</h3><p>traefik-daemonset.yaml:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DaemonSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">traefik-ingress-lb</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">traefik-ingress-controller</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">k8s-app:</span> <span class="string">traefik-ingress-lb</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">k8s-app:</span> <span class="string">traefik-ingress-lb</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">traefik-ingress-lb</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--web</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--web.address=:8580</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--kubernetes</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--web.metrics</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--web.metrics.prometheus</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">traefik</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">traefik-ingress-lb</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">          <span class="attr">hostPort:</span> <span class="number">80</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8580</span></span><br><span class="line">          <span class="attr">hostPort:</span> <span class="number">8580</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="comment">#cpu: "2"</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">512M</span></span><br><span class="line">      <span class="attr">dnsPolicy:</span> <span class="string">ClusterFirst</span></span><br><span class="line">      <span class="attr">hostNetwork:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">nodeSelector:</span></span><br><span class="line">        <span class="attr">role:</span> <span class="string">ingress</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br><span class="line">      <span class="attr">schedulerName:</span> <span class="string">default-scheduler</span></span><br><span class="line">      <span class="attr">serviceAccount:</span> <span class="string">traefik-ingress-controller</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">traefik-ingress-controller</span></span><br><span class="line">      <span class="attr">terminationGracePeriodSeconds:</span> <span class="number">60</span></span><br></pre></td></tr></table></figure>
<h3 id="创建ingress规则"><a href="#创建ingress规则" class="headerlink" title="创建ingress规则"></a>创建ingress规则</h3><p>traefik-ingress.yaml:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">metadata</span> </span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">a.zhaoxy.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">nginx-app</span> </span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure>
<h3 id="创建-1"><a href="#创建-1" class="headerlink" title="创建"></a>创建</h3><p>参考<a href="/files/kubernetes学习总结/traefik.zip">traefik.zip</a><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl create -f ./</span><br></pre></td></tr></table></figure></p>
<h3 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h3><p>这样其实相当于定义了一个http的站点，域名a.zhaoxy.com指向了default的metadata-server这个服务。<br>访问相关节点的8580端口就能看到a.zhaoxy.com站点对应的信息了。</p>
<p>可以通过<a href="http://a.zhaoxy.com访问nginx-app的80服务。" target="_blank" rel="noopener">http://a.zhaoxy.com访问nginx-app的80服务。</a><br>可以通过<a href="http://a.zhaoxy.com:8580/dashboard/访问监控服务。" target="_blank" rel="noopener">http://a.zhaoxy.com:8580/dashboard/访问监控服务。</a></p>
<p><img src="/images/kubernetes学习总结/traefik-dashboard.png" alt="traefik-dashboard"></p>
<h2 id="最新命令汇总"><a href="#最新命令汇总" class="headerlink" title="最新命令汇总"></a>最新命令汇总</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">minikube addons list</span><br><span class="line">minikube addons enable dashboard</span><br><span class="line">minikube addons enable heapster</span><br><span class="line">minikube addons enable metrics-server</span><br><span class="line">minikube addons enable ingress</span><br><span class="line">minikube addons enable ingress-dns</span><br><span class="line">kubectl top node</span><br><span class="line">kubectl top pod --all-namespaces</span><br><span class="line">kubectl cluster-info</span><br><span class="line">minikube service monitoring-grafana -n kube-system</span><br><span class="line">kubectl get pod --watch</span><br><span class="line">kubectl delete all --all</span><br><span class="line">k get pod --show-labels</span><br><span class="line">k label pod xxx app=foo --overwrite</span><br><span class="line"></span><br><span class="line">#Creating by commands</span><br><span class="line">#http://kubernetes.kansea.com/docs/user-guide/kubectl/kubectl_run/</span><br><span class="line">#Not recommend and cannot set the port of NodePort</span><br><span class="line">#kubectl run nginx --image=nginx --port=80 --expose</span><br><span class="line">#Recommend</span><br><span class="line">kubectl create deployment nginx --image=nginx</span><br><span class="line">#One way and can set the port of NodePort</span><br><span class="line">kubectl create service nodeport nginx --tcp=81:80 --node-port=30000</span><br><span class="line">#The other way, but cannot set the port of NodePort</span><br><span class="line">kubectl expose deployment nginx --type=NodePort --name nginx --port=80 --target-port=80</span><br><span class="line"></span><br><span class="line">kubectl create deployment kubia --image=luksa/kubia</span><br><span class="line">kubectl expose deployment kubia --type=NodePort --name kubia-http --port=80 --target-port=8080</span><br><span class="line">#Don&apos;t use port 80</span><br><span class="line">#kubectl expose deployment kubia --type=LoadBalancer --name kubia-http --port=8000 --target-port=8080</span><br><span class="line">#kubectl create service nodeport kubia --tcp=8080:80 --node-port=30000</span><br><span class="line">minikube service kubia-http --url</span><br><span class="line"></span><br><span class="line">#Creating by yaml</span><br><span class="line">#kubia-deployment.yaml</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: kubia</span><br><span class="line">spec:</span><br><span class="line">  replicas: 2</span><br><span class="line">  #指定新创建的pod至少要成功运行多久才视为可用</span><br><span class="line">  #让k8s在pod就绪之后继续等待10秒后，才继续执行滚动升级</span><br><span class="line">  minReadySeconds: 10</span><br><span class="line">  revisionHistoryLimit: 8</span><br><span class="line">  progressDeadlineSeconds: 10</span><br><span class="line">  strategy:</span><br><span class="line">    rollingUpdate:</span><br><span class="line">      maxSurge: 1</span><br><span class="line">      #0确保升级过程中pod被挨个替换</span><br><span class="line">      maxUnavailable: 0</span><br><span class="line">    type: RollingUpdate</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      name: kubia</span><br><span class="line">      labels:</span><br><span class="line">        app: kubia</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">        - name: nodejs</span><br><span class="line">          image: luksa/kubia:v2</span><br><span class="line">          readinessProbe:</span><br><span class="line">            periodSeconds: 1</span><br><span class="line">            httpGet:</span><br><span class="line">              path: /</span><br><span class="line">              port: 8080</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: kubia</span><br><span class="line"></span><br><span class="line">#--record会记录历史版本号</span><br><span class="line">kubectl create -f kubia-deployment.yaml --record</span><br><span class="line"></span><br><span class="line">#kubia-svc.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: kubia-http</span><br><span class="line">spec:</span><br><span class="line">#   sessionAffinity: ClientIP</span><br><span class="line">#  type: NodePort</span><br><span class="line">#  type: LoadBalancer</span><br><span class="line">  ports:</span><br><span class="line">    - port: 80</span><br><span class="line">      targetPort: 8080</span><br><span class="line">#      nodePort: 30123</span><br><span class="line">  selector:</span><br><span class="line">    app: kubia</span><br><span class="line">  sessionAffinity: ClientIP</span><br><span class="line"></span><br><span class="line">#kubia-ingress.yaml</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: kubia</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">    - host: kubia.example.com</span><br><span class="line">      http:</span><br><span class="line">        paths:</span><br><span class="line">          - path: /kubia # 将 /kubia 子路径请求转发到 kubia-nodeport 服务的 80 端口</span><br><span class="line">            backend:</span><br><span class="line">              serviceName: kubia-http</span><br><span class="line">              servicePort: 80</span><br><span class="line"></span><br><span class="line">#Rollout</span><br><span class="line">kubectl create -f kubia-deployment.yaml --record</span><br><span class="line">#kubectl scale deployment kubia --replicas=3</span><br><span class="line">kubectl set image deployment kubia nodejs=luksa/kubia:v3</span><br><span class="line">kubectl rollout pause deployment kubia</span><br><span class="line">kubectl rollout resume deployment kubia</span><br><span class="line">kubectl rollout status deployment kubia</span><br><span class="line">kubectl rollout history deployment kubia</span><br><span class="line">kubectl rollout undo deployment kubia --to-revision=1</span><br><span class="line">kubectl patch deployment kubia -p &apos;&#123;&quot;spec&quot;: &#123;&quot;revisionHistoryLimit&quot;: 5&#125;&#125;&apos;</span><br><span class="line">#指定新创建的pod至少要成功运行多久才视为可用,让k8s在pod就绪之后继续等待10秒后，才继续执行滚动升级</span><br><span class="line">kubectl patch deployment kubia -p &apos;&#123;&quot;spec&quot;: &#123;&quot;minReadySeconds&quot;: 10&#125;&#125;&apos;</span><br><span class="line">#滚动失败的超时时间</span><br><span class="line">kubectl patch deployment kubia -p &apos;&#123;&quot;spec&quot;: &#123;&quot;progressDeadlineSeconds&quot;: 15&#125;&#125;&apos;</span><br><span class="line">#将本地网络端口转发到pod中的端口</span><br><span class="line">kubectl port-forward kubia-7d46fb6687-86th4 8888:8080</span><br><span class="line">kubectl port-forward service/hello-minikube 7080:80</span><br><span class="line">#获取docker内部IP:</span><br><span class="line">docker inspect  998f4f7b87c5|grep -i ip</span><br><span class="line">#Iptables</span><br><span class="line">iptables -t nat -nvL --line-number</span><br><span class="line">#删除：</span><br><span class="line">iptables -t nat -D PREROUTING 1</span><br><span class="line">iptables -t nat -D POSTROUTING 1</span><br><span class="line">docker run --name nginx-test -p 8080:80 -d nginx</span><br><span class="line"></span><br><span class="line">Helm:</span><br><span class="line">#https://helm.sh/docs/intro/install/</span><br><span class="line">#curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash</span><br><span class="line">sudo snap install helm --classic</span><br><span class="line"></span><br><span class="line">Ingress:</span><br><span class="line">#helm delete &lt;release-name&gt;</span><br><span class="line">helm repo add nginx-stable https://helm.nginx.com/stable</span><br><span class="line">helm repo update</span><br><span class="line">helm install nginx-ing nginx-stable/nginx-ingress</span><br><span class="line">helm install nginx-ingress --namespace kube-system \</span><br><span class="line">--set &quot;rbac.create=true,controller.service.externalIPs[0]=172.21.114.172,controller.service.externalIPs[1]=192.168.102.121&quot; nginx-stable/nginx-ingress</span><br><span class="line"></span><br><span class="line">Traefk:</span><br><span class="line">#https://doc.traefik.io/traefik/getting-started/install-traefik/#use-the-helm-chart</span><br><span class="line">helm repo add traefik https://helm.traefik.io/traefik</span><br><span class="line">helm repo update</span><br><span class="line">helm install traefik traefik/traefik</span><br><span class="line">kubectl port-forward $(kubectl get pods --selector &quot;app.kubernetes.io/name=traefik&quot; --output=name) 9000:9000</span><br><span class="line">Accessible with the url: http://127.0.0.1:9000/dashboard/</span><br></pre></td></tr></table></figure>
<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Example:</span></span><br><span class="line"><span class="comment">#https://learnk8s.io/spring-boot-kubernetes-guide</span></span><br><span class="line">docker network create knote</span><br><span class="line">docker run \</span><br><span class="line">  --name=mongo \</span><br><span class="line">  --rm \</span><br><span class="line">  --network=knote \</span><br><span class="line">  mongo</span><br><span class="line">docker run \</span><br><span class="line">  --name=knote-java \</span><br><span class="line">  --rm \</span><br><span class="line">  --network=knote \</span><br><span class="line">  -p 8080:8080 \</span><br><span class="line">  -e MONGO_URL=mongodb://mongo:27017/dev \</span><br><span class="line">  learnk8s/knote-java:1.0.0</span><br><span class="line"></span><br><span class="line"><span class="comment">#https://spring.io/guides/gs/spring-boot-kubernetes/</span></span><br><span class="line">$ kubectl create deployment demo --image=springguides/demo --dry-run -o=yaml &gt; deployment.yaml</span><br><span class="line">$ <span class="built_in">echo</span> --- &gt;&gt; deployment.yaml</span><br><span class="line">$ kubectl create service clusterip demo --tcp=8080:8080 --dry-run -o=yaml &gt;&gt; deployment.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment">#https://spring.io/guides/topicals/spring-on-kubernetes/</span></span><br></pre></td></tr></table></figure>
<h2 id="Context"><a href="#Context" class="headerlink" title="Context"></a>Context</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://kubernetes.io/zh/docs/reference/kubectl/cheatsheet/</span></span><br><span class="line"><span class="comment">#kubectl context config</span></span><br><span class="line">kubectl config get-contexts</span><br><span class="line"><span class="comment">#current context config</span></span><br><span class="line">kubectl config current-context</span><br><span class="line"><span class="comment">#switch config as alik8s-0</span></span><br><span class="line">kubectl config use-context alik8s-0</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><blockquote>
<p><a href="https://kubernetes.io/zh/docs/reference/kubectl/cheatsheet/" target="_blank" rel="noopener">https://kubernetes.io/zh/docs/reference/kubectl/cheatsheet/</a><br><a href="https://kubernetes.io/zh/docs/reference/access-authn-authz/rbac/" target="_blank" rel="noopener">https://kubernetes.io/zh/docs/reference/access-authn-authz/rbac/</a><br><a href="http://blog.csdn.net/felix_yujing/article/details/51622132" target="_blank" rel="noopener">http://blog.csdn.net/felix_yujing/article/details/51622132</a><br><a href="http://www.pangxie.space/docker/157" target="_blank" rel="noopener">docker与kubectl命令对比</a><br><a href="http://www.cnblogs.com/fengjian2016/p/6423455.html" target="_blank" rel="noopener">http://www.cnblogs.com/fengjian2016/p/6423455.html</a><br><a href="https://github.com/feiskyer/kubernetes-handbook/blob/master/introduction/101.md" target="_blank" rel="noopener">https://github.com/feiskyer/kubernetes-handbook/blob/master/introduction/101.md</a><br><a href="http://blog.csdn.net/xts_huangxin/article/details/51891709" target="_blank" rel="noopener">http://blog.csdn.net/xts_huangxin/article/details/51891709</a><br><a href="https://www.stratoscale.com/blog/kubernetes/kubernetes-exposing-pods-service/" target="_blank" rel="noopener">https://www.stratoscale.com/blog/kubernetes/kubernetes-exposing-pods-service/</a><br><a href="http://blog.csdn.net/u012804178/article/category/6861460" target="_blank" rel="noopener">http://blog.csdn.net/u012804178/article/category/6861460</a><br><a href="http://feisky.xyz/2016/09/11/Kubernetes%E4%B8%AD%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0%E4%B8%8E%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/" target="_blank" rel="noopener">http://feisky.xyz/2016/09/11/Kubernetes%E4%B8%AD%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0%E4%B8%8E%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</a><br><a href="http://dockone.io/article/2247" target="_blank" rel="noopener">http://dockone.io/article/2247</a><br><a href="https://www.kubernetes.org.cn/%E6%96%87%E6%A1%A3%E4%B8%8B%E8%BD%BD" target="_blank" rel="noopener">https://www.kubernetes.org.cn/%E6%96%87%E6%A1%A3%E4%B8%8B%E8%BD%BD</a><br><a href="http://kubernetes.kansea.com/docs/" target="_blank" rel="noopener">http://kubernetes.kansea.com/docs/</a><br><a href="https://www.kubernetes.org.cn/1885.html" target="_blank" rel="noopener">https://www.kubernetes.org.cn/1885.html</a><br><a href="https://mritd.me/2017/03/04/how-to-use-nginx-ingress" target="_blank" rel="noopener">https://mritd.me/2017/03/04/how-to-use-nginx-ingress</a><br><a href="http://huxos.me/kubernetes/2017/09/19/kubernetes-cluster-07-ingress.html" target="_blank" rel="noopener">http://huxos.me/kubernetes/2017/09/19/kubernetes-cluster-07-ingress.html</a></p>
</blockquote>
]]></content>
      <categories>
        <category>kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>spring cloud+docker+prometheus grafana监控</title>
    <url>/2017/11/spring-cloud-docker-prometheus-grafana%E7%9B%91%E6%8E%A7.html</url>
    <content><![CDATA[<p>最近公司上线一套基于docker的spring cloud微服务系统，记录一下相关的监控技术。</p>
<a id="more"></a>
<h2 id="spring-boot监控"><a href="#spring-boot监控" class="headerlink" title="spring boot监控"></a>spring boot监控</h2><h3 id="actuator"><a href="#actuator" class="headerlink" title="actuator"></a>actuator</h3><p>Spring Boot 包含了一系列的附加特性，来帮助你监控和管理生产环境下运行时的应用程序。你可以通过HTTP endpoints、JMX或者SSH来监控和管理应用——健康状况、系统指标、参数信息、内存状况等等。</p>
<p>添加依赖:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="admin-dashboard"><a href="#admin-dashboard" class="headerlink" title="admin-dashboard"></a>admin-dashboard</h3><p>Spring Boot Admin是一个管理和监控Spring Boot应用的项目。我们可以通过Spring Boot Admin的客户端运行，也可以Spring Cloud中注册为一个服务（比如：注册到Eureka中）。Spring Boot Amin仅仅是一个建立在Spring Boot Actuator端点上的AngularJS的应用。</p>
<p>只好不要集成在业务系统中，可以单独建立一个project。只需要进行以下添加：</p>
<p>添加依赖：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>de.codecentric<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-admin-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>de.codecentric<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-admin-server-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>启动类添加：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@EnableAdminServer</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br></pre></td></tr></table></figure>
<p>配置:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8040</span></span><br><span class="line">  </span><br><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">context-path:</span> <span class="string">/ops</span></span><br><span class="line">  <span class="attr">security:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">    </span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">admin-dashboard</span></span><br><span class="line">  <span class="attr">boot:</span></span><br><span class="line">    <span class="attr">admin:</span></span><br><span class="line">      <span class="attr">monitor:</span></span><br><span class="line">        <span class="attr">connect-timeout:</span> <span class="number">10000</span></span><br><span class="line">        <span class="attr">read-timeout:</span> <span class="number">60000</span></span><br><span class="line"></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">preferIpAddress:</span> <span class="literal">true</span></span><br><span class="line">      <span class="comment"># eureka的ip，如果有多个ip地址时，需要在此处指定</span></span><br><span class="line"><span class="comment">#      ipAddress: 127.0.0.1</span></span><br><span class="line">      <span class="comment"># 续约到期时间（默认90秒）</span></span><br><span class="line">    <span class="attr">leaseExpirationDurationInSeconds:</span> <span class="number">30</span></span><br><span class="line">      <span class="comment">#续约更新时间间隔（默认30秒），在生产中，最好坚持使用默认值，因为在服务器内部有一些计算，他们对续约做出假设。</span></span><br><span class="line">    <span class="attr">leaseRenewalIntervalInSeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="comment">#    instance-id: $&#123;spring.application.name&#125;:$&#123;eureka.instance.ipAddress&#125;:$&#123;server.port&#125;</span></span><br><span class="line">    <span class="attr">statusPageUrlPath:</span> <span class="string">$&#123;management.context-path&#125;/info</span></span><br><span class="line">    <span class="attr">healthCheckUrlPath:</span> <span class="string">$&#123;management.context-path&#125;/health</span></span><br><span class="line">    <span class="attr">metadata-map:</span></span><br><span class="line">      <span class="attr">management.context-path:</span> <span class="string">$&#123;management.context-path&#125;</span></span><br><span class="line">    </span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">registerWithEureka:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">serviceUrl:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:8761/eureka/</span></span><br></pre></td></tr></table></figure>
<p>效果：<br><img src="/images/spring-cloud-docker-prometheus-grafana监控/admin-dashboard.png" alt="admin-dashboard.png"></p>
<h3 id="prometheus日志收集"><a href="#prometheus日志收集" class="headerlink" title="prometheus日志收集"></a>prometheus日志收集</h3><p>Prometheus用于收集actuator的信息，再在grafana中进行显示。</p>
<p>添加依赖：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.prometheus<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>simpleclient_spring_boot<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>启动类添加：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@EnablePrometheusEndpoint</span></span><br><span class="line"><span class="meta">@EnableSpringBootMetricsCollector</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br></pre></td></tr></table></figure>
<p>配置:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># prometheus endpoint, enabled default false    </span></span><br><span class="line"><span class="attr">endpoints:</span></span><br><span class="line">  <span class="attr">prometheus:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># prometheus endpoint, enabled default false    </span></span><br><span class="line"><span class="attr">endpoints:</span></span><br><span class="line">  <span class="attr">prometheus:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>也可以对某个接口作数据收集：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> Gauge getErrorTaskListRequests = Gauge.build()</span><br><span class="line">  .labelNames(<span class="string">"api"</span>,<span class="string">"desc"</span>).name(<span class="string">"boc_getErrorTaskList"</span>)</span><br><span class="line">  help(<span class="string">"Boc getErrorTaskList failure."</span>).register();</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;TaskDto&gt; <span class="title">getErrorTaskList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  getErrorTaskListRequests.clear();</span><br><span class="line">  <span class="keyword">if</span>(taskDtoList!=<span class="keyword">null</span> &amp;&amp; !taskDtoList.isEmpty()) &#123;</span><br><span class="line">      getErrorTaskListRequests.labels(<span class="string">"getErrorTaskList"</span>,<span class="string">"定时任务监控"</span>).inc(taskDtoList.size());</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> taskDtoList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="/images/spring-cloud-docker-prometheus-grafana监控/prometheus-customer.png" alt="prometheus-customer"></p>
<p>访问：<br><a href="http://ip:port/ops/prometheus" target="_blank" rel="noopener">http://ip:port/ops/prometheus</a><br><img src="/images/spring-cloud-docker-prometheus-grafana监控/prometheus.png" alt="prometheus.png"></p>
<h2 id="prometheus"><a href="#prometheus" class="headerlink" title="prometheus"></a>prometheus</h2><p>参考：<a href="https://segmentfault.com/a/1190000008629939" target="_blank" rel="noopener">https://segmentfault.com/a/1190000008629939</a></p>
<p>Prometheus 是使用 Golang 开发的开源监控系统，被人称为下一代监控系统，是为数不多的适合 Docker、Mesos 、Kubernetes 环境的监控系统之一 。</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name prometheus -p 9090:9090 -v \</span><br><span class="line">/works/conf/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml prom/prometheus</span><br></pre></td></tr></table></figure>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>prometheus.yml相关配置如下：<br><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">global:</span></span><br><span class="line">  <span class="attr">scrape_interval:</span> <span class="string">10s</span></span><br><span class="line">  <span class="attr">scrape_timeout:</span> <span class="string">10s</span></span><br><span class="line">  <span class="attr">evaluation_interval:</span> <span class="string">10m</span></span><br><span class="line"></span><br><span class="line"><span class="attr">scrape_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">config_server</span></span><br><span class="line">    <span class="comment">#scrape_interval: 5s</span></span><br><span class="line">    <span class="comment">#scrape_timeout: 5s</span></span><br><span class="line">    <span class="attr">metrics_path:</span> <span class="string">/ops/prometheus</span></span><br><span class="line">    <span class="attr">scheme:</span> <span class="string">http</span></span><br><span class="line">    <span class="comment">#basic_auth:</span></span><br><span class="line">    <span class="comment">#  username: admin</span></span><br><span class="line">    <span class="comment">#  password: 123456</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['192.168.63.21:8100']</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">instance:</span> <span class="number">192.168</span><span class="number">.63</span><span class="number">.21</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['192.168.64.21:8100']</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">instance:</span> <span class="number">192.168</span><span class="number">.64</span><span class="number">.21</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">employee_server</span></span><br><span class="line">    <span class="attr">metrics_path:</span> <span class="string">/ops/prometheus</span></span><br><span class="line">    <span class="attr">scheme:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['192.168.63.31:8078']</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">instance:</span> <span class="number">192.168</span><span class="number">.63</span><span class="number">.31</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['192.168.64.31:8078']</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">instance:</span> <span class="number">192.168</span><span class="number">.64</span><span class="number">.31</span></span><br><span class="line">        </span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">hkcash_server</span></span><br><span class="line">    <span class="attr">metrics_path:</span> <span class="string">/ops/prometheus</span></span><br><span class="line">    <span class="attr">scheme:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['192.168.63.21:8085']</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">instance:</span> <span class="number">192.168</span><span class="number">.63</span><span class="number">.21</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['192.168.64.21:8085']</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">instance:</span> <span class="number">192.168</span><span class="number">.64</span><span class="number">.21</span></span><br><span class="line">        </span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">eureka_server</span></span><br><span class="line">    <span class="attr">metrics_path:</span> <span class="string">/ops/prometheus</span></span><br><span class="line">    <span class="attr">scheme:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['192.168.63.31:8761']</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">instance:</span> <span class="number">192.168</span><span class="number">.63</span><span class="number">.31</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['192.168.64.31:8761']</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">instance:</span> <span class="number">192.168</span><span class="number">.64</span><span class="number">.31</span></span><br><span class="line">        </span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">notify_server</span></span><br><span class="line">    <span class="attr">metrics_path:</span> <span class="string">/ops/prometheus</span></span><br><span class="line">    <span class="attr">scheme:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['192.168.63.31:8086']</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">instance:</span> <span class="number">192.168</span><span class="number">.63</span><span class="number">.31</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['192.168.64.31:8086']</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">instance:</span> <span class="number">192.168</span><span class="number">.64</span><span class="number">.31</span></span><br><span class="line">        </span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">tu_server</span></span><br><span class="line">    <span class="attr">metrics_path:</span> <span class="string">/ops/prometheus</span></span><br><span class="line">    <span class="attr">scheme:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['192.168.63.11:45678']</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">instance:</span> <span class="number">192.168</span><span class="number">.63</span><span class="number">.11</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['192.168.64.11:45678']</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">instance:</span> <span class="number">192.168</span><span class="number">.64</span><span class="number">.11</span></span><br><span class="line">        </span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">app_gateway</span></span><br><span class="line">    <span class="attr">metrics_path:</span> <span class="string">/ops/prometheus</span></span><br><span class="line">    <span class="attr">scheme:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['192.168.63.11:8062']</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">instance:</span> <span class="number">192.168</span><span class="number">.63</span><span class="number">.11</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['192.168.64.11:8062']</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">instance:</span> <span class="number">192.168</span><span class="number">.64</span><span class="number">.11</span></span><br><span class="line">        </span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">lms_webapp</span></span><br><span class="line">    <span class="attr">metrics_path:</span> <span class="string">/ops/prometheus</span></span><br><span class="line">    <span class="attr">scheme:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['192.168.63.101:8079']</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">instance:</span> <span class="number">192.168</span><span class="number">.63</span><span class="number">.101</span></span><br><span class="line">        </span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">los_webapp</span></span><br><span class="line">    <span class="attr">metrics_path:</span> <span class="string">/ops/prometheus</span></span><br><span class="line">    <span class="attr">scheme:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['192.168.63.101:8080']</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">instance:</span> <span class="number">192.168</span><span class="number">.63</span><span class="number">.101</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">cAdvisor</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['192.168.63.21:4194']</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">container_group:</span> <span class="number">192.168</span><span class="number">.63</span><span class="number">.21</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['192.168.64.21:4194']</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">container_group:</span> <span class="number">192.168</span><span class="number">.64</span><span class="number">.21</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['192.168.63.31:4194']</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">container_group:</span> <span class="number">192.168</span><span class="number">.63</span><span class="number">.31</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['192.168.64.31:4194']</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">container_group:</span> <span class="number">192.168</span><span class="number">.64</span><span class="number">.31</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['192.168.63.11:4194']</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">container_group:</span> <span class="number">192.168</span><span class="number">.63</span><span class="number">.11</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['192.168.64.11:4194']</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">container_group:</span> <span class="number">192.168</span><span class="number">.64</span><span class="number">.11</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['192.168.63.101:4194']</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">container_group:</span> <span class="number">192.168</span><span class="number">.63</span><span class="number">.101</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['192.168.64.178:4194']</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">container_group:</span> <span class="number">192.168</span><span class="number">.64</span><span class="number">.178</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['192.168.64.179:4194']</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">container_group:</span> <span class="number">192.168</span><span class="number">.64</span><span class="number">.179</span></span><br></pre></td></tr></table></figure></p>
<h3 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h3><p>访问：<br><a href="http://ip:9090/graph" target="_blank" rel="noopener">http://ip:9090/graph</a></p>
<p>效果：<br><img src="/images/spring-cloud-docker-prometheus-grafana监控/prometheus-ui.png" alt="prometheus-ui"></p>
<h2 id="grafna"><a href="#grafna" class="headerlink" title="grafna"></a>grafna</h2><p>Grafana 是一个开源的图表可视化系统，简言之，其特点在于图表配置比较方便、生成的图表漂亮。<br>Prometheus + Grafana 监控系统的组合中，前者负责采样数据并存储这些数据；后者则侧重于形象生动的展示数据。</p>
<h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name grafana -p 3000:3000 grafana/grafana</span><br></pre></td></tr></table></figure>
<h3 id="访问-1"><a href="#访问-1" class="headerlink" title="访问"></a>访问</h3><p><a href="http://192.168.64.178:3000" target="_blank" rel="noopener">http://192.168.64.178:3000</a></p>
<p>默认登录账户密码都为admin</p>
<h3 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h3><h4 id="添加数据源"><a href="#添加数据源" class="headerlink" title="添加数据源"></a>添加数据源</h4><p><img src="/images/spring-cloud-docker-prometheus-grafana监控/grafana-config.png" alt="grafana-config"></p>
<h4 id="添加Templating"><a href="#添加Templating" class="headerlink" title="添加Templating"></a>添加Templating</h4><p><img src="/images/spring-cloud-docker-prometheus-grafana监控/templating.png" alt="templating"></p>
<p>job:<br><img src="/images/spring-cloud-docker-prometheus-grafana监控/templating-job.png" alt="templating-job"></p>
<p>instance:<br><img src="/images/spring-cloud-docker-prometheus-grafana监控/templating-instance.png" alt="templating-instance"></p>
<p>apis:<br><img src="/images/spring-cloud-docker-prometheus-grafana监控/templating-apis.png" alt="templating-apis"></p>
<p>效果<br><img src="/images/spring-cloud-docker-prometheus-grafana监控/templating1.png" alt="templating1"></p>
<h4 id="添加panel"><a href="#添加panel" class="headerlink" title="添加panel"></a>添加panel</h4><h5 id="mem"><a href="#mem" class="headerlink" title="mem"></a>mem</h5><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">mem&#123;job=~"[[job]]",instance=~"[[instance]]"&#125;</span></span><br><span class="line"><span class="string">mem_free&#123;job=~"[[job]]",instance=~"[[instance]]"&#125;</span></span><br></pre></td></tr></table></figure>
<p><img src="/images/spring-cloud-docker-prometheus-grafana监控/grafana-panel1.png" alt="grafana-panel1"></p>
<p><img src="/images/spring-cloud-docker-prometheus-grafana监控/grafana-panel2.png" alt="grafana-panel2"></p>
<p><img src="/images/spring-cloud-docker-prometheus-grafana监控/grafana-panel3.png" alt="grafana-panel3"></p>
<p><img src="/images/spring-cloud-docker-prometheus-grafana监控/grafana-panel4.png" alt="grafana-panel4"></p>
<p>效果<br><img src="/images/spring-cloud-docker-prometheus-grafana监控/grafana-panel5.png" alt="grafana-panel5"></p>
<h5 id="Heap"><a href="#Heap" class="headerlink" title="Heap"></a>Heap</h5><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">heap&#123;job=~"[[job]]",instance=~"[[instance]]"&#125;</span></span><br><span class="line"><span class="string">heap_committed&#123;job=~"[[job]]",instance=~"[[instance]]"&#125;</span></span><br><span class="line"><span class="string">heap_used&#123;job=~"[[job]]",instance=~"[[instance]]"&#125;</span></span><br><span class="line"><span class="string">nonheap&#123;job="~[[job]]",instance="~[[instance]]"&#125;</span></span><br><span class="line"><span class="string">nonheap_committed&#123;job=~"[[job]]",instance=~"[[instance]]"&#125;</span></span><br><span class="line"><span class="string">nonheap_used&#123;job=~"[[job]]",instance=~"[[instance]]"&#125;</span></span><br></pre></td></tr></table></figure>
<h5 id="Threads"><a href="#Threads" class="headerlink" title="Threads"></a>Threads</h5><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">threads&#123;job=~"[[job]]",instance=~"[[instance]]"&#125;</span></span><br><span class="line"><span class="string">threads_peak&#123;job=~"[[job]]",instance=~"[[instance]]"&#125;</span></span><br><span class="line"><span class="string">threads_daemon&#123;job=~"[[job]]",instance=~"[[instance]]"&#125;</span></span><br></pre></td></tr></table></figure>
<h5 id="systemload-average"><a href="#systemload-average" class="headerlink" title="systemload_average"></a>systemload_average</h5><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">systemload_average&#123;job=~"[[job]]",instance=~"[[instance]]"&#125;</span></span><br></pre></td></tr></table></figure>
<h5 id="Gauge-servo-response-api"><a href="#Gauge-servo-response-api" class="headerlink" title="Gauge_servo_response_api"></a>Gauge_servo_response_api</h5><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">&#123;job=~"[[job]]",instance=~"[[instance]]",__name__=~"gauge_servo_response_api_.*"&#125;</span></span><br></pre></td></tr></table></figure>
<p>具体的配置文件参考<a href="/files/spring-cloud-docker-prometheus-grafana监控/prometheus.json">prometheus.json</a></p>
<h3 id="整体效果"><a href="#整体效果" class="headerlink" title="整体效果"></a>整体效果</h3><p><img src="/images/spring-cloud-docker-prometheus-grafana监控/grafana-ui.png" alt="grafana-ui"></p>
<h2 id="容器监控"><a href="#容器监控" class="headerlink" title="容器监控"></a>容器监控</h2><p>通过cAdvisor收集docker日志，再通过prometheus在grafana中显示。</p>
<h3 id="cAdvisor"><a href="#cAdvisor" class="headerlink" title="cAdvisor"></a>cAdvisor</h3><p>每台容器安装：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run --restart=always \</span><br><span class="line">  --volume=/:/rootfs:ro \</span><br><span class="line">  --volume=/var/run:/var/run:rw \</span><br><span class="line">  --volume=/sys:/sys:ro \</span><br><span class="line">  --volume=/var/lib/docker/:/var/lib/docker:ro \</span><br><span class="line">  --volume=/dev/disk/:/dev/disk:ro \</span><br><span class="line">  --publish=4194:8080 \</span><br><span class="line">  --detach=<span class="literal">true</span> \</span><br><span class="line">  --name=cadvisor \</span><br><span class="line">  google/cadvisor:latest</span><br></pre></td></tr></table></figure></p>
<p>访问：<br><a href="http://hostIp:4194/" target="_blank" rel="noopener">http://hostIp:4194/</a></p>
<h3 id="prometheus配置"><a href="#prometheus配置" class="headerlink" title="prometheus配置"></a>prometheus配置</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">...</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">cAdvisor</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['192.168.63.21:4194']</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">container_group:</span> <span class="number">192.168</span><span class="number">.63</span><span class="number">.21</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['192.168.64.21:4194']</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">container_group:</span> <span class="number">192.168</span><span class="number">.64</span><span class="number">.21</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['192.168.63.31:4194']</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">container_group:</span> <span class="number">192.168</span><span class="number">.63</span><span class="number">.31</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['192.168.64.31:4194']</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">container_group:</span> <span class="number">192.168</span><span class="number">.64</span><span class="number">.31</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['192.168.63.11:4194']</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">container_group:</span> <span class="number">192.168</span><span class="number">.63</span><span class="number">.11</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['192.168.64.11:4194']</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">container_group:</span> <span class="number">192.168</span><span class="number">.64</span><span class="number">.11</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['192.168.63.101:4194']</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">container_group:</span> <span class="number">192.168</span><span class="number">.63</span><span class="number">.101</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['192.168.64.178:4194']</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">container_group:</span> <span class="number">192.168</span><span class="number">.64</span><span class="number">.178</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['192.168.64.179:4194']</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">container_group:</span> <span class="number">192.168</span><span class="number">.64</span><span class="number">.179</span></span><br></pre></td></tr></table></figure>
<p><img src="/images/spring-cloud-docker-prometheus-grafana监控/prometheus-cadvisor.png" alt="prometheus-cadvisor"></p>
<h3 id="grafana-dashboard"><a href="#grafana-dashboard" class="headerlink" title="grafana dashboard"></a>grafana dashboard</h3><p>可以从grafana官网导入dashboard：<a href="https://grafana.com/dashboards" target="_blank" rel="noopener">https://grafana.com/dashboards</a><br><img src="/images/spring-cloud-docker-prometheus-grafana监控/docker-dashboard.png" alt="docker-dashboard"></p>
<p>导入dashboard:<br><img src="/images/spring-cloud-docker-prometheus-grafana监控/docker-dashboard-import1.png" alt="docker-dashboard-import1"></p>
<p><img src="/images/spring-cloud-docker-prometheus-grafana监控/docker-dashboard-import2.png" alt="docker-dashboard-import2"></p>
<p><img src="/images/spring-cloud-docker-prometheus-grafana监控/docker-dashboard-import3.png" alt="docker-dashboard-import3"></p>
<h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="/images/spring-cloud-docker-prometheus-grafana监控/docker-dashboard1.png" alt="docker-dashboard1"></p>
<h2 id="hystrix-dashboard"><a href="#hystrix-dashboard" class="headerlink" title="hystrix-dashboard"></a>hystrix-dashboard</h2><h3 id="hystrix"><a href="#hystrix" class="headerlink" title="hystrix"></a>hystrix</h3><p>hystrix旨在通过控制那些访问远程系统、服务和第三方库的节点，从而对延迟和故障提供更强大的容错能力。Hystrix具备拥有回退机制和断路器功能的线程和信号隔离，请求缓存和请求打包（request collapsing，即自动批处理），以及监控和配置等功能。</p>
<p>添加依赖：<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- /hystrix.stream需要用到spring-boot-starter-actuator --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-hystrix<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>启动类中添加：<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="meta">@EnableHystrix</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br></pre></td></tr></table></figure></p>
<h3 id="dashboard"><a href="#dashboard" class="headerlink" title="dashboard"></a>dashboard</h3><p>Hystrix-dashboard是一款针对Hystrix进行实时监控的工具，通过Hystrix Dashboard我们可以在直观地看到各Hystrix Command的请求响应时间, 请求成功率等数据。</p>
<p>添加依赖：<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-hystrix-dashboard<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="turbine"><a href="#turbine" class="headerlink" title="turbine"></a>turbine</h3><p>但是只使用Hystrix Dashboard的话, 你只能看到单个应用内的服务信息, 这明显不够. 我们需要一个工具能让我们汇总系统内多个服务的数据并显示到Hystrix Dashboard上, 这个工具就是Turbine.</p>
<p>添加依赖：<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-netflix-turbine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>启动类添加：<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@EnableHystrixDashboard</span></span><br><span class="line"><span class="meta">@EnableTurbine</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br></pre></td></tr></table></figure></p>
<h3 id="配置-2"><a href="#配置-2" class="headerlink" title="配置"></a>配置</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8050</span></span><br><span class="line"></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">context-path:</span> <span class="string">/ops</span></span><br><span class="line">  <span class="attr">security:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">    </span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">hystrix-dashboard</span></span><br><span class="line"></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">preferIpAddress:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># eureka的ip，如果有多个ip地址时，需要在此处指定</span></span><br><span class="line"><span class="comment">#   ipAddress: 127.0.0.1</span></span><br><span class="line">    <span class="comment"># 续约到期时间（默认90秒）</span></span><br><span class="line">    <span class="attr">leaseExpirationDurationInSeconds:</span> <span class="number">30</span></span><br><span class="line">    <span class="comment">#续约更新时间间隔（默认30秒），在生产中，最好坚持使用默认值，因为在服务器内部有一些计算，他们对续约做出假设。</span></span><br><span class="line">    <span class="attr">leaseRenewalIntervalInSeconds:</span> <span class="number">10</span></span><br><span class="line">    <span class="comment"># default: $&#123;spring.cloud.client.hostname&#125;:$&#123;spring.application.name&#125;:$&#123;spring.application.instance_id:$&#123;server.port&#125;&#125;</span></span><br><span class="line"><span class="comment">#    instance-id: $&#123;spring.application.name&#125;:$&#123;eureka.instance.ipAddress&#125;:$&#123;server.port&#125;</span></span><br><span class="line">    <span class="attr">statusPageUrlPath:</span> <span class="string">$&#123;management.context-path&#125;/info</span></span><br><span class="line">    <span class="attr">healthCheckUrlPath:</span> <span class="string">$&#123;management.context-path&#125;/health</span></span><br><span class="line">    <span class="attr">metadata-map:</span></span><br><span class="line">      <span class="attr">management.context-path:</span> <span class="string">$&#123;management.context-path&#125;</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">registerWithEureka:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">serviceUrl:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:8761/eureka/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">turbine:</span></span><br><span class="line">  <span class="attr">appConfig:</span> <span class="string">app-gateway,hkcash-server,tu-server</span></span><br><span class="line">  <span class="comment">#turbine需要聚合的集群名称，需要在对应的服务的，通过 http://localhost:8050/turbine.stream?cluster=default 访问 </span></span><br><span class="line">  <span class="comment">#aggregator.clusterConfig: hkcash</span></span><br><span class="line">  <span class="attr">aggregator.clusterConfig:</span> <span class="string">default</span></span><br><span class="line">  <span class="attr">instanceUrlSuffix:</span> <span class="string">$&#123;management.context-path&#125;/hystrix.stream</span></span><br><span class="line">  <span class="comment">#获取集群名表达式，这里表示获取元数据中的cluster数据，在lms的配置文件中配置对应信息</span></span><br><span class="line">  <span class="comment">#clusterNameExpression: metadata['cluster']</span></span><br><span class="line">  <span class="attr">clusterNameExpression:</span> <span class="string">new</span> <span class="string">String("default")</span></span><br></pre></td></tr></table></figure>
<p>效果：<br><img src="/images/spring-cloud-docker-prometheus-grafana监控/hystrix.png" alt="hystrix"></p>
<h2 id="sleuth-zipkin"><a href="#sleuth-zipkin" class="headerlink" title="sleuth zipkin"></a>sleuth zipkin</h2><p>spring cloud sleuth是从google的dapper论文的思想实现的，提供了对spring cloud系列的链路追踪。</p>
<p>目的：</p>
<blockquote>
<p>提供链路追踪。通过sleuth可以很清楚的看出一个请求都经过了哪些服务。可以很方便的理清服务间的调用关系。</p>
</blockquote>
<blockquote>
<p>可视化错误。对于程序未捕捉的异常，可以在zipkin界面上看到。</p>
</blockquote>
<blockquote>
<p>分析耗时。通过sleuth可以很方便的看出每个采样请求的耗时，分析出哪些服务调用比较耗时。当服务调用的耗时随着请求量的增大而增大时，也可以对服务的扩容提供一定的提醒作用。</p>
</blockquote>
<blockquote>
<p>优化链路。对于频繁地调用一个服务，或者并行地调用等，可以针对业务做一些优化措施。</p>
</blockquote>
<h3 id="应用程序集成"><a href="#应用程序集成" class="headerlink" title="应用程序集成"></a>应用程序集成</h3><h4 id="sleuth-log"><a href="#sleuth-log" class="headerlink" title="sleuth+log"></a>sleuth+log</h4><p>添加依赖：<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-sleuth<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>这种方式只需要引入jar包即可。如果配置log4j，这样会在打印出如下的日志：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2017-04-08 23:56:50.459 INFO [bootstrap,38d6049ff0686023,d1b8b0352d3f6fa9,false] 8764 — [nio-8080-exec-1] demo.JpaSingleDatasourceApplication : Step 2: Handling print</span><br><span class="line">2017-04-08 23:56:50.459 INFO [bootstrap,38d6049ff0686023,d1b8b0352d3f6fa9,false] 8764 — [nio-8080-exec-1] demo.JpaSingleDatasourceApplication : Step 1: Handling home</span><br></pre></td></tr></table></figure></p>
<p>比原先的日志多出了 [bootstrap,38d6049ff0686023,d1b8b0352d3f6fa9,false] 这些内容，[appname,traceId,spanId,exportable]。</p>
<p>appname：服务名称<br>traceId\spanId：链路追踪的两个术语，后面有介绍<br>exportable:是否是发送给zipkin</p>
<h4 id="sleuth-zipkin-http"><a href="#sleuth-zipkin-http" class="headerlink" title="sleuth+zipkin+http"></a>sleuth+zipkin+http</h4><p>sleuth收集跟踪信息通过http请求发给zipkin。这种需要启动一个zipkin,zipkin用来存储数据和展示数据。</p>
<p>添加依赖：<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--&lt;dependency&gt;</span></span><br><span class="line"><span class="comment">    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span></span><br><span class="line"><span class="comment">    &lt;artifactId&gt;spring-cloud-starter-sleuth&lt;/artifactId&gt;</span></span><br><span class="line"><span class="comment">&lt;/dependency&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-zipkin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>配置：<br><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">sleuth:</span></span><br><span class="line">    <span class="attr">sampler:</span></span><br><span class="line">      <span class="attr">percentage:</span> <span class="number">1.0</span></span><br><span class="line">  <span class="attr">zipkin:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">base-url:</span> <span class="string">http://localhost:9411/</span></span><br></pre></td></tr></table></figure></p>
<h4 id="sletuh-streaming-zipkin"><a href="#sletuh-streaming-zipkin" class="headerlink" title="sletuh+streaming+zipkin"></a>sletuh+streaming+zipkin</h4><p>这种方式通过spring cloud streaming将追踪信息发送到zipkin。spring cloud streaming目前只有kafka和rabbitmq的binder。以rabbitmq为例：</p>
<p>添加依赖：<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-sleuth-stream<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-stream-rabbit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>配置：<br><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">sleuth:</span></span><br><span class="line">    <span class="attr">stream:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">sampler:</span></span><br><span class="line">      <span class="attr">percentage:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment">#for sleuth</span></span><br><span class="line">  <span class="attr">rabbitmq:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.99</span><span class="number">.100</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">5672</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">guest</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">guest</span></span><br><span class="line"><span class="comment">#    virtual-host: cloud_host</span></span><br></pre></td></tr></table></figure></p>
<h3 id="zipkin-server"><a href="#zipkin-server" class="headerlink" title="zipkin-server"></a>zipkin-server</h3><p>Zipkin 是 Twitter 的一个开源项目，允许开发者收集Twitter各个服务上的监控数据，并提供查询接口。</p>
<h4 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h4><p>zipkin-server采用spring方式安装：</p>
<h5 id="http方式"><a href="#http方式" class="headerlink" title="http方式"></a>http方式</h5><p>添加依赖：<br><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">&lt;dependency&gt;</span></span><br><span class="line">    <span class="string">&lt;groupId&gt;io.zipkin.java&lt;/groupId&gt;</span></span><br><span class="line">    <span class="string">&lt;artifactId&gt;zipkin-server&lt;/artifactId&gt;</span></span><br><span class="line"><span class="string">&lt;/dependency&gt;</span></span><br><span class="line"><span class="string">&lt;dependency&gt;</span></span><br><span class="line">    <span class="string">&lt;groupId&gt;io.zipkin.java&lt;/groupId&gt;</span></span><br><span class="line">    <span class="string">&lt;artifactId&gt;zipkin-autoconfigure-ui&lt;/artifactId&gt;</span></span><br><span class="line">    <span class="string">&lt;scope&gt;runtime&lt;/scope&gt;</span></span><br><span class="line"><span class="string">&lt;/dependency&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>启动类添加：<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@EnableZipkinServer</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br></pre></td></tr></table></figure></p>
<h5 id="stream方式"><a href="#stream方式" class="headerlink" title="stream方式"></a>stream方式</h5><p>添加依赖：<br><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">&lt;dependency&gt;</span></span><br><span class="line">    <span class="string">&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span></span><br><span class="line">    <span class="string">&lt;artifactId&gt;spring-cloud-sleuth-zipkin-stream&lt;/artifactId&gt;</span></span><br><span class="line"><span class="string">&lt;/dependency&gt;</span></span><br><span class="line"><span class="string">&lt;dependency&gt;</span></span><br><span class="line">    <span class="string">&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span></span><br><span class="line">    <span class="string">&lt;artifactId&gt;spring-cloud-starter-stream-rabbit&lt;/artifactId&gt;</span></span><br><span class="line"><span class="string">&lt;/dependency&gt;</span></span><br><span class="line"><span class="string">&lt;dependency&gt;</span></span><br><span class="line">    <span class="string">&lt;groupId&gt;io.zipkin.java&lt;/groupId&gt;</span></span><br><span class="line">    <span class="string">&lt;artifactId&gt;zipkin-autoconfigure-ui&lt;/artifactId&gt;</span></span><br><span class="line">    <span class="string">&lt;scope&gt;runtime&lt;/scope&gt;</span></span><br><span class="line"><span class="string">&lt;/dependency&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>启动类添加：<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@EnableZipkinStreamServer</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br></pre></td></tr></table></figure></p>
<p>配置：<br><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="comment">#@EnableZipkinStreamServer时使用  </span></span><br><span class="line">  <span class="attr">rabbitmq:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.100</span><span class="number">.88</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">5672</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">guest</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">guest</span></span><br></pre></td></tr></table></figure></p>
<h5 id="elasticsearch安装"><a href="#elasticsearch安装" class="headerlink" title="elasticsearch安装"></a>elasticsearch安装</h5><p>如果容器内部通讯没有打通的话，需要采用以下方式部署：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tee elasticsearch.yml &lt;&lt; EOF</span><br><span class="line">network.host: 192.168.64.179</span><br><span class="line">discovery.zen.minimum_master_nodes: 1</span><br><span class="line">EOF</span><br><span class="line"> </span><br><span class="line">docker run --privileged=<span class="literal">true</span> --net=host -d -h elasticsearch --restart=always --name elasticsearch \</span><br><span class="line">-p 9200:9200 -p 9300:9300 \</span><br><span class="line">-e <span class="string">"ES_JAVA_OPTS=-Xms512m -Xmx512m"</span> \</span><br><span class="line">-v <span class="string">"<span class="variable">$PWD</span>/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml"</span> \</span><br><span class="line">elasticsearch:2.4.4</span><br><span class="line"></span><br><span class="line">如果想将存储指到容器外，可以映射：</span><br><span class="line"><span class="comment">#-v "$PWD/config":/usr/share/elasticsearch/config \</span></span><br><span class="line"><span class="comment">#-v "$PWD/esdata":/usr/share/elasticsearch/data \</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#index</span></span><br><span class="line">curl http://192.168.99.100:9200/_cat/indices?v</span><br></pre></td></tr></table></figure></p>
<p>如果有打通容器内部通讯或者与zipkin-server部署在同一台机器上，则安装比较简单：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d -h elasticsearch --restart=always --name elasticsearch \</span><br><span class="line">-p 9200:9200 -p 9300:9300 \</span><br><span class="line">-e <span class="string">"ES_JAVA_OPTS=-Xms512m -Xmx512m"</span> \</span><br><span class="line">elasticsearch:2.4.4</span><br></pre></td></tr></table></figure>
<h5 id="rabbitmq"><a href="#rabbitmq" class="headerlink" title="rabbitmq"></a>rabbitmq</h5><p>日志采集是通过sleuth-zipkin-stream方式收集的，此处采用rabbitmq。可以采用docker方式安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d -h rabbitmq --restart=always --name rabbitmq -p 5672:5672 -p 15672:15672 \</span><br><span class="line">rabbitmq:3.6.6</span><br><span class="line"></span><br><span class="line"> <span class="comment"># login:guest/guest   </span></span><br><span class="line"> <span class="comment"># url:http://ip:15672</span></span><br><span class="line">docker <span class="built_in">exec</span> -it rabbitmq rabbitmq-plugins <span class="built_in">enable</span> rabbitmq_management</span><br><span class="line"><span class="comment">#docker run -d --hostname my-rabbit --name some-rabbit -p 8080:15672 rabbitmq:3-management</span></span><br><span class="line"><span class="comment">#docker run -d --hostname my-rabbit --name some-rabbit -e RABBITMQ_DEFAULT_USER=user -e RABBITMQ_DEFAULT_PASS=password rabbitmq:3-management</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># list_queues</span></span><br><span class="line"><span class="comment">#docker exec -it rabbitmq rabbitmqctl list_queues</span></span><br></pre></td></tr></table></figure>
<h4 id="数据存储"><a href="#数据存储" class="headerlink" title="数据存储"></a>数据存储</h4><h5 id="Mem"><a href="#Mem" class="headerlink" title="Mem"></a>Mem</h5><p>内存方式，只适合于测试环境：</p>
<p>配置：<br><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">zipkin:</span>  </span><br><span class="line">  <span class="attr">storage:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">mem</span></span><br></pre></td></tr></table></figure></p>
<h5 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h5><p>添加依赖：<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.zipkin.java<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zipkin-autoconfigure-storage-mysql<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>配置：<br><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">zipkin-server</span></span><br><span class="line">    </span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://192.168.100.88:3308/zipkin?autoReconnect=true</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">helloworld</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="comment">#    schema: classpath:/mysql.sql</span></span><br><span class="line"><span class="comment">#    initialize: true</span></span><br><span class="line"><span class="comment">#    continue-on-error: true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">zipkin:</span></span><br><span class="line">  <span class="attr">storage:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">mysql</span></span><br></pre></td></tr></table></figure></p>
<p><a href="/files/spring-cloud-docker-prometheus-grafana监控/zipkin-mysql.sql">SQL文件</a></p>
<h5 id="Elasticsearch"><a href="#Elasticsearch" class="headerlink" title="Elasticsearch"></a>Elasticsearch</h5><p>添加依赖：<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.zipkin.java<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zipkin-autoconfigure-storage-elasticsearch<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.19.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.elasticsearch<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>elasticsearch<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>配置：<br><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">zipkin:</span></span><br><span class="line">  <span class="attr">storage:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">elasticsearch</span></span><br><span class="line">    <span class="attr">elasticsearch:</span></span><br><span class="line">      <span class="attr">cluster:</span> <span class="string">elasticsearch</span></span><br><span class="line">      <span class="attr">hosts:</span> <span class="number">192.168</span><span class="number">.108</span><span class="number">.183</span><span class="string">:9300</span></span><br><span class="line">      <span class="attr">index:</span> <span class="string">zipkin</span></span><br><span class="line"><span class="comment">#      index-shards: $&#123;ES_INDEX_SHARDS:5&#125;</span></span><br><span class="line"><span class="comment">#      index-replicas: $&#123;ES_INDEX_REPLICAS:1&#125;</span></span><br></pre></td></tr></table></figure></p>
<h4 id="zipkin-dependencies"><a href="#zipkin-dependencies" class="headerlink" title="zipkin-dependencies"></a>zipkin-dependencies</h4><p>如果为非mem方式部署的zipkin-server，<a href="https://github.com/openzipkin/zipkin-dependencies" target="_blank" rel="noopener">zipkin-dependencies</a>是没有数据的，需要加入zipkin-dependencies模块才能正常显示。以elasticsearch为例：</p>
<p>添加依赖：<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.zipkin.dependencies<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zipkin-dependencies-elasticsearch<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>添加代码：<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ElasticsearchDependenciesTask</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> Logger logger = LoggerFactory.getLogger(<span class="keyword">this</span>.getClass());</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;spark.es.nodes&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String esNodes;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;spark.driver.allowMultipleContexts&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String allowMultipleContexts;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Scheduled</span>(cron = <span class="string">"0 */5 * * * ?"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="comment">//        -e ES_HOSTS="192.168.108.183:9200"</span></span><br><span class="line">        Map&lt;String, String&gt; envs = Maps.newHashMap();</span><br><span class="line">        envs.put(<span class="string">"spark.driver.allowMultipleContexts"</span>,allowMultipleContexts);</span><br><span class="line">        envs.put(<span class="string">"ES_HOSTS"</span>,esNodes);</span><br><span class="line">        EnvUtils.setEnv(envs);</span><br><span class="line">        ElasticsearchDependenciesJob.builder().build().run();</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>配置：<br><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># dependencies-elasticsearch配置</span></span><br><span class="line"><span class="attr">spark:</span></span><br><span class="line">  <span class="attr">driver:</span></span><br><span class="line">    <span class="attr">allowMultipleContexts:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">es:</span></span><br><span class="line">    <span class="attr">nodes:</span> <span class="number">192.168</span><span class="number">.108</span><span class="number">.183</span><span class="string">:9200</span></span><br></pre></td></tr></table></figure></p>
<p>内部是通过spark进行数据分析，再生成对应的dependencies数据。</p>
<p>当然也可以通过docker部署：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run --rm --name zipkin-dependencies \</span><br><span class="line">-e STORAGE_TYPE=elasticsearch \</span><br><span class="line">-e ES_HOSTS=192.168.108.183:9200 \</span><br><span class="line">-e <span class="string">"JAVA_OPTS=-Xms128m -Xmx128m"</span> \</span><br><span class="line">openzipkin/zipkin-dependencies:1.5.4</span><br></pre></td></tr></table></figure></p>
<p>这个只会运行一次后退出，如果需要定时执行的话，需要加入到cron中。</p>
<h4 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h4><p><img src="/images/spring-cloud-docker-prometheus-grafana监控/zipkin-server-ui.png" alt="zipkin-server-ui"></p>
<p><img src="/images/spring-cloud-docker-prometheus-grafana监控/zipkin-dependencies.png" alt="zipkin-dependencies"></p>
<p>可能sleuth收集了很多你不想要的接口请求，可能通过以下配置排除掉：<br><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">sleuth:</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">skip-pattern:</span> <span class="string">/js/.*|/css/.*|/html/.*|/htm/.*|/static/.*|/ops/.*|/api-docs.*|/swagger.*|.*\.png|.*\.gif|.*\.css|.*\.js|.*\.html|/favicon.ico|/myhealth</span></span><br><span class="line">    <span class="attr">scheduled:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">      <span class="comment">#skip-pattern: .*RedisOperationsSessionRepository</span></span><br></pre></td></tr></table></figure></p>
<h2 id="jaeger"><a href="#jaeger" class="headerlink" title="jaeger"></a>jaeger</h2><p>zipkin的效果不太好，可以考虑使用jaeger，由Uber开源。Jaeger兼容OpenTracing的数据模型和instrumentation库，能够为每个服务/端点使用一致的采样方式。</p>
<p><img src="/images/spring-cloud-docker-prometheus-grafana监控/jaeger_construnction.png" alt="jaeger_construnction"></p>
<p>分布式系统调用过程:</p>
<p><img src="/images/spring-cloud-docker-prometheus-grafana监控/jaeger_process.png" alt="jaeger_process"></p>
<h3 id="opentracing-协议"><a href="#opentracing-协议" class="headerlink" title="opentracing 协议"></a>opentracing 协议</h3><p>opentracing是一套分布式追踪协议，与平台，语言无关，统一接口，方便开发接入不同的分布式追踪系统。</p>
<p><img src="/images/spring-cloud-docker-prometheus-grafana监控/jaeger_opentracing.png" alt="jaeger_opentracing"></p>
<p>简单理解opentracing:</p>
<p>一个完整的opentracing调用链包含 Trace + span + 无限极分类:</p>
<p>Trace：追踪对象，一个Trace代表了一个服务或者流程在系统中的执行过程，如：test.com，redis，mysql等执行过程。一个Trace由多个span组成</p>
<p>span：记录Trace在执行过程中的信息，如：查询的sql，请求的HTTP地址，RPC调用，开始、结束、间隔时间等。<br>无限极分类：服务与服务之间使用无限极分类的方式，通过HTTP头部或者请求地址传输到最低层，从而把整个调用链串起来。</p>
<h3 id="安装-3"><a href="#安装-3" class="headerlink" title="安装"></a>安装</h3><p>可以通过docker-compose安装，请参考<a href="/files/spring-cloud-docker-prometheus-grafana监控/jaeger-docker-compose.zip">docker-compose</a><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">version: &apos;2&apos;</span><br><span class="line">services:</span><br><span class="line">  els:</span><br><span class="line">    image: docker.elastic.co/elasticsearch/elasticsearch:6.0.0 </span><br><span class="line">    restart: always</span><br><span class="line">    container_name: els</span><br><span class="line">    hostname: els</span><br><span class="line">    networks:</span><br><span class="line">    - elastic-jaeger</span><br><span class="line">    environment:</span><br><span class="line">      #- bootstrap.memory_lock=true</span><br><span class="line">      - ES_JAVA_OPTS=-Xms512m -Xmx512m</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;9200:9200&quot;</span><br><span class="line">      - &quot;9300:9300&quot;</span><br><span class="line">    volumes:</span><br><span class="line">      - ./config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml</span><br><span class="line">  kibana:</span><br><span class="line">    image: docker.elastic.co/kibana/kibana:6.0.0</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;5601:5601&quot;</span><br><span class="line">    environment:</span><br><span class="line">      ELASTICSEARCH_URL: http://els:9200</span><br><span class="line">    depends_on:</span><br><span class="line">    - els</span><br><span class="line">    networks:</span><br><span class="line">    - elastic-jaeger</span><br><span class="line">  jaeger-collector:</span><br><span class="line">    environment:</span><br><span class="line">      - SPAN_STORAGE_TYPE=elasticsearch</span><br><span class="line">    image: jaegertracing/jaeger-collector:latest</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;14267:14267&quot;</span><br><span class="line">      - &quot;14268:14268&quot;</span><br><span class="line">      - &quot;9411:9411&quot;</span><br><span class="line">    depends_on:</span><br><span class="line">    - els</span><br><span class="line">    container_name: jaeger-collector</span><br><span class="line">    hostname: jaeger-collector</span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    networks:</span><br><span class="line">    - elastic-jaeger</span><br><span class="line">    command: [&quot;/go/bin/collector-linux&quot;, &quot;--span-storage.type=elasticsearch&quot;, &quot;--es.server-urls=http://els:9200&quot;]</span><br><span class="line">  jaeger-agent:</span><br><span class="line">    image: jaegertracing/jaeger-agent:latest</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;5775:5775/udp&quot;</span><br><span class="line">      - &quot;5778:5778&quot;</span><br><span class="line">      - &quot;6831:6831/udp&quot;</span><br><span class="line">      - &quot;6832:6832/udp&quot;</span><br><span class="line">    depends_on:</span><br><span class="line">    - els</span><br><span class="line">    - jaeger-collector</span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    container_name: jaeger-agent</span><br><span class="line">    hostname: jaeger-agent</span><br><span class="line">    networks:</span><br><span class="line">    - elastic-jaeger</span><br><span class="line">    command: [&quot;/go/bin/agent-linux&quot;, &quot;--collector.host-port=jaeger-collector:14267&quot;]</span><br><span class="line"></span><br><span class="line">  jaeger-query:</span><br><span class="line">    environment:</span><br><span class="line">      - SPAN_STORAGE_TYPE=elasticsearch</span><br><span class="line">    image: jaegertracing/jaeger-query:latest</span><br><span class="line">    ports:</span><br><span class="line">      - 16686:16686</span><br><span class="line">    depends_on:</span><br><span class="line">      - els</span><br><span class="line">      - jaeger-collector</span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    container_name: jaeger-query</span><br><span class="line">    hostname: jaeger-query</span><br><span class="line">    networks:</span><br><span class="line">    - elastic-jaeger</span><br><span class="line">    command: [&quot;/go/bin/query-linux&quot;, &quot;--span-storage.type=elasticsearch&quot;, &quot;--es.server-urls=http://els:9200&quot;, &quot;--es.sniffer=false&quot;, &quot;--query.static-files=/go/jaeger-ui/&quot;, &quot;--log-level=debug&quot;]</span><br><span class="line">volumes:</span><br><span class="line">  esdata1:</span><br><span class="line">    driver: local</span><br><span class="line">  eslog:</span><br><span class="line">    driver: local</span><br><span class="line">networks:</span><br><span class="line">  elastic-jaeger:</span><br><span class="line">    driver: bridge</span><br></pre></td></tr></table></figure></p>
<h4 id="elasticsearch"><a href="#elasticsearch" class="headerlink" title="elasticsearch"></a>elasticsearch</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p /works/conf/elasticsearch</span><br><span class="line">tee /works/conf/elasticsearch/elasticsearch.yml &lt;&lt; EOF</span><br><span class="line">xpack.security.enabled: <span class="literal">false</span></span><br><span class="line">network.host: 0.0.0.0</span><br><span class="line">thread_pool.bulk.queue_size: 1000</span><br><span class="line">discovery.zen.minimum_master_nodes: 1</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">docker run -d --name elasticsearch \</span><br><span class="line">-p 9200:9200 -p 9300:9300 \</span><br><span class="line">-e <span class="string">"ES_JAVA_OPTS=-Xms512m -Xmx512m"</span> \</span><br><span class="line">-v <span class="string">"/works/conf/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml"</span> \</span><br><span class="line">docker.elastic.co/elasticsearch/elasticsearch:6.0.0</span><br><span class="line"><span class="comment">#elasticsearch:5.2.1</span></span><br></pre></td></tr></table></figure>
<h4 id="jaeger-collector"><a href="#jaeger-collector" class="headerlink" title="jaeger-collector"></a>jaeger-collector</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name jaeger-collector \</span><br><span class="line">-p 14267:14267 \</span><br><span class="line">-p 14268:14268 \</span><br><span class="line">-p 9411:9411 \</span><br><span class="line">-e <span class="string">"SPAN_STORAGE_TYPE=elasticsearch"</span> \</span><br><span class="line">jaegertracing/jaeger-collector \</span><br><span class="line">/go/bin/collector-linux --es.server-urls=http://192.168.108.1:9200</span><br></pre></td></tr></table></figure>
<h4 id="jaeger-query"><a href="#jaeger-query" class="headerlink" title="jaeger-query"></a>jaeger-query</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name jaeger-query \</span><br><span class="line">  -p 16686:16686 \</span><br><span class="line">  -e <span class="string">"SPAN_STORAGE_TYPE=elasticsearch"</span> \</span><br><span class="line">  jaegertracing/jaeger-query \</span><br><span class="line">  /go/bin/query-linux --es.server-urls=http://192.168.108.1:9200 --query.static-files=/go/jaeger-ui/</span><br></pre></td></tr></table></figure>
<h4 id="kibana"><a href="#kibana" class="headerlink" title="kibana"></a>kibana</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name jaeger-kibana \</span><br><span class="line">  -p 5601:5601 \</span><br><span class="line">  -e <span class="string">"ELASTICSEARCH_URL=http://192.168.108.1:9200"</span> \</span><br><span class="line">  docker.elastic.co/kibana/kibana:6.0.0</span><br></pre></td></tr></table></figure>
<h4 id="jaeger-agent"><a href="#jaeger-agent" class="headerlink" title="jaeger-agent"></a>jaeger-agent</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name jaeger-agent \</span><br><span class="line">  -p5775:5775/udp \</span><br><span class="line">  -p6831:6831/udp \</span><br><span class="line">  -p6832:6832/udp \</span><br><span class="line">  -p5778:5778/tcp \</span><br><span class="line">  jaegertracing/jaeger-agent \</span><br><span class="line">  /go/bin/agent-linux --discovery.min-peers=1 --collector.host-port=192.168.108.1:14267</span><br></pre></td></tr></table></figure>
<h4 id="spark-dependencies"><a href="#spark-dependencies" class="headerlink" title="spark-dependencies"></a>spark-dependencies</h4><p>参考： <a href="https://github.com/jaegertracing/spark-dependencies" target="_blank" rel="noopener">https://github.com/jaegertracing/spark-dependencies</a></p>
<p>测试好好久，docker不能分析出对应的依赖关系，用jar就可以。找不到问题所在。只能用jar包:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/jaegertracing/spark-dependencies.git</span><br><span class="line"><span class="built_in">cd</span> spark-dependencies</span><br><span class="line">./mvnw clean install -Dmaven.test.skip=<span class="literal">true</span></span><br><span class="line"><span class="built_in">cd</span> ./jaeger-spark-dependencies/target/</span><br><span class="line">STORAGE=elasticsearch ES_NODES=http://192.168.108.1:9200 java -jar jaeger-spark-dependencies-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure>
<p>以下是doker的安装方式：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -it --rm --name spark-dependencies \</span><br><span class="line">-e STORAGE=elasticsearch \</span><br><span class="line">-e ES_NODES=http://192.168.108.1:9200 \</span><br><span class="line">-e <span class="string">"JAVA_OPTS=-Xms1g -Xmx1g"</span> \</span><br><span class="line">jaegertracing/spark-dependencies</span><br></pre></td></tr></table></figure>
<p>也可以自己写Dockerfile</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> java:<span class="number">8</span>-jdk</span><br><span class="line"><span class="keyword">MAINTAINER</span> dave.zhao@aeasycredit.com</span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> mkdir /app</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /app</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> APPNAME=jaeger-spark-dependencies</span><br><span class="line"><span class="keyword">ENV</span> VERSION=<span class="number">0.0</span>.<span class="number">1</span>-SNAPSHOT</span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> ln -snf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; <span class="built_in">echo</span> Asia/Shanghai &gt; /etc/timezone</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> <span class="variable">$&#123;APPNAME&#125;</span>-<span class="variable">$&#123;VERSION&#125;</span>.jar /app/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="bash"> [<span class="string">"sh"</span>, <span class="string">"-c"</span>, <span class="string">"STORAGE=<span class="variable">$&#123;STORAGE&#125;</span> ES_NODES=<span class="variable">$&#123;ES_NODES&#125;</span> java <span class="variable">$&#123;JAVA_OPTS&#125;</span> -Djava.security.egd=file:/dev/./urandom -jar /app/<span class="variable">$&#123;APPNAME&#125;</span>-<span class="variable">$&#123;VERSION&#125;</span>.jar"</span>]</span></span><br></pre></td></tr></table></figure>
<h3 id="客户端集成"><a href="#客户端集成" class="headerlink" title="客户端集成"></a>客户端集成</h3><p>以spring-cloud为例，添加以下依赖：</p>
<p>参考：</p>
<blockquote>
<p><a href="https://github.com/opentracing-contrib/meta" target="_blank" rel="noopener">https://github.com/opentracing-contrib/meta</a><br><a href="https://github.com/opentracing-contrib/java-spring-cloud" target="_blank" rel="noopener">https://github.com/opentracing-contrib/java-spring-cloud</a><br><a href="https://github.com/opentracing-contrib/java-spring-jaeger" target="_blank" rel="noopener">https://github.com/opentracing-contrib/java-spring-jaeger</a></p>
</blockquote>
<p>普通spring-web项目使用：<br><a href="https://github.com/opentracing-contrib/java-spring-web" target="_blank" rel="noopener">https://github.com/opentracing-contrib/java-spring-web</a></p>
<p>添加依赖：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;io.opentracing.contrib&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;opentracing-spring-cloud-starter&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;0.1.13&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;io.opentracing.contrib&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;opentracing-spring-jaeger-starter&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;0.1.1&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>
<p>application.yml:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">opentracing:</span></span><br><span class="line">  <span class="attr">jaeger:</span></span><br><span class="line">    <span class="attr">udp-sender:</span></span><br><span class="line">      <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.108</span><span class="number">.1</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">6831</span></span><br></pre></td></tr></table></figure>
<h2 id="skywalking"><a href="#skywalking" class="headerlink" title="skywalking"></a>skywalking</h2><p>针对分布式系统的APM（应用性能监控）系统，特别针对微服务、cloud native和容器化(Docker, Kubernetes, Mesos)架构， 其核心是个分布式追踪系统。</p>
<p><img src="/images/spring-cloud-docker-prometheus-grafana监控/skywalking-architecture.png" alt="skywalking-architecture"></p>
<p><img src="/images/spring-cloud-docker-prometheus-grafana监控/skywalking-screenshot.png" alt="skywalking-screenshot"></p>
<h3 id="安装-4"><a href="#安装-4" class="headerlink" title="安装"></a>安装</h3><p>安装elasticsearch：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p /works/conf/elasticsearch</span><br><span class="line">tee /works/conf/elasticsearch/elasticsearch.yml &lt;&lt; EOF</span><br><span class="line">cluster.name: CollectorDBCluster</span><br><span class="line">network.host: 0.0.0.0</span><br><span class="line">thread_pool.bulk.queue_size: 1000</span><br><span class="line">discovery.zen.minimum_master_nodes: 1</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">docker run -d --name elasticsearch \</span><br><span class="line">-p 9200:9200 -p 9300:9300 \</span><br><span class="line">-e <span class="string">"ES_JAVA_OPTS=-Xms512m -Xmx512m"</span> \</span><br><span class="line">-v <span class="string">"/works/conf/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml"</span> \</span><br><span class="line">elasticsearch:5.3</span><br></pre></td></tr></table></figure>
<p>optional: <a href="https://github.com/mobz/elasticsearch-head" target="_blank" rel="noopener">elasticsearch-head ui</a>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name elasticsearch-head -p 9100:9100 mobz/elasticsearch-head:5</span><br></pre></td></tr></table></figure>
<p>optional: kibana ui:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name kibana \</span><br><span class="line">  -p 5601:5601 \</span><br><span class="line">  -e <span class="string">"ELASTICSEARCH_URL=http://192.168.64.178:9200"</span> \</span><br><span class="line">  kibana:5.3</span><br></pre></td></tr></table></figure>
<p>安装Collector与Web：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://apache.01link.hk/incubator/skywalking/5.0.0-beta/apache-skywalking-apm-incubating-5.0.0-beta.tar.gz</span><br><span class="line">tar zxvf apache-skywalking-apm-incubating-5.0.0-beta.tar.gz</span><br><span class="line"><span class="built_in">cd</span> apache-skywalking-apm-incubating</span><br></pre></td></tr></table></figure>
<h3 id="配置-3"><a href="#配置-3" class="headerlink" title="配置"></a>配置</h3><p>config/application.yml:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">naming:</span><br><span class="line">  jetty:</span><br><span class="line">    host: 0.0.0.0</span><br><span class="line">    port: 10800</span><br><span class="line">    contextPath: /</span><br><span class="line">...</span><br><span class="line">agent_gRPC:</span><br><span class="line">  gRPC:</span><br><span class="line">    host: 192.168.108.1</span><br><span class="line">    port: 11800</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<p>主要需要修改以上两个配置，不然分开部署的话访问不了。另外机器的时间也需要同步。</p>
<h3 id="启动Collector与Web"><a href="#启动Collector与Web" class="headerlink" title="启动Collector与Web"></a>启动Collector与Web</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> apache-skywalking-apm-incubating/bin</span><br><span class="line">./startup.sh</span><br></pre></td></tr></table></figure>
<h3 id="agent"><a href="#agent" class="headerlink" title="agent"></a>agent</h3><p>复制apache-skywalking-apm-incubating目录下的agent，需要保持目录结构不变。修改config/agent.config：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string">agent.application_code=app-gateway</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string">collector.servers=192.168.108.1:10800</span></span><br></pre></td></tr></table></figure>
<p>在启动时加入-javaagent即可：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">java -javaagent:/agent/skywalking-agent.jar -jar xxx.jar</span><br></pre></td></tr></table></figure>
<p>也可以在启动中覆盖agent.config中的agent.application_code或collector.servers参数，注意：一定要以skywalking.开头，详见<a href="https://github.com/apache/incubator-skywalking/blob/master/docs/cn/Setting-override-CN.md" target="_blank" rel="noopener">Setting-override</a>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">java -javaagent:/agent/skywalking-agent.jar -Dskywalking.agent.application_code=app-gateway -jar xxx.jar</span><br></pre></td></tr></table></figure>
<p>默认情况下会收集除了agent.ignore_suffix参数中以这些后缀结尾的链接，但这个不能满足其他的排除条件，可以通过可选插件<a href="https://github.com/apache/incubator-skywalking/blob/master/apm-sniffer/optional-plugins/trace-ignore-plugin/README_CN.md" target="_blank" rel="noopener">apm-trace-ignore-plugin</a>:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#maven must be &gt; 3.1.0</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/apache/incubator-skywalking.git</span><br><span class="line"><span class="built_in">cd</span> incubator-skywalking/</span><br><span class="line">git submodule init</span><br><span class="line">git submodule update</span><br><span class="line">mvn clean package -DskipTests</span><br><span class="line"><span class="built_in">cd</span> apm-sniffer/optional-plugins/trace-ignore-plugin</span><br></pre></td></tr></table></figure>
<ol>
<li><p>将apm-sniffer/optional-plugins/trace-ignore-plugin/apm-trace-ignore-plugin.config 复制到agent/config/ 目录下，加上配置：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">trace.ignore_path=/eureka/**,Mysql/JDBI/**,Hystrix/**,/swagger-resources/**</span><br></pre></td></tr></table></figure>
</li>
<li><p>将apm-trace-ignore-plugin-x.jar拷贝到agent/plugins后，重启探针即可生效。</p>
</li>
</ol>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><blockquote>
<p><a href="http://tech.lede.com/2017/04/19/rd/server/SpringCloudSleuth/" target="_blank" rel="noopener">http://tech.lede.com/2017/04/19/rd/server/SpringCloudSleuth/</a><br><a href="https://segmentfault.com/a/1190000008629939" target="_blank" rel="noopener">https://segmentfault.com/a/1190000008629939</a><br><a href="https://mykite.github.io/2017/04/21/zipkin%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D%E5%8F%8A%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%EF%BC%88%E4%B8%80%EF%BC%89/" target="_blank" rel="noopener">https://mykite.github.io/2017/04/21/zipkin%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D%E5%8F%8A%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%EF%BC%88%E4%B8%80%EF%BC%89/</a><br><a href="https://github.com/jukylin/blog/blob/master/Uber%E5%88%86%E5%B8%83%E5%BC%8F%E8%BF%BD%E8%B8%AA%E7%B3%BB%E7%BB%9FJaeger%E4%BD%BF%E7%94%A8%E4%BB%8B%E7%BB%8D%E5%92%8C%E6%A1%88%E4%BE%8B%E3%80%90PHP%20%20%20Hprose%20%20%20Go%E3%80%91.md" target="_blank" rel="noopener">https://github.com/jukylin/blog/blob/master/Uber%E5%88%86%E5%B8%83%E5%BC%8F%E8%BF%BD%E8%B8%AA%E7%B3%BB%E7%BB%9FJaeger%E4%BD%BF%E7%94%A8%E4%BB%8B%E7%BB%8D%E5%92%8C%E6%A1%88%E4%BE%8B%E3%80%90PHP%20%20%20Hprose%20%20%20Go%E3%80%91.md</a><br><a href="https://github.com/jaegertracing/jaeger" target="_blank" rel="noopener">https://github.com/jaegertracing/jaeger</a><br><a href="https://github.com/opentracing-contrib/java-spring-cloud" target="_blank" rel="noopener">https://github.com/opentracing-contrib/java-spring-cloud</a><br><a href="https://github.com/opentracing-contrib/java-spring-jaeger" target="_blank" rel="noopener">https://github.com/opentracing-contrib/java-spring-jaeger</a><br><a href="https://github.com/opentracing-contrib/java-spring-zipkin" target="_blank" rel="noopener">https://github.com/opentracing-contrib/java-spring-zipkin</a><br><a href="https://github.com/jaegertracing/spark-dependencies" target="_blank" rel="noopener">https://github.com/jaegertracing/spark-dependencies</a><br><a href="https://my.oschina.net/u/2548090/blog/1821372" target="_blank" rel="noopener">https://my.oschina.net/u/2548090/blog/1821372</a></p>
</blockquote>
]]></content>
      <categories>
        <category>spring cloud</category>
        <category>docker</category>
        <category>prometheus</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>spring cloud</tag>
        <tag>prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>elementary os</title>
    <url>/2018/12/elementary-os.html</url>
    <content><![CDATA[<p>Elementary OS作为Ubuntu的扩展分支，号称是最美的Linux发行版。系统不仅主题美而且对Ubuntu进行了大幅精简，系统结构显得轻巧不少，运行效率也不错，官方甚至打出了“A fast and open replacement for Windows and macOS”的口号，其野心可见一班。</p>
<a id="more"></a>
<h2 id="安装操作系统"><a href="#安装操作系统" class="headerlink" title="安装操作系统"></a>安装操作系统</h2><p>从官网<a href="https://elementary.io/zh_CN/" target="_blank" rel="noopener">https://elementary.io/zh_CN/</a>中下载iso文件，下载时输入金额为0即可。用Universal-USB-Installer.exe刻录成U盘进行安装。</p>
<h2 id="docker缩放"><a href="#docker缩放" class="headerlink" title="docker缩放"></a>docker缩放</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install software-properties-common</span><br><span class="line">sudo add-apt-repository ppa:ricotz/docky</span><br><span class="line">sudo apt upgrade</span><br><span class="line">killall plank</span><br></pre></td></tr></table></figure>
<h2 id="安装基础包"><a href="#安装基础包" class="headerlink" title="安装基础包"></a>安装基础包</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install vim</span><br><span class="line">sudo apt-get install unrar</span><br><span class="line"><span class="comment">#sudo apt install google-chrome-stable</span></span><br><span class="line"><span class="comment">#sudo apt install electron-ssr</span></span><br><span class="line">sudo apt install aria2</span><br></pre></td></tr></table></figure>
<h2 id="安装Tweaks"><a href="#安装Tweaks" class="headerlink" title="安装Tweaks"></a>安装Tweaks</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#sudo add-apt-repository ppa:philip.scott/elementary-tweaks</span></span><br><span class="line"><span class="comment">#sudo apt-get update</span></span><br><span class="line"><span class="comment">#sudo apt-get install elementary-tweaks</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#https://github.com/pantheon-tweaks/pantheon-tweaks</span></span><br><span class="line">sudo add-apt-repository -y ppa:philip.scott/pantheon-tweaks</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt install -y pantheon-tweaks</span><br><span class="line"></span><br><span class="line"><span class="comment">#sudo apt-get install dconf-editor</span></span><br><span class="line">sudo apt-get install dconf-tools</span><br><span class="line"><span class="comment">#sudo apt install nautilus</span></span><br></pre></td></tr></table></figure>
<h2 id="修改操作系统配置"><a href="#修改操作系统配置" class="headerlink" title="修改操作系统配置"></a>修改操作系统配置</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat /proc/sys/fs/inotify/max_user_watches</span><br><span class="line"><span class="comment">#sudo vim /etc/sysctl.conf</span></span><br><span class="line">fs.inotify.max_user_instances=1280</span><br><span class="line">fs.inotify.max_user_watches=655360</span><br><span class="line">vm.overcommit_memory=1</span><br><span class="line">sudo sysctl -p</span><br></pre></td></tr></table></figure>
<p>重启系统，然后再通过应用中心下载：Eddy与GNOME Tweaks，GNOME Tweaks可以设置屏幕缩放。</p>
<h2 id="系统托盘"><a href="#系统托盘" class="headerlink" title="系统托盘"></a>系统托盘</h2><p>安装stalonetray：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install stalonetray</span><br></pre></td></tr></table></figure></p>
<p>配置：<br>vim ~/.stalonetrayrc<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#geometry 1x1+1700+1040</span><br><span class="line">#transparent true</span><br><span class="line">#window_layer top</span><br><span class="line">#slot_size 14</span><br><span class="line">#icon_size 30</span><br><span class="line"></span><br><span class="line">#http://stalonetray.sourceforge.net/manpage.html</span><br><span class="line">geometry  1x1+1890-0</span><br><span class="line">background &quot;#110e0e&quot;</span><br><span class="line">transparent true</span><br><span class="line">window_layer bottom</span><br><span class="line">grow_gravity SE</span><br><span class="line">icon_gravity SE </span><br><span class="line">slot_size 25</span><br><span class="line">icon_size 40</span><br></pre></td></tr></table></figure></p>
<p>删除多余的网络图标：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mv /etc/xdg/autostart/nm-applet.desktop ~/</span><br></pre></td></tr></table></figure>
<p><del>cat /Developer/stalonetray.sh</del></p>
<p><del>#/bin/sh</del></p>
<p><del>sleep 1</del></p>
<p><del>/usr/bin/stalonetray</del></p>
<h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><p>vim ~/.bashrc<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">alias ll=&apos;ls -l&apos;</span><br><span class="line">export LANG=zh_CN.UTF-8</span><br><span class="line"></span><br><span class="line">function proxy_off()&#123;</span><br><span class="line">    unset http_proxy</span><br><span class="line">    unset https_proxy</span><br><span class="line">    echo -e &quot;The proxy has been closed!&quot;</span><br><span class="line">&#125;</span><br><span class="line">function proxy_on() &#123;</span><br><span class="line">    export no_proxy=&quot;127.0.0.1,localhost,10.0.0.0/8,172.0.0.0/8,192.168.0.0/16,*.zerofinance.net&quot;</span><br><span class="line">    export http_proxy=&quot;http://127.0.0.1:1082&quot;</span><br><span class="line">    export https_proxy=$http_proxy</span><br><span class="line">    echo -e &quot;The proxy has been opened!&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>使配置生效：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">. ~/.bashrc</span><br></pre></td></tr></table></figure></p>
<h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install git</span><br><span class="line">git config --global user.name <span class="string">"dave.zhao"</span></span><br><span class="line">git config --global user.email dave.zhao@zerofinance.com</span><br><span class="line">git config --global core.autocrlf <span class="literal">false</span></span><br><span class="line">git config --global core.safecrlf warn</span><br><span class="line">git config --global core.filemode <span class="literal">false</span></span><br><span class="line">git config --global core.whitespace cr-at-eol</span><br><span class="line">git config --global credential.helper store</span><br></pre></td></tr></table></figure>
<p>gui:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://www.gitkraken.com/</span></span><br><span class="line">wget https://release.gitkraken.com/linux/gitkraken-amd64.deb</span><br><span class="line">sudo dpkg -i gitkraken-amd64.deb</span><br></pre></td></tr></table></figure>
<h2 id="安装输入法"><a href="#安装输入法" class="headerlink" title="安装输入法"></a>安装输入法</h2><p>以下是五笔的输入法，如果是拼音的话可以直接搜索搜狗拼音并下载安装即可。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#sudo apt-get update</span></span><br><span class="line"><span class="comment">#sudo apt-get install im-config fcitx fcitx-config-gtk fcitx-table-wbpy</span></span><br><span class="line"><span class="comment">#重启系统后</span></span><br><span class="line"><span class="comment">#fcitx-config-gtk3</span></span><br><span class="line"><span class="comment">#https://www.beizigen.com/1934.html</span></span><br><span class="line"><span class="comment">#http://yongim.ys168.com/</span></span><br><span class="line">wget http://ys-c.ys168.com/244626543/TJRtkVk4K465F3K6KM6/yong-lin-2.5.0-0.7z</span><br><span class="line">cp -a yong /opt/</span><br><span class="line">sudo /opt/yong/yong-tool.sh --install</span><br><span class="line">/opt/yong/yong-tool.sh --select</span><br><span class="line"><span class="comment">#重启系统后</span></span><br><span class="line"><span class="comment">#如果希望五笔拼音一起打的话，修改五笔的配置为：mb/wbpy.ini</span></span><br><span class="line"><span class="comment">#快捷键：CTRL_LSHIFT LSHIFT CTRL_SPACE</span></span><br></pre></td></tr></table></figure>
<h2 id="theme"><a href="#theme" class="headerlink" title="theme"></a>theme</h2><h3 id="docky"><a href="#docky" class="headerlink" title="docky"></a>docky</h3><p>不用安装。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#可以用docky替换掉plank</span></span><br><span class="line">sudo apt-get install docky</span><br></pre></td></tr></table></figure>
<p>禁止plank自动启动：<br>通过dconf搜索monitored-processes关键字，把其中的plank删除即可。<br>需要把：io.elementary.desktop.cerbere中的plank替换为docky。</p>
<h3 id="皮肤"><a href="#皮肤" class="headerlink" title="皮肤"></a>皮肤</h3><p>参考<a href="https://vinceliuice.github.io/" target="_blank" rel="noopener">https://vinceliuice.github.io/</a><br><a href="https://github.com/vinceliuice/Canta-theme" target="_blank" rel="noopener">https://github.com/vinceliuice/Canta-theme</a></p>
<p>推荐几个漂亮的皮肤：</p>
<h4 id="eOS-Sierra-Gtk"><a href="#eOS-Sierra-Gtk" class="headerlink" title="eOS-Sierra-Gtk"></a>eOS-Sierra-Gtk</h4><p><a href="https://github.com/btd1337/eOS-Sierra-Gtk" target="_blank" rel="noopener">eOS-Sierra-Gtk</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/btd1337/eOS-Sierra-Gtk ~/.<span class="built_in">local</span>/share/themes/eOS-Sierra-Gtk</span><br><span class="line">gsettings <span class="built_in">set</span> org.gnome.desktop.interface gtk-theme <span class="string">'eOS-Sierra-Gtk'</span></span><br></pre></td></tr></table></figure>
<p>最终效果：<br><img src="/images/elementary-os/elementary_theme.png" alt></p>
<h4 id="vimix-gtk-themes"><a href="#vimix-gtk-themes" class="headerlink" title="vimix-gtk-themes"></a>vimix-gtk-themes</h4><p><a href="https://github.com/vinceliuice/vimix-gtk-themes" target="_blank" rel="noopener">vimix-gtk-themes</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/vinceliuice/vimix-gtk-themes</span><br><span class="line"><span class="built_in">cd</span> vimix-gtk-themes</span><br><span class="line">./Install</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/vinceliuice/vimix-icon-theme</span><br><span class="line"><span class="built_in">cd</span> vimix-icon-theme</span><br><span class="line">./Installer.sh</span><br></pre></td></tr></table></figure>
<p>最终效果：<br><img src="/images/elementary-os/vimix-gtk-themes.png" alt></p>
<h4 id="Sierra-gtk-theme"><a href="#Sierra-gtk-theme" class="headerlink" title="Sierra-gtk-theme"></a>Sierra-gtk-theme</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://github.com/vinceliuice/Sierra-gtk-theme</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/vinceliuice/Sierra-gtk-theme.git</span><br><span class="line"><span class="built_in">cd</span> Sierra-gtk-theme</span><br><span class="line">./install.sh</span><br></pre></td></tr></table></figure>
<h4 id="Macos-sierra-CT"><a href="#Macos-sierra-CT" class="headerlink" title="Macos-sierra-CT"></a>Macos-sierra-CT</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/zayronxio/Macos-sierra-CT.git ~/.<span class="built_in">local</span>/share/icons/Macos-sierra-CT</span><br></pre></td></tr></table></figure>
<h4 id="la-capitaine-icon-theme"><a href="#la-capitaine-icon-theme" class="headerlink" title="la-capitaine-icon-theme"></a>la-capitaine-icon-theme</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://github.com/btd1337/La-Sierra-Icon-Theme</span></span><br><span class="line"><span class="comment">#https://github.com/keeferrourke/la-capitaine-icon-theme.git</span></span><br><span class="line">mkdir ~/.<span class="built_in">local</span>/share/icons</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/btd1337/La-Sierra-Icon-Theme ~/.<span class="built_in">local</span>/share/icons/La-Sierra </span><br><span class="line"><span class="comment">#or</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/keeferrourke/la-capitaine-icon-theme.git ~/.<span class="built_in">local</span>/share/icons/la-capitaine-icon-theme</span><br></pre></td></tr></table></figure>
<h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#wget "https://dl-sh-ctc-2.pchome.net/25/rm/YosemiteSanFranciscoFont-master.zip"</span></span><br><span class="line"><span class="comment">#mv YosemiteSanFranciscoFont-master SanFranciscoFont</span></span><br><span class="line"><span class="comment">#sudo cp -a SanFranciscoFont /usr/share/fonts/</span></span><br><span class="line">sudo git <span class="built_in">clone</span> https://github.com/AppleDesignResources/SanFranciscoFont /usr/share/fonts/SanFranciscoFont</span><br></pre></td></tr></table></figure>
<p>San Francisco Text Medium</p>
<h2 id="添加application菜单"><a href="#添加application菜单" class="headerlink" title="添加application菜单"></a>添加application菜单</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://elementaryos.stackexchange.com/questions/2883/how-can-i-change-the-icon-of-an-application-in-the-elementary-os</span></span><br><span class="line">sudo apt-get install alacarte</span><br><span class="line"><span class="comment">#Icon=/home/dave/.local/share/icons/hicolor/512x512/apps/appimagekit-balena-etcher-electron.png</span></span><br><span class="line"><span class="comment">#rm ~/.config/menus/gnome-applications.menu</span></span><br><span class="line"><span class="comment">#打开主菜单就可以进行添加与修改了</span></span><br></pre></td></tr></table></figure>
<h2 id="wingpanel-indicator-sys-monitor"><a href="#wingpanel-indicator-sys-monitor" class="headerlink" title="wingpanel-indicator-sys-monitor"></a>wingpanel-indicator-sys-monitor</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://www.linuxslaves.com/2018/10/install-wingpanel-system-monitor-indicator-elementary-os-juno.html</span></span><br><span class="line"><span class="comment">#https://github.com/PlugaruT/wingpanel-indicator-sys-monitor</span></span><br><span class="line">sudo apt-get install git libglib2.0-dev libgtop2-dev libgranite-dev libgtk-3-dev libwingpanel-2.0-dev meson valac</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/PlugaruT/wingpanel-indicator-sys-monitor.git &amp;&amp; <span class="built_in">cd</span> wingpanel-indicator-sys-monitor</span><br><span class="line">meson build --prefix=/usr &amp;&amp; <span class="built_in">cd</span> build/ &amp;&amp; ninja</span><br><span class="line">sudo ninja install</span><br></pre></td></tr></table></figure>
<h2 id="桌面图标"><a href="#桌面图标" class="headerlink" title="桌面图标"></a>桌面图标</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://github.com/spheras/desktopfolder</span></span><br><span class="line"><span class="comment">#download file from https://github.com/spheras/desktopfolder/releases</span></span><br><span class="line">sudo dpkg -i com.github.spheras.desktopfolder_1.0.10_amd64.deb</span><br><span class="line"><span class="comment"># logout and login</span></span><br></pre></td></tr></table></figure>
<h2 id="修改开机启动画面"><a href="#修改开机启动画面" class="headerlink" title="修改开机启动画面"></a>修改开机启动画面</h2><p>可选。如果不想修改开机启动画面的话，可以不用安装。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://tianyijian.github.io/2018/04/05/ubuntu-boot-animation/</span></span><br><span class="line"><span class="comment">#https://www.gnome-look.org/browse/cat/109/ord/latest/</span></span><br><span class="line"><span class="comment">#https://www.gnome-look.org/p/1237117/</span></span><br><span class="line">unzip Griffin-Grub-Remix.zip</span><br><span class="line"><span class="built_in">cd</span> Griffin-Grub-Remix/</span><br><span class="line">sudo ./Install.sh</span><br><span class="line"><span class="comment">#reboot</span></span><br></pre></td></tr></table></figure>
<p>在系统设置–&gt;启动应用程序中添加/usr/bin/stalonetray即可。<br>也可以在dconf中添加：io.elementary.desktop.cerbere中添加stalonetray。如果被kill会自动启动。</p>
<h2 id="deepin-wine"><a href="#deepin-wine" class="headerlink" title="deepin-wine"></a>deepin-wine</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#https://github.com/zq1997/deepin-wine</span><br><span class="line">wget -O- https://deepin-wine.i-m.dev/setup.sh | sh</span><br><span class="line"></span><br><span class="line">sudo apt-fast install deepin.com.qq.im.light</span><br><span class="line">#配置，修改显示为160dpi</span><br><span class="line">WINEPREFIX=~/.deepinwine/Deepin-QQLight deepin-wine winecfg</span><br><span class="line"></span><br><span class="line">sudo apt-fast install deepin.com.wechat</span><br><span class="line">#配置，修改显示为160dpi</span><br><span class="line">WINEPREFIX=~/.deepinwine/Deepin-WeChat deepin-wine winecfg</span><br><span class="line"></span><br><span class="line">sudo apt-fast install deepin.com.thunderspeed</span><br><span class="line">#配置，修改显示为160dpi</span><br><span class="line">WINEPREFIX=~/.deepinwine/Deepin-ThunderSpeed deepin-wine winecfg</span><br><span class="line"></span><br><span class="line">sudo apt-fast install deepin.com.weixin.work</span><br><span class="line">#配置，修改显示为160dpi</span><br><span class="line">WINEPREFIX=~/.deepinwine/Deepin-WXWork deepin-wine winecfg</span><br><span class="line"></span><br><span class="line">sudo apt-fast install deepin-screenshot</span><br><span class="line">sudo apt-fast install deepin-terminal</span><br><span class="line">xdg-open . -&gt; Win+E</span><br><span class="line">deepin-screenshot -&gt; ctrl+alt+Q</span><br><span class="line">deepin-terminal -&gt; ctrl+alt+T</span><br></pre></td></tr></table></figure>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p>可以在应用中心搜索”深度截图”。</p>
<h2 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">xdg-open . -&gt; Win+E</span><br><span class="line">deepin-screenshot -&gt; ctrl+alt+Q</span><br><span class="line"><span class="comment">#deepin-terminal -&gt; ctrl+alt+T</span></span><br><span class="line">io.elementary.terminal -&gt; ctrl+alt+T</span><br></pre></td></tr></table></figure>
<h2 id="Mailspring"><a href="#Mailspring" class="headerlink" title="Mailspring"></a>Mailspring</h2><p>从<a href="https://getmailspring.com/download" target="_blank" rel="noopener">https://getmailspring.com/download</a>下载对应的版本安装即可。</p>
<h2 id="WPS字体"><a href="#WPS字体" class="headerlink" title="WPS字体"></a>WPS字体</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://blog.huzhifeng.com/2017/01/15/WPS/</span></span><br><span class="line"><span class="comment">#https://www.dropbox.com/s/q6rhaorhsbxbylk/wps_symbol_fonts.zip?dl=0</span></span><br><span class="line">sudo mkdir -p /usr/share/fonts/wps_symbol_fonts</span><br><span class="line">sudo unzip wps_symbol_fonts.zip -d /usr/share/fonts/wps_symbol_fonts</span><br><span class="line">sudo chmod 755 /usr/share/fonts/wps_symbol_fonts</span><br></pre></td></tr></table></figure>
<h2 id="VPN"><a href="#VPN" class="headerlink" title="VPN"></a>VPN</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install network-manager-openconnect-gnome</span><br><span class="line">sudo mkdir -p /etc/vpn</span><br><span class="line"><span class="built_in">cd</span> /etc/vpn</span><br><span class="line">sudo wget http://git.infradead.org/users/dwmw2/vpnc-scripts.git/blob_plain/HEAD:/vpnc-script</span><br><span class="line">sudo chmod +x /etc/vpn/vpnc-script </span><br><span class="line"><span class="comment"># execute</span></span><br><span class="line">sudo openconnect -u aaa --script=/etc/vpn/vpnc-script --no-dtls x.x.x.x</span><br><span class="line"><span class="comment"># 自动登录, 将密码写入MyScript.txt文件中即可</span></span><br><span class="line">openconnect -u aaa --script=/etc/vpn/vpnc-script --no-dtls x.x.x.x --servercert pin-sha256:+PLuNZB2mIJy8y/Hx3Qwc3QmMh</span><br><span class="line">ZfulMTOy1S5OakhdY= --passwd-on-stdin &lt; MyScript.txt</span><br></pre></td></tr></table></figure>
<p>也可以通过自动输入密码：</p>
<p>安装spawn：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装spawn</span></span><br><span class="line">sudo apt install expect</span><br></pre></td></tr></table></figure>
<p>以下为对应的脚本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/expect</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> timeout -1</span><br><span class="line"><span class="comment">#set PWD vagrant</span></span><br><span class="line"><span class="comment">#spawn passwd</span></span><br><span class="line">spawn openconnect -u 对应的用户 --script=/etc/vpn/vpnc-script --no-dtls ip</span><br><span class="line">expect <span class="string">"确定"</span></span><br><span class="line">send <span class="string">"确定\r"</span></span><br><span class="line">expect <span class="string">"Password:"</span></span><br><span class="line">send <span class="string">"对应的密码\r"</span></span><br><span class="line">interact</span><br><span class="line"><span class="comment">#expect eof</span></span><br></pre></td></tr></table></figure>
<h2 id="java"><a href="#java" class="headerlink" title="java"></a>java</h2><p>sudo vim /etc/profile.d/java.sh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> ANDROID_HOME=/Developer/Android/Sdk</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$ANDROID_HOME</span>/tools</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$ANDROID_HOME</span>/tools/bin</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$ANDROID_HOME</span>/platform-tools</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$ANDROID_HOME</span>/emulator</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/Developer/java/jdk1.8.0_152</span><br><span class="line"><span class="comment">#export JAVA_HOME=$(/usr/libexec/java_home)</span></span><br><span class="line"><span class="built_in">export</span> M2_HOME=/Developer/apache-maven-3.3.9</span><br><span class="line"><span class="built_in">export</span> GRADLE_USER_HOME=/Developer/.gradle</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$M2_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>
<p>使配置生效：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure></p>
<p>将<a href="/files/elementary-os/settings.xml">settings.xml</a>放到~/.m2/目录下。注意修改localRepository与password为自己的配置。</p>
<h2 id="其它一些常用工具"><a href="#其它一些常用工具" class="headerlink" title="其它一些常用工具"></a>其它一些常用工具</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://www.jianshu.com/p/1e104090ffaa</span></span><br><span class="line">sudo apt-get install keepassx</span><br><span class="line">sudo apt-get install vlc</span><br><span class="line">sudo apt install synapse</span><br><span class="line"><span class="comment">#synapse也可以用albert代替：https://github.com/albertlauncher/albert</span></span><br><span class="line"><span class="comment">#yahei</span></span><br><span class="line">wget -qO- https://raw.githubusercontent.com/yakumioto/YaHei-Consolas-Hybrid-1.12/master/install.sh | sudo sh</span><br><span class="line"><span class="comment">#将alt键打造成command键</span></span><br><span class="line">sudo vi /usr/share/X11/xkb/keycodes/evdev</span><br><span class="line"><span class="comment">#找到LCTL和LALT, 将系统默认的LCTL=37, LALT=64的值互相交换即可。</span></span><br></pre></td></tr></table></figure>
<h2 id="添加打印机"><a href="#添加打印机" class="headerlink" title="添加打印机"></a>添加打印机</h2><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://www.kyoceradocumentsolutions.co.za/index/service___support/download_center.false.driver.FS6525MFP._.EN.html#</span></span><br><span class="line"><span class="built_in">cd</span> <span class="string">"LinuxPackages/FS-6525MFP series/64bit/Global/English"</span></span><br><span class="line">sudo ./install.sh</span><br><span class="line">sudo apt install system-config-printer</span><br><span class="line">system-config-printer</span><br><span class="line"><span class="comment">#输入URI</span></span><br><span class="line">socket://192.168.101.2:9100</span><br><span class="line"><span class="comment">#选择Provide PPD file-&gt;Kyocera FS-6525MFP驱动即可。</span></span><br></pre></td></tr></table></figure>
<h2 id="Beyond-Compare"><a href="#Beyond-Compare" class="headerlink" title="Beyond Compare"></a>Beyond Compare</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://mirrors.aliyun.com/deepin/pool/non-free/b/bcompare/bcompare_4.1.9-21719_amd64.deb</span><br><span class="line">sudo dpkg -i bcompare_4.1.9-21719_amd64.deb</span><br><span class="line"><span class="comment">#register</span></span><br><span class="line"><span class="comment">#https://gist.github.com/satish-setty/04e1058d3043f4d10e2d52feebe135e8</span></span><br><span class="line"><span class="comment">#https://my.oschina.net/sfshine/blog/1829595</span></span><br><span class="line">sudo sed -i <span class="string">"s/keexjEP3t4Mue23hrnuPtY4TdcsqNiJL-5174TsUdLmJSIXKfG2NGPwBL6vnRPddT7tH29qpkneX63DO9ECSPE9rzY1zhThHERg8lHM9IBFT+rVuiY823aQJuqzxCKIE1bcDqM4wgW01FH6oCBP1G4ub01xmb4BGSUG6ZrjxWHJyNLyIlGvOhoY2HAYzEtzYGwxFZn2JZ66o4RONkXjX0DF9EzsdUef3UAS+JQ+fCYReLawdjEe6tXCv88GKaaPKWxCeaUL9PejICQgRQOLGOZtZQkLgAelrOtehxz5ANOOqCaJgy2mJLQVLM5SJ9Dli909c5ybvEhVmIC0dc9dWH+/N9KmiLVlKMU7RJqnE+WXEEPI1SgglmfmLc1yVH7dqBb9ehOoKG9UE+HAE1YvH1XX2XVGeEqYUY-Tsk7YBTz0WpSpoYyPgx6Iki5KLtQ5G-aKP9eysnkuOAkrvHU8bLbGtZteGwJarev03PhfCioJL4OSqsmQGEvDbHFEbNl1qJtdwEriR+VNZts9vNNLk7UGfeNwIiqpxjk4Mn09nmSd8FhM4ifvcaIbNCRoMPGl6KU12iseSe+w+1kFsLhX+OhQM8WXcWV10cGqBzQE9OqOLUcg9n0krrR3KrohstS9smTwEx9olyLYppvC0p5i7dAx2deWvM1ZxKNs0BvcXGukR+/g"</span> /usr/lib/beyondcompare/BCompare</span><br></pre></td></tr></table></figure>
<p>Then restart BC, click “Enter License”:</p>
<p>— BEGIN LICENSE KEY —<br>GXN1eh9FbDiX1ACdd7XKMV7hL7x0ClBJLUJ-zFfKofjaj2yxE53xauIfkqZ8FoLpcZ0Ux6McTyNmODDSvSIHLYhg1QkTxjCeSCk6ARz0ABJcnUmd3dZYJNWFyJun14rmGByRnVPL49QH+Rs0kjRGKCB-cb8IT4Gf0Ue9WMQ1A6t31MO9jmjoYUeoUmbeAQSofvuK8GN1rLRv7WXfUJ0uyvYlGLqzq1ZoJAJDyo0Kdr4ThF-IXcv2cxVyWVW1SaMq8GFosDEGThnY7C-SgNXW30jqAOgiRjKKRX9RuNeDMFqgP2cuf0NMvyMrMScnM1ZyiAaJJtzbxqN5hZOMClUTE+++<br>— END LICENSE KEY —–</p>
<h2 id="XMind-8"><a href="#XMind-8" class="headerlink" title="XMind 8"></a>XMind 8</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://dl2.xmind.cn/xmind-8-update8-linux.zip</span><br><span class="line">sudo unzip xmind-8-update8-linux.zip -d /Developer/xmind-8</span><br><span class="line"><span class="comment">#run /Developer/xmind-8/XMind_amd64/XMind</span></span><br><span class="line"><span class="comment">#Put icon into applications, you should create a file:</span></span><br><span class="line"><span class="comment">#cd /Developer/xmind-8/XMind_amd64/</span></span><br><span class="line"><span class="comment">#echo "cd /Developer/xmind-8/XMind_amd64 &amp;&amp; ./XMind" &gt; xmind</span></span><br><span class="line"><span class="comment">#chmod +x xmind</span></span><br><span class="line"><span class="comment">#If you want to crack, please see: https://blog.csdn.net/weixin_40576010/article/details/89323313</span></span><br><span class="line">vim /Developer/xmind-8/XMind_amd64</span><br><span class="line">-javaagent:/Developer/xmind-8/XMind_amd64/XMindCrack.jar</span><br><span class="line"><span class="built_in">cd</span> /Developer/xmind-8/XMind_amd64/</span><br><span class="line">./xmind</span><br><span class="line">断开网络(一定要这步骤）， 打开Xmind, 在帮助-&gt;序列号</span><br><span class="line">邮箱输入：x@iroader.me</span><br><span class="line">序列号：</span><br><span class="line">XAka34A2rVRYJ4XBIU35UZMUEEF64CMMIYZCK2FZZUQNODEKUHGJLFMSLIQMQUCUBXRENLK6NZL37JXP4PZXQFILMQ2RG5R7G4QNDO3PSOEUBOCDRYSSXZGRARV6MGA33TN2AMUBHEL4FXMWYTTJDEINJXUAV4BAYKBDCZQWVF3LWYXSDCXY546U3NBGOI3ZPAP2SO3CSQFNB7VVIY123456789012345</span><br><span class="line">点击确认，然后关闭xmind, 重开，点击帮助-&gt;关于xmind，如果显示激活为，就是成功</span><br></pre></td></tr></table></figure>
<h2 id="SecureCRT"><a href="#SecureCRT" class="headerlink" title="SecureCRT"></a>SecureCRT</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget wget http://archive.ubuntu.com/ubuntu/pool/main/o/openssl1.0/libssl1.0.0_1.0.2n-1ubuntu5.7_amd64.deb</span><br><span class="line">sudo dpkg -i libssl1.0.0_1.0.2n-1ubuntu5.7_amd64.deb</span><br><span class="line">sudo cp -a /snap/gnome-3-34-1804/77/usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0 /usr/<span class="built_in">local</span>/lib/</span><br><span class="line">sudo ldconfig -v</span><br><span class="line"><span class="comment">#https://blog.csdn.net/duapple/article/details/117757050</span></span><br><span class="line">sudo add-apt-repository ppa:linuxuprising/libpng12 </span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install libpng12-0</span><br><span class="line"><span class="comment">#install</span></span><br><span class="line">sudo dpkg -i scrt-sfx-8.3.4-1699.ubuntu16-64.x86_64.deb</span><br><span class="line"><span class="comment">#crack</span></span><br><span class="line">rm /tmp/.securecrt.tmp</span><br><span class="line">sudo perl securecrt_linux_crack.pl /usr/bin/SecureCRT</span><br></pre></td></tr></table></figure>
<h2 id="virtualbox"><a href="#virtualbox" class="headerlink" title="virtualbox"></a>virtualbox</h2><p>下载virtualbox与Extension_Pack，直接安装即可。不过安装后虚拟机不能找到usb，是因为没有权限，通过以下命令解决：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://blog.csdn.net/huohongpeng/article/details/60965563</span></span><br><span class="line">cat /etc/group | grep vbox</span><br><span class="line">sudo usermod -a -G vboxusers dave</span><br></pre></td></tr></table></figure>
<p>重启系统，再次打开虚拟机，USB设备都已经被识别了。</p>
<h2 id="系统备份与还原"><a href="#系统备份与还原" class="headerlink" title="系统备份与还原"></a>系统备份与还原</h2><h3 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://blog.csdn.net/sinat_27554409/article/details/78227496</span></span><br><span class="line"><span class="comment">#备份</span></span><br><span class="line">sudo tar -cvpzf /media/dave/DATA/elementary.backup.tgz --ignore-failed-read --exclude=/proc --exclude=/lost+found --exclude=/mnt --exclude=/sys --exclude=/media --exclude=/tmp --exclude=/Developer / &gt; /dev/null</span><br></pre></td></tr></table></figure>
<h3 id="还原"><a href="#还原" class="headerlink" title="还原"></a>还原</h3><p>如果原来的Ubuntu系统已经崩溃，无法进入。则可以使用Ubuntu安装U盘（live USB）进入试用Ubuntu界面。</p>
<p>切换到root用户，找到之前Ubuntu系统的根目录所在磁盘分区（一般电脑上的磁盘分区（假设分区名称为sdaX）均可以在当前Ubuntu系统的根目录下的media目录下（即/media）找到。目录通常为当前根目录下 cd /media/磁盘名称/分区名称）。进入该分区，输入以下指令来删除该根目录下的所有文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo rm -rf /media/磁盘名称/分区名称*</span><br></pre></td></tr></table></figure>
<p>将备份文件”elementary.backup.tgz”拷入该分区：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo cp -i elementary.backup.tgz /media/磁盘名/分区名sdaX</span><br></pre></td></tr></table></figure></p>
<p>进入分区并将压缩文件解压缩，参数x是告诉tar程序解压缩备份文件：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo tar xvpfz elementary.backup.tgz</span><br></pre></td></tr></table></figure></p>
<p>重新创建那些在备份时被排除在外的目录：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mkdir proc lost+found mnt sys media tmp Developer</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>黑苹果安装过程</title>
    <url>/2019/04/%E9%BB%91%E8%8B%B9%E6%9E%9C%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B.html</url>
    <content><![CDATA[<p>记录一下安装黑苹果的全过程。</p>
<a id="more"></a>
<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><h3 id="硬件配置"><a href="#硬件配置" class="headerlink" title="硬件配置"></a>硬件配置</h3><p>Lenovo Xiaoxin Air 13 Pro, 对应的硬件配置如下：</p>
<table>
<thead>
<tr>
<th>CPU</th>
<th>内存</th>
<th>显卡</th>
<th>声卡</th>
</tr>
</thead>
<tbody>
<tr>
<td>Intel Core i7 6500U @ 2.50GHz</td>
<td>8G</td>
<td>Intel HD Graphics 520</td>
<td>Intel Corporation Sunrise Point-LP HD Audio</td>
</tr>
</tbody>
</table>
<h3 id="操作系统版本"><a href="#操作系统版本" class="headerlink" title="操作系统版本"></a>操作系统版本</h3><p>操作系统版本：<a href="https://mirrors.dtops.cc/iso/MacOS/daliansky_macos/macOS%20Catalina%2010.15.4%2819E266%29%20Installer%20for%20Clover%205107%20and%20WEPE%20Support%20UEFI%20and%20MBR.dmg" target="_blank" rel="noopener">macOS-Catalina-10.15.4-19E266</a>。</p>
<h3 id="镜像制作"><a href="#镜像制作" class="headerlink" title="镜像制作"></a>镜像制作</h3><p>下载<a href="https://etcher.io/" target="_blank" rel="noopener">etcher</a>，打开镜像，选择U盘，点击Flash即可。</p>
<h3 id="微PE工具箱"><a href="#微PE工具箱" class="headerlink" title="微PE工具箱"></a>微PE工具箱</h3><p>从<a href="http://www.wepe.com.cn/download.html" target="_blank" rel="noopener">http://www.wepe.com.cn/download.html</a>中下载对应的PE版本并刻录到U盘，用于备份EFI或者进入不了系统时的急救。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>安装过程比较简单，详见<a href="https://blog.daliansky.net/macOS-Catalina-10.15.4-19E266-Release-version-with-Clover-5107-original-image-Double-EFI-Version-UEFI-and-MBR.html" target="_blank" rel="noopener">黑果小兵macOS-Catalina-10.15.4-19E266安装过程</a>中的步骤。</p>
<h2 id="驱动安装"><a href="#驱动安装" class="headerlink" title="驱动安装"></a>驱动安装</h2><p>安装完成后，用Clover Configurator加载EFI分区，然后复制EIF-&gt;CLOVER下的config_5700.plist为config.plist，将<a href="/files/黑苹果安装过程/apple_tools.zip">对应的驱动补丁下载</a>, 并将kext目录下的几个文件放到EFI的CLOVER/kexts/other目录下。</p>
<p>声卡对应的inject id为3。</p>
<p>打开hidpi：</p>
<p>参考：</p>
<p><a href="https://www.sqlsec.com/2018/09/hidpi.html" target="_blank" rel="noopener">https://www.sqlsec.com/2018/09/hidpi.html</a></p>
<p><a href="https://github.com/xzhih/one-key-hidpi" target="_blank" rel="noopener">https://github.com/xzhih/one-key-hidpi</a></p>
<p>打开终端执行以下命令，按照文档中的说明一步步操作即可：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sh -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/xzhih/one-key-hidpi/master/hidpi-zh.sh)</span>"</span></span><br></pre></td></tr></table></figure>
<p>亮度调节：</p>
<p>参考：<a href="https://www.bilibili.com/video/av54305176/" target="_blank" rel="noopener">https://www.bilibili.com/video/av54305176/</a></p>
<p>首先删除以前用过的亮度驱动，如ACPIBacklightInjector，删除ACPI/patched下的SSDT-PNLF.aml，然后打开clover configurator ，ACPI部分与视频一样勾上AddPNLF，然后Device部分勾选SetIntelBacklight和SetIntelMaxBacklight，然后你需要在你的kexts/other中放入较新版本的WhateverGreen.kext，重启生效。</p>
<h2 id="Dell-9020显示驱动"><a href="#Dell-9020显示驱动" class="headerlink" title="Dell 9020显示驱动"></a>Dell 9020显示驱动</h2><p>参考<a href="https://imac.hk/heipingguo-hd4400-hd4600-kext.html" target="_blank" rel="noopener">https://imac.hk/heipingguo-hd4400-hd4600-kext.html</a></p>
<p>Dell 9020的驱动比较简单，不用上面这么麻烦，用Clover Configurator挂载EFI目录，再打开config.plist进行编辑:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Graphics:</span></span><br><span class="line">ig-platform-id ---&gt; 0x0D220003</span><br><span class="line">或者从右边的下拉中选择0x0a260006</span><br><span class="line"><span class="comment">#Devices：</span></span><br><span class="line">IntelGFX ---&gt; 0x04128086</span><br><span class="line">Audio inject ---&gt; 3</span><br><span class="line"><span class="comment">#SMBIOS:</span></span><br><span class="line">Product Model ---&gt; iMac15,1</span><br><span class="line"><span class="comment">#Boot:</span></span><br><span class="line">如果默认只启动MacOS，设置Default Boot Volume为对应的操作系统的Label</span><br></pre></td></tr></table></figure>
<p>台式机打开hidpi时注意选择：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1:开启hidpi</span><br><span class="line">2:iMac</span><br><span class="line">3:手动选择：1920x1080 1680x944 1440x810</span><br></pre></td></tr></table></figure>
<p>显示器不能使用VGA，否则不能显示。</p>
<p>Dell 9020对应的<a href="/files/黑苹果安装过程/EFI_dell.zip">EFI下载</a></p>
<h2 id="打印机"><a href="#打印机" class="headerlink" title="打印机"></a>打印机</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://warwick.ac.uk/fac/soc/wbs/central/issu/help/kb/hardware/printers/kyoceramac-win/</span></span><br><span class="line">wget https://warwick.ac.uk/fac/soc/wbs/central/issu/<span class="built_in">help</span>/kb/hardware/printers/kyoceramac-win/macphase4.0_2018.01.19-eu.zip</span><br><span class="line"><span class="comment">#install Kyocera OS X 10.8+ Web build 2018.01.05.dmg</span></span><br><span class="line"><span class="comment">#参考上面的网址配置即可。如果是windows smb的话，地址为：smb://192.168.100.105/Kyocera02</span></span><br><span class="line"><span class="comment">#驱动选择Kyocera FS-6525MFP</span></span><br></pre></td></tr></table></figure>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>vscode可以在命令行直接输入code打开：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#for mac</span></span><br><span class="line">sudo ln -s <span class="string">'/Applications//Visual Studio Code.app/Contents/Resources/app/bin/code'</span> /usr/bin/code</span><br></pre></td></tr></table></figure>
<p>加载硬盘为自定义的目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://blog.csdn.net/wangrui1573/article/details/82562253</span></span><br><span class="line"><span class="comment">#先打开UUID</span></span><br><span class="line">diskutil info /dev/disk1s1</span><br><span class="line"><span class="comment">#sudo diskutil umount  /Volumes/Developer</span></span><br><span class="line"><span class="comment">#sudo vifs  (sudo vim /etc/fstab)</span></span><br><span class="line"><span class="comment">#/dev/disk0s4 /data hfs rw,auto</span></span><br><span class="line">UUID=0C54584B-F516-42F8-88A4-4165E9D1E702 /Developer/ apfs rw 1 2</span><br><span class="line"><span class="comment">#disk Utility会自动mount对应的point为/Develper</span></span><br></pre></td></tr></table></figure>
<p>环境变量：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">alias</span> ll=<span class="string">'ls -l'</span></span><br><span class="line"><span class="built_in">alias</span> code=<span class="string">"/Applications/Visual\ Studio\ Code.app/Contents/Resources/app/bin/code"</span></span><br><span class="line"><span class="built_in">export</span> LANG=zh_CN.UTF-8</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">proxy_off</span></span>()&#123;</span><br><span class="line">    <span class="built_in">unset</span> http_proxy</span><br><span class="line">    <span class="built_in">unset</span> https_proxy</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">"The proxy has been closed!"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">proxy_on</span></span>() &#123;</span><br><span class="line">    <span class="built_in">export</span> no_proxy=<span class="string">"127.0.0.1,localhost,10.0.0.0/8,172.0.0.0/8,192.168.0.0/16,*.zerofinance.net"</span></span><br><span class="line">    <span class="built_in">export</span> http_proxy=<span class="string">"http://127.0.0.1:1082"</span></span><br><span class="line">    <span class="built_in">export</span> https_proxy=<span class="variable">$http_proxy</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">"The proxy has been opened!"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> ANDROID_HOME=/Developer/Android/sdk</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$ANDROID_HOME</span>/tools</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$ANDROID_HOME</span>/tools/bin</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$ANDROID_HOME</span>/platform-tools</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$ANDROID_HOME</span>/emulator</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=$(/usr/libexec/java_home)</span><br><span class="line"><span class="built_in">export</span> M2_HOME=/Developer/apache-maven-3.3.9</span><br><span class="line"><span class="built_in">export</span> GRADLE_USER_HOME=/Developer/.gradle</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$M2_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>
<p>下载m3u8：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#declare var</span></span><br><span class="line"><span class="comment">#Allow how many threads to download.</span></span><br><span class="line">download_max_connection=10</span><br><span class="line"><span class="comment">#The aria2c's max connection</span></span><br><span class="line">aria2c_max_connection=16</span><br><span class="line">rootUrl=<span class="string">'http://hong.tianzhen-zuida.com/20200102/17650_845edc1f/1000k/hls/'</span></span><br><span class="line">m3u8File=<span class="variable">$1</span></span><br><span class="line">outputFile=output.mp4</span><br><span class="line">filelistFile=filelist.txt</span><br><span class="line">tempFolder=downTemp</span><br><span class="line">header=<span class="string">"--header='Referer: https://cdnx.stream/player/o2AWUrtSqQuo1Ma/'"</span></span><br><span class="line">userAgent=<span class="string">"Mozilla/5.0 (Macintosh\; Intel Mac OS X 10_14_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36"</span></span><br><span class="line">aria2cCmd=<span class="string">"aria2c -x <span class="variable">$aria2c_max_connection</span> -U '<span class="variable">$userAgent</span>'"</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="string">"<span class="variable">$tempFolder</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">    mkdir -p <span class="string">"<span class="variable">$tempFolder</span>"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$tempFolder</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#checkout either the finally file existed</span></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">"<span class="variable">$outputFile</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$outputFile</span> already existed!"</span></span><br><span class="line">    <span class="built_in">exit</span> -1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># echo -n "" &gt; $filelistFile</span></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">"<span class="variable">$filelistFile</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">    rm -fr <span class="variable">$filelistFile</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">index=0</span><br><span class="line">playlist=()</span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> line</span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">    <span class="keyword">if</span> [[ <span class="variable">$&#123;line:0:1&#125;</span> == <span class="string">"#"</span> ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">continue</span></span><br><span class="line">    <span class="keyword">fi</span> </span><br><span class="line">    <span class="keyword">if</span> [[ <span class="variable">$&#123;line&#125;</span> != https://* ]]; <span class="keyword">then</span></span><br><span class="line">        line=<span class="string">"<span class="variable">$&#123;rootUrl&#125;</span><span class="variable">$&#123;line&#125;</span>"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    playlist[<span class="variable">$index</span>]=<span class="variable">$line</span></span><br><span class="line">    index=$((index+1))</span><br><span class="line"><span class="keyword">done</span> &lt; <span class="variable">$m3u8File</span></span><br><span class="line">index=0</span><br><span class="line">fileindex=0</span><br><span class="line">playlistlength=<span class="variable">$&#123;#playlist[@]&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"playlistlength---&gt;<span class="variable">$playlistlength</span>"</span></span><br><span class="line"><span class="keyword">while</span>(( index &lt;= playlistlength ))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    templength=<span class="variable">$download_max_connection</span></span><br><span class="line">    newplaylist=(<span class="variable">$&#123;playlist[@]:$index:$templength&#125;</span>)</span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> <span class="variable">$&#123;newplaylist[@]&#125;</span></span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        [[ <span class="variable">$url</span> == <span class="string">""</span> ]] &amp;&amp; <span class="built_in">continue</span></span><br><span class="line">        <span class="comment"># echo "url---&gt;$url"</span></span><br><span class="line">        fileName=<span class="string">"<span class="variable">$&#123;fileindex&#125;</span>.mp4"</span></span><br><span class="line">        <span class="keyword">if</span> [[ ! -f <span class="string">"<span class="variable">$fileName</span>"</span> || -f <span class="string">"<span class="variable">$&#123;fileName&#125;</span>.aria2"</span> ]]; <span class="keyword">then</span> </span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;url&#125;</span>"</span> | sed <span class="string">"s;^;<span class="variable">$aria2cCmd</span> -o \"<span class="variable">$&#123;fileName&#125;</span>\" \";g"</span> \</span><br><span class="line">            | sed <span class="string">"s;$;\";g"</span> | sh +x &amp;</span><br><span class="line">            <span class="keyword">if</span> [[ $? == 0 ]]; <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"file '<span class="variable">$&#123;fileName&#125;</span>'"</span> &gt;&gt; <span class="variable">$filelistFile</span></span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"<span class="variable">$fileName</span> already existed!"</span></span><br><span class="line">            <span class="keyword">if</span> [[ $? == 0 ]]; <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"file '<span class="variable">$&#123;fileName&#125;</span>'"</span> &gt;&gt; <span class="variable">$filelistFile</span></span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        fileindex=$((fileindex+1))</span><br><span class="line">    <span class="keyword">done</span> </span><br><span class="line">    <span class="built_in">wait</span></span><br><span class="line">    index=$((index+<span class="variable">$templength</span>))</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">"<span class="variable">$filelistFile</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">    ffmpeg -f concat -i <span class="variable">$filelistFile</span> -c copy <span class="variable">$outputFile</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> -</span><br></pre></td></tr></table></figure>
<p>使用annie下载视频：</p>
<p>请参考：<a href="https://github.com/iawia002/annie" target="_blank" rel="noopener">https://github.com/iawia002/annie</a></p>
<p>下载优酷vip视频：</p>
<p>先安装chrome插件： <a href="https://chrome.google.com/webstore/detail/njabckikapfpffapmjgojcnbfjonfjfg" target="_blank" rel="noopener">cookies.txt</a>，然后使用以下命令下载：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">#查看格式：</span><br><span class="line">#如果不是vip视频不用加-c参数：</span><br><span class="line">annie -i -c youku.txt &quot;url&quot;</span><br><span class="line">#下载指定格式视频：</span><br><span class="line">annie -f 格式类型 -c youku.txt &quot;url&quot;</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://blog.daliansky.net/Intel-FB-Patcher-tutorial-and-insertion-pose.html" target="_blank" rel="noopener">https://blog.daliansky.net/Intel-FB-Patcher-tutorial-and-insertion-pose.html</a></li>
<li><a href="https://www.sqlsec.com/2018/09/hidpi.html" target="_blank" rel="noopener">https://www.sqlsec.com/2018/09/hidpi.html</a></li>
<li><a href="https://www.bilibili.com/video/av46767597?from=search&amp;seid=18234894269411097533" target="_blank" rel="noopener">https://www.bilibili.com/video/av46767597?from=search&amp;seid=18234894269411097533</a></li>
<li><a href="https://github.com/acidanthera/AppleALC" target="_blank" rel="noopener">https://github.com/acidanthera/AppleALC</a></li>
<li><a href="https://bitbucket.org/RehabMan/os-x-acpi-battery-driver/downloads/" target="_blank" rel="noopener">https://bitbucket.org/RehabMan/os-x-acpi-battery-driver/downloads/</a></li>
<li><a href="https://github.com/fishrong/ASUS-FL5500L-EFI/tree/master/EFI/CLOVER/kexts/Other/ApplePS2SmartTouchPad.kext" target="_blank" rel="noopener">https://github.com/fishrong/ASUS-FL5500L-EFI/tree/master/EFI/CLOVER/kexts/Other/ApplePS2SmartTouchPad.kext</a></li>
<li><a href="https://www.jianshu.com/p/955ce6706ae2" target="_blank" rel="noopener">https://www.jianshu.com/p/955ce6706ae2</a></li>
<li><a href="https://imac.hk/heipingguo-hd4400-hd4600-kext.html" target="_blank" rel="noopener">https://imac.hk/heipingguo-hd4400-hd4600-kext.html</a></li>
</ul>
]]></content>
      <tags>
        <tag>mac</tag>
      </tags>
  </entry>
  <entry>
    <title>Git如何永久删除文件与历史记录</title>
    <url>/2019/05/Git%E5%A6%82%E4%BD%95%E6%B0%B8%E4%B9%85%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6%E4%B8%8E%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95.html</url>
    <content><![CDATA[<p>记录一下Git怎么永久删除文件(包括该文件的历史记录)。</p>
<a id="more"></a>
<h2 id="bfg-repo-cleaner"><a href="#bfg-repo-cleaner" class="headerlink" title="bfg-repo-cleaner"></a>bfg-repo-cleaner</h2><p>最快速方便的操作可以使用<a href="https://rtyley.github.io/bfg-repo-cleaner/" target="_blank" rel="noopener">bfg-repo-cleaner</a>工具操作，具体操作如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://repo1.maven.org/maven2/com/madgag/bfg/1.13.0/bfg-1.13.0.jar</span><br><span class="line"><span class="comment">#清理大于10M以上的大文件</span></span><br><span class="line">java -jar bfg-1.13.0.jar --strip-blobs-bigger-than 10M some-big-repo.git</span><br><span class="line"><span class="comment">#清理和回收空间</span></span><br><span class="line"><span class="built_in">cd</span> some-big-repo.git</span><br><span class="line">git reflog expire --expire=now --all &amp;&amp; git gc --prune=now --aggressive</span><br><span class="line"><span class="comment">#推送修改后的repo</span></span><br><span class="line">git push --force --all</span><br><span class="line">git push --force --tags</span><br></pre></td></tr></table></figure>
<p>bfg-repo-cleaner不会删除真实存在的文件。如果想手动执行可以参考以下的方式。</p>
<h2 id="查看哪些历史提交过文件占用空间较大"><a href="#查看哪些历史提交过文件占用空间较大" class="headerlink" title="查看哪些历史提交过文件占用空间较大"></a>查看哪些历史提交过文件占用空间较大</h2><p>使用以下命令可以查看占用空间最多的五个文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git rev-list --objects --all | grep <span class="string">"<span class="variable">$(git verify-pack -v .git/objects/pack/*.idx | sort -k 3 -n | tail -5 | awk '&#123;print$1&#125;')</span>"</span></span><br></pre></td></tr></table></figure>
<p>rev-list命令用来列出Git仓库中的提交，我们用它来列出所有提交中涉及的文件名及其ID。 该命令可以指定只显示某个引用（或分支）的上下游的提交。</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">--objects：列出该提交涉及的所有文件ID。</span><br><span class="line">--all：所有分支的提交，相当于指定了位于/refs下的所有引用。</span><br><span class="line">verify-pack命令用于显示已打包的内容。</span><br></pre></td></tr></table></figure>
<h2 id="重写commit，删除大文件"><a href="#重写commit，删除大文件" class="headerlink" title="重写commit，删除大文件"></a>重写commit，删除大文件</h2><p>使用以下命令，删除历史提交过的大文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git filter-branch --force --index-filter <span class="string">'git rm -rf --cached --ignore-unmatch big-file.zip'</span> --prune-empty --tag-name-filter cat -- --all</span><br></pre></td></tr></table></figure>
<p>上面脚本中的big-file.zip请换成你第一步查出的大文件名，或者这里直接写一个目录。操作后注意看一下是否有删除真实存在的文件。</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">filter-branch命令可以用来重写Git仓库中的提交</span><br><span class="line">--index-filter参数用来指定一条Bash命令，然后Git会检出（checkout）所有的提交， 执行该命令，然后重新提交。</span><br><span class="line">–all参数表示我们需要重写所有分支（或引用）。</span><br></pre></td></tr></table></figure>
<p>在重写提交的过程中，会有以下日志输出:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Rewrite 6cdbb293d453ced07e6a07e0aa6e580e6a5538f4 (266/266)</span><br><span class="line"><span class="comment"># Ref 'refs/heads/master' was rewritten</span></span><br></pre></td></tr></table></figure>
<p>如果显示 xxxxx unchanged, 说明repo里没有找到该文件, 请检查路径和文件名是否正确，重复上面的脚本，把所有你想删除的文件都删掉。</p>
<h2 id="清理和回收空间"><a href="#清理和回收空间" class="headerlink" title="清理和回收空间"></a>清理和回收空间</h2><p>虽然上面我们已经删除了文件, 但是我们的repo里面仍然保留了这些objects, 等待垃圾回收(GC), 所以我们要用命令彻底清除它, 并收回空间，命令如下:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> 仓库目录</span><br><span class="line"><span class="comment">#rm -rf .git/refs/original/</span></span><br><span class="line"><span class="comment">#git reflog expire --expire=now --all</span></span><br><span class="line"><span class="comment">#git gc --prune=now</span></span><br><span class="line"><span class="comment">#git gc --aggressive --prune=now</span></span><br><span class="line">git reflog expire --expire=now --all &amp;&amp; git gc --prune=now --aggressive</span><br></pre></td></tr></table></figure>
<h2 id="推送修改后的repo"><a href="#推送修改后的repo" class="headerlink" title="推送修改后的repo"></a>推送修改后的repo</h2><p>以强制覆盖的方式推送你的repo, 命令如下:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#git push origin master --force</span></span><br><span class="line">git push --force --all</span><br><span class="line">git push --force --tags</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://rtyley.github.io/bfg-repo-cleaner/" target="_blank" rel="noopener">https://rtyley.github.io/bfg-repo-cleaner/</a></li>
<li><a href="https://www.hollischuang.com/archives/1708" target="_blank" rel="noopener">https://www.hollischuang.com/archives/1708</a></li>
<li><a href="http://www.cnblogs.com/shines77/p/3460274.html" target="_blank" rel="noopener">http://www.cnblogs.com/shines77/p/3460274.html</a></li>
</ul>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Jenkins代码质量扫描与自动化部署</title>
    <url>/2017/11/Jenkins%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F%E6%89%AB%E6%8F%8F%E4%B8%8E%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2.html</url>
    <content><![CDATA[<p>本文记录一下Jenkins代码质量扫描与自动化部署的全过程。</p>
<a id="more"></a>
<h2 id="Jenkins安装"><a href="#Jenkins安装" class="headerlink" title="Jenkins安装"></a>Jenkins安装</h2><p>Jenkins 是一个开源项目，提供了一种易于使用的持续集成系统，使开发者从繁杂的集成中解脱出来，专注于更为重要的业务逻辑实现上。同时 Jenkins 能实施监控集成中存在的错误，提供详细的日志文件和提醒功能，还能用图表的形式形象地展示项目构建的趋势和稳定性。</p>
<h3 id="war安装"><a href="#war安装" class="headerlink" title="war安装"></a>war安装</h3><p>JENKINS_VERSION：2.73.3</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://mirrors.jenkins.io/war-stable/latest/jenkins.war</span><br><span class="line">mkdir -p /var/jenkins</span><br><span class="line"><span class="built_in">export</span> JENKINS_HOME=/var/jenkins</span><br><span class="line">java -jar jenkins.war --httpPort=9999</span><br></pre></td></tr></table></figure>
<p>初始登录密码在jenkins启动时可以看到。</p>
<h3 id="docker安装"><a href="#docker安装" class="headerlink" title="docker安装"></a>docker安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://github.com/jenkinsci/docker/blob/master/README.md</span></span><br><span class="line">mkdir /var/jenkins</span><br><span class="line">chown 1000:1000 -R /var/jenkins /works/jenkins</span><br><span class="line">docker run --name myjenkins -p 9999:8080 -p 50000:50000 \</span><br><span class="line">-e <span class="string">"JAVA_OPTS=-Xms512m -Xmx512m"</span> \</span><br><span class="line">-v /works/jenkins/.gradle:/var/jenkins_home/.gradle \</span><br><span class="line">-v /works/jenkins/.m2:/var/jenkins_home/.m2 \</span><br><span class="line">-v /var/jenkins:/var/jenkins_home \</span><br><span class="line">-v /works/jenkins:/works/jenkins \</span><br><span class="line">jenkins/jenkins:lts</span><br></pre></td></tr></table></figure>
<p>也可以自己写Dockerfile编译：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Version: 1.0.0</span></span><br><span class="line">FROM centos</span><br><span class="line">MAINTAINER xxx.xxx.com</span><br><span class="line"><span class="comment">#ENV JENKINS_HOME /usr/local/jenkins</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#VOLUME [ "/var/jenkins_home", "/usr/local/jenkins" ]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">RUN yum install -y unzip git</span><br><span class="line"></span><br><span class="line">ADD java.sh /etc/profile.d/</span><br><span class="line">ADD jenkins_env.tgz /usr/<span class="built_in">local</span>/</span><br><span class="line">ADD settings.xml ~/.m2/</span><br><span class="line"></span><br><span class="line">RUN ln -s /usr/<span class="built_in">local</span>/apache-ant-1.10.1 /usr/<span class="built_in">local</span>/ant \</span><br><span class="line"> &amp;&amp; ln -s /usr/<span class="built_in">local</span>/groovy-2.4.10 /usr/<span class="built_in">local</span>/groovy \</span><br><span class="line"> &amp;&amp; ln -s /usr/<span class="built_in">local</span>/apache-maven-3.3.9 /usr/<span class="built_in">local</span>/maven \</span><br><span class="line"> &amp;&amp; ln -s /usr/<span class="built_in">local</span>/gradle-3.4 /usr/<span class="built_in">local</span>/gradle \</span><br><span class="line"> &amp;&amp; ln -s /usr/<span class="built_in">local</span>/jdk1.7.0_80 /usr/<span class="built_in">local</span>/jdk1.7</span><br><span class="line"></span><br><span class="line">RUN chmod +x /usr/<span class="built_in">local</span>/gradle/bin/gradle /usr/<span class="built_in">local</span>/maven/bin/mvn /usr/<span class="built_in">local</span>/ant/bin/ant /usr/<span class="built_in">local</span>/groovy/bin/groovy</span><br><span class="line"></span><br><span class="line"><span class="comment">#RUN sed -i 's;SELINUX=.*;SELINUX=disabled;' /etc/selinux/config</span></span><br><span class="line">RUN sed -i <span class="string">'s;LANG=.*;LANG="zh_CN.UTF-8";'</span> /etc/locale.conf</span><br><span class="line"><span class="comment">#RUN timedatectl set-timezone Asia/Shanghai</span></span><br><span class="line"></span><br><span class="line">RUN <span class="built_in">echo</span> -e <span class="string">'search xxx.com \nnameserver 192.168.100.101 \nnameserver 114.114.114.114'</span> &gt; /etc/resolv.conf</span><br><span class="line"></span><br><span class="line">RUN . /etc/profile.d/java.sh</span><br><span class="line"></span><br><span class="line">COPY jenkins.war /usr/<span class="built_in">local</span>/jenkins/</span><br><span class="line"></span><br><span class="line">WORKDIR /usr/<span class="built_in">local</span>/jenkins</span><br><span class="line">ENTRYPOINT [ <span class="string">"/usr/local/jdk1.7/bin/java"</span>, <span class="string">"-Xmx2048M"</span>, <span class="string">"-Xms2048M"</span>, <span class="string">"-XX:PermSize=128M"</span>, <span class="string">"-XX:MaxPermSize=512m"</span>, <span class="string">"-jar"</span>, <span class="string">"-DJENKINS_HOME=/var/jenkins_home"</span>, <span class="string">"jenkins.war"</span>  ] </span><br><span class="line"><span class="comment">#CMD ["-h"]</span></span><br><span class="line"><span class="comment">#EXPOSE 80</span></span><br></pre></td></tr></table></figure></p>
<p>java.sh<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/<span class="built_in">local</span>/jdk1.7</span><br><span class="line"><span class="built_in">export</span> MVN_HOME=/usr/<span class="built_in">local</span>/maven</span><br><span class="line"><span class="built_in">export</span> GRADLE_HOME=/usr/<span class="built_in">local</span>/gradle</span><br><span class="line"><span class="built_in">export</span> GRADLE_USER_HOME=jenkins_home/.gradle</span><br><span class="line"><span class="built_in">export</span> ANT_HOME=/usr/<span class="built_in">local</span>/ant</span><br><span class="line"><span class="built_in">export</span> GROOVY_HOME=/usr/<span class="built_in">local</span>/groovy</span><br><span class="line"><span class="built_in">export</span> JENKINS_HOME=/var/jenkins_home</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$MVN_HOME</span>/bin:<span class="variable">$GRADLE_HOME</span>/bin:<span class="variable">$ANT_HOME</span>/bin:<span class="variable">$GROOVY_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure></p>
<h3 id="plugin安装"><a href="#plugin安装" class="headerlink" title="plugin安装"></a>plugin安装</h3><p>需要安装以下插件：</p>
<ul>
<li>Ant</li>
<li>Build Pipeline</li>
<li>Project statistics</li>
<li>Static Analysis Collector</li>
<li>Checkstyle</li>
<li>PMD</li>
<li>FindBugs</li>
<li>JaCoCo</li>
<li>DRY</li>
<li>Git Parameter</li>
<li>Extensible Choice Parameter</li>
<li>Gradle</li>
<li>Publish Over SSH</li>
<li>Email Extension</li>
<li>Configuration Slicing</li>
<li>Environment Injector</li>
</ul>
<h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><h3 id="java-maven-git环境配置"><a href="#java-maven-git环境配置" class="headerlink" title="java/maven/git环境配置"></a>java/maven/git环境配置</h3><p>登录jenkins后，在:系统管理-&gt;Global Tool Configuration中配置。</p>
<h3 id="Jenkins-Location"><a href="#Jenkins-Location" class="headerlink" title="Jenkins Location"></a>Jenkins Location</h3><p>登录jenkins后，在:系统管理-&gt;系统设置中配置，用于设置管理员的邮箱地址。</p>
<h3 id="Extended-E-mail-Notification"><a href="#Extended-E-mail-Notification" class="headerlink" title="Extended E-mail Notification"></a>Extended E-mail Notification</h3><p>配置以下信息：</p>
<p><img src="/images/Jenkins代码质量扫描与自动化部署/jenkins_sendmail.png" alt="jenkins_sendmail"></p>
<p>Default Subject:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">构建通知:$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS!</span><br></pre></td></tr></table></figure>
<p>Default Content:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">(本邮件是程序自动下发的，请勿回复！)<span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">项目名称：$JOB_NAME<span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">项目描述：$JOB_DESCRIPTION<span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">构建编号：$BUILD_NUMBER<span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">构建状态：$BUILD_STATUS<span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">触发原因：$&#123;CAUSE&#125;<span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">构建地址：<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$BUILD_URL"</span>&gt;</span>$BUILD_URL<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">构建日志地址：<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;BUILD_URL&#125;console"</span>&gt;</span>$&#123;BUILD_URL&#125;console<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">git地址：<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$GIT_URL"</span>&gt;</span>$&#123;GIT_URL&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">git版本号：$&#123;GIT_BRANCH&#125;<span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">变更集:$&#123;JELLY_SCRIPT,template="template.jelly"&#125;<span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS:</span><br><span class="line"></span><br><span class="line">Check console output at <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$BUILD_URL"</span>&gt;</span>$BUILD_URL<span class="tag">&lt;/<span class="name">a</span>&gt;</span> to view the results.</span><br></pre></td></tr></table></figure>
<p>对应的变量请参考<a href="https://www.cnblogs.com/weiweifeng/p/8295724.html" target="_blank" rel="noopener">https://www.cnblogs.com/weiweifeng/p/8295724.html</a></p>
<h3 id="邮件模板"><a href="#邮件模板" class="headerlink" title="邮件模板"></a>邮件模板</h3><p>将<a href="/files/Jenkins代码质量扫描与自动化部署/template.jelly">template.jelly</a>文件放在$JENKINS_HOME的email-templates目录中。</p>
<h3 id="Default-Pre-send-Script"><a href="#Default-Pre-send-Script" class="headerlink" title="Default Pre-send Script"></a>Default Pre-send Script</h3><p>有时候可能想在手动点击Build时，只发邮件给自己。或者是想临时过滤某些账户，可以通过Default Pre-send Script来实现，在Jenkins—&gt;配置中配置Default Pre-send Script：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// https://wiki.jenkins-ci.org/display/JENKINS/Email-ext+Recipes#Email-extRecipes-AdditionalTemplatesIntheSourceCode</span><br><span class="line">def buildCauses = build.causes</span><br><span class="line"></span><br><span class="line">def excludeEmails = []</span><br><span class="line"></span><br><span class="line">if (build.result.toString().equals(&quot;FAILURE&quot;)) &#123; </span><br><span class="line">    msg.addHeader(&quot;X-Priority&quot;, &quot;1 (Highest)&quot;); </span><br><span class="line">    msg.addHeader(&quot;Importance&quot;, &quot;High&quot;); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">def getTriggeredEmail(cause) &#123;</span><br><span class="line">	def email = &quot;&quot;</span><br><span class="line">	if(cause instanceof hudson.model.Cause.UpstreamCause) &#123;</span><br><span class="line">		for(def p in cause.upstreamCauses) &#123;</span><br><span class="line">			if(p instanceof hudson.model.Cause.UserIdCause) &#123;</span><br><span class="line">				def user = User.get(p.userId)</span><br><span class="line">				email = user.getProperty(hudson.tasks.Mailer.UserProperty.class).getAddress()</span><br><span class="line">				if(email!=null &amp;&amp; !email.equals(&quot;&quot;)) &#123;</span><br><span class="line">					break</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125; else if(cause instanceof hudson.model.Cause.UserIdCause) &#123;</span><br><span class="line">		def user = User.get(cause.userId)</span><br><span class="line">		email = user.getProperty(hudson.tasks.Mailer.UserProperty.class).getAddress()</span><br><span class="line">	&#125;</span><br><span class="line">	return email</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">for(def cause in buildCauses) &#123;</span><br><span class="line">	try &#123;</span><br><span class="line">		if(cause.shortDescription.indexOf(&quot;Started by upstream&quot;) != -1 || cause.shortDescription.indexOf(&quot;Started by downstream&quot;) != -1) &#123;</span><br><span class="line">			cancel = true</span><br><span class="line">	    &#125; else if(cause.shortDescription.indexOf(&quot;Started by timer&quot;) != -1 || cause.shortDescription.indexOf(&quot;Started by an SCM change&quot;) != -1) &#123;</span><br><span class="line">		    // Send mail to all recipients</span><br><span class="line">            def allEmails = msg.getAllRecipients().findAll &#123; addr -&gt;</span><br><span class="line">				return !excludeEmails.contains(addr.address)</span><br><span class="line">            &#125; as javax.mail.internet.InternetAddress[]</span><br><span class="line"></span><br><span class="line">			msg.setRecipients(javax.mail.Message.RecipientType.TO, allEmails)</span><br><span class="line">	    &#125; else &#123;</span><br><span class="line">			String triggeredEmail = getTriggeredEmail(cause)</span><br><span class="line">			logger.println(&quot;triggeredEmail:&quot;+triggeredEmail)</span><br><span class="line">			if(triggeredEmail!=null &amp;&amp; !triggeredEmail.equals(&quot;&quot;)) &#123;</span><br><span class="line">			    msg.setRecipient(javax.mail.Message.RecipientType.TO, new javax.mail.internet.InternetAddress(triggeredEmail))</span><br><span class="line">			    // Send mail to logined user</span><br><span class="line">				logger.println(&quot;Sending email to triggeredEmail:&quot;+triggeredEmail)</span><br><span class="line">			&#125; else &#123;</span><br><span class="line">				logger.println(&quot;Triggered email is empty, send mail canceled!&quot;)</span><br><span class="line">				cancel = true</span><br><span class="line">			&#125;</span><br><span class="line">	    &#125;</span><br><span class="line">	&#125; catch(e) &#123;</span><br><span class="line">		logger.println(&quot;error:&quot;+e.message)</span><br><span class="line">		cancel = true</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="静态代码扫描"><a href="#静态代码扫描" class="headerlink" title="静态代码扫描"></a>静态代码扫描</h2><h3 id="项目配置"><a href="#项目配置" class="headerlink" title="项目配置"></a>项目配置</h3><p>在pom.xml中添加：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-eclipse-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">wtpversion</span>&gt;</span>2.0<span class="tag">&lt;/<span class="name">wtpversion</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">additionalProjectnatures</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">projectnature</span>&gt;</span>org.eclipse.jdt.core.javanature<span class="tag">&lt;/<span class="name">projectnature</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">projectnature</span>&gt;</span>net.sf.eclipsecs.core.CheckstyleNature<span class="tag">&lt;/<span class="name">projectnature</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">projectnature</span>&gt;</span>ch.acanda.eclipse.pmd.builder.PMDNature<span class="tag">&lt;/<span class="name">projectnature</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">projectnature</span>&gt;</span>edu.umd.cs.findbugs.plugin.eclipse.findbugsNature<span class="tag">&lt;/<span class="name">projectnature</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">additionalProjectnatures</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">additionalBuildcommands</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">buildcommand</span>&gt;</span>org.eclipse.jdt.core.javabuilder<span class="tag">&lt;/<span class="name">buildcommand</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">buildcommand</span>&gt;</span>net.sf.eclipsecs.core.CheckstyleBuilder<span class="tag">&lt;/<span class="name">buildcommand</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">buildcommand</span>&gt;</span>ch.acanda.eclipse.pmd.builder.PMDBuilder<span class="tag">&lt;/<span class="name">buildcommand</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">buildcommand</span>&gt;</span>edu.umd.cs.findbugs.plugin.eclipse.findbugsBuilder<span class="tag">&lt;/<span class="name">buildcommand</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">additionalBuildcommands</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-checkstyle-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">configLocation</span>&gt;</span>http://gitlab.aeasycredit.net/dave.zhao/codecheck/raw/master/checkstyle/checkstyle.xml<span class="tag">&lt;/<span class="name">configLocation</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;propertiesLocation&gt;/Developer/checkstyle/checkstyle.properties&lt;/propertiesLocation&gt; --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">propertyExpansion</span>&gt;</span>samedir=http://gitlab.aeasycredit.net/dave.zhao/codecheck/raw/master/checkstyle<span class="tag">&lt;/<span class="name">propertyExpansion</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">consoleOutput</span>&gt;</span>true<span class="tag">&lt;/<span class="name">consoleOutput</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">outputFileFormat</span>&gt;</span>xml<span class="tag">&lt;/<span class="name">outputFileFormat</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">failsOnError</span>&gt;</span>false<span class="tag">&lt;/<span class="name">failsOnError</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">linkXRef</span>&gt;</span>false<span class="tag">&lt;/<span class="name">linkXRef</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-pmd-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">rulesets</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ruleset</span>&gt;</span>http://gitlab.aeasycredit.net/dave.zhao/codecheck/raw/master/pmd/myRuleSet.xml<span class="tag">&lt;/<span class="name">ruleset</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">rulesets</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">consoleOutput</span>&gt;</span>true<span class="tag">&lt;/<span class="name">consoleOutput</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">outputFileFormat</span>&gt;</span>xml<span class="tag">&lt;/<span class="name">outputFileFormat</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">failsOnError</span>&gt;</span>true<span class="tag">&lt;/<span class="name">failsOnError</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">linkXRef</span>&gt;</span>false<span class="tag">&lt;/<span class="name">linkXRef</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.mojo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>findbugs-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">failOnError</span>&gt;</span>true<span class="tag">&lt;/<span class="name">failOnError</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">threshold</span>&gt;</span>Medium<span class="tag">&lt;/<span class="name">threshold</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">effort</span>&gt;</span>Default<span class="tag">&lt;/<span class="name">effort</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maxRank</span>&gt;</span>15<span class="tag">&lt;/<span class="name">maxRank</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">outputEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">includeFilterFile</span>&gt;</span>http://gitlab.aeasycredit.net/dave.zhao/codecheck/raw/master/findbugs/include_filter.xml<span class="tag">&lt;/<span class="name">includeFilterFile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;executions&gt;</span></span><br><span class="line"><span class="comment">        &lt;execution&gt;</span></span><br><span class="line"><span class="comment">            &lt;id&gt;run-findbugs&lt;/id&gt;</span></span><br><span class="line"><span class="comment">            &lt;phase&gt;install&lt;/phase&gt;</span></span><br><span class="line"><span class="comment">            &lt;goals&gt;</span></span><br><span class="line"><span class="comment">                &lt;goal&gt;check&lt;/goal&gt;</span></span><br><span class="line"><span class="comment">            &lt;/goals&gt;</span></span><br><span class="line"><span class="comment">        &lt;/execution&gt;</span></span><br><span class="line"><span class="comment">    &lt;/executions&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="代码扫描"><a href="#代码扫描" class="headerlink" title="代码扫描"></a>代码扫描</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#checkstyle</span></span><br><span class="line"><span class="comment">#mvn checkstyle:check 有异常时会中断运行</span></span><br><span class="line">mvn checkstyle:checkstyle</span><br><span class="line"></span><br><span class="line"><span class="comment">#pmd</span></span><br><span class="line">mvn pmd:pmd</span><br><span class="line"></span><br><span class="line"><span class="comment">#重复代码检查</span></span><br><span class="line">mvn pmd:cpd</span><br><span class="line"></span><br><span class="line"><span class="comment">#Findbug</span></span><br><span class="line"><span class="comment">#mvn clean install findbugs:check 有异常时会中断运行，并且一定要先编译，因为findbugs是通过class文件来分析的</span></span><br><span class="line">mvn clean install findbugs:findbugs</span><br></pre></td></tr></table></figure>
<p>对应的checkstyle/pmd/findbugs的相关配置请参考：<a href="/files/Jenkins代码质量扫描与自动化部署/codecheck.zip">codecheck.zip</a></p>
<h2 id="JaCoCo"><a href="#JaCoCo" class="headerlink" title="JaCoCo"></a>JaCoCo</h2><h3 id="Eclipse插件"><a href="#Eclipse插件" class="headerlink" title="Eclipse插件"></a>Eclipse插件</h3><p>The update site for EclEmma is <a href="http://update.eclemma.org/" target="_blank" rel="noopener">http://update.eclemma.org/</a>. EclEmma is also available via the Eclipse Marketplace Client, simply search for “EclEmma”.</p>
<h3 id="Maven插件"><a href="#Maven插件" class="headerlink" title="Maven插件"></a>Maven插件</h3><p>在pom.xml中添加：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://www.cnblogs.com/fnlingnzb-learner/p/10637802.html --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://blog.csdn.net/qq_29611427/article/details/88735366 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- skip: mvn clean install -Djacoco.skip=true --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jacoco<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jacoco-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.8.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">skip</span>&gt;</span>$&#123;skip_jacoco&#125;<span class="tag">&lt;/<span class="name">skip</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- &lt;include&gt;com/**/tenant/mapper/*&lt;/include&gt; --&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- rules裏面指定覆蓋規則 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">rules</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">rule</span> <span class="attr">implementation</span>=<span class="string">"org.jacoco.maven.RuleConfiguration"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">element</span>&gt;</span>BUNDLE<span class="tag">&lt;/<span class="name">element</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">limits</span>&gt;</span>　　</span><br><span class="line">                <span class="comment">&lt;!-- 指定方法覆蓋到50% --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">limit</span> <span class="attr">implementation</span>=<span class="string">"org.jacoco.report.check.Limit"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">counter</span>&gt;</span>METHOD<span class="tag">&lt;/<span class="name">counter</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">value</span>&gt;</span>COVEREDRATIO<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">minimum</span>&gt;</span>0.00<span class="tag">&lt;/<span class="name">minimum</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">limit</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 指定分支覆蓋到50% --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">limit</span> <span class="attr">implementation</span>=<span class="string">"org.jacoco.report.check.Limit"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">counter</span>&gt;</span>BRANCH<span class="tag">&lt;/<span class="name">counter</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">value</span>&gt;</span>COVEREDRATIO<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">minimum</span>&gt;</span>0.00<span class="tag">&lt;/<span class="name">minimum</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">limit</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- 指定類覆蓋到50% --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">limit</span> <span class="attr">implementation</span>=<span class="string">"org.jacoco.report.check.Limit"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">counter</span>&gt;</span>CLASS<span class="tag">&lt;/<span class="name">counter</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">value</span>&gt;</span>COVEREDRATIO<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">minimum</span>&gt;</span>0.00<span class="tag">&lt;/<span class="name">minimum</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- 指定類覆蓋到100%，不能遺失任何類 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 			                  &lt;value&gt;MISSEDCOUNT&lt;/value&gt; --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 			                  &lt;maximum&gt;0&lt;/maximum&gt; --&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">limit</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">limit</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">counter</span>&gt;</span>COMPLEXITY<span class="tag">&lt;/<span class="name">counter</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">value</span>&gt;</span>COVEREDRATIO<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- 最低覆盖率 --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">minimum</span>&gt;</span>0.00<span class="tag">&lt;/<span class="name">minimum</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">limit</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">limits</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">rules</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>pre-unit-tests<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>prepare-agent<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Ensures that the code coverage report for unit tests is created after unit tests have been run --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>post-unit-test<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">phase</span>&gt;</span>test<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>report<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dataFile</span>&gt;</span>target/jacoco.exec<span class="tag">&lt;/<span class="name">dataFile</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>target/jacoco-ut<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;execution&gt;</span></span><br><span class="line"><span class="comment">            &lt;id&gt;check&lt;/id&gt;</span></span><br><span class="line"><span class="comment">            &lt;goals&gt;</span></span><br><span class="line"><span class="comment">                &lt;goal&gt;check&lt;/goal&gt;</span></span><br><span class="line"><span class="comment">            &lt;/goals&gt;</span></span><br><span class="line"><span class="comment">        &lt;/execution&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>jenkins jacoco插件会有设置rules的地方，如果有使用jenkins的话rules可以不用配置。</p>
<p>代码扫描:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#mvn clean install jacoco:check 有异常时会中断运行，并且一定要先编译，因为jacoco是通过class文件来分析的</span></span><br><span class="line">mvn clean install jacoco:report</span><br></pre></td></tr></table></figure>
<h2 id="jenkins项目配置"><a href="#jenkins项目配置" class="headerlink" title="jenkins项目配置"></a>jenkins项目配置</h2><h3 id="参数化构建过程"><a href="#参数化构建过程" class="headerlink" title="参数化构建过程"></a>参数化构建过程</h3><p><img src="/images/Jenkins代码质量扫描与自动化部署/jenkins-config1.png" alt="jenkins-config1"></p>
<p>注意：<br>Git parameter只能实现一些简单的过滤条件，如果想实现复杂的过滤的话，可以用Groovy脚本（通过Extensible Choice Plugin实现）：</p>
<p><img src="/images/Jenkins代码质量扫描与自动化部署/jenkins-config1-1.png" alt="jenkins-config1-1"></p>
<p>对应的脚本为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// https://gist.github.com/lyuboraykov/8deae849e4812669793a</span><br><span class="line">def gitURL = project.scm.key.replace(&quot;git &quot;, &quot;&quot;)</span><br><span class="line">def command = &quot;git ls-remote --heads -h $gitURL | grep &apos;.x&apos; | sort -t &apos;/&apos; -k 3 -V&quot;</span><br><span class="line">def proc = [&apos;bash&apos;, &apos;-c&apos;, command].execute()</span><br><span class="line">proc.waitFor()</span><br><span class="line">def branches = []</span><br><span class="line">branches = proc.in.text.readLines().findAll &#123;</span><br><span class="line">  // ==~: match =~: find</span><br><span class="line">  it =~ /\d+.*\.x$/</span><br><span class="line">&#125;.collect &#123;</span><br><span class="line">  //it.replaceAll(/.*/, &apos;&apos;) </span><br><span class="line">  it = it.replaceAll(/.*\trefs\/heads\//, &apos;&apos;) </span><br><span class="line">&#125;.reverse()</span><br><span class="line">//.sort().reverse()</span><br><span class="line">return branches</span><br></pre></td></tr></table></figure>
<p>或者全部通过shell过滤：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// https://gist.github.com/lyuboraykov/8deae849e4812669793a</span><br><span class="line">def gitURL = project.scm.key.replace(<span class="string">"git "</span>, <span class="string">""</span>)</span><br><span class="line">// refs/heads/1.6.x</span><br><span class="line">def <span class="built_in">command</span> = <span class="string">"git ls-remote --heads -h <span class="variable">$gitURL</span> | awk '&#123;print \$2&#125;' | sort -t '/' -k 3 -V -r | egrep '/[0-9]+\\.[0-9]+\\.x' | sed 's;^refs/heads/;;g'"</span></span><br><span class="line">def proc = [<span class="string">'bash'</span>, <span class="string">'-c'</span>, <span class="built_in">command</span>].execute()</span><br><span class="line">proc.waitFor()</span><br><span class="line"><span class="built_in">return</span> proc.in.text.readLines()</span><br></pre></td></tr></table></figure></p>
<p>另外，由于Jenkins的安全限制，groovy没有权限运行，可以通过<a href="http://ip:port/scriptApproval/进行授权。" target="_blank" rel="noopener">http://ip:port/scriptApproval/进行授权。</a></p>
<h3 id="配置仓库"><a href="#配置仓库" class="headerlink" title="配置仓库"></a>配置仓库</h3><p><img src="/images/Jenkins代码质量扫描与自动化部署/jenkins-config2.png" alt="jenkins-config2"></p>
<h3 id="构建触发器"><a href="#构建触发器" class="headerlink" title="构建触发器"></a>构建触发器</h3><p><img src="/images/Jenkins代码质量扫描与自动化部署/jenkins-config3.png" alt="jenkins-config3"></p>
<p>Poll SCM：<br>定时检查源码变更（根据SCM软件的版本号），如果有更新就checkout最新code下来，然后执行构建动作。我的配置如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*/5 * * * *  （每5分钟检查一次源码变化）</span><br></pre></td></tr></table></figure>
<p>Build periodically：<br>周期进行项目构建（它不care源码是否发生变化），我的配置如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0 2 * * *  （每天2:00 必须build一次源码）</span><br></pre></td></tr></table></figure>
<h3 id="构建"><a href="#构建" class="headerlink" title="构建"></a>构建</h3><p><img src="/images/Jenkins代码质量扫描与自动化部署/jenkins-config4.png" alt="jenkins-config4"></p>
<p>注意：<br>checkstyle:checkstyle pmd:pmd pmd:cpd findbugs:findbugs只会警告，错误时不会退出。如果想显示完整的代码扫描结果，又想在错误时退出，可以进行以下配置：</p>
<p><img src="/images/Jenkins代码质量扫描与自动化部署/jenkins-config4-1.png" alt="jenkins-config4-1"></p>
<p>如果有使用jacoco的话不能跳过测试用例：</p>
<p><img src="/images/Jenkins代码质量扫描与自动化部署/jenkins-config4-2.png" alt="jenkins-config4-2"></p>
<p>Post Steps：<br>构建完成后的步骤。一般常用于自动化部署。</p>
<p>参考以下的自动化部署脚本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">PATH=<span class="string">'/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin'</span></span><br><span class="line"><span class="built_in">export</span> PATH</span><br><span class="line">JOBNAME=<span class="variable">$1</span></span><br><span class="line">JARNAME=<span class="variable">$2</span></span><br><span class="line">RUSER=<span class="string">'root'</span></span><br><span class="line">HOST=<span class="string">'192.168.108.183'</span></span><br><span class="line">DEVKEY=<span class="string">'/etc/183'</span></span><br><span class="line">PROJECT_PATH=<span class="variable">$&#123;JENKINS_HOME&#125;</span>/workspace/<span class="variable">$&#123;JOBNAME&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">"<span class="variable">$&#123;JOBNAME&#125;</span>"</span> == <span class="string">""</span> ]]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"JOBNAME must not be empty!"</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">dos2unix <span class="variable">$PROJECT_PATH</span>/pom.xml</span><br><span class="line">dos2unix <span class="variable">$PROJECT_PATH</span>/Dockerfile</span><br><span class="line">dos2unix <span class="variable">$PROJECT_PATH</span>/docker.sh</span><br><span class="line">VERSION=`cat <span class="variable">$&#123;PROJECT_PATH&#125;</span>/pom.xml|grep version|sed -n <span class="string">"1p"</span>|sed <span class="string">"s;^\s&lt;version&gt;;;"</span>|sed <span class="string">"s;&lt;/version&gt;;;"</span>|sed -E <span class="string">'s;\r\n;;'</span>`</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"VERSION=<span class="variable">$&#123;VERSION&#125;</span>"</span> </span><br><span class="line">APPNAME=$(<span class="built_in">echo</span> <span class="variable">$JOBNAME</span>|sed <span class="string">'s;\.dev;;'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">"<span class="variable">$&#123;JARNAME&#125;</span>"</span> == <span class="string">""</span> ]]; <span class="keyword">then</span></span><br><span class="line">  JARNAME=<span class="variable">$APPNAME</span></span><br><span class="line">  JARFILE=<span class="string">"<span class="variable">$&#123;PROJECT_PATH&#125;</span>/target/<span class="variable">$&#123;JARNAME&#125;</span>-<span class="variable">$&#123;VERSION&#125;</span>.jar"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  JARFILE=<span class="string">"<span class="variable">$&#123;PROJECT_PATH&#125;</span>/<span class="variable">$&#123;JARNAME&#125;</span>/target/<span class="variable">$&#123;JARNAME&#125;</span>-<span class="variable">$&#123;VERSION&#125;</span>.jar"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"JARFILE=<span class="variable">$JARFILE</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"scp -i <span class="variable">$&#123;DEVKEY&#125;</span> <span class="variable">$&#123;JARFILE&#125;</span> <span class="variable">$&#123;RUSER&#125;</span>@<span class="variable">$&#123;HOST&#125;</span>:/works/app/hkapp/<span class="variable">$&#123;APPNAME&#125;</span>"</span></span><br><span class="line">scp -i <span class="variable">$&#123;DEVKEY&#125;</span> <span class="variable">$&#123;JARFILE&#125;</span> <span class="variable">$&#123;RUSER&#125;</span>@<span class="variable">$&#123;HOST&#125;</span>:/works/app/hkapp/<span class="variable">$&#123;APPNAME&#125;</span>/</span><br><span class="line">scp -i <span class="variable">$&#123;DEVKEY&#125;</span> <span class="variable">$&#123;PROJECT_PATH&#125;</span>/Dockerfile <span class="variable">$&#123;RUSER&#125;</span>@<span class="variable">$&#123;HOST&#125;</span>:/works/app/hkapp/<span class="variable">$&#123;APPNAME&#125;</span>/</span><br><span class="line">scp -i <span class="variable">$&#123;DEVKEY&#125;</span> <span class="variable">$&#123;PROJECT_PATH&#125;</span>/docker.sh <span class="variable">$&#123;RUSER&#125;</span>@<span class="variable">$&#123;HOST&#125;</span>:/works/app/hkapp/<span class="variable">$&#123;APPNAME&#125;</span>/</span><br><span class="line"></span><br><span class="line">ssh -i <span class="variable">$&#123;DEVKEY&#125;</span> <span class="variable">$&#123;RUSER&#125;</span>@<span class="variable">$&#123;HOST&#125;</span> <span class="string">"cd /works/app/hkapp/<span class="variable">$&#123;APPNAME&#125;</span> &amp;&amp; sh docker.sh <span class="variable">$&#123;VERSION&#125;</span> <span class="variable">$&#123;APPNAME&#125;</span>"</span></span><br></pre></td></tr></table></figure>
<h3 id="构建设置"><a href="#构建设置" class="headerlink" title="构建设置"></a>构建设置</h3><p><img src="/images/Jenkins代码质量扫描与自动化部署/jenkins-config5.png" alt="jenkins-config5"></p>
<p>此处将代码质量扫描的结果显示出来：</p>
<p><img src="/images/Jenkins代码质量扫描与自动化部署/jenkins-config8.png" alt="jenkins-config8"></p>
<h3 id="构建后操作"><a href="#构建后操作" class="headerlink" title="构建后操作"></a>构建后操作</h3><p><img src="/images/Jenkins代码质量扫描与自动化部署/jenkins-config6.png" alt="jenkins-config6"></p>
<p><img src="/images/Jenkins代码质量扫描与自动化部署/jenkins-config10.png" alt="jenkins-config10"></p>
<p>在首页显示代码质量扫描的结果：</p>
<p><img src="/images/Jenkins代码质量扫描与自动化部署/jenkins-config9.png" alt="jenkins-config9"></p>
<h3 id="Editable-Email-Notification"><a href="#Editable-Email-Notification" class="headerlink" title="Editable Email Notification"></a>Editable Email Notification</h3><p><img src="/images/Jenkins代码质量扫描与自动化部署/jenkins-config7.png" alt="jenkins-config7"></p>
<h2 id="Jenkins视图设置"><a href="#Jenkins视图设置" class="headerlink" title="Jenkins视图设置"></a>Jenkins视图设置</h2><p><img src="/images/Jenkins代码质量扫描与自动化部署/jenkins-view-config1.png" alt="jenkins-view-config1"></p>
<p><img src="/images/Jenkins代码质量扫描与自动化部署/jenkins-view-config2.png" alt="jenkins-view-config2"></p>
<p><img src="/images/Jenkins代码质量扫描与自动化部署/jenkins-view-config3.png" alt="jenkins-view-config3"></p>
<p><img src="/images/Jenkins代码质量扫描与自动化部署/jenkins-view-config4.png" alt="jenkins-view-config4"></p>
<p><img src="/images/Jenkins代码质量扫描与自动化部署/jenkins-view-config5.png" alt="jenkins-view-config5"></p>
<p><img src="/images/Jenkins代码质量扫描与自动化部署/jenkins-view-config6.png" alt="jenkins-view-config6"></p>
<p><img src="/images/Jenkins代码质量扫描与自动化部署/jenkins-view-config7.png" alt="jenkins-view-config7"></p>
<p><img src="/images/Jenkins代码质量扫描与自动化部署/jenkins-view-config8.png" alt="jenkins-view-config8"></p>
<p>效果如下：</p>
<p><img src="/images/Jenkins代码质量扫描与自动化部署/jenkins-view-effective1.png" alt="jenkins-view-effective1.png"></p>
<p><img src="/images/Jenkins代码质量扫描与自动化部署/jenkins-view-effective2.png" alt="jenkins-view-effective2.png"></p>
<h2 id="权限控制"><a href="#权限控制" class="headerlink" title="权限控制"></a>权限控制</h2><h3 id="Configure-Global-Security"><a href="#Configure-Global-Security" class="headerlink" title="Configure Global Security"></a>Configure Global Security</h3><p><img src="/images/Jenkins代码质量扫描与自动化部署/jenkins-config-security.png" alt="jenkins-config-security"></p>
<h3 id="Manage-and-Assign-Roles"><a href="#Manage-and-Assign-Roles" class="headerlink" title="Manage and Assign Roles"></a>Manage and Assign Roles</h3><h4 id="Manage-Roles"><a href="#Manage-Roles" class="headerlink" title="Manage Roles"></a>Manage Roles</h4><p><img src="/images/Jenkins代码质量扫描与自动化部署/jenkins-roles.png" alt="jenkins-roles"></p>
<p>重点说明一下Project roles：<br>默认dev role是没有Build job的权限，可以在具体的project中配置，比如说允许dev build以.test结尾的项目：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">^.*\.<span class="built_in">test</span>$</span><br></pre></td></tr></table></figure>
<p>或者只允许dev build不以.test开头的项目：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">^(?!hkcash).+$</span><br></pre></td></tr></table></figure>
<p>或者只允许dev build不以.test结尾的项目：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">^.*\.(?&lt;!<span class="built_in">test</span>)$</span><br></pre></td></tr></table></figure>
<h4 id="Assign-Roles"><a href="#Assign-Roles" class="headerlink" title="Assign Roles"></a>Assign Roles</h4><p><img src="/images/Jenkins代码质量扫描与自动化部署/jenkins-assign-roles1.png" alt="jenkins-assign-roles1"></p>
<p><img src="/images/Jenkins代码质量扫描与自动化部署/jenkins-assign-roles2.png" alt="jenkins-assign-roles2"></p>
<h2 id="Configuration-Slicing"><a href="#Configuration-Slicing" class="headerlink" title="Configuration Slicing"></a>Configuration Slicing</h2><p>如果项目太多的话，修改每个项目的配置太痛苦，可以通过Slicing批量修改。比如要修改Maven Goals and Options：</p>
<p><img src="/images/Jenkins代码质量扫描与自动化部署/jenkins-scling-config.png" alt="jenkins-scling-config"></p>
]]></content>
      <categories>
        <category>jenkins</category>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>jenkins</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu os</title>
    <url>/2018/12/ubuntu-os.html</url>
    <content><![CDATA[<p>记录ubuntu的安装过程。</p>
<a id="more"></a>
<h2 id="安装操作系统"><a href="#安装操作系统" class="headerlink" title="安装操作系统"></a>安装操作系统</h2><p><a href="https://ubuntu.com/download/desktop" target="_blank" rel="noopener">https://ubuntu.com/download/desktop</a></p>
<h2 id="优化apt"><a href="#优化apt" class="headerlink" title="优化apt"></a>优化apt</h2><p>登录时使用Ubuntu on X11 Org，否则Theme不能切换。因为Gnome Wayland不成熟。</p>
<p>Recommend: Software &amp; Update-&gt;Download from-&gt;Other去选择aliyun镜像。如果手动的话参考以下方式：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak</span><br><span class="line">sudo vi /etc/apt/sources.list</span><br><span class="line"></span><br><span class="line">#Adding he following lists</span><br><span class="line">#For ubuntu 22.04</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ jammy main restricted</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ jammy-updates main restricted</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ jammy universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ jammy-updates universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ jammy multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ jammy-updates multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ jammy-backports main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ jammy-security main restricted</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ jammy-security universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ jammy-security multiverse</span><br></pre></td></tr></table></figure>
<p>Update:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">#apt</span><br><span class="line">sudo add-apt-repository ppa:apt/stable</span><br><span class="line">sudo apt install apt-fast</span><br><span class="line">sudo apt upgrade</span><br></pre></td></tr></table></figure></p>
<h2 id="安装基础包"><a href="#安装基础包" class="headerlink" title="安装基础包"></a>安装基础包</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#sudo apt install software-properties-common</span><br><span class="line">#sudo apt install aria2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo apt install vim unrar gdebi curl screen keepassxc git</span><br><span class="line">#sudo apt install vlc</span><br><span class="line"></span><br><span class="line">#Installing chrome</span><br><span class="line">wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb</span><br><span class="line">sudo dpkg -i google-chrome-stable_current_amd64.deb</span><br><span class="line"></span><br><span class="line">#Installing albert</span><br><span class="line">#wget https://download.opensuse.org/repositories/home:/manuelschneid3r/xUbuntu_20.04/amd64/albert_0.17.2-0_amd64.deb</span><br><span class="line">wget https://download.opensuse.org/repositories/home:/manuelschneid3r/xUbuntu_22.04/amd64/albert_0.17.3-0_amd64.deb</span><br><span class="line">sudo dpkg -i albert_0.17.3-0_amd64.deb</span><br><span class="line"></span><br><span class="line">#添加application菜单</span><br><span class="line">sudo apt-get install alacarte</span><br><span class="line">#serch mainmenu就可以</span><br><span class="line"></span><br><span class="line">#mount NTFS</span><br><span class="line">sudo apt install ntfs-3g</span><br><span class="line">#Get UUID</span><br><span class="line">ls -l /dev/disk/by-uuid</span><br><span class="line">sudo vim /etc/fstab</span><br><span class="line">UUID=409AB21C9AB20F02                     /data1         ntfs-3g rw              0       0</span><br><span class="line">UUID=5E98B57C98B552EF                     /data2         ntfs-3g rw              0       0</span><br></pre></td></tr></table></figure>
<h2 id="修改操作系统配置"><a href="#修改操作系统配置" class="headerlink" title="修改操作系统配置"></a>修改操作系统配置</h2><p>完整脚本:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get update</span><br><span class="line"><span class="comment">#apt-get install make g++ init inetutils-ping sudo jq iproute2 net-tools wget htop vim screen curl lsof lrzsz zip unzip expect openssh-server -y</span></span><br><span class="line">apt-get install init inetutils-ping sudo iptables psmisc jq iproute2 net-tools wget htop vim screen curl lsof lrzsz zip unzip expect openssh-server -y</span><br><span class="line"></span><br><span class="line"><span class="comment">#LANG="en_US.UTF-8"</span></span><br><span class="line"><span class="comment">#sed -i 's;LANG=.*;LANG="zh_CN.UTF-8";' /etc/locale.conf</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">disable</span> iptables</span><br><span class="line">systemctl stop iptables</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br><span class="line">systemctl stop firewalld</span><br><span class="line"></span><br><span class="line"><span class="comment">#ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span></span><br><span class="line">timedatectl <span class="built_in">set</span>-timezone Asia/Shanghai</span><br><span class="line"></span><br><span class="line"><span class="comment">#logined limit</span></span><br><span class="line">cat /etc/security/limits.conf|grep <span class="string">"^root"</span> &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">		cat &gt;&gt; /etc/security/limits.conf  &lt;&lt; EOF</span><br><span class="line">root            -    nofile             100000</span><br><span class="line">root            -    nproc              100000</span><br><span class="line">*               -    nofile             100000</span><br><span class="line">*               -    nproc              100000</span><br><span class="line">EOF</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#systemd service limit</span></span><br><span class="line">cat /etc/systemd/system.conf|egrep <span class="string">'^DefaultLimitNOFILE'</span> &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">		cat &gt;&gt; /etc/systemd/system.conf &lt;&lt; EOF</span><br><span class="line">DefaultLimitCORE=infinity</span><br><span class="line">DefaultLimitNOFILE=100000</span><br><span class="line">DefaultLimitNPROC=100000</span><br><span class="line">EOF</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">#user service limit</span></span><br><span class="line">cat /etc/systemd/user.conf|egrep <span class="string">'^DefaultLimitNOFILE'</span> &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">		cat &gt;&gt; /etc/systemd/system.conf &lt;&lt; EOF</span><br><span class="line">DefaultLimitCORE=infinity</span><br><span class="line">DefaultLimitNOFILE=100000</span><br><span class="line">DefaultLimitNPROC=100000</span><br><span class="line">EOF</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">cat /etc/sysctl.conf|grep <span class="string">"net.ipv4.ip_local_port_range"</span> &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">	cat &gt;&gt; /etc/sysctl.conf  &lt;&lt; EOF</span><br><span class="line">net.ipv4.tcp_syncookies = 1</span><br><span class="line">net.ipv4.tcp_fin_timeout = 30</span><br><span class="line">net.ipv4.tcp_keepalive_time = 300</span><br><span class="line">net.ipv4.tcp_tw_reuse = 1</span><br><span class="line">net.ipv4.ip_local_port_range = 1024 65535</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 8192</span><br><span class="line">net.ipv4.tcp_max_tw_buckets = 500</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">fs.inotify.max_user_instances=1280</span><br><span class="line">fs.inotify.max_user_watches=655360</span><br><span class="line">vm.overcommit_memory=1</span><br><span class="line">fs.protected_regular=0</span><br><span class="line">EOF</span><br><span class="line">sysctl -p</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">su - root -c <span class="string">"ulimit -a"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"140.82.112.4 github.com</span></span><br><span class="line"><span class="string">185.199.110.133 raw.githubusercontent.com"</span> &gt;&gt; /etc/hosts</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">'s;#PermitRootLogin.*;PermitRootLogin yes;g'</span> /etc/ssh/sshd_config</span><br><span class="line">systemctl <span class="built_in">enable</span> ssh</span><br><span class="line">systemctl restart ssh</span><br></pre></td></tr></table></figure>
<h2 id="Safe-RM"><a href="#Safe-RM" class="headerlink" title="Safe-RM"></a>Safe-RM</h2><p><a href="/files/ubuntu-os/Safe-RM.zip">Safe-RM.zip</a></p>
<p>rm.sh:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mkdir -p /works/shell /works/backup</span><br><span class="line">sudo chown -R dave.dave /works/</span><br><span class="line">chmod +x /works/shell/*</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#https://superuser.com/questions/192725/how-can-i-alias-a-command-for-sudo</span></span><br><span class="line">cat &gt;&gt; /etc/profile &lt;&lt;EOF</span><br><span class="line"><span class="built_in">alias</span> sudo=<span class="string">'sudo '</span></span><br><span class="line"><span class="built_in">alias</span> rm=<span class="string">"/works/shell/rm.sh"</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">. /etc/profile</span><br></pre></td></tr></table></figure></p>
<h2 id="GIT"><a href="#GIT" class="headerlink" title="GIT"></a>GIT</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">"dave.zhao"</span></span><br><span class="line">git config --global user.email dave.zhao@zerofinance.com</span><br><span class="line">git config --global core.autocrlf <span class="literal">false</span></span><br><span class="line">git config --global core.safecrlf warn</span><br><span class="line">git config --global core.filemode <span class="literal">false</span></span><br><span class="line">git config --global core.whitespace cr-at-eol</span><br><span class="line">git config --global credential.helper store</span><br><span class="line"><span class="comment">#由于 Windows 版本的 Git 是使用 msys 编译的，它使用了旧版本的 Windows Api，限制文件名不能超过 260 个字符</span></span><br><span class="line">git config --global core.longpaths <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><p>vim ~/.bash_profile<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">test -f ~/.profile &amp;&amp; . ~/.profile</span><br><span class="line">test -f ~/.bashrc &amp;&amp; . ~/.bashrc</span><br><span class="line"></span><br><span class="line">alias ll=&quot;ls -l&quot;</span><br><span class="line">alias k=kubectl</span><br><span class="line">source &lt;(kubectl completion bash | sed s/kubectl/k/g)</span><br><span class="line"></span><br><span class="line">function proxy_off()&#123;</span><br><span class="line">    unset http_proxy</span><br><span class="line">    unset https_proxy</span><br><span class="line">    echo -e &quot;The proxy has been closed!&quot;</span><br><span class="line">&#125;</span><br><span class="line">function proxy_on() &#123;</span><br><span class="line">    export no_proxy=&quot;127.0.0.1,localhost,10.0.0.0/8,172.0.0.0/8,192.168.0.0/16,*.zerofinance.net,*.aliyun.com,*.163.com,*.docker-cn.com,registry.gcalls.cn&quot;</span><br><span class="line">    export http_proxy=&quot;http://127.0.0.1:1082&quot;</span><br><span class="line">    export https_proxy=$http_proxy</span><br><span class="line">    echo -e &quot;The proxy has been opened!&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">source ~/.bash_profile</span><br></pre></td></tr></table></figure></p>
<h2 id="rc-local"><a href="#rc-local" class="headerlink" title="rc.local"></a>rc.local</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#http://www.atmcu.com/2256.html</span></span><br><span class="line"><span class="comment">#rc-local.service</span></span><br><span class="line">cat &gt; /etc/systemd/system/rc-local.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=/etc/rc.local Compatibility</span><br><span class="line">ConditionPathExists=/etc/rc.local</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/etc/rc.local start</span><br><span class="line">TimeoutSec=0</span><br><span class="line">StandardOutput=tty</span><br><span class="line">RemainAfterExit=yes</span><br><span class="line">SysVStartPriority=99</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#rc.local</span></span><br><span class="line">cat &gt; /etc/rc.local &lt;&lt;EOF</span><br><span class="line"><span class="comment">#!/bin/sh -e</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># rc.local</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This script is executed at the end of each multiuser runlevel.</span></span><br><span class="line"><span class="comment"># Make sure that the script will "exit 0" on success or any other</span></span><br><span class="line"><span class="comment"># value on error.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># In order to enable or disable this script just change the execution</span></span><br><span class="line"><span class="comment"># bits.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># By default this script does nothing.</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> 0</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#systemctl</span></span><br><span class="line">sudo chmod +x /etc/rc.local</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> rc-local</span><br><span class="line">sudo systemctl start rc-local.service</span><br><span class="line">sudo systemctl status rc-local.service</span><br></pre></td></tr></table></figure>
<h2 id="搜狗输入法-for-linux"><a href="#搜狗输入法-for-linux" class="headerlink" title="搜狗输入法 for linux"></a>搜狗输入法 for linux</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#https://shurufa.sogou.com/linux</span><br><span class="line">#https://shurufa.sogou.com/linux/guide</span><br><span class="line">sudo apt install fcitx</span><br><span class="line">#按照第一步：1、添加中文语言支持  处理，并重启系统</span><br><span class="line">#安装</span><br><span class="line">wget https://ime.sogouimecdn.com/202208041520/03940f168eb3fa5819e568874dcc6a2f/dl/gzindex/1656597217/sogoupinyin_4.0.1.2800_x86_64.deb</span><br><span class="line">sudo dpkg -i sogoupinyin_4.0.1.2800_x86_64.deb</span><br><span class="line">#重启系统</span><br><span class="line">#安装其他</span><br><span class="line">sudo cp /usr/share/applications/fcitx.desktop /etc/xdg/autostart/</span><br><span class="line">sudo apt purge ibus</span><br><span class="line">sudo apt install libqt5qml5 libqt5quick5 libqt5quickwidgets5 qml-module-qtquick2</span><br><span class="line">sudo apt install libgsettings-qt1</span><br><span class="line">#重启电脑</span><br></pre></td></tr></table></figure>
<h2 id="系统快捷键"><a href="#系统快捷键" class="headerlink" title="系统快捷键"></a>系统快捷键</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#sudo apt install deepin-screenshot</span></span><br><span class="line"><span class="comment"># sudo apt install deepin-terminal</span></span><br><span class="line"><span class="comment">#deepin-screenshot -&gt; ctrl+alt+Q</span></span><br><span class="line"><span class="comment">#deepin-terminal -&gt; ctrl+alt+T</span></span><br><span class="line">sudo apt install  flameshot</span><br><span class="line">xdg-open . -&gt; Win+E</span><br><span class="line">flameshot gui -&gt; ctrl+alt+Q</span><br></pre></td></tr></table></figure>
<h2 id="NODEJS"><a href="#NODEJS" class="headerlink" title="NODEJS"></a>NODEJS</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://github.com/nvm-sh/nvm</span></span><br><span class="line">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash</span><br><span class="line">. ~/.bashrc</span><br><span class="line"><span class="comment">#显示有远端的版本</span></span><br><span class="line">nvm ls-remote</span><br><span class="line"><span class="comment">#安装对应的版本</span></span><br><span class="line">nvm install v12.22.6</span><br></pre></td></tr></table></figure>
<p>安装常用工具：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmmirror.com --global</span><br><span class="line">npm config <span class="built_in">set</span> disturl https://npmmirror.com/dist --global</span><br><span class="line">npm install  hexo-cli -g</span><br><span class="line">npm install hexo-server -g</span><br><span class="line">npm install hexo-deployer-git -g</span><br><span class="line">npm install yarn -g</span><br><span class="line">npm install http-server -g</span><br><span class="line"></span><br><span class="line">yarn config <span class="built_in">set</span> registry https://registry.npmmirror.com --global</span><br><span class="line">yarn config <span class="built_in">set</span> disturl https://npmmirror.com/dist --global</span><br><span class="line"><span class="comment">#yarn global add serve</span></span><br></pre></td></tr></table></figure></p>
<h2 id="JAVA"><a href="#JAVA" class="headerlink" title="JAVA"></a>JAVA</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mkdir -p /Developer/java /Developer/workspace</span><br><span class="line">sudo chown -R dave.dave /Developer</span><br><span class="line">sudo vim /etc/profile.d/java.sh</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/Developer/java/jdk1.8.0_202</span><br><span class="line"><span class="comment">#export JAVA_HOME=$(/usr/libexec/java_home)</span></span><br><span class="line"><span class="built_in">export</span> M2_HOME=/Developer/apache-maven-3.5.4</span><br><span class="line"><span class="built_in">export</span> GRADLE_USER_HOME=/Developer/.gradle</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$M2_HOME</span>/bin:<span class="variable">$PATH</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure>
<h2 id="gnome-shell"><a href="#gnome-shell" class="headerlink" title="gnome-shell"></a>gnome-shell</h2><p>安装：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#For 22.04</span><br><span class="line">sudo apt install gnome-tweaks chrome-gnome-shell gnome-shell-extension-manager</span><br><span class="line">#open with firefox or chrome</span><br><span class="line">https://extensions.gnome.org</span><br><span class="line">#Click: Click here to install browser extension</span><br><span class="line"></span><br><span class="line">plugin:</span><br><span class="line">User Themes: https://extensions.gnome.org/extension/19/user-themes/</span><br><span class="line">#dock-from-dash: https://extensions.gnome.org/extension/4703/dock-from-dash/</span><br><span class="line">dash2dock-lite: https://extensions.gnome.org/extension/4994/dash2dock-lite/</span><br><span class="line">dash-to-panel: https://extensions.gnome.org/extension/1160/dash-to-panel/</span><br><span class="line">arc menu: https://extensions.gnome.org/extension/3628/arcmenu/</span><br><span class="line"></span><br><span class="line">Gnome Wayland不成熟，登录时使用Ubuntu on X11 Org，否则Theme不能切换。</span><br><span class="line"></span><br><span class="line">##Disable wayland on Ubuntu 22.04 Desktop</span><br><span class="line">##https://linuxconfig.org/how-to-enable-disable-wayland-on-ubuntu-22-04-desktop</span><br><span class="line">#echo $XDG_SESSION_TYPE</span><br><span class="line">#sudo nano /etc/gdm3/custom.conf</span><br><span class="line">##Within this file, look for the line that says #WaylandEnable=false. You can uncomment this line and either set it to true or #false, depending on whether you want Wayland enabled or not.</span><br><span class="line">#WaylandEnable=false</span><br><span class="line">##Restart</span><br><span class="line">#sudo systemctl restart gdm3</span><br></pre></td></tr></table></figure></p>
<h2 id="Wine"><a href="#Wine" class="headerlink" title="Wine"></a>Wine</h2><p>企业微信需要用wine7安装才会有消息提醒，推荐使用：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://itslinuxfoss.com/install-wine-latest-stable-release-ubuntu-22-04/</span></span><br><span class="line"><span class="comment">#https://wiki.winehq.org/Ubuntu_zhcn</span></span><br><span class="line"><span class="comment">#注意官网不能安装winehq-stable</span></span><br><span class="line">sudo dpkg --add-architecture i386</span><br><span class="line">wget -O - https://dl.winehq.org/wine-builds/winehq.key | sudo apt-key add -</span><br><span class="line">sudo add-apt-repository <span class="string">'deb https://dl.winehq.org/wine-builds/ubuntu/ impish main'</span></span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install --install-recommends winehq-stable</span><br><span class="line">wine --version</span><br><span class="line"></span><br><span class="line"><span class="comment">#企业微信</span></span><br><span class="line">wine WeCom_3.1.16.3008.exe</span><br><span class="line"><span class="comment">#微信</span></span><br><span class="line">wine WeChatSetup_V3.4.0.38.exe</span><br><span class="line"><span class="comment">#卸载</span></span><br><span class="line">wine uninstaller</span><br><span class="line"><span class="comment">#配置</span></span><br><span class="line">wine winecfg</span><br><span class="line"></span><br><span class="line"><span class="comment">#输入框不能正常显示（不显示）输入的文字</span></span><br><span class="line"><span class="comment">#https://blog.csdn.net/hongxiao2016/article/details/115156831</span></span><br><span class="line">sudo apt install winetricks</span><br><span class="line">proxy_on</span><br><span class="line">winetricks riched20</span><br><span class="line"></span><br><span class="line"><span class="comment">#英文模式下微信乱码解决：</span></span><br><span class="line"><span class="comment">#https://blog.csdn.net/ysy950803/article/details/80326832</span></span><br><span class="line"><span class="comment">#cp -a /Developer/Software/Themes/Fonts/* ~/.deepinwine/Deepin-WeChat/drive_c/windows/Fonts/</span></span><br><span class="line">cp -a /Developer/linux/software/Themes/Fonts/* ~/.wine/drive_c/windows/Fonts/</span><br><span class="line">vim msyh_font.reg</span><br><span class="line">REGEDIT4</span><br><span class="line"> </span><br><span class="line">[HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\FontLink\SystemLink]</span><br><span class="line"><span class="string">"Lucida Sans Unicode"</span>=<span class="string">"msyh.ttc"</span></span><br><span class="line"><span class="string">"Microsoft Sans Serif"</span>=<span class="string">"msyh.ttc"</span></span><br><span class="line"><span class="string">"MS Sans Serif"</span>=<span class="string">"msyh.ttc"</span></span><br><span class="line"><span class="string">"Tahoma"</span>=<span class="string">"msyh.ttc"</span></span><br><span class="line"><span class="string">"Tahoma Bold"</span>=<span class="string">"msyhbd.ttc"</span></span><br><span class="line"><span class="string">"msyh"</span>=<span class="string">"msyh.ttc"</span></span><br><span class="line"><span class="string">"Arial"</span>=<span class="string">"msyh.ttc"</span></span><br><span class="line"><span class="string">"Arial Black"</span>=<span class="string">"msyh.ttc"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#deepin-wine6-stable regedit msyh_font.reg</span></span><br><span class="line">wine regedit msyh_font.reg</span><br><span class="line"></span><br><span class="line"><span class="comment">#vim /home/dave/.deepinwine/Deepin-WeChat/system.reg</span></span><br><span class="line"><span class="comment">#vim ~/.wine/system.reg</span></span><br><span class="line"><span class="comment">#查找关键词FontSubstitutes，把它下面挨着的“MS Shell Dlg”与“MS Shell Dlg2”的内容改为“msyh”</span></span><br><span class="line">sed -i <span class="string">'s;"MS Shell Dlg"="Tahoma";"MS Shell Dlg"="msyh";g'</span> ~/.wine/system.reg</span><br><span class="line">sed -i <span class="string">'s;"MS Shell Dlg 2"="Tahoma";"MS Shell Dlg 2"="msyh";g'</span> ~/.wine/system.reg</span><br></pre></td></tr></table></figure>
<h2 id="VPN"><a href="#VPN" class="headerlink" title="VPN"></a>VPN</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install openconnect</span><br><span class="line">sudo apt install network-manager-openconnect</span><br><span class="line">sudo apt install network-manager-openconnect-gnome</span><br></pre></td></tr></table></figure>
<h2 id="SecureCRT"><a href="#SecureCRT" class="headerlink" title="SecureCRT"></a>SecureCRT</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#libssl1.0.0</span></span><br><span class="line">sudo dpkg -i libssl1.0.0_1.0.2g-1ubuntu4.20_amd64.deb</span><br><span class="line">sudo apt-get install libpython2.7</span><br><span class="line"><span class="comment">#libpng12</span></span><br><span class="line">sudo add-apt-repository ppa:linuxuprising/libpng12</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install libpng12-0</span><br><span class="line"><span class="comment"># sudo apt install build-essential zlib1g-dev</span></span><br><span class="line"><span class="comment"># cd</span></span><br><span class="line"><span class="comment"># mkdir src</span></span><br><span class="line"><span class="comment"># wget https://ppa.launchpadcontent.net/linuxuprising/libpng12/ubuntu/pool/main/libp/libpng/libpng_1.2.54.orig.tar.xz</span></span><br><span class="line"><span class="comment"># tar Jxfv libpng_1.2.54.orig.tar.xz</span></span><br><span class="line"><span class="comment"># cd libpng-1.2.54</span></span><br><span class="line"><span class="comment"># ./configure</span></span><br><span class="line"><span class="comment"># make</span></span><br><span class="line"><span class="comment"># sudo make install</span></span><br><span class="line"><span class="comment"># sudo ln -s /usr/local/lib/libpng12.so.0.54.0 /usr/lib/libpng12.so</span></span><br><span class="line"><span class="comment"># sudo ln -s /usr/local/lib/libpng12.so.0.54.0 /usr/lib/libpng12.so.0</span></span><br><span class="line"></span><br><span class="line">sudo dpkg -i scrt-sfx-8.3.4-1699.ubuntu16-64.x86_64.deb</span><br></pre></td></tr></table></figure>
<h2 id="Navicat-Premium-15"><a href="#Navicat-Premium-15" class="headerlink" title="Navicat Premium 15"></a>Navicat Premium 15</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install libfuse2</span><br><span class="line"></span><br><span class="line"><span class="comment">#Crack</span></span><br><span class="line">./navicat-keygen --text ./RegPrivateKey.pem</span><br><span class="line"></span><br><span class="line">sudo cp -a libgio-2.0.so.0 /Developer/Navicat15/</span><br><span class="line"></span><br><span class="line"><span class="comment">#/lib/x86_64-linux-gnu/libgio-2.0.so.0: undefined symbol: g_module_open_full的解决：</span></span><br><span class="line"><span class="comment">#vim navicat15.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=/Developer/Navicat15:<span class="variable">$LD_LIBRARY_PATH</span>;</span><br><span class="line">/Developer/Navicat15/navicat15-premium-cs-patched.AppImage</span><br><span class="line"></span><br><span class="line"><span class="comment">#Start</span></span><br><span class="line">/Developer/Navicat15/navicat15.sh</span><br><span class="line"></span><br><span class="line"><span class="comment">#https://www.zssnp.top/2021/11/11/netease/</span></span><br><span class="line"><span class="comment">#sudo mv /lib/x86_64-linux-gnu/libgio-2.0.so.0 /lib/x86_64-linux-gnu/libgio-2.0.so.0.bak</span></span><br><span class="line"><span class="comment">##download libgio-2.0.so.0 from: https://wwx.lanzoui.com/iNxJNwdnkle</span></span><br><span class="line"><span class="comment">#sudo cp -a libgio-2.0.so.0 /lib/x86_64-linux-gnu/</span></span><br><span class="line"><span class="comment">##发现处理后settings打不开,恢复：</span></span><br><span class="line"><span class="comment">#sudo ln -sf /lib/x86_64-linux-gnu/libgio-2.0.so.0.7200.1 /lib/x86_64-linux-gnu/libgio-2.0.so.0</span></span><br><span class="line"><span class="comment">##libselinux.so.1: no version information available (required by /lib/x86_64-linux-gnu/libgio-2.0.so.0)</span></span><br><span class="line"><span class="comment">#可以忽略，不影响使用</span></span><br></pre></td></tr></table></figure>
<h2 id="Cider"><a href="#Cider" class="headerlink" title="Cider"></a>Cider</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://cider.sh/</span></span><br><span class="line">wget https://github.com/ciderapp/cider-releases/releases/download/v1.5.0/cider_1.5.0_amd64.deb</span><br><span class="line">sudo dpkg -i cider_1.5.0_amd64.deb</span><br></pre></td></tr></table></figure>
<h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#wget "https://dl-sh-ctc-2.pchome.net/25/rm/YosemiteSanFranciscoFont-master.zip"</span></span><br><span class="line"><span class="comment">#mv YosemiteSanFranciscoFont-master SanFranciscoFont</span></span><br><span class="line"><span class="comment">#sudo cp -a SanFranciscoFont /usr/share/fonts/</span></span><br><span class="line">sudo git <span class="built_in">clone</span> https://github.com/AppleDesignResources/SanFranciscoFont /usr/share/fonts/SanFranciscoFont</span><br></pre></td></tr></table></figure>
<p>San Francisco Text Medium</p>
<h2 id="WPS字体"><a href="#WPS字体" class="headerlink" title="WPS字体"></a>WPS字体</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://blog.huzhifeng.com/2017/01/15/WPS/</span></span><br><span class="line"><span class="comment">#https://www.dropbox.com/s/q6rhaorhsbxbylk/wps_symbol_fonts.zip?dl=0</span></span><br><span class="line">sudo mkdir -p /usr/share/fonts/wps_symbol_fonts</span><br><span class="line">sudo unzip wps_symbol_fonts.zip -d /usr/share/fonts/wps_symbol_fonts</span><br><span class="line">sudo chmod 755 /usr/share/fonts/wps_symbol_fonts</span><br></pre></td></tr></table></figure>
<h2 id="开机画面"><a href="#开机画面" class="headerlink" title="开机画面"></a>开机画面</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#https://www.gnome-look.org/browse/cat/109/ord/latest/</span><br><span class="line">git clone https://github.com/vinceliuice/grub2-themes</span><br><span class="line">cd grub2-themes</span><br><span class="line">./install.sh</span><br></pre></td></tr></table></figure>
<h2 id="SysMonitor"><a href="#SysMonitor" class="headerlink" title="SysMonitor"></a>SysMonitor</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#https://www.zhyong.cn/posts/f35/</span><br><span class="line">sudo apt install python3-psutil gir1.2-appindicator3-0.1</span><br><span class="line">git clone https://github.com/fossfreedom/indicator-sysmonitor.git</span><br><span class="line">cd indicator-sysmonitor</span><br><span class="line">sudo make install</span><br><span class="line">cd ..</span><br><span class="line">rm -rf indicator-sysmonitor</span><br><span class="line"></span><br><span class="line">#配置</span><br><span class="line">方案一</span><br><span class="line">&#123;net&#125;║cpu:&#123;cpu&#125;/&#123;cputemp&#125;</span><br><span class="line">方案二</span><br><span class="line">&#123;net&#125;║CPU &#123;cpu&#125;/&#123;cputemp&#125;║MEM &#123;mem&#125;/&#123;fs///&#125;</span><br></pre></td></tr></table></figure>
<h2 id="修复grub"><a href="#修复grub" class="headerlink" title="修复grub"></a>修复grub</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#view UUID</span><br><span class="line">blkid </span><br><span class="line"></span><br><span class="line">#Starting repair grub</span><br><span class="line">#root=(hd0,gpt8)</span><br><span class="line">#prefix=/boot/grub</span><br><span class="line">set root=(hd0,gpt8)</span><br><span class="line">set prefix=(hd0,gpt8)/boot/grub</span><br><span class="line">insmod normal</span><br><span class="line">normal</span><br><span class="line">#Logon System</span><br><span class="line">sudo update-grub</span><br><span class="line">sudo grub-install /dev/nvme0n1</span><br><span class="line">#或者</span><br><span class="line">sudo add-apt-repository ppa:yannubuntu/boot-repair</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install boot-repair</span><br><span class="line">#打开Dash，输入boot-repair，打开它，点击recommanded repair按钮。接下来按照提示修复即可。</span><br><span class="line"></span><br><span class="line">#Fixed fstab error</span><br><span class="line">mount -o remount, rw /</span><br></pre></td></tr></table></figure>
<h2 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h2><h3 id="二进制文件安装"><a href="#二进制文件安装" class="headerlink" title="二进制文件安装"></a>二进制文件安装</h3><p>全自动安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">sudo apt-get install libaio1 libaio-dev -y</span><br><span class="line">sudo apt-get install libnuma-dev -y</span><br><span class="line">sudo apt-get install libncurses5 -y</span><br><span class="line"></span><br><span class="line">cat &gt; /etc/my.cnf &lt;&lt; EOF</span><br><span class="line">[mysqld]</span><br><span class="line"><span class="built_in">bind</span>-address=0.0.0.0</span><br><span class="line">port=3306</span><br><span class="line">socket=/Developer/mysql-5.7.37/data/mysql.sock</span><br><span class="line">pid-file=/Developer/mysql-5.7.37/logs/mysql.pid</span><br><span class="line">basedir=/Developer/mysql-5.7.37</span><br><span class="line">datadir=/Developer/mysql-5.7.37/data</span><br><span class="line">max_connections=20</span><br><span class="line"></span><br><span class="line">character-set-server=utf8</span><br><span class="line">collation-server=utf8_general_ci</span><br><span class="line">lower_case_table_names=1</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cat &gt; /usr/lib/systemd/system/mysqld.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=MySQL Server</span><br><span class="line">After=syslog.target</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">PermissionsStartOnly=<span class="literal">true</span></span><br><span class="line"><span class="comment">#ExecStartPre=/bin/mkdir -p /var/run/mysqld</span></span><br><span class="line"><span class="comment">#ExecStartPre=/bin/chown mysql:mysql -R /var/run/mysqld</span></span><br><span class="line">ExecStart=/Developer/mysql-5.7.37/bin/mysqld_safe --defaults-file=/etc/my.cnf</span><br><span class="line">ExecStop=/Developer/mysql-5.7.37/bin/mysql.server stop</span><br><span class="line">TimeoutSec=300</span><br><span class="line">PrivateTmp=<span class="literal">true</span></span><br><span class="line">User=mysql</span><br><span class="line">Group=mysql</span><br><span class="line">WorkingDirectory=/Developer/mysql-5.7.37</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">tar zxf mysql-5.7.37-linux-glibc2.12-x86_64.tar.gz</span><br><span class="line">mkdir -p /Developer/mysql-5.7.37/</span><br><span class="line">cp -a mysql-5.7.37-linux-glibc2.12-x86_64/* /Developer/mysql-5.7.37/</span><br><span class="line">rm -fr mysql-5.7.37-linux-glibc2.12-x86_64</span><br><span class="line"></span><br><span class="line">cp -a /Developer/mysql-5.7.37/support-files/mysql.server /Developer/mysql-5.7.37/bin/mysql.server</span><br><span class="line">sed -i <span class="string">"s;^basedir=.*;basedir=/Developer/mysql-5.7.37;g"</span> /Developer/mysql-5.7.37/bin/mysql.server</span><br><span class="line">sed -i <span class="string">"s;^datadir=.*;datadir=/Developer/mysql-5.7.37/data;g"</span> /Developer/mysql-5.7.37/bin/mysql.server</span><br><span class="line"></span><br><span class="line">groupadd mysql</span><br><span class="line">useradd -r -g mysql mysql</span><br><span class="line">sudo chown -R mysql:mysql /Developer/mysql-5.7.37</span><br><span class="line">sudo mkdir -p /Developer/mysql-5.7.37/logs/</span><br><span class="line">sudo chown -R mysql.mysql /Developer/mysql-5.7.37/logs/</span><br><span class="line"></span><br><span class="line">sudo /Developer/mysql-5.7.37/bin/mysqld --initialize --user=mysql &gt; ./<span class="built_in">log</span> 2&gt;&amp;1</span><br><span class="line">rootpwd=`cat ./<span class="built_in">log</span> | grep <span class="string">"temporary password"</span>|sed <span class="string">'s;^.*: ;;g'</span>`</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"root pwd is: <span class="variable">$rootpwd</span>"</span></span><br><span class="line"><span class="comment">#--basedir=/Developer/mysql-5.7.37 --datadir=/Developer/mysql-5.7.37/data</span></span><br><span class="line"></span><br><span class="line">ln -s /Developer/mysql-5.7.37/bin/mysql /usr/bin/mysql</span><br><span class="line"></span><br><span class="line">ln -s /Developer/mysql-5.7.37/data/mysql.sock /tmp/mysql.sock</span><br><span class="line"><span class="comment">#Doesn't work for docker build</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> mysqld</span><br><span class="line"></span><br><span class="line">su - mysql -c <span class="string">"/Developer/mysql-5.7.37/bin/mysqld_safe --defaults-file=/etc/my.cnf &amp;"</span></span><br><span class="line">mkdir -p /var/run/mysqld/</span><br><span class="line">ln -s /Developer/mysql-5.7.37/data/mysql.sock /var/run/mysqld/mysqld.sock</span><br><span class="line">ln -s /Developer/mysql-5.7.37/bin/mysqladmin /usr/bin/mysqladmin</span><br><span class="line">sleep 3</span><br><span class="line"></span><br><span class="line">mysql -uroot -h127.0.0.1 -p<span class="variable">$rootpwd</span> --connect-expired-password -e <span class="string">"alter user user() identified by '';FLUSH PRIVILEGES;"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"The root password has been empty for localhost!"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Starting granting some privileges..."</span></span><br><span class="line">mysql -uroot -h127.0.0.1 -e <span class="string">" \</span></span><br><span class="line"><span class="string">grant all privileges on *.* to root@'%' identified by 'Aa123#@!' WITH GRANT OPTION; \</span></span><br><span class="line"><span class="string">grant all privileges on *.* to webase@'%' identified by 'Aa123#@!' WITH GRANT OPTION; \</span></span><br><span class="line"><span class="string">FLUSH PRIVILEGES; \</span></span><br><span class="line"><span class="string">"</span></span><br><span class="line"></span><br><span class="line">mysqladmin  -uroot -S /var/run/mysqld/mysqld.sock shutdown</span><br></pre></td></tr></table></figure>
<p>手动安装：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#https://blog.csdn.net/weixin_36349646/article/details/102616914</span><br><span class="line">#https://www.cnblogs.com/ralap7/p/9034879.html</span><br><span class="line">#https://raw.githubusercontent.com/zhaoxunyong/stock-webapp/1.1.x/backend/README.md</span><br><span class="line"></span><br><span class="line">sudo apt-get install libaio1 libaio-dev -y</span><br><span class="line">sudo apt-get install libnuma-dev -y</span><br><span class="line"></span><br><span class="line">#创建用户组mysql</span><br><span class="line">groupadd mysql             </span><br><span class="line">#-r参数表示mysql用户是系统用户，不可用于登录系统，创建用户mysql并将其添加到用户组mysql中</span><br><span class="line">useradd -r -g mysql mysql</span><br><span class="line">sudo chown -R mysql:mysql /Developer/mysql-5.7.37</span><br><span class="line">sudo mkdir -p /Developer/mysql-5.7.37/logs/</span><br><span class="line">sudo chown -R mysql.mysql /Developer/mysql-5.7.37/logs/</span><br><span class="line"></span><br><span class="line">vim my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">bind-address=0.0.0.0</span><br><span class="line">port=3306</span><br><span class="line">socket=/Developer/mysql-5.7.37/data/mysql.sock</span><br><span class="line">pid-file=/Developer/mysql-5.7.37/logs/mysql.pid</span><br><span class="line">basedir=/Developer/mysql-5.7.37</span><br><span class="line">datadir=/Developer/mysql-5.7.37/data</span><br><span class="line">max_connections=20</span><br><span class="line"></span><br><span class="line">character-set-server=utf8</span><br><span class="line">collation-server=utf8_general_ci</span><br><span class="line">lower_case_table_names=1</span><br><span class="line"></span><br><span class="line">sudo cp -a my.cnf /etc/my.cnf</span><br><span class="line"></span><br><span class="line">/usr/lib/systemd/system/mysqld.service</span><br><span class="line">#vim mysqld.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=MySQL Server</span><br><span class="line">After=syslog.target</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">PermissionsStartOnly=true</span><br><span class="line">#ExecStartPre=/bin/mkdir -p /var/run/mysqld</span><br><span class="line">#ExecStartPre=/bin/chown mysql:mysql -R /var/run/mysqld</span><br><span class="line">ExecStart=/Developer/mysql-5.7.37/bin/mysqld_safe --defaults-file=/etc/my.cnf</span><br><span class="line">ExecStop=/Developer/mysql-5.7.37/bin/mysql.server stop</span><br><span class="line">TimeoutSec=300</span><br><span class="line">PrivateTmp=true</span><br><span class="line">User=mysql</span><br><span class="line">Group=mysql</span><br><span class="line">WorkingDirectory=/Developer/mysql-5.7.37</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line">sudo cp -a mysqld.service /usr/lib/systemd/system/mysqld.service</span><br><span class="line"></span><br><span class="line">cp -a /Developer/mysql-5.7.37/support-files/mysql.server /Developer/mysql-5.7.37/bin/mysql.server</span><br><span class="line">sed -i &quot;s;^basedir=.*;basedir=/Developer/mysql-5.7.37;g&quot; /Developer/mysql-5.7.37/bin/mysql.server</span><br><span class="line">sed -i &quot;s;^datadir=.*;datadir=/Developer/mysql-5.7.37/data;g&quot; /Developer/mysql-5.7.37/bin/mysql.server</span><br><span class="line"></span><br><span class="line">#Copying the following password the command&apos;s generated:</span><br><span class="line">sudo bin/mysqld --initialize --user=mysql --basedir=/Developer/mysql-5.7.37 --datadir=/Developer/mysql-5.7.37/data</span><br><span class="line"></span><br><span class="line">#Starting 1</span><br><span class="line">sudo systemctl start mysqld</span><br><span class="line"></span><br><span class="line">#Starting 2</span><br><span class="line">#sudo vim support-files/mysql.server </span><br><span class="line">basedir=/Developer/mysql-5.7.37</span><br><span class="line">datadir=/Developer/mysql-5.7.37/data</span><br><span class="line">#Starting MySQL Server</span><br><span class="line">sudo support-files/mysql.server start</span><br><span class="line">sudo support-files/mysql.server stop</span><br><span class="line"></span><br><span class="line">#Starting 3</span><br><span class="line">#/works/app/mysql/bin/mysqld_safe --datadir=/works/data/mydata --socket=/works/app/mysql/mysql.sock &amp;</span><br><span class="line">#mysqladmin  -uroot -p -S /works/app/mysql/mysql.sock shutdown</span><br><span class="line">/Developer/mysql-5.7.37/bin/mysqld_safe --defaults-file=/etc/my.cnf --socket=/works/app/mysql/mysql.sock &amp;</span><br><span class="line">mysqladmin  -uroot -p -S /works/app/mysql/mysql.sock shutdown</span><br><span class="line"></span><br><span class="line">#bin/mysql -uroot -p</span><br><span class="line">alter user &apos;root&apos;@&apos;localhost&apos; identified by &apos;Aa654321&apos;; </span><br><span class="line">FLUSH PRIVILEGES;</span><br><span class="line">grant all privileges on *.* to root@&apos;%&apos; identified by &apos;123456&apos; WITH GRANT OPTION;</span><br><span class="line">#grant all privileges on *.* to root@&apos;localhost&apos; identified by &apos;Aa654321&apos;;</span><br><span class="line">CREATE DATABASE `saas` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci; </span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>
<h3 id="docker安装"><a href="#docker安装" class="headerlink" title="docker安装"></a>docker安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://raw.githubusercontent.com/zhaoxunyong/stock-webapp/1.1.x/backend/README.md</span></span><br><span class="line">docker run -d -p 3306:3306 --restart=always --name mysql \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=123456 \</span><br><span class="line"><span class="comment"># -e MYSQL_DATABASE=test \</span></span><br><span class="line">-e MYSQL_USER=webase \</span><br><span class="line">-e MYSQL_PASSWORD=123456 \</span><br><span class="line">mysql:5.7.32 \</span><br><span class="line">--character-set-server=utf8 --collation-server=utf8_general_ci --lower_case_table_names=1</span><br></pre></td></tr></table></figure>
<h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl disable iptables</span><br><span class="line">systemctl stop iptables</span><br><span class="line">systemctl disable firewalld</span><br><span class="line">systemctl stop firewalld</span><br><span class="line"></span><br><span class="line">#Uninstalling old versions:</span><br><span class="line">sudo apt-get remove docker docker-engine docker.io containerd runc</span><br><span class="line"></span><br><span class="line">#Installation from docker offical:</span><br><span class="line">#https://docs.docker.com/engine/install/ubuntu/</span><br><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class="line">sudo add-apt-repository \</span><br><span class="line">   &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \</span><br><span class="line">   $(lsb_release -cs) \</span><br><span class="line">   stable&quot;</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt install docker-ce docker-ce-cli containerd.io</span><br><span class="line"></span><br><span class="line">#Or Installation From Aliyun</span><br><span class="line">#https://www.cnblogs.com/763977251-sg/p/11837130.html</span><br><span class="line">#Docker installation</span><br><span class="line">#https://aka.ms/vscode-remote/samples/docker-from-docker</span><br><span class="line">apt-get -y install apt-transport-https ca-certificates software-properties-common</span><br><span class="line"># step 2: 安装GPG证书</span><br><span class="line">curl -fsSL http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | apt-key add -</span><br><span class="line"># Step 3: 写入软件源信息</span><br><span class="line">add-apt-repository &quot;deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable&quot;</span><br><span class="line"># Step 4: 更新并安装 Docker-CE</span><br><span class="line">apt-get -y update</span><br><span class="line">#apt install python3 -y</span><br><span class="line">#apt-get -y install docker-ce</span><br><span class="line">#sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin</span><br><span class="line">sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</span><br><span class="line"></span><br><span class="line">#History Version:</span><br><span class="line">apt-cache madison docker-ce</span><br><span class="line"></span><br><span class="line">#Uninstall</span><br><span class="line">#sudo apt-get purge docker-ce docker-ce-cli containerd.io docker-compose-plugin</span><br><span class="line">sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</span><br><span class="line">#Images, containers, volumes, or customized configuration files on your host are not automatically removed. To #delete all images, containers, and volumes:</span><br><span class="line">sudo rm -rf /var/lib/docker</span><br><span class="line">sudo rm -rf /var/lib/containerd</span><br><span class="line"></span><br><span class="line">#Setting china mirror</span><br><span class="line">#https://www.cnblogs.com/wushuaishuai/p/9984228.html</span><br><span class="line">https://github.com/zhaoxunyong/vagrant/blob/master/boxes/docker/script.sh</span><br><span class="line"></span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-&apos;EOF&apos;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;dns&quot; : [</span><br><span class="line">     &quot;8.8.4.4&quot;,</span><br><span class="line">     &quot;8.8.8.8&quot;,</span><br><span class="line">     &quot;114.114.114.114&quot;</span><br><span class="line">  ],</span><br><span class="line">  &quot;registry-mirrors&quot;: [</span><br><span class="line">    &quot;https://registry.docker-cn.com&quot;,</span><br><span class="line">    &quot;https://3laho3y3.mirror.aliyuncs.com&quot;,</span><br><span class="line">    &quot;http://hub-mirror.c.163.com&quot;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">#Proxy</span><br><span class="line">sudo mkdir -p /etc/systemd/system/docker.service.d</span><br><span class="line">sudo tee /etc/systemd/system/docker.service.d/http-proxy.conf &lt;&lt;-&apos;EOF&apos;</span><br><span class="line">[Service]</span><br><span class="line">Environment=&quot;HTTP_PROXY=http://192.168.101.175:1082&quot;</span><br><span class="line">Environment=&quot;HTTPS_PROXY=http://192.168.101.175:1082&quot;</span><br><span class="line">Environment=&quot;NO_PROXY=127.0.0.1,localhost,10.0.0.0/8,172.0.0.0/8,192.168.0.0/16,*.zerofinance.net,*.aliyun.com,*.163.com,*.docker-cn.com,kubernetes.docker.internal&quot;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">或者：</span><br><span class="line">vim /usr/lib/systemd/system/docker.service </span><br><span class="line"># 在dockerd后面加参数</span><br><span class="line">ExecStart=/usr/bin/dockerd \</span><br><span class="line">--registry-mirror=https://registry.docker-cn.com \</span><br><span class="line">--registry-mirror=https://3laho3y3.mirror.aliyuncs.com \</span><br><span class="line">--registry-mirror=http://hub-mirror.c.163.com;&quot; \</span><br><span class="line">...</span><br><span class="line">以上操作后重启一下 Docker</span><br><span class="line"></span><br><span class="line">#开启远程API访问端口</span><br><span class="line">https://cloud.tencent.com/developer/article/1683689</span><br><span class="line"># vim /usr/lib/systemd/system/docker.service</span><br><span class="line">[Service]</span><br><span class="line">ExecStart=</span><br><span class="line">ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2375 -H unix://var/run/docker.sock</span><br><span class="line"></span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br><span class="line">lsof -i:2375</span><br><span class="line">COMMAND     PID USER   FD   TYPE  DEVICE SIZE/OFF NODE NAME</span><br><span class="line">dockerd 1259648 root    6u  IPv6 2709332      0t0  TCP *:2375 (LISTEN)</span><br><span class="line"></span><br><span class="line">#Test</span><br><span class="line">docker pull k8s.gcr.io/echoserver:1.4</span><br><span class="line"></span><br><span class="line">sudo groupadd docker</span><br><span class="line">sudo gpasswd -a $&#123;USER&#125; docker</span><br><span class="line">sudo chmod 666 /var/run/docker.sock</span><br><span class="line">sudo systemctl restart docker</span><br><span class="line">docker info后是否有Registry Mirrors.</span><br><span class="line"></span><br><span class="line">测速：</span><br><span class="line">docker rmi node:latest</span><br><span class="line">time docker pull node:latest</span><br></pre></td></tr></table></figure>
<p>History docker installation:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker version is: 20.10.7:</span><br><span class="line"><span class="comment">#https://blog.csdn.net/u011519550/article/details/102688892</span></span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install apt-transport-https ca-certificates curl software-properties-common</span><br><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class="line">sudo add-apt-repository <span class="string">"deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable"</span></span><br><span class="line"></span><br><span class="line">apt-cache madison docker-ce</span><br><span class="line">apt install docker-ce-cli=5:20.10.7~3-0~ubuntu-xenial docker-ce=5:20.10.7~3-0~ubuntu-xenial</span><br><span class="line"></span><br><span class="line">Ubuntu: Failed to get D-Bus connection: No such file or directory:</span><br><span class="line">cat /etc/rc.local</span><br><span class="line">sudo mkdir /sys/fs/cgroup/systemd</span><br><span class="line">mount -t cgroup -o none,name=systemd cgroup /sys/fs/cgroup/systemd</span><br><span class="line"><span class="comment">#reboot and docker start your container.</span></span><br></pre></td></tr></table></figure></p>
<p>Creating centos instance with restrict cpu and memory:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --privileged=<span class="literal">true</span> --cpus=4 --cpu-shares=4000 -m 2048m --memory-reservation=256m --name mycento registry.zerofinance.net/library/centos:7 /usr/sbin/init</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>vscode的使用与插件开发</title>
    <url>/2019/04/vscode%E7%9A%84%E4%BD%BF%E7%94%A8%E4%B8%8E%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91.html</url>
    <content><![CDATA[<p>Visual Studio Code（VS code）是开发神器，通过插件配置不仅可以开发前端，还可以开发后端(java/go等)，下面介绍一下vscode的常用插件与插件如何开发一个自己的插件。</p>
<a id="more"></a>
<h2 id="git-bash"><a href="#git-bash" class="headerlink" title="git-bash"></a>git-bash</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://code.visualstudio.com/docs/editor/integrated-terminal</span></span><br><span class="line">    <span class="string">"terminal.integrated.profiles.windows"</span>: &#123;</span><br><span class="line">      <span class="string">"Cygwin"</span>: &#123;</span><br><span class="line">        <span class="string">"path"</span>: <span class="string">"D:\\Developer\\Git\\bin\\bash.exe"</span>,</span><br><span class="line">        <span class="string">"args"</span>: [<span class="string">"--login"</span>]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"terminal.integrated.defaultProfile.windows"</span>: <span class="string">"Cygwin"</span>,</span><br></pre></td></tr></table></figure>
<h2 id="nodejs"><a href="#nodejs" class="headerlink" title="nodejs"></a>nodejs</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash</span></span><br><span class="line">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash</span><br><span class="line">. ~/.bashrc</span><br><span class="line"><span class="comment">#显示有远端的版本</span></span><br><span class="line">nvm ls-remote</span><br><span class="line"><span class="comment">#安装对应的版本</span></span><br><span class="line">nvm install 12.22.7</span><br></pre></td></tr></table></figure>
<p>安装常用工具：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install  hexo-cli -g</span><br><span class="line">npm install hexo-server -g</span><br><span class="line">npm install hexo-deployer-git -g</span><br><span class="line">npm install yarn -g</span><br><span class="line">npm install http-server -g</span><br><span class="line"><span class="comment">#yarn global add serve</span></span><br><span class="line"></span><br><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmmirror.com --global</span><br><span class="line">npm config <span class="built_in">set</span> disturl https://npmmirror.com/dist --global</span><br><span class="line">yarn config <span class="built_in">set</span> registry https://registry.npmmirror.com --global</span><br><span class="line">yarn config <span class="built_in">set</span> disturl https://npmmirror.com/dist --global</span><br></pre></td></tr></table></figure>
<h2 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h2><p>安装以下插件：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#javascript</span></span><br><span class="line">eslint</span><br><span class="line">Color Picker</span><br><span class="line">npm</span><br><span class="line">Debugger <span class="keyword">for</span> Chrome</span><br><span class="line">Eclipse Keymap</span><br><span class="line"><span class="comment">#react</span></span><br><span class="line">ES7 React/Redux/GraphQL/React-Native snippets</span><br><span class="line"><span class="comment">#vue</span></span><br><span class="line">Vetur</span><br><span class="line">Vue VSCode Snippets</span><br><span class="line"><span class="comment">#git</span></span><br><span class="line">GitLens</span><br><span class="line">zerofinance-git</span><br><span class="line"><span class="comment">#其他公共插件</span></span><br><span class="line">Local History</span><br><span class="line">XML Tools</span><br><span class="line">Prettier</span><br><span class="line"><span class="comment">#https://zhuanlan.zhihu.com/p/54031899</span></span><br><span class="line">koroFileHeader</span><br><span class="line">AutoFileName</span><br><span class="line">Import Cost</span><br><span class="line"></span><br><span class="line"><span class="comment">#java</span></span><br><span class="line">Java Extension Pack</span><br><span class="line">Spring Boot Extension Pack</span><br><span class="line">Java Code Generators</span><br><span class="line">Tomcat <span class="keyword">for</span> Java</span><br><span class="line">Docker</span><br><span class="line"></span><br><span class="line"><span class="comment">#android/ios plugin</span></span><br><span class="line">Android iOS Emulator</span><br><span class="line">React Native Tools</span><br><span class="line"><span class="comment">#see debug:https://github.com/Microsoft/vscode-react-native/blob/master/doc/debugging.md#debugging-on-ios-device</span></span><br><span class="line"><span class="comment">#Install ios-deploy: npm install -g ios-deploy</span></span><br></pre></td></tr></table></figure></p>
<p>可以在项目的.vscode目录下添加extensions.json，并添加以下内容，当第一次打开时会提示是否需要安装这些推荐的插件：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"recommendations"</span>: [</span><br><span class="line">        <span class="string">"dbaeumer.vscode-eslint"</span>,</span><br><span class="line">        <span class="string">"anseki.vscode-color"</span>,</span><br><span class="line">        <span class="string">"eg2.vscode-npm-script"</span>,</span><br><span class="line">        <span class="string">"msjsdiag.debugger-for-chrome"</span>,</span><br><span class="line">        <span class="string">"alphabotsec.vscode-eclipse-keybindings"</span>,</span><br><span class="line">        <span class="string">"dsznajder.es7-react-js-snippets"</span>,</span><br><span class="line">        <span class="string">"eamodio.gitlens"</span>,</span><br><span class="line">        <span class="string">"zerofinance.zerofinance-git"</span>,</span><br><span class="line">        <span class="string">"xyz.local-history"</span>,</span><br><span class="line">        <span class="string">"DotJoshJohnson.xml"</span>,</span><br><span class="line">        <span class="string">"esbenp.prettier-vscode"</span>,</span><br><span class="line">        <span class="string">"OBKoro1.korofileheader"</span>,</span><br><span class="line">        <span class="string">"JerryHong.autofilename"</span>,</span><br><span class="line">        <span class="string">"wix.vscode-import-cost"</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>可以通过命令行批量安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#前端------</span></span><br><span class="line">code --install-extension dbaeumer.vscode-eslint</span><br><span class="line">code --install-extension anseki.vscode-color</span><br><span class="line">code --install-extension eg2.vscode-npm-script</span><br><span class="line">code --install-extension msjsdiag.debugger-for-chrome</span><br><span class="line">code --install-extension alphabotsec.vscode-eclipse-keybindings</span><br><span class="line"><span class="comment">#react</span></span><br><span class="line">code --install-extension dsznajder.es7-react-js-snippets</span><br><span class="line"><span class="comment">#vue</span></span><br><span class="line">code --install-extension octref.vetur</span><br><span class="line">code --install-extension sdras.vue-vscode-snippets</span><br><span class="line"><span class="comment">#git</span></span><br><span class="line">code --install-extension eamodio.gitlens</span><br><span class="line">code --install-extension zerofinance.zerofinance-git</span><br><span class="line"><span class="comment">#others</span></span><br><span class="line">code --install-extension xyz.local-history</span><br><span class="line">code --install-extension DotJoshJohnson.xml</span><br><span class="line">code --install-extension esbenp.prettier-vscode</span><br><span class="line">code --install-extension OBKoro1.korofileheader</span><br><span class="line">code --install-extension JerryHong.autofilename</span><br><span class="line">code --install-extension wix.vscode-import-cost</span><br><span class="line"><span class="comment">#前端------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#java------</span></span><br><span class="line">code --install-extension vscjava.vscode-java-pack</span><br><span class="line">code --install-extension Pivotal.vscode-boot-dev-pack</span><br><span class="line">code --install-extension sohibe.java-generate-setters-getters</span><br><span class="line"><span class="comment">#java------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#docker------</span></span><br><span class="line">code --install-extension PeterJausovec.vscode-docker</span><br><span class="line"><span class="comment">#docker------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#android/ios plugin------</span></span><br><span class="line">code --install-extension DiemasMichiels.emulate</span><br><span class="line">code --install-extension vsmobile.vscode-react-native</span><br><span class="line"><span class="comment">#android/ios plugin------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#其它命令说明，不需要执行</span></span><br><span class="line"><span class="comment">#列出已经安装的插件</span></span><br><span class="line">code --list-extensions</span><br><span class="line"><span class="comment">#安装某个插件</span></span><br><span class="line">code --install-extension ms-vscode.cpptools</span><br><span class="line"><span class="comment">#卸载某个插件</span></span><br><span class="line">code --uninstall-extension ms-vscode.csharp</span><br></pre></td></tr></table></figure>
<h2 id="代码注释"><a href="#代码注释" class="headerlink" title="代码注释"></a>代码注释</h2><p>koroFileHeader添加注释，在全局的settings.json中添加：</p>
<p>参考：</p>
<ul>
<li><a href="https://code.visualstudio.com/docs/editor/emmet" target="_blank" rel="noopener">https://code.visualstudio.com/docs/editor/emmet</a></li>
<li><a href="https://www.cnblogs.com/summit7ca/p/6944215.html" target="_blank" rel="noopener">https://www.cnblogs.com/summit7ca/p/6944215.html</a></li>
</ul>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">"editor.fontSize": 14,</span><br><span class="line">"terminal.integrated.fontSize": 14,</span><br><span class="line">"emmet.triggerExpansionOnTab": true,</span><br><span class="line">"emmet.includeLanguages": &#123;</span><br><span class="line">    "javascript": "javascriptreact",</span><br><span class="line">    "vue-html": "html",</span><br><span class="line">    "razor": "html",</span><br><span class="line">    "plaintext": "jade"</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 注释</span></span><br><span class="line">"fileheader.configObj": &#123;</span><br><span class="line">  <span class="comment">// 将该选项设置为true即可开启</span></span><br><span class="line">  "autoAdd": false</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 头部注释</span></span><br><span class="line">"fileheader.customMade": &#123;</span><br><span class="line">    "Author": "dave.zhao",</span><br><span class="line">    "Date": "Do not edit",</span><br><span class="line">    "LastEditors": "dave.zhao",</span><br><span class="line">    "LastEditTime": "Do not edit",</span><br><span class="line">    "Description": ""</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 函数注释</span></span><br><span class="line">"fileheader.cursorMode": &#123;</span><br><span class="line">    "Date": "Do not edit",</span><br><span class="line">    "description": "",</span><br><span class="line">    "param": ""</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注意：Author和LastEditors填写自己的名字</p>
<p>文件头注释快捷键：window：ctrl+alt+i,mac：ctrl+cmd+i</p>
<p>函数注释快捷键：window：ctrl+alt+t,mac：ctrl+cmd+t</p>
<h2 id="常用配置"><a href="#常用配置" class="headerlink" title="常用配置"></a>常用配置</h2><p>可以放在全局的settings.json中，也可以放在各个项目的settings.json中：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"eslint.validate"</span>: [<span class="string">"javascript"</span>, <span class="string">"javascriptreact"</span>],</span><br><span class="line">    <span class="attr">"javascript.updateImportsOnFileMove.enabled"</span>: <span class="string">"always"</span>,</span><br><span class="line">    <span class="comment">// 代码缩进修改成4个空格</span></span><br><span class="line">    <span class="attr">"editor.detectIndentation"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"editor.tabSize"</span>: <span class="number">4</span>,</span><br><span class="line">    <span class="attr">"editor.formatOnSave"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">// 每次保存的时候将代码按eslint格式进行修复</span></span><br><span class="line">    <span class="attr">"eslint.autoFixOnSave"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">// 让prettier使用eslint的代码格式进行校验</span></span><br><span class="line">    <span class="attr">"prettier.eslintIntegration"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">// 去掉代码结尾的分号</span></span><br><span class="line">    <span class="attr">"prettier.semi"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="comment">// 使用带引号替代双引号</span></span><br><span class="line">    <span class="attr">"prettier.singleQuote"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"prettier.tabWidth"</span>: <span class="number">4</span>,</span><br><span class="line">    <span class="attr">"prettier.printWidth"</span>: <span class="number">250</span>,</span><br><span class="line">    <span class="comment">// 让函数(名)和后面的括号之间加个空格</span></span><br><span class="line">    <span class="attr">"javascript.format.insertSpaceBeforeFunctionParenthesis"</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h2><p><a href="https://code.visualstudio.com/docs/languages/java" target="_blank" rel="noopener">https://code.visualstudio.com/docs/languages/java</a><br><a href="https://code.visualstudio.com/docs/remote/wsl" target="_blank" rel="noopener">https://code.visualstudio.com/docs/remote/wsl</a><br><a href="https://code.visualstudio.com/docs/java/java-tutorial" target="_blank" rel="noopener">https://code.visualstudio.com/docs/java/java-tutorial</a><br><a href="https://code.visualstudio.com/docs/java/java-project" target="_blank" rel="noopener">https://code.visualstudio.com/docs/java/java-project</a><br><a href="https://code.visualstudio.com/docs/java/java-debugging" target="_blank" rel="noopener">https://code.visualstudio.com/docs/java/java-debugging</a><br><a href="https://code.visualstudio.com/docs/java/extensions" target="_blank" rel="noopener">https://code.visualstudio.com/docs/java/extensions</a><br><a href="https://code.visualstudio.com/docs/java/java-spring-boot" target="_blank" rel="noopener">https://code.visualstudio.com/docs/java/java-spring-boot</a></p>
<p>插件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://marketplace.visualstudio.com/items?itemName=vscjava.vscode-java-pack</span><br><span class="line">https://marketplace.visualstudio.com/items?itemName=Pivotal.vscode-boot-dev-pack</span><br><span class="line">https://marketplace.visualstudio.com/items?itemName=adashen.vscode-tomcat</span><br><span class="line"><span class="comment">#wget http://mirrors.aliyun.com/apache/tomcat/tomcat-8/v8.5.61/bin/apache-tomcat-8.5.61-windows-x64.zip</span></span><br><span class="line"><span class="comment">#https://tomcat.apache.org/tomcat-8.5-doc/appdev/sample/</span></span><br><span class="line"><span class="comment">#WSL</span></span><br><span class="line">https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.vscode-remote-extensionpack</span><br></pre></td></tr></table></figure>
<p>Settings.json</p>
<p>terminal.integrated.shell.windows设置为git-bash的话不能启动java项目。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"editor.fontSize"</span>: 16,</span><br><span class="line">    <span class="comment"># "terminal.integrated.shell.windows": "D:\\Developer\\Git\\bin\\bash.exe",</span></span><br><span class="line">    <span class="string">"git.autofetch"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">"terminal.integrated.fontSize"</span>: 16,</span><br><span class="line">    <span class="string">"java.home"</span>: <span class="string">"D:\\Developer\\java\\jdk-11.0.9"</span>,</span><br><span class="line">    <span class="string">"java.configuration.runtimes"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"name"</span>: <span class="string">"JavaSE-1.8"</span>,</span><br><span class="line">          <span class="string">"path"</span>: <span class="string">"C:\\Program Files\\Java\\jdk1.8.0_271"</span>,</span><br><span class="line">          <span class="string">"default"</span>:  <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"name"</span>: <span class="string">"JavaSE-11"</span>,</span><br><span class="line">          <span class="string">"path"</span>: <span class="string">"D:\\Developer\\java\\jdk-11.0.9"</span></span><br><span class="line">         &#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="string">"files.exclude"</span>: &#123;</span><br><span class="line">        <span class="string">"**/.classpath"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">"**/.project"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">"**/.settings"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">"**/.factorypath"</span>: <span class="literal">true</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"maven.executable.path"</span>: <span class="string">"D:\\Developer\\apache-maven-3.3.9\\bin\\mvn.cmd"</span>,</span><br><span class="line">      <span class="string">"java.configuration.maven.globalSettings"</span>: <span class="string">"D:\\Developer\\apache-maven-3.3.9\\conf\\settings.xml"</span>,</span><br><span class="line">      <span class="string">"java.configuration.maven.userSettings"</span>: <span class="string">"D:\\Developer\\apache-maven-3.3.9\\conf\\settings.xml"</span>,</span><br><span class="line">      <span class="string">"editor.suggestSelection"</span>: <span class="string">"first"</span>,</span><br><span class="line">      <span class="string">"vsintellicode.modify.editor.suggestSelection"</span>: <span class="string">"automaticallyOverrodeDefaultValue"</span>,</span><br><span class="line">      <span class="string">"java.project.importOnFirstTimeStartup"</span>: <span class="string">"automatic"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>WSL for Settings.json</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"editor.fontSize"</span>: 16,</span><br><span class="line">    <span class="string">"git.autofetch"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">"terminal.integrated.fontSize"</span>: 16,</span><br><span class="line">    <span class="string">"java.home"</span>: <span class="string">"/Developer/java/jdk-11.0.9"</span>,</span><br><span class="line">    <span class="string">"java.configuration.runtimes"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"name"</span>: <span class="string">"JavaSE-1.8"</span>,</span><br><span class="line">          <span class="string">"path"</span>: <span class="string">"/Developer/java/jdk1.8.0_271"</span>,</span><br><span class="line">          <span class="string">"default"</span>:  <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"name"</span>: <span class="string">"JavaSE-11"</span>,</span><br><span class="line">          <span class="string">"path"</span>: <span class="string">"/Developer/java/jdk-11.0.9"</span></span><br><span class="line">         &#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="string">"files.exclude"</span>: &#123;</span><br><span class="line">        <span class="string">"**/.classpath"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">"**/.project"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">"**/.settings"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">"**/.factorypath"</span>: <span class="literal">true</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"maven.executable.path"</span>: <span class="string">"/Developer/apache-maven-3.3.9/bin/mvn"</span>,</span><br><span class="line">      <span class="string">"java.configuration.maven.globalSettings"</span>: <span class="string">"/Developer/apache-maven-3.3.9/conf/settings.xml"</span>,</span><br><span class="line">      <span class="string">"java.configuration.maven.userSettings"</span>: <span class="string">"/Developer/apache-maven-3.3.9/conf/settings.xml"</span>,</span><br><span class="line">      <span class="string">"editor.suggestSelection"</span>: <span class="string">"first"</span>,</span><br><span class="line">      <span class="string">"vsintellicode.modify.editor.suggestSelection"</span>: <span class="string">"automaticallyOverrodeDefaultValue"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Remote Debug:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#launch.json</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"configurations"</span>: [</span><br><span class="line">        // &#123;</span><br><span class="line">        //     <span class="string">"type"</span>: <span class="string">"java"</span>,</span><br><span class="line">        //     <span class="string">"name"</span>: <span class="string">"Spring Boot-TelepresenceK8sApplication&lt;telepresence-k8s&gt;"</span>,</span><br><span class="line">        //     <span class="string">"request"</span>: <span class="string">"launch"</span>,</span><br><span class="line">        //     <span class="string">"cwd"</span>: <span class="string">"<span class="variable">$&#123;workspaceFolder&#125;</span>"</span>,</span><br><span class="line">        //     <span class="string">"console"</span>: <span class="string">"internalConsole"</span>,</span><br><span class="line">        //     <span class="string">"mainClass"</span>: <span class="string">"com.ctl.telepresencek8s.TelepresenceK8sApplication"</span>,</span><br><span class="line">        //     <span class="string">"projectName"</span>: <span class="string">"telepresence-k8s"</span>,</span><br><span class="line">        //     <span class="string">"args"</span>: <span class="string">""</span></span><br><span class="line">        // &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"type"</span>: <span class="string">"java"</span>,</span><br><span class="line">            <span class="string">"name"</span>: <span class="string">"Debug (Attach)-Spring Boot-TelepresenceK8sApplication&lt;telepresence-k8s&gt;"</span>,</span><br><span class="line">            <span class="string">"request"</span>: <span class="string">"attach"</span>,</span><br><span class="line">            <span class="string">"projectName"</span>: <span class="string">"telepresence-k8s"</span>,</span><br><span class="line">            <span class="string">"hostName"</span>: <span class="string">"localhost"</span>,</span><br><span class="line">            <span class="string">"port"</span>: 8000</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Developing-inside-a-Container"><a href="#Developing-inside-a-Container" class="headerlink" title="Developing inside a Container"></a>Developing inside a Container</h2><p>参考：</p>
<ul>
<li><a href="https://code.visualstudio.com/docs/remote/containers" target="_blank" rel="noopener">https://code.visualstudio.com/docs/remote/containers</a></li>
<li><a href="https://code.visualstudio.com/docs/remote/create-dev-container" target="_blank" rel="noopener">https://code.visualstudio.com/docs/remote/create-dev-container</a></li>
<li><a href="https://code.visualstudio.com/docs/remote/containers-advanced" target="_blank" rel="noopener">https://code.visualstudio.com/docs/remote/containers-advanced</a></li>
<li><a href="https://github.com/microsoft/vscode-dev-containers" target="_blank" rel="noopener">https://github.com/microsoft/vscode-dev-containers</a></li>
</ul>
<p>首先要安装vscode-remote-extensionpack插件：</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.vscode-remote-extensionpack" target="_blank" rel="noopener">https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.vscode-remote-extensionpack</a></p>
<p>.devcontainer/devcontainer.json</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// For format details, see https://aka.ms/vscode-remote/devcontainer.json or this file<span class="string">'s README at:</span></span><br><span class="line"><span class="string">// https://github.com/microsoft/vscode-dev-containers/tree/v0.137.0/containers/java</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">	"name": "employee",</span></span><br><span class="line"><span class="string">	"build": &#123;</span></span><br><span class="line"><span class="string">		"dockerfile": "Dockerfile",</span></span><br><span class="line"><span class="string">		"args": &#123;</span></span><br><span class="line"><span class="string">			"VARIANT": "8"</span></span><br><span class="line"><span class="string">		&#125;</span></span><br><span class="line"><span class="string">	&#125;,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">	// Set *default* container specific settings.json values on container create.</span></span><br><span class="line"><span class="string">	"settings": &#123; </span></span><br><span class="line"><span class="string">		"terminal.integrated.shell.linux": "/bin/bash",</span></span><br><span class="line"><span class="string">		"java.home": "/Developer/java/jdk-11.0.9",</span></span><br><span class="line"><span class="string">		"maven.executable.path": "/Developer/apache-maven-3.3.9/bin/mvn",</span></span><br><span class="line"><span class="string">      	"java.configuration.maven.globalSettings": "/Developer/apache-maven-3.3.9/conf/settings.xml",</span></span><br><span class="line"><span class="string">      	"java.configuration.maven.userSettings": "/Developer/apache-maven-3.3.9/conf/settings.xml",</span></span><br><span class="line"><span class="string">		"java.configuration.runtimes": [</span></span><br><span class="line"><span class="string">			&#123;</span></span><br><span class="line"><span class="string">			  "name": "JavaSE-1.8",</span></span><br><span class="line"><span class="string">			  "path": "/Developer/java/jdk1.8.0_241",</span></span><br><span class="line"><span class="string">			  "default":  true</span></span><br><span class="line"><span class="string">			&#125;,</span></span><br><span class="line"><span class="string">			&#123;</span></span><br><span class="line"><span class="string">			  "name": "JavaSE-11",</span></span><br><span class="line"><span class="string">			  "path": "/Developer/java/jdk-11.0.9"</span></span><br><span class="line"><span class="string">			&#125;</span></span><br><span class="line"><span class="string">		]</span></span><br><span class="line"><span class="string">	&#125;,</span></span><br><span class="line"><span class="string">	</span></span><br><span class="line"><span class="string">	// Add the IDs of extensions you want installed when the container is created.</span></span><br><span class="line"><span class="string">	"extensions": [</span></span><br><span class="line"><span class="string">		"vscjava.vscode-java-pack"</span></span><br><span class="line"><span class="string">	],</span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">  #If you do have login access, you can use a remote filesystem bind mount instead: </span></span><br><span class="line"><span class="string">	"workspaceMount": "source=$&#123;localWorkspaceFolder&#125;,target=/Developer/workspace/employee,type=bind,consistency=cached",</span></span><br><span class="line"><span class="string">	"workspaceFolder": "/Developer/workspace/employee",</span></span><br><span class="line"><span class="string">	"mounts": [</span></span><br><span class="line"><span class="string">		"source=F:\\docker,target=/Developer/docker,type=bind,consistency=cached",</span></span><br><span class="line"><span class="string">		// "source=try-node-node_modules,target=$&#123;containerWorkspaceFolder&#125;/node_modules,type=volume",</span></span><br><span class="line"><span class="string">		"source=F:\\apache-tomcat-7.0.50,target=/Developer/apache-tomcat-7.0.50,type=bind,consistency=cached",</span></span><br><span class="line"><span class="string">		"source=C:\\Users\\Dave.zhao\\.kube,target=/root/.kube,type=bind,consistency=cached"</span></span><br><span class="line"><span class="string">	],</span></span><br><span class="line"><span class="string">	"remoteEnv": &#123;</span></span><br><span class="line"><span class="string">		"KUBERNETES_NAMESPACE": "default"</span></span><br><span class="line"><span class="string">	&#125;,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">	// Use '</span>forwardPorts<span class="string">' to make a list of ports inside the container available locally.</span></span><br><span class="line"><span class="string">	// "forwardPorts": [],</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">	// Use '</span>postCreateCommand<span class="string">' to run commands after the container is created.</span></span><br><span class="line"><span class="string">	// "postCreateCommand": ". /etc/profile &amp;&amp; java -version",</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">	// Uncomment to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.</span></span><br><span class="line"><span class="string">	"remoteUser": "dev"</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure>
<p>.devcontainer/Dockerfile</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># FROM java:8-jdk</span></span><br><span class="line">FROM centos:7</span><br><span class="line">RUN mkdir /Developer /config</span><br><span class="line">WORKDIR /Developer</span><br><span class="line">ENV APPNAME=employee \</span><br><span class="line">    VERSION=3.0.0-SNAPSHOT \</span><br><span class="line">    CONFIG=/config/</span><br><span class="line"><span class="comment"># RUN ln -snf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; echo Asia/Shanghai &gt; /etc/timezone</span></span><br><span class="line">RUN yum install -y wget sudo</span><br><span class="line"><span class="comment"># RUN groupadd dev &amp;&amp; useradd -r -g dev dev</span></span><br><span class="line">ARG USERNAME=dev</span><br><span class="line">ARG USER_UID=1000</span><br><span class="line">ARG USER_GID=<span class="variable">$USER_UID</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create the user</span></span><br><span class="line"><span class="comment"># [Optional] Add sudo support. Omit if you don't need to install software after connecting.</span></span><br><span class="line">RUN groupadd --gid <span class="variable">$USER_GID</span> <span class="variable">$USERNAME</span> \</span><br><span class="line">  &amp;&amp; useradd --uid <span class="variable">$USER_UID</span> --gid <span class="variable">$USER_GID</span> -m <span class="variable">$USERNAME</span> \</span><br><span class="line">  &amp;&amp; <span class="built_in">echo</span> <span class="variable">$USERNAME</span> ALL=\(ALL\) NOPASSWD:ALL &gt; /etc/sudoers.d/<span class="variable">$USERNAME</span> \</span><br><span class="line">  &amp;&amp; chmod 0440 /etc/sudoers.d/<span class="variable">$USERNAME</span></span><br><span class="line"></span><br><span class="line">RUN chown -R <span class="variable">$USERNAME</span>.<span class="variable">$USERNAME</span> /Developer /config</span><br><span class="line">ADD apache-maven-3.3.9.tar.gz /Developer/</span><br><span class="line">RUN mkdir -p /Developer/java /Developer/workspace</span><br><span class="line">ADD java/* /Developer/java/</span><br><span class="line"></span><br><span class="line">ADD script.sh /Developer/</span><br><span class="line">RUN bash /Developer/script.sh</span><br></pre></td></tr></table></figure>
<p>script.sh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#关闭内核安全(如果是vagrant方式，第一次完成后需要重启vagrant才能生效。)</span></span><br><span class="line">sed -i <span class="string">'s;SELINUX=.*;SELINUX=disabled;'</span> /etc/selinux/config</span><br><span class="line">setenforce 0</span><br><span class="line">getenforce</span><br><span class="line"></span><br><span class="line">cat /etc/NetworkManager/NetworkManager.conf|grep <span class="string">"dns=none"</span> &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"dns=none"</span> &gt;&gt; /etc/NetworkManager/NetworkManager.conf</span><br><span class="line">  systemctl restart NetworkManager.service</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">ln -sf /usr/share/zoneinfo/Asia/Chongqing /etc/localtime</span><br><span class="line"></span><br><span class="line"><span class="comment">#logined limit</span></span><br><span class="line">cat /etc/security/limits.conf|grep 100000 &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">cat &gt;&gt; /etc/security/limits.conf  &lt;&lt; EOF</span><br><span class="line">*               soft    nofile             100000</span><br><span class="line">*               hard    nofile             100000</span><br><span class="line">*               soft    nproc              100000</span><br><span class="line">*               hard    nproc              100000</span><br><span class="line">EOF</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">sed -i <span class="string">'s;4096;100000;g'</span> /etc/security/limits.d/20-nproc.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#systemd service limit</span></span><br><span class="line">cat /etc/systemd/system.conf|egrep <span class="string">'^DefaultLimitCORE'</span> &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">cat &gt;&gt; /etc/systemd/system.conf &lt;&lt; EOF</span><br><span class="line">DefaultLimitCORE=infinity</span><br><span class="line">DefaultLimitNOFILE=100000</span><br><span class="line">DefaultLimitNPROC=100000</span><br><span class="line">EOF</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#echo "vm.swappiness = 10" &gt;&gt; /etc/sysctl.conf</span></span><br><span class="line">cat /etc/sysctl.conf|grep <span class="string">"net.ipv4.ip_local_port_range"</span> &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">cat &gt;&gt; /etc/sysctl.conf  &lt;&lt; EOF</span><br><span class="line">net.ipv4.tcp_fin_timeout = 30</span><br><span class="line">net.ipv4.tcp_keepalive_time = 300</span><br><span class="line">net.ipv4.tcp_tw_reuse = 1</span><br><span class="line">net.ipv4.tcp_tw_recycle = 1</span><br><span class="line">net.ipv4.ip_local_port_range = 1024 65535</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">EOF</span><br><span class="line">sysctl -p</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">su - root -c <span class="string">"ulimit -a"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># yum -y install gcc kernel-devel</span></span><br><span class="line">mv -f /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br><span class="line"><span class="comment">#wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.163.com/.help/CentOS7-Base-163.repo</span></span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line"></span><br><span class="line">sudo mv /etc/yum.repos.d/epel.repo /etc/yum.repos.d/epel.repo.backup</span><br><span class="line">sudo mv /etc/yum.repos.d/epel-testing.repo /etc/yum.repos.d/epel-testing.repo.backup</span><br><span class="line"></span><br><span class="line">yum -y install <span class="built_in">bind</span>-utils bridge-utils ntpdate setuptool iptables \</span><br><span class="line"> system-config-securitylevel-tui system-config-network-tui \</span><br><span class="line"> ntsysv net-tools lrzsz telnet lsof vim dos2unix unix2dos zip unzip</span><br><span class="line"></span><br><span class="line">cat &gt;&gt; /etc/profile &lt;&lt; EOF</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/Developer/java/jdk1.8.0_241</span><br><span class="line"><span class="built_in">export</span> M2_HOME=/Developer/apache-maven-3.3.9</span><br><span class="line"><span class="built_in">export</span> GRADLE_USER_HOME=/Developer/.gradle</span><br><span class="line"><span class="built_in">export</span> PATH=\<span class="variable">$JAVA_HOME</span>/bin:\<span class="variable">$M2_HOME</span>/bin:\<span class="variable">$PATH</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">. /etc/profile</span><br><span class="line"><span class="comment"># /home/$USERNAME/.bashrc</span></span><br></pre></td></tr></table></figure>
<p>参考以下文件：<a href="/files/vscode的使用与插件开发/devcontainer.zip">devcontainer.zip</a> 或者：<a href="https://github.com/zhaoxunyong/java-k8s/tree/1.0.4.RELEASE/spring-k8s-feign/spring-cloud-k8s-account-service/.devcontainer" target="_blank" rel="noopener">https://github.com/zhaoxunyong/java-k8s/tree/1.0.4.RELEASE/spring-k8s-feign/spring-cloud-k8s-account-service/.devcontainer</a></p>
<p>注意：</p>
<p>如果有变动，需要执行”Remote-Containers: Rebuild Container”。</p>
<p>另外不支持远程docker(2375端口)方式打开本地的目录(因为无法远程mount目录)，但可以通过”Remote-Containers: Clone Repository in Container Volume”的方式或者：</p>
<p><a href="https://code.visualstudio.com/docs/remote/containers-advanced#_converting-an-existing-or-predefined-devcontainerjson" target="_blank" rel="noopener">https://code.visualstudio.com/docs/remote/containers-advanced#_converting-an-existing-or-predefined-devcontainerjson</a></p>
<p>If you do not have login access to the remote host, use a Docker “volume” for your source code.<br>Update .devcontainer/devcontainer.json as follows (replacing remote-workspace with a unique volume name if desired):<br>workspaceMount”: “source=employee-workspace,target=/Developer/workspace/employee,type=volume”,</p>
<p>If you used a volume instead of a bind mount, use Ctrl+Shift+` to open a terminal inside the container. </p>
<p>#You can run git clone from here to pull down your source code and use File &gt; Open… / Open Folder… to open the cloned repository.</p>
<h2 id="Docker-from-docker"><a href="#Docker-from-docker" class="headerlink" title="Docker-from-docker"></a>Docker-from-docker</h2><p>.devcontainer/devcontainer.json</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="string">"extensions"</span>: [</span><br><span class="line">  <span class="string">"ms-azuretools.vscode-docker"</span></span><br><span class="line">],</span><br><span class="line"><span class="string">"mounts"</span>: [ </span><br><span class="line">  <span class="string">"source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"</span>,</span><br><span class="line">  <span class="string">"source=<span class="variable">$&#123;env:HOME&#125;</span><span class="variable">$&#123;env:USERPROFILE&#125;</span>/.kube,target=/home/dev/.kube,type=bind"</span></span><br><span class="line">],</span><br></pre></td></tr></table></figure>
<p>script.sh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://www.cnblogs.com/763977251-sg/p/11837130.html</span></span><br><span class="line"><span class="comment">#Docker installation</span></span><br><span class="line"><span class="comment">#https://aka.ms/vscode-remote/samples/docker-from-docker</span></span><br><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line">sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line">sudo yum makecache fast</span><br><span class="line">sudo yum -y install docker-ce</span><br><span class="line"></span><br><span class="line">touch /var/run/docker.sock</span><br><span class="line">sudo gpasswd -a dev docker</span><br><span class="line">chown dev.dev /var/run/docker.sock</span><br></pre></td></tr></table></figure>
<h2 id="插件开发"><a href="#插件开发" class="headerlink" title="插件开发"></a>插件开发</h2><p>参考代码<a href="https://github.com/zhaoxunyong/vs-code-git-plugin" target="_blank" rel="noopener">https://github.com/zhaoxunyong/vs-code-git-plugin</a>，具体细节待补充。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://segmentfault.com/a/1190000008968904" target="_blank" rel="noopener">https://segmentfault.com/a/1190000008968904</a></li>
<li><a href="https://www.cnblogs.com/virde/p/vscode-extension-input-and-output.html" target="_blank" rel="noopener">https://www.cnblogs.com/virde/p/vscode-extension-input-and-output.html</a></li>
<li><a href="https://github.com/steveukx/git-js" target="_blank" rel="noopener">https://github.com/steveukx/git-js</a></li>
<li><a href="https://www.jianshu.com/p/2b096d8ad9b8" target="_blank" rel="noopener">https://www.jianshu.com/p/2b096d8ad9b8</a></li>
<li><a href="https://github.com/Microsoft/vscode-extension-samples" target="_blank" rel="noopener">https://github.com/Microsoft/vscode-extension-samples</a></li>
<li><a href="https://www.jianshu.com/p/520c575e91c3" target="_blank" rel="noopener">https://www.jianshu.com/p/520c575e91c3</a></li>
<li><a href="https://segmentfault.com/a/1190000017279102" target="_blank" rel="noopener">https://segmentfault.com/a/1190000017279102</a></li>
<li><a href="https://segmentfault.com/a/1190000014758981" target="_blank" rel="noopener">https://segmentfault.com/a/1190000014758981</a></li>
<li><a href="https://www.cnblogs.com/liuxianan/p/vscode-plugin-publish.html" target="_blank" rel="noopener">https://www.cnblogs.com/liuxianan/p/vscode-plugin-publish.html</a></li>
<li><a href="https://www.cnblogs.com/virde/p/vscode-extension-input-and-output.html" target="_blank" rel="noopener">https://www.cnblogs.com/virde/p/vscode-extension-input-and-output.html</a></li>
<li><a href="https://www.cnblogs.com/virde/p/vscode-extension-input-and-output.html" target="_blank" rel="noopener">https://www.cnblogs.com/virde/p/vscode-extension-input-and-output.html</a></li>
<li><a href="http://nodejs.cn/api/fs.html#fs_fs_unlinksync_path" target="_blank" rel="noopener">http://nodejs.cn/api/fs.html#fs_fs_unlinksync_path</a></li>
</ul>
]]></content>
      <categories>
        <category>vscode</category>
      </categories>
      <tags>
        <tag>vscode</tag>
      </tags>
  </entry>
  <entry>
    <title>React基础</title>
    <url>/2019/05/React%E5%9F%BA%E7%A1%80.html</url>
    <content><![CDATA[<p>记录一下React基础相关的知识点。</p>
<a id="more"></a>
<h2 id="ES6"><a href="#ES6" class="headerlink" title="ES6"></a>ES6</h2><h3 id="Promise"><a href="#Promise" class="headerlink" title="Promise"></a>Promise</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">test = <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="comment">// return 'xxx' // in then</span></span><br><span class="line">    <span class="comment">// in then, add async necessary</span></span><br><span class="line">    <span class="comment">// return new Error('error!') </span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// in catch, add async necessary</span></span><br><span class="line">    <span class="comment">// throw new Error('error!') </span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// in then, add async unnecessary</span></span><br><span class="line">    <span class="comment">// return Promise.resolve('xxx') </span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// in catch, add async unnecessary</span></span><br><span class="line">    <span class="comment">// return Promise.reject(new Error('error!')) </span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// add async unnecessary</span></span><br><span class="line">    <span class="comment">/* return new Promise((resolve, reject) =&gt; &#123; </span></span><br><span class="line"><span class="comment">        // in then</span></span><br><span class="line"><span class="comment">        // resolve('yyy')</span></span><br><span class="line"><span class="comment">        // in catch</span></span><br><span class="line"><span class="comment">        // throw new Error('error!')  </span></span><br><span class="line"><span class="comment">        // in catch</span></span><br><span class="line"><span class="comment">        reject(new Error('error!')) </span></span><br><span class="line"><span class="comment">    &#125;) */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="async"><a href="#async" class="headerlink" title="async"></a>async</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">async</span> fetch() &#123;</span><br><span class="line">    <span class="keyword">this</span>.props.loadList()</span><br><span class="line">    <span class="keyword">this</span>.fetchPerson(<span class="string">'Billy'</span>)</span><br><span class="line">        <span class="comment">// .then(this.fetchOrders)</span></span><br><span class="line">        .then(<span class="function"><span class="params">person</span> =&gt;</span> <span class="keyword">this</span>.fetchOrders(person))</span><br><span class="line">        .then(<span class="function"><span class="params">orders</span> =&gt;</span> &#123;</span><br><span class="line">            orders.forEach(<span class="function"><span class="params">order</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(order)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="built_in">console</span>.error)</span><br><span class="line">    <span class="comment">// let person = await this.fetchPerson('Billy')</span></span><br><span class="line">    <span class="comment">// let orders = await this.fetchOrders(person)</span></span><br><span class="line">    <span class="comment">// orders.forEach(order =&gt; &#123;</span></span><br><span class="line">    <span class="comment">//     console.log(order)</span></span><br><span class="line">    <span class="comment">// &#125;)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// call</span></span><br><span class="line"><span class="keyword">this</span>.test().then(</span><br><span class="line">    x =&gt; &#123;</span><br><span class="line">        alert(<span class="string">'x-&gt;'</span> + x)</span><br><span class="line">    &#125;<span class="comment">/* ,</span></span><br><span class="line"><span class="comment">    err =&gt; &#123;</span></span><br><span class="line"><span class="comment">        alert('e-&gt;' + err)</span></span><br><span class="line"><span class="comment">    &#125; */</span></span><br><span class="line">    <span class="comment">// catch与then中的第二个参数效果一样</span></span><br><span class="line">    ).catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">        alert(<span class="string">'e-&gt;'</span> + err)</span><br><span class="line">    &#125;)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> fetchOrders(person) &#123;</span><br><span class="line">    <span class="keyword">const</span> orders = person.orderIds.map(<span class="function"><span class="params">id</span> =&gt;</span> (&#123; id &#125;))</span><br><span class="line">    <span class="keyword">return</span> orders</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> fetchPerson(name) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        name,</span><br><span class="line">        orderIds: [<span class="string">'A'</span>, <span class="string">'B'</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="React生命周期"><a href="#React生命周期" class="headerlink" title="React生命周期"></a>React生命周期</h2><p><img src="/images/React基础/react-lifecycle.jpeg" alt="react-lifecycle.jpeg"></p>
<p>初始化（无子组件）:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">constructor-&gt;componentWillMount-&gt;render-&gt;componentDidMount</span><br></pre></td></tr></table></figure>
<p>初始化（有子组件）:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">父组件：constructor-&gt;componentWillMount-&gt;render</span><br><span class="line">子组件：-&gt;constructor-&gt;componentWillMount-&gt;render-&gt;componentDidMount</span><br><span class="line">父组件：-&gt;componentDidMount</span><br></pre></td></tr></table></figure>
<p>state改变时(无子组件):</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">shouldComponentUpdate-&gt;componentWillUpdate-&gt;render-&gt;componentDidUpdate</span><br></pre></td></tr></table></figure>
<p>state改变时(有子组件):</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">父组件：shouldComponentUpdate-&gt;componentWillUpdate-&gt;render</span><br><span class="line">子组件：-&gt;componentWillReceiveProps-&gt;shouldComponentUpdate-&gt;componentWillUpdate-&gt;render-&gt;componentDidUpdate</span><br><span class="line">父组件：-&gt;componentDidUpdate</span><br></pre></td></tr></table></figure>
<p>离开页面时:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">componentWillUnmount</span><br></pre></td></tr></table></figure>
<p>如果父组件的state改变时，所有子组件或者子组件在render()中的prop值都会改变：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">子组件render()方法：<span class="tag">&lt;<span class="name">MyTextArea</span> <span class="attr">defaultValue</span>=<span class="string">&#123;this.props.test&#125;</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<p>如果将子组件的props值定义为state的话，则需要在componentWillReceiveProps设置state:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">constructor(props) &#123;</span><br><span class="line">    super(props)</span><br><span class="line">    this.state = &#123;</span><br><span class="line">        test: props.test</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">componentWillReceiveProps = nextProps =&gt; &#123;</span><br><span class="line">    this.setState(&#123;</span><br><span class="line">        test: nextProps.test</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line">子组件render()方法：<span class="tag">&lt;<span class="name">MyTextArea</span> <span class="attr">defaultValue</span>=<span class="string">&#123;this.state.test&#125;</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<p>如何避免这些不必要的render：</p>
<p>使用shouldComponentUpdate()以让React知道当前状态或属性的改变是否不影响组件的输出，默认返回ture，返回false时不会重写render，而且该方法并不会在初始化渲染或当使用forceUpdate()时被调用，我们要做的只是这样:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">shouldComponentUpdate(nextProps, nextState) &#123;</span><br><span class="line">  return nextState.someData !== this.state.someData</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="react路由"><a href="#react路由" class="headerlink" title="react路由"></a>react路由</h2><h3 id="Switch"><a href="#Switch" class="headerlink" title="Switch"></a>Switch</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;Switch&gt;</span><br><span class="line">    &lt;Route path=&quot;/demo/list&quot; component=&#123;List&#125; exact /&gt;</span><br><span class="line">    &lt;Route path=&quot;/demo/detail/:id&quot; component=&#123;Detail&#125; /&gt;</span><br><span class="line">    &lt;Redirect to=&quot;/demo/list&quot; /&gt;</span><br><span class="line">&lt;/Switch&gt;</span><br></pre></td></tr></table></figure>
<p>Switch表示有多少Route时，只加载找到的第一条Route。 exact表示精确匹配。没有加exact模糊匹配。</p>
<h3 id="子组件配置路由"><a href="#子组件配置路由" class="headerlink" title="子组件配置路由"></a>子组件配置路由</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pages/home/index.js(第一次会加载这个页面):</span><br><span class="line">&lt;Switch&gt;</span><br><span class="line">    &lt;Route path=&quot;/&quot; component=&#123;MainPage&#125; exact /&gt;</span><br><span class="line">    &lt;Route path=&quot;/demo&quot; component=&#123;Demo&#125; /&gt;</span><br><span class="line">    &lt;Route path=&quot;*&quot; component=&#123;NotFoundPage&#125; /&gt;</span><br><span class="line">&lt;/Switch&gt;</span><br></pre></td></tr></table></figure>
<p>注意：<route path="/demo" component="{Demo}">不能加exact，否则子组件中的路由无法加载。</route></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/demo/index.js:</span><br><span class="line">&lt;Switch&gt;</span><br><span class="line">    &lt;Route path=&quot;/demo/list&quot; component=&#123;List&#125; /&gt;</span><br><span class="line">    &lt;Route path=&quot;/demo/detail/:id&quot; component=&#123;Detail&#125; /&gt;</span><br><span class="line">    &lt;Redirect to=&quot;/demo/list&quot; /&gt;</span><br><span class="line">&lt;/Switch&gt;</span><br></pre></td></tr></table></figure>
<p>react-route必须要在系统第一次加载路由。通过点击进来的页面如果配置的路由在第一次没有加载，就报错。/demo在第一次就载了，所以子组件配置/demo开头的路由可以。但如果子组的路由不是以/demo的就有问题。估计是react router的限制。</p>
<p>/demo必须要先定义在router.js中，各个组件中可以定义自己的路由，不过前提必须要是/demo开头才行。</p>
<p>所以home下的Index.js中的这行不能加exact，否则路由就加载不了。</p>
<p>/demo/list模糊匹配到了/demo，然后/demo中配置了子组件的路由，就能够成功加载。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://dvajs.com/knowledgemap/#javascript-%E8%AF%AD%E8%A8%80" target="_blank" rel="noopener">https://dvajs.com/knowledgemap/#javascript-%E8%AF%AD%E8%A8%80</a></li>
<li><a href="https://es6.ruanyifeng.com/" target="_blank" rel="noopener">https://es6.ruanyifeng.com/</a></li>
<li><a href="https://ithelp.ithome.com.tw/articles/10201276" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10201276</a></li>
<li><a href="https://ithelp.ithome.com.tw/articles/10201420?sc=iThelpR" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10201420?sc=iThelpR</a></li>
<li><a href="https://segmentfault.com/a/1190000016494335" target="_blank" rel="noopener">https://segmentfault.com/a/1190000016494335</a></li>
</ul>
]]></content>
      <categories>
        <category>react</category>
      </categories>
      <tags>
        <tag>react</tag>
      </tags>
  </entry>
  <entry>
    <title>别错过孩子英语学习敏感期</title>
    <url>/2019/07/%E5%88%AB%E9%94%99%E8%BF%87%E5%AD%A9%E5%AD%90%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0%E6%95%8F%E6%84%9F%E6%9C%9F.html</url>
    <content><![CDATA[<p>遵循语言自然习得规律，让孩子像学母语一样学英语。从英语零基础到小学毕业，自主阅读原版&lt;&lt;哈利.波特&gt;&gt;！不让孩子再走英语学习长征路！</p>
<a id="more"></a>
<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><ul>
<li>从0岁开始听英语童谣、进行指物训练</li>
<li>从1岁起坚持亲子共读英文绘本</li>
<li>从2岁起观看英语动画</li>
<li>从3岁起字母和自然拼读</li>
<li>从5岁起开启分级阅读</li>
</ul>
<h2 id="0岁-：指物训练和英语童谣"><a href="#0岁-：指物训练和英语童谣" class="headerlink" title="0岁+：指物训练和英语童谣"></a>0岁+：指物训练和英语童谣</h2><p>直接用英语说给孩子听，和小宝宝玩英语指物训练游戏，如：</p>
<p>This is your be. Where is your bed?</p>
<p>听英语童谣：</p>
<p>40首必听必唱的经典英语童谣：</p>
<h3 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h3><p>不需要翻译成中文，家长可以通过图画示意和肢体大动作以及精细动作的演示，让孩子主动了解图画代表的意思。童谣的意义不是让孩子理解意思，而是熟悉语言的拼读。</p>
<p>建议家长在童谣输入上看重质量而不是数量，可以建立一个自己的英语童谣库，按照动作或主题分次念给孩子听，玩亲子互动游戏。一周只一两首童谣进行互动，每天重复同样的童谣，日积月累，输入效果也会非常明显。切记，孩子学语言最重要的方式是模仿和重复。</p>
<h2 id="1岁-：亲子共读英文绘本"><a href="#1岁-：亲子共读英文绘本" class="headerlink" title="1岁+：亲子共读英文绘本"></a>1岁+：亲子共读英文绘本</h2><ul>
<li>每天至少共10分钟为孩子快乐地大声朗读</li>
<li>每天至少读三个故事，可以是同一个故事重复读三遍。孩子在开始学会阅读前，需要聆听一千个故事。</li>
<li>生动活波地大声朗读。</li>
<li>读宝宝喜欢的故事，一遍以一遍地反复读，每本书保持同样的朗读风格。</li>
<li>玩和书本内容相关的游戏。</li>
<li>绝对不要刻意教孩子怎么读，也不要一靠近书就紧张。</li>
<li>每天给孩子大声读书。</li>
</ul>
<p>父母尽可以大量地经孩子读英文绘本，不必怕把孩子的口音带偏了，即使带偏以后还是能回到路上的。</p>
<p>亲子共读时，前面几次可以一遍英文朗读加一遍中文翻译，之后就可以省去中文。如果图文对应关系很强则不必翻译。</p>
<p>每天坚持30分钟左右：</p>
<ul>
<li>选对书</li>
<li>用各种方法刺激孩子英文绘本的兴趣</li>
<li>用心给孩子读书</li>
<li>坚持每天读</li>
</ul>
<p>只要孩子对英文绘本感兴趣，开不开口说英语不要主过介意。只纠正孩子弄错的概念即可。家长应先“预习好功课”，把绘本中每个单词的发单都搞明白，再模仿句子的语音语调，尽量让自己读得更加生动地道。在孩子与家长共读了几遍绘本、对书的内容已经有了初步了解后，家长就可以给孩子播放音频、取代真人阅读了。</p>
<h2 id="2岁-：看英语动画片"><a href="#2岁-：看英语动画片" class="headerlink" title="2岁+：看英语动画片"></a>2岁+：看英语动画片</h2><p>建议当孩子2岁以后，看动画片可以逐步成为每天的例行活动，动画片要与阅读英文绘本、听英语童谣互相配合，一起构成孩子日常的英语输入环境。</p>
<ol>
<li>家长最好陪孩子一起看</li>
<li>首选纯英文不带字幕的</li>
<li>不要贪多，要能耐住性子“反复观看”</li>
<li>收集与孩子喜欢的动画片相关的绘本、童谣等资源</li>
<li>不要一边玩玩具一边看</li>
<li>2-3岁：10-15分钟，每天不超过30分钟 3-4岁：15-20分钟，每天不超过1小时 4岁+：30分钟，每天不超过两个小时</li>
</ol>
<h3 id="经典童谣动画"><a href="#经典童谣动画" class="headerlink" title="经典童谣动画"></a>经典童谣动画</h3><h3 id="动画片"><a href="#动画片" class="headerlink" title="动画片"></a>动画片</h3><ul>
<li>车宝四兄弟</li>
<li><p>小猪佩琪</p>
</li>
<li><p>车轮转呀转</p>
</li>
<li>恰克大冒险</li>
<li>汽车镇的故事</li>
<li>火车宝宝</li>
<li>托马斯小火车</li>
<li>天线宝宝</li>
<li>花园宝宝</li>
</ul>
]]></content>
      <categories>
        <category>English</category>
      </categories>
      <tags>
        <tag>English</tag>
      </tags>
  </entry>
  <entry>
    <title>Jenkins移动端自动构建</title>
    <url>/2019/06/Jenkins%E7%A7%BB%E5%8A%A8%E7%AB%AF%E8%87%AA%E5%8A%A8%E6%9E%84%E5%BB%BA.html</url>
    <content><![CDATA[<p>记录一下jenkins自动构建android与ios安装包。</p>
<a id="more"></a>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="Jenkins"><a href="#Jenkins" class="headerlink" title="Jenkins"></a>Jenkins</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install jenkins-lts</span><br><span class="line">brew services start jenkins-lts</span><br><span class="line"><span class="comment">#Generating for QR code</span></span><br><span class="line">brew install qrencode</span><br><span class="line"><span class="comment">#brew install md5sha1sum</span></span><br><span class="line"><span class="comment">#brew services list</span></span><br><span class="line"><span class="comment">#jenkins-lts started test /Users/test/Library/LaunchAgents/homebrew.mxcl.jenkins-lts.plist</span></span><br></pre></td></tr></table></figure>
<p>注意：2.263.4为正确运行的版本，如果通过uninstall后，可以在安装后手动替换掉war文件：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cp -a /Developer/jenkins-war-2.263.4.war /usr/local/opt/jenkins-lts/libexec/jenkins.war</span><br></pre></td></tr></table></figure></p>
<p>新版本的workspace默认为${ITEM_ROOT}/workspace，位于job目录下。需要修改~/.jenkins/config.xml文件的内容：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;workspaceDir&gt;$&#123;JENKINS_HOME&#125;/workspace/$&#123;ITEM_FULL_NAME&#125;&lt;/workspaceDir&gt;</span><br></pre></td></tr></table></figure></p>
<p>修改配置：<br>/usr/local/Cellar/jenkins-lts/2.289.1/homebrew.mxcl.jenkins-lts.plist:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">&lt;string&gt;--httpListenAddress=0.0.0.0&lt;/string&gt;</span><br><span class="line">&lt;string&gt;--httpPort=8080&lt;/string&gt;</span><br><span class="line">&lt;string&gt;--prefix=/ci&lt;/string&gt;</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<h2 id="系统配置"><a href="#系统配置" class="headerlink" title="系统配置"></a>系统配置</h2><p>没有采用jenkins插件方式安装，而是通过命令行shell脚本直接运行，所以需要事先在这台电脑上安装配置好相关的环境，并确保手动构建、打包功能正常，手动发布到appstore能成功。</p>
<p>android gradle配置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ext &#123;</span><br><span class="line">    defaultIsJenkins = <span class="string">"false"</span></span><br><span class="line">    isJenkins = project.hasProperty(<span class="string">'IS_JENKINS'</span>) ? IS_JENKINS : defaultIsJenkins</span><br><span class="line">&#125;</span><br><span class="line">def <span class="function"><span class="title">loadSigningConfig</span></span>() &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">"true"</span>.equals(isJenkins)) &#123;</span><br><span class="line">        // Create a variable called keystorePropertiesFile, and initialize it to your</span><br><span class="line">        // keystore.properties file, <span class="keyword">in</span> the rootProject folder.</span><br><span class="line">        def keystorePropertiesFile = rootProject.file(<span class="string">"/Users/test/.jenkins/scripts/signingConfigs.properties"</span>)</span><br><span class="line">        // Initialize a new Properties() object called keystoreProperties.</span><br><span class="line">        def keystoreProperties = new Properties()</span><br><span class="line">        // Load your keystore.properties file into the keystoreProperties object.</span><br><span class="line">        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))</span><br><span class="line">        android.signingConfigs.config.keyAlias = keystoreProperties[<span class="string">'keyAlias'</span>]</span><br><span class="line">        android.signingConfigs.config.keyPassword = keystoreProperties[<span class="string">'keyPassword'</span>]</span><br><span class="line">        android.signingConfigs.config.storeFile = file(keystoreProperties[<span class="string">'storeFile'</span>])</span><br><span class="line">        android.signingConfigs.config.storePassword = keystoreProperties[<span class="string">'storePassword'</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    signingConfigs &#123;</span><br><span class="line">        config &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    loadSigningConfig()</span><br><span class="line"></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        ...</span><br><span class="line">        versionCode rootProject.ext.versionCode</span><br><span class="line">        versionName rootProject.ext.versionName</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            ...</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">"true"</span>.equals(isJenkins)) &#123;</span><br><span class="line">                signingConfig signingConfigs.config</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        debug &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">"true"</span>.equals(isJenkins)) &#123;</span><br><span class="line">                signingConfig signingConfigs.config</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    applicationVariants.all &#123; variant -&gt;</span><br><span class="line">        variant.outputs.all &#123; output -&gt;</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">"true"</span>.equals(isJenkins)) &#123;</span><br><span class="line">                outputFileName = new File(<span class="string">"xwallet-"</span>+rootProject.ext.versionName+<span class="string">"."</span>+rootProject.ext.versionCode + <span class="string">"-"</span>+BUILD_TYPE+<span class="string">".apk"</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h2 id="nginx配置"><a href="#nginx配置" class="headerlink" title="nginx配置"></a>nginx配置</h2><p>安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install nginx</span><br><span class="line">brew services start nginx</span><br></pre></td></tr></table></figure>
<p>/usr/local/etc/nginx/nginx.conf:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 443;</span><br><span class="line">    server_name  appbuild.xxx.com;</span><br><span class="line">    server_tokens off;</span><br><span class="line">    client_max_body_size 0;</span><br><span class="line"></span><br><span class="line">    charset utf-8;</span><br><span class="line"></span><br><span class="line">    ssl on;</span><br><span class="line">    ssl_certificate      /etc/ssl/abc.hk/abc.crt;</span><br><span class="line">    ssl_certificate_key  /etc/ssl/abc.hk/abc.key;</span><br><span class="line">    ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">    ssl_ciphers ECDH:AESGCM:HIGH:!RC4:!DH:!MD5:!aNULL:!eNULL;</span><br><span class="line"></span><br><span class="line">    ## Individual nginx logs for this GitLab vhost</span><br><span class="line">    access_log  /Users/jenkins/works/logs/www_access.log;</span><br><span class="line">    error_log   /Users/jenkins/works/logs/www_error.log;</span><br><span class="line"></span><br><span class="line">    location ^~ /ci/appDownloads &#123;</span><br><span class="line">        alias /Users/jenkins/works/;</span><br><span class="line">        autoindex on;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ^~ /eclipse &#123;</span><br><span class="line">        alias /Users/jenkins/works/eclipseupdate/;</span><br><span class="line">        autoindex on;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        return 301 /ci;</span><br><span class="line">    &#125;    </span><br><span class="line"></span><br><span class="line">    #location / &#123;</span><br><span class="line">    #  #deny all;</span><br><span class="line">    #  proxy_pass http://127.0.0.1:8080;</span><br><span class="line">    #&#125;</span><br><span class="line"></span><br><span class="line">    location /ci &#123;</span><br><span class="line">        proxy_set_header        Host $host;</span><br><span class="line">        proxy_set_header        X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_set_header        X-Forwarded-Proto $scheme;</span><br><span class="line">        proxy_redirect          off;</span><br><span class="line">        proxy_pass http://127.0.0.1:8080;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="jenkins配置"><a href="#jenkins配置" class="headerlink" title="jenkins配置"></a>jenkins配置</h2><p>安装Build Name and Description Setter插件，并Set Build Name的Build Name为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#$&#123;BUILD_NUMBER&#125;_$&#123;PLATFORM&#125;_$&#123;BUILD_TYPE&#125;_$&#123;ENV&#125;_$&#123;GIT_BRANCH&#125;</span></span><br></pre></td></tr></table></figure>
<p>先安装Environment Injector Plugin插件，位置位于”Excute Shell”之后，配置Properties File Path为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/tmp/<span class="variable">$&#123;JOB_NAME&#125;</span>-<span class="variable">$&#123;ENV&#125;</span>-<span class="variable">$&#123;BUILD_NUMBER&#125;</span>.properties</span><br></pre></td></tr></table></figure>
<p>Build-&gt;Execute shell:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> [[ <span class="string">"<span class="variable">$GIT_BRANCH</span>"</span> == <span class="string">""</span> || <span class="string">"<span class="variable">$BUILD_TYPE</span>"</span> == <span class="string">""</span> || <span class="string">"<span class="variable">$PLATFORM</span>"</span> == <span class="string">""</span> || <span class="string">"<span class="variable">$ENV</span>"</span> == <span class="string">""</span> ]]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"Parameters must not be empty!"</span></span><br><span class="line">  <span class="built_in">exit</span> -1</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  bash <span class="variable">$&#123;JENKINS_HOME&#125;</span>/scripts/buildApp.sh</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<p>参考脚本:</p>
<p>自动上传到app store请参考：<a href="https://testerhome.com/topics/10507" target="_blank" rel="noopener">https://testerhome.com/topics/10507</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">######Only work for macos######</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /Users/jenkins/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="comment">#BUILD_TYPE=$1</span></span><br><span class="line"><span class="comment">#PLATFORM=$2</span></span><br><span class="line"><span class="comment">#WORKSPACE=$3</span></span><br><span class="line"><span class="comment">#ENV=$4</span></span><br><span class="line"><span class="comment">#GIT_BRANCH=$5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#The signer tool for signing a apk ile</span></span><br><span class="line">APKSIGNER=/Users/jenkins/Library/Android/sdk/build-tools/28.0.3/apksigner</span><br><span class="line">ZIPALIGN=/Users/jenkins/Library/Android/sdk/build-tools/28.0.3/zipalign</span><br><span class="line"></span><br><span class="line"><span class="comment">#ios altool path, only for uploading ipa to app store</span></span><br><span class="line"><span class="comment">#ALTOOLPATH=/Applications/Xcode.app/Contents/Applications/Application\ Loader.app/Contents/Frameworks/ITunesSoftwareService.framework/Versions/A/Support/altool</span></span><br><span class="line">ALTOOLPATH=/Applications/Xcode.app/Contents/SharedFrameworks/ContentDeliveryServices.framework/Versions/A/Frameworks/AppStoreService.framework/Versions/A/Support/altool</span><br><span class="line"></span><br><span class="line"><span class="comment">#Script home</span></span><br><span class="line">SCRIPTS_HOME=/Users/jenkins/.jenkins/scripts</span><br><span class="line"><span class="comment">#Base path for geneating files</span></span><br><span class="line">SAVE_BASE_PATH=/Users/jenkins/works</span><br><span class="line"></span><br><span class="line">JIAGU_JAVA=<span class="variable">$&#123;SCRIPTS_HOME&#125;</span>/merchantjiagu/java/bin/java</span><br><span class="line">JIAGU_JAR=<span class="variable">$&#123;SCRIPTS_HOME&#125;</span>/merchantjiagu/jiagu.jar</span><br><span class="line">BUNDLETOOL=<span class="variable">$&#123;SCRIPTS_HOME&#125;</span>/bundletool-all-1.15.6.jar</span><br><span class="line"><span class="comment">#The qrcode tool for generating a qrcode from url</span></span><br><span class="line">QRENCODE=/usr/<span class="built_in">local</span>/bin/qrencode</span><br><span class="line"></span><br><span class="line"><span class="comment">#A key for uploading apk to google play</span></span><br><span class="line">PROXY_HOST=scloud.aaa.com</span><br><span class="line">PROXY_PORT=1082</span><br><span class="line">APK_UPLOAD=<span class="variable">$&#123;SCRIPTS_HOME&#125;</span>/apk_upload/bin/apk_upload</span><br><span class="line">APKUP_KEY=<span class="variable">$&#123;SCRIPTS_HOME&#125;</span>/xpaymerchantapp-dfec2cb36528.json</span><br><span class="line">APKUP_APPID=111.222.merchant</span><br><span class="line"><span class="comment"># googleServicesJson=$&#123;SCRIPTS_HOME&#125;/google-services.json</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#The temporary variable between this script and email jelly file</span></span><br><span class="line">TMP_PROPERTIES_FILE=/tmp/<span class="variable">$&#123;JOB_NAME&#125;</span>-<span class="variable">$&#123;ENV&#125;</span>-<span class="variable">$&#123;BUILD_NUMBER&#125;</span>.properties</span><br><span class="line"><span class="comment">#App name</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"APPNAME = <span class="variable">$&#123;APP_NAME&#125;</span>"</span></span><br><span class="line">APP_NAME=merchantApp</span><br><span class="line">K8S_FILE_NAME=xpay-merchant-app</span><br><span class="line"></span><br><span class="line"><span class="comment">#The environment variables of git folder</span></span><br><span class="line">EVN_FOLDER=/tmp/xpay-merchant-app-config/k8s-<span class="variable">$&#123;ENV&#125;</span>-config</span><br><span class="line"><span class="comment">#The base release name of git</span></span><br><span class="line">RELEASE_NAME=<span class="variable">$&#123;GIT_BRANCH//origin\//&#125;</span></span><br><span class="line"><span class="comment">#RELEASE_NAME=$&#123;GIT_BRANCH//refs\/heads\//&#125;</span></span><br><span class="line"><span class="comment">#The app host url</span></span><br><span class="line">APP_HOST_URL=<span class="variable">$&#123;JENKINS_URL//ci\//&#125;</span></span><br><span class="line"><span class="comment">#The download base url</span></span><br><span class="line">APP_BASE_URL=<span class="variable">$&#123;JENKINS_URL&#125;</span>appDownloads</span><br><span class="line"><span class="comment">#the external base url, only for reinforcing apk</span></span><br><span class="line"><span class="comment">#EXTERNAL_BASE_URL=http://218.17.1.146:45682/ci/appDownloads</span></span><br><span class="line"><span class="comment">#The substring path</span></span><br><span class="line">SUB_PATH=<span class="variable">$&#123;JOB_NAME&#125;</span>/<span class="variable">$&#123;ENV&#125;</span>/<span class="variable">$&#123;RELEASE_NAME&#125;</span></span><br><span class="line"><span class="comment">#The final app url</span></span><br><span class="line">APP_URL=<span class="variable">$&#123;APP_BASE_URL&#125;</span>/<span class="variable">$&#123;SUB_PATH&#125;</span>/<span class="variable">$&#123;BUILD_NUMBER&#125;</span></span><br><span class="line"><span class="comment">#The history path</span></span><br><span class="line">HISTORY_URL=<span class="variable">$&#123;APP_BASE_URL&#125;</span>/<span class="variable">$&#123;JOB_NAME&#125;</span>/<span class="variable">$&#123;ENV&#125;</span></span><br><span class="line"><span class="comment">#The final external url, only for reinforcing apk</span></span><br><span class="line"><span class="comment">#EXTERNAL_URL=$&#123;EXTERNAL_BASE_URL&#125;/$&#123;SUB_PATH&#125;/$&#123;BUILD_NUMBER&#125;</span></span><br><span class="line"><span class="comment">#The path for geneated files, only for copying geneated files to antoher directory</span></span><br><span class="line">APP_SAVE_PATH=<span class="variable">$&#123;SAVE_BASE_PATH&#125;</span>/<span class="variable">$&#123;SUB_PATH&#125;</span>/<span class="variable">$&#123;BUILD_NUMBER&#125;</span></span><br><span class="line"><span class="comment">#Developement plist</span></span><br><span class="line">DEV_PLIST=<span class="variable">$&#123;SCRIPTS_HOME&#125;</span>/developement.plist</span><br><span class="line"><span class="comment">#Release plist</span></span><br><span class="line">RELEASE_PLIST=<span class="variable">$&#123;SCRIPTS_HOME&#125;</span>/ExportOptions.plist</span><br><span class="line"><span class="comment">#the plist file which for itms-services</span></span><br><span class="line">PLIST_TEMPLATE=<span class="variable">$&#123;SCRIPTS_HOME&#125;</span>/mechantApp.template</span><br><span class="line"><span class="comment">#App Released history list</span></span><br><span class="line"><span class="comment">#For Android: $&#123;SCRIPTS_HOME&#125;/apphistory.android</span></span><br><span class="line"><span class="comment">#For IOS: $&#123;SCRIPTS_HOME&#125;/apphistory.ios</span></span><br><span class="line">APP_HISTORY_LIST=<span class="variable">$&#123;SCRIPTS_HOME&#125;</span>/mechantApphistory</span><br><span class="line"><span class="comment">#verification for building</span></span><br><span class="line">signingConfigs=<span class="variable">$&#123;SCRIPTS_HOME&#125;</span>/xpaySigningConfigs.properties</span><br><span class="line">appId=$(cat <span class="variable">$&#123;signingConfigs&#125;</span> |grep appId|awk -F <span class="string">'='</span> <span class="string">'&#123;print $2&#125;'</span>)</span><br><span class="line">appPassword=$(cat <span class="variable">$&#123;signingConfigs&#125;</span> |grep appPassword|awk -F <span class="string">'='</span> <span class="string">'&#123;print $2&#125;'</span>)</span><br><span class="line"><span class="comment">#apphostToken=$(cat $&#123;signingConfigs&#125; |grep apphostToken|awk -F '=' '&#123;print $2&#125;')</span></span><br><span class="line"><span class="comment">#secretId=$(cat $&#123;signingConfigs&#125; |grep secretId|awk -F '=' '&#123;print $2&#125;')</span></span><br><span class="line"><span class="comment">#secretKey=$(cat $&#123;signingConfigs&#125; |grep secretKey|awk -F '=' '&#123;print $2&#125;')</span></span><br><span class="line">storePassword=$(cat <span class="variable">$&#123;signingConfigs&#125;</span> |grep storePassword|awk -F <span class="string">'='</span> <span class="string">'&#123;print $2&#125;'</span>)</span><br><span class="line">keyAlias=$(cat <span class="variable">$&#123;signingConfigs&#125;</span> |grep keyAlias|awk -F <span class="string">'='</span> <span class="string">'&#123;print $2&#125;'</span>)</span><br><span class="line">keyPassword=$(cat <span class="variable">$&#123;signingConfigs&#125;</span> |grep keyPassword|awk -F <span class="string">'='</span> <span class="string">'&#123;print $2&#125;'</span>)</span><br><span class="line">storeFile=$(cat <span class="variable">$&#123;signingConfigs&#125;</span> |grep storeFile|awk -F <span class="string">'='</span> <span class="string">'&#123;print $2&#125;'</span>)</span><br><span class="line">jiaguuser=$(cat <span class="variable">$&#123;signingConfigs&#125;</span> |grep jiaguuser|awk -F <span class="string">'='</span> <span class="string">'&#123;print $2&#125;'</span>)</span><br><span class="line">jiagupwd=$(cat <span class="variable">$&#123;signingConfigs&#125;</span> |grep jiagupwd|awk -F <span class="string">'='</span> <span class="string">'&#123;print $2&#125;'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#Make sure APP_SAVE_PATH existed</span></span><br><span class="line">mkdir -p <span class="variable">$APP_SAVE_PATH</span></span><br><span class="line"><span class="comment">#passing variable to email jelly file</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"appUrl=<span class="variable">$APP_URL</span>"</span> &gt;&gt; <span class="variable">$TMP_PROPERTIES_FILE</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"historyUrl=<span class="variable">$HISTORY_URL</span>"</span> &gt;&gt; <span class="variable">$TMP_PROPERTIES_FILE</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"appHostUrl=<span class="variable">$APP_HOST_URL</span>"</span> &gt;&gt; <span class="variable">$TMP_PROPERTIES_FILE</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Uploading app to APP_HOST which is a APP publish website</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">uploadApp</span></span>() &#123;</span><br><span class="line">  platformParam=<span class="variable">$1</span></span><br><span class="line">  filePath=<span class="variable">$2</span></span><br><span class="line">  appJenkinsUrl=<span class="variable">$3</span></span><br><span class="line">  iosIpaUrl=<span class="variable">$4</span></span><br><span class="line">  universalApkPath=<span class="variable">$5</span> </span><br><span class="line">  universalAppJenkinsUrl=<span class="variable">$6</span></span><br><span class="line">  <span class="comment">#echo "Uploading app for $platformParam..."</span></span><br><span class="line">  </span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"filePath=<span class="variable">$filePath</span>"</span>  </span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"appJenkinsUrl=<span class="variable">$appJenkinsUrl</span>"</span></span><br><span class="line">  <span class="comment">#abb to apk: only for android</span></span><br><span class="line">  <span class="keyword">if</span> [[ <span class="string">"<span class="variable">$iosIpaUrl</span>"</span> == <span class="string">""</span> &amp;&amp; <span class="string">"<span class="variable">$APK_TYPE</span>"</span> == <span class="string">"aab"</span> &amp;&amp; <span class="string">"<span class="variable">$AAB_TO_APK</span>"</span> == <span class="string">"Y"</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"universalApkPath=<span class="variable">$universalApkPath</span>"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;platformParam&#125;</span>_universalUrl=<span class="variable">$universalAppJenkinsUrl</span>"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;platformParam&#125;</span>_universalUrl=<span class="variable">$universalAppJenkinsUrl</span>"</span> &gt;&gt; <span class="variable">$TMP_PROPERTIES_FILE</span></span><br><span class="line">    <span class="variable">$&#123;QRENCODE&#125;</span> -o <span class="variable">$APP_SAVE_PATH</span>/<span class="variable">$&#123;platformParam&#125;</span>_qrcode.png -s 8 -m 1 <span class="string">"<span class="variable">$universalAppJenkinsUrl</span>"</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="variable">$&#123;QRENCODE&#125;</span> -o <span class="variable">$APP_SAVE_PATH</span>/<span class="variable">$&#123;platformParam&#125;</span>_qrcode.png -s 8 -m 1 <span class="string">"<span class="variable">$appJenkinsUrl</span>"</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  </span><br><span class="line">  qrcodeGetUrl=<span class="string">"<span class="variable">$&#123;APP_URL&#125;</span>/<span class="variable">$&#123;platformParam&#125;</span>_qrcode.png"</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;platformParam&#125;</span>_downloadUrl=<span class="variable">$qrcodeGetUrl</span>"</span> &gt;&gt; <span class="variable">$TMP_PROPERTIES_FILE</span></span><br><span class="line">  <span class="comment">#echo "$appJenkinsUrl" | grep "itms-services" &gt; /dev/null</span></span><br><span class="line">  <span class="keyword">if</span> [[ <span class="string">"<span class="variable">$iosIpaUrl</span>"</span> != <span class="string">""</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="comment">#ios</span></span><br><span class="line">    directUrl=<span class="variable">$iosIpaUrl</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="comment">#android</span></span><br><span class="line">    directUrl=<span class="variable">$appJenkinsUrl</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"directUrl=<span class="variable">$directUrl</span>"</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;platformParam&#125;</span>_directUrl=<span class="variable">$directUrl</span>"</span> &gt;&gt; <span class="variable">$TMP_PROPERTIES_FILE</span></span><br><span class="line">  <span class="built_in">return</span> 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#Building android app</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">buildAndroid</span></span>() &#123;</span><br><span class="line">  <span class="comment">#for android</span></span><br><span class="line">  <span class="comment">#Checking if the version existed</span></span><br><span class="line">  <span class="comment">#android/gradle.properties</span></span><br><span class="line">  <span class="comment">#appVersionCode=300</span></span><br><span class="line">  <span class="comment">#appVersionName=5.0</span></span><br><span class="line">  android_history_list=<span class="string">"<span class="variable">$&#123;APP_HISTORY_LIST&#125;</span>.android"</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"android_history_list=<span class="variable">$android_history_list</span>"</span></span><br><span class="line">  <span class="keyword">if</span> [[ -f <span class="string">"<span class="variable">$&#123;android_history_list&#125;</span>"</span> &amp;&amp; <span class="string">"<span class="variable">$UPLOAD_GOOGLEPLAY</span>"</span> == <span class="string">"Y"</span>  ]]; <span class="keyword">then</span></span><br><span class="line">    currAppVersionCode=$(cat android/gradle.properties|grep <span class="string">"appVersionCode"</span>|awk -F <span class="string">'='</span> <span class="string">'&#123;print $2&#125;'</span>)</span><br><span class="line">    currAppVersionName=$(cat android/gradle.properties|grep <span class="string">"appVersionName"</span>|awk -F <span class="string">'='</span> <span class="string">'&#123;print $2&#125;'</span>)</span><br><span class="line">    historyAppVersionCode=$(cat <span class="variable">$&#123;android_history_list&#125;</span>|grep <span class="string">"appVersionCode"</span>|awk -F <span class="string">'='</span> <span class="string">'&#123;print $2&#125;'</span>)</span><br><span class="line">    historyAppVersionName=$(cat <span class="variable">$&#123;android_history_list&#125;</span>|grep <span class="string">"appVersionName"</span>|awk -F <span class="string">'='</span> <span class="string">'&#123;print $2&#125;'</span>)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"currAppVersionCode=<span class="variable">$currAppVersionCode</span>"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"currAppVersionName=<span class="variable">$currAppVersionName</span>"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"historyAppVersionCode=<span class="variable">$historyAppVersionCode</span>"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"historyAppVersionName=<span class="variable">$historyAppVersionName</span>"</span></span><br><span class="line">    <span class="comment">#if [ `echo "$currAppVersionCode &lt;= $historyAppVersionCode" | bc` -eq 1 -a `echo "$currAppVersionName &lt;= $historyAppVersionName" | bc` -eq 1 ]; then</span></span><br><span class="line">    <span class="keyword">if</span> [[ `<span class="built_in">echo</span> <span class="string">"<span class="variable">$currAppVersionCode</span> &lt;= <span class="variable">$historyAppVersionCode</span>"</span> | bc` == 1 || `<span class="built_in">echo</span> <span class="string">"<span class="variable">$currAppVersionName</span> &lt;= <span class="variable">$historyAppVersionName</span>"</span> | bc` == 1 ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Android: The current version you build is less than or equal to the version of histroy, please increase the number of version."</span></span><br><span class="line">        <span class="built_in">exit</span> -1</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  </span><br><span class="line">  BUILD_PLATFORM=<span class="string">"android"</span></span><br><span class="line">  rm -fr <span class="variable">$APP_SAVE_PATH</span>/Android.bundle.zip <span class="variable">$APP_SAVE_PATH</span>/*.aab <span class="variable">$APP_SAVE_PATH</span>/android_qrcode.png</span><br><span class="line">  <span class="built_in">cd</span> <span class="variable">$&#123;WORKSPACE&#125;</span></span><br><span class="line">  <span class="comment"># sed -i "" "s;^ *export const ENV *= *'.*';export const ENV = '$&#123;ENV&#125;';g" $&#123;WORKSPACE&#125;/component/Common/Environment.js</span></span><br><span class="line">  <span class="comment"># if [[ "$ENV" == "prod" ]]; then</span></span><br><span class="line">  <span class="comment">#   /bin/cp -a $googleServicesJson android/app/</span></span><br><span class="line">  <span class="comment"># fi</span></span><br><span class="line">  </span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"Building android: nvm use 16.15.1 npm install --legacy-peer-deps"</span></span><br><span class="line">  nvm use 16.15.1</span><br><span class="line">  npm install --legacy-peer-deps &gt; /dev/null</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"Building android: npm run build-android"</span></span><br><span class="line">  npm run build-android &gt; /dev/null</span><br><span class="line">  buildResult=$?</span><br><span class="line">  <span class="built_in">cd</span> android  </span><br><span class="line">  <span class="keyword">if</span> [[ <span class="string">"<span class="variable">$ONLY_HOTUPDATE</span>"</span> == <span class="string">"N"</span> ]]; <span class="keyword">then</span></span><br><span class="line">      buildLog=<span class="variable">$APP_SAVE_PATH</span>/build-android.log  </span><br><span class="line">    <span class="keyword">if</span> [[ <span class="string">"<span class="variable">$APK_TYPE</span>"</span> == <span class="string">"apk"</span> ]]; <span class="keyword">then</span></span><br><span class="line">      <span class="built_in">echo</span> <span class="string">"Building android: ./gradlew clean assemble<span class="variable">$BUILD_TYPE</span>"</span></span><br><span class="line">      output=app/build/outputs/apk/release/</span><br><span class="line">      rm -fr <span class="variable">$output</span>/*.apk</span><br><span class="line">      <span class="built_in">echo</span> <span class="string">"./gradlew clean assemble<span class="variable">$BUILD_TYPE</span> --stacktrace -PIS_JENKINS=true -PBUILD_TYPE=<span class="variable">$&#123;BUILD_TYPE&#125;</span> &gt; /dev/null 2&gt; <span class="variable">$buildLog</span>"</span></span><br><span class="line">      ./gradlew clean assemble<span class="variable">$BUILD_TYPE</span> --stacktrace -PIS_JENKINS=<span class="literal">true</span> -PBUILD_TYPE=<span class="variable">$&#123;BUILD_TYPE&#125;</span> &gt; /dev/null 2&gt; <span class="variable">$buildLog</span>    </span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="comment">##aab</span></span><br><span class="line">      <span class="built_in">echo</span> <span class="string">"Building android: ./gradlew clean bundle"</span></span><br><span class="line">      output=app/build/outputs/bundle/release/</span><br><span class="line">      rm -fr <span class="variable">$output</span>/*.aab</span><br><span class="line">      <span class="built_in">echo</span> <span class="string">"./gradlew clean bundle --stacktrace -PIS_JENKINS=true -PBUILD_TYPE=<span class="variable">$&#123;BUILD_TYPE&#125;</span> &gt; /dev/null 2&gt; <span class="variable">$buildLog</span>"</span></span><br><span class="line">      ./gradlew clean bundle --stacktrace -PIS_JENKINS=<span class="literal">true</span> -PBUILD_TYPE=<span class="variable">$&#123;BUILD_TYPE&#125;</span> &gt; /dev/null 2&gt; <span class="variable">$buildLog</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    buildResult=$?    </span><br><span class="line">    </span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> [[ <span class="variable">$buildResult</span> == 0 ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="comment"># hot update package</span></span><br><span class="line">    currPwd=`<span class="built_in">pwd</span>`</span><br><span class="line">    <span class="built_in">cd</span> <span class="variable">$&#123;WORKSPACE&#125;</span>/android/app/src/main/assets</span><br><span class="line">    zip -rq <span class="variable">$&#123;APP_SAVE_PATH&#125;</span>/Android.bundle.zip *</span><br><span class="line">    <span class="built_in">cd</span> <span class="variable">$currPwd</span></span><br><span class="line">    apkFile=`ls <span class="variable">$output</span>|grep <span class="variable">$&#123;APK_TYPE&#125;</span>`</span><br><span class="line">    <span class="comment"># APK only exist when non-hotfix</span></span><br><span class="line">    <span class="keyword">if</span> [[ $? == 0 &amp;&amp; -f <span class="variable">$output</span>/<span class="variable">$apkFile</span> ]]; <span class="keyword">then</span></span><br><span class="line">     filePath=<span class="variable">$output</span>/<span class="variable">$apkFile</span></span><br><span class="line">     universalApkFile=universal.apk</span><br><span class="line">     singedApkFile=<span class="variable">$&#123;APP_NAME&#125;</span>-<span class="variable">$&#123;RELEASE_NAME&#125;</span>.<span class="variable">$&#123;APK_TYPE&#125;</span></span><br><span class="line">     <span class="comment">#singedApkPath=$APP_SAVE_PATH/$&#123;apkFile&#125;</span></span><br><span class="line">     singedApkPath=<span class="variable">$APP_SAVE_PATH</span>/<span class="variable">$&#123;singedApkFile&#125;</span></span><br><span class="line">     appJenkinsUrl=<span class="string">"<span class="variable">$&#123;APP_URL&#125;</span>/<span class="variable">$singedApkFile</span>"</span> </span><br><span class="line">     universalApkPath=<span class="variable">$APP_SAVE_PATH</span>/<span class="variable">$&#123;universalApkFile&#125;</span></span><br><span class="line">     universalAppJenkinsUrl=<span class="string">"<span class="variable">$&#123;APP_URL&#125;</span>/<span class="variable">$universalApkFile</span>"</span> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      <span class="comment">#abb to apk</span></span><br><span class="line">      <span class="keyword">if</span> [[ <span class="string">"<span class="variable">$APK_TYPE</span>"</span> == <span class="string">"aab"</span> &amp;&amp; <span class="string">"<span class="variable">$AAB_TO_APK</span>"</span> == <span class="string">"Y"</span> ]]; <span class="keyword">then</span></span><br><span class="line">        apksName=<span class="variable">$&#123;APP_NAME&#125;</span>-<span class="variable">$&#123;RELEASE_NAME&#125;</span>.apks</span><br><span class="line">        java -jar <span class="variable">$BUNDLETOOL</span> build-apks \</span><br><span class="line">        --mode=universal \</span><br><span class="line">        --bundle=<span class="variable">$filePath</span> \</span><br><span class="line">        --output=<span class="variable">$APP_SAVE_PATH</span>/<span class="variable">$apksName</span> \</span><br><span class="line">        --ks=<span class="variable">$storeFile</span> \</span><br><span class="line">        --ks-pass=pass:<span class="variable">$storePassword</span> \</span><br><span class="line">        --ks-key-alias=<span class="variable">$keyAlias</span> \</span><br><span class="line">        --key-pass=pass:<span class="variable">$keyPassword</span></span><br><span class="line"></span><br><span class="line">        java -jar <span class="variable">$BUNDLETOOL</span> extract-apks \</span><br><span class="line">        --device-spec=/Users/jenkins/.jenkins/scripts/device-spec.json \</span><br><span class="line">        --apks=<span class="variable">$APP_SAVE_PATH</span>/<span class="variable">$apksName</span> \</span><br><span class="line">        --output-dir=<span class="variable">$APP_SAVE_PATH</span>/</span><br><span class="line">      <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> [[ <span class="string">"<span class="variable">$SKIP_REINFORCE</span>"</span> == <span class="string">"N"</span> ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Reinforcing the <span class="variable">$&#123;APK_TYPE&#125;</span>..."</span></span><br><span class="line">        proxy_off</span><br><span class="line">        <span class="comment">#login</span></span><br><span class="line">        <span class="variable">$&#123;JIAGU_JAVA&#125;</span> -jar <span class="variable">$&#123;JIAGU_JAR&#125;</span> -login <span class="variable">$&#123;jiaguuser&#125;</span> <span class="variable">$&#123;jiagupwd&#125;</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;JIAGU_JAVA&#125;</span> -jar <span class="variable">$&#123;JIAGU_JAR&#125;</span> -jiagu <span class="variable">$&#123;APK_TYPE&#125;</span> <span class="variable">$&#123;filePath&#125;</span> <span class="variable">$&#123;APP_SAVE_PATH&#125;</span>/ -auto-sign"</span></span><br><span class="line">        <span class="variable">$&#123;JIAGU_JAVA&#125;</span> -jar <span class="variable">$&#123;JIAGU_JAR&#125;</span> -jiagu <span class="variable">$&#123;APK_TYPE&#125;</span> <span class="variable">$&#123;filePath&#125;</span> <span class="variable">$&#123;APP_SAVE_PATH&#125;</span>/ -auto-sign</span><br><span class="line">        proxy_on</span><br><span class="line">        <span class="keyword">if</span> [[ $? == 0 ]]; <span class="keyword">then</span></span><br><span class="line">          <span class="built_in">echo</span> <span class="string">"Reinforcing the <span class="variable">$&#123;APK_TYPE&#125;</span> successfully..."</span></span><br><span class="line">          jiaguApk=`ls <span class="variable">$&#123;APP_SAVE_PATH&#125;</span> | grep jiagu_sign` &gt; /dev/null</span><br><span class="line">          <span class="keyword">if</span> [[ <span class="string">"<span class="variable">$jiaguApk</span>"</span> != <span class="string">""</span> ]]; <span class="keyword">then</span></span><br><span class="line">            mv <span class="variable">$&#123;APP_SAVE_PATH&#125;</span>/<span class="variable">$&#123;jiaguApk&#125;</span> <span class="variable">$singedApkPath</span></span><br><span class="line">          <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"Not found the reinfored <span class="variable">$&#123;APK_TYPE&#125;</span>."</span></span><br><span class="line">            <span class="built_in">exit</span> -1</span><br><span class="line">          <span class="keyword">fi</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          <span class="built_in">echo</span> <span class="string">"Reinforcing the apk failed..."</span></span><br><span class="line">          <span class="built_in">exit</span> -1</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        cp -a <span class="variable">$filePath</span> <span class="variable">$singedApkPath</span></span><br><span class="line">      <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> [[ <span class="string">"<span class="variable">$UPLOAD_GOOGLEPLAY</span>"</span> == <span class="string">"Y"</span> ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Uploading file to google play, it may make a few minutes, please wait..."</span></span><br><span class="line">        <span class="comment">#https://github.com/eventOneHQ/apkup/blob/master/src/cli/upload.ts</span></span><br><span class="line">        <span class="comment">#Track can be 'internal', 'alpha', 'beta', 'production' or 'rollout'. Default: 'internal'</span></span><br><span class="line">        <span class="comment"># nvm use v10.16.0</span></span><br><span class="line">        <span class="comment"># #npm i -g apkup</span></span><br><span class="line">        <span class="comment"># apkup --key "$&#123;APKUP_KEY&#125;" --apk "$&#123;singedApkPath&#125;" \</span></span><br><span class="line">        <span class="comment"># --release-notes "en-US=Bug fixes and minor enhancements" \</span></span><br><span class="line">        <span class="comment"># --release-notes "zh-HK=錯誤修正及少量更新" \</span></span><br><span class="line">        <span class="comment"># --track "$&#123;TRACK&#125;"</span></span><br><span class="line">        <span class="comment"># nvm use v16.15.1</span></span><br><span class="line">        <span class="comment">#https://github.com/stasheq/google-play-apk-upload</span></span><br><span class="line">        bash <span class="variable">$&#123;APK_UPLOAD&#125;</span> <span class="variable">$&#123;APKUP_APPID&#125;</span> <span class="string">"<span class="variable">$&#123;singedApkPath&#125;</span>"</span> <span class="variable">$&#123;APKUP_KEY&#125;</span> <span class="variable">$&#123;PROXY_HOST&#125;</span> <span class="variable">$&#123;PROXY_PORT&#125;</span></span><br><span class="line">        <span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">          <span class="built_in">echo</span> <span class="string">"Uploading apk to google play failed!"</span></span><br><span class="line">          <span class="built_in">exit</span> -1</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Uploading apk to google play successfully!"</span></span><br><span class="line">        <span class="comment">#Recorded the last version in the history when app was uploaded to google play successfully.</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"appVersionName=<span class="variable">$&#123;currAppVersionName&#125;</span>"</span> &gt; <span class="variable">$&#123;android_history_list&#125;</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"appVersionCode=<span class="variable">$&#123;currAppVersionCode&#125;</span>"</span> &gt;&gt; <span class="variable">$&#123;android_history_list&#125;</span></span><br><span class="line">      <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">      uploadApp <span class="variable">$BUILD_PLATFORM</span> <span class="variable">$singedApkPath</span> <span class="variable">$appJenkinsUrl</span> <span class="string">""</span> <span class="variable">$universalApkPath</span> <span class="variable">$universalAppJenkinsUrl</span></span><br><span class="line">      <span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">	      <span class="built_in">echo</span> <span class="string">"Building android is successful, but upload failed, maybe caused by establishing network, it exited, please try again."</span></span><br><span class="line">        <span class="built_in">exit</span> -1</span><br><span class="line">      <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    cat <span class="variable">$buildLog</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Building android is failed. it exited."</span></span><br><span class="line">    <span class="built_in">exit</span> -1</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#Building ios app</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">buildIos</span></span>() &#123;</span><br><span class="line">  <span class="comment"># for ios</span></span><br><span class="line">  <span class="comment">#Checking if the version existed</span></span><br><span class="line">  <span class="comment">#/* Debug */</span></span><br><span class="line">  <span class="comment">#/* Release */</span></span><br><span class="line">  <span class="comment">#CURRENT_PROJECT_VERSION = 1;</span></span><br><span class="line">  <span class="comment">#MARKETING_VERSION = 4.9;</span></span><br><span class="line">  ios_history_list=<span class="string">"<span class="variable">$&#123;APP_HISTORY_LIST&#125;</span>.ios"</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"ios_history_list=<span class="variable">$ios_history_list</span>"</span></span><br><span class="line">  <span class="keyword">if</span> [[ -f <span class="string">"<span class="variable">$&#123;ios_history_list&#125;</span>"</span> &amp;&amp; <span class="string">"<span class="variable">$UPLOAD_APPSTORE</span>"</span> == <span class="string">"Y"</span> ]]; <span class="keyword">then</span></span><br><span class="line">    currMarketingVersion=`cat ios/<span class="variable">$&#123;APP_NAME&#125;</span>.xcodeproj/project.pbxproj|grep <span class="string">"MARKETING_VERSION"</span>|sed -n <span class="string">'2p'</span>|sed <span class="string">'s;\;$;;'</span>|awk -F <span class="string">' = '</span> <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line">    <span class="comment">#historyProjectVersion=`cat $&#123;ios_history_list&#125;|grep "CURRENT_PROJECT_VERSION"|awk -F ' = ' '&#123;print $2&#125;'`</span></span><br><span class="line">    historyMarketingVersion=`cat <span class="variable">$&#123;ios_history_list&#125;</span>|grep <span class="string">"MARKETING_VERSION"</span>|awk -F <span class="string">' = '</span> <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line">    <span class="comment">#echo "currProjectVersion=$currProjectVersion"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"currMarketingVersion=<span class="variable">$currMarketingVersion</span>"</span></span><br><span class="line">    <span class="comment">#echo "historyProjectVersion=$historyProjectVersion"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"historyMarketingVersion=<span class="variable">$historyMarketingVersion</span>"</span></span><br><span class="line">    <span class="keyword">if</span> [[ `<span class="built_in">echo</span> <span class="string">"<span class="variable">$currMarketingVersion</span> &lt;= <span class="variable">$historyMarketingVersion</span>"</span> | bc` == 1 ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"IOS: The current version you build is less than or equal to the version of histroy, please increase the number of version."</span></span><br><span class="line">        <span class="built_in">exit</span> -1</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">  BUILD_PLATFORM=<span class="string">"ios"</span></span><br><span class="line">  rm -fr <span class="variable">$APP_SAVE_PATH</span>/IOS.bundle.zip <span class="variable">$APP_SAVE_PATH</span>/*.ipa <span class="variable">$APP_SAVE_PATH</span>/*.plist <span class="variable">$APP_SAVE_PATH</span>/ios_qrcode.png</span><br><span class="line">  <span class="built_in">cd</span> <span class="variable">$&#123;WORKSPACE&#125;</span></span><br><span class="line">  <span class="comment">#sed -i "" "s;^ *export const ENV *= *'.*';export const ENV = '$&#123;ENV&#125;';g" $&#123;WORKSPACE&#125;/component/Common/Environment.js</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"Building ios: nvm use 16.15.1 npm install --legacy-peer-deps"</span></span><br><span class="line">  nvm use 16.15.1</span><br><span class="line">  npm install --legacy-peer-deps &gt; /dev/null</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"Building ios: npm run build-ios"</span></span><br><span class="line">  npm run build-ios &gt; /dev/null</span><br><span class="line">  <span class="built_in">cd</span> ios</span><br><span class="line"></span><br><span class="line">  output=build/outputs/</span><br><span class="line">  rm -fr <span class="variable">$output</span>/*.ipa</span><br><span class="line">  xcarchiveBackUpFolder=<span class="variable">$output</span>/xcarchive-`date +%Y%m%d%H%M%S`</span><br><span class="line">  mkdir <span class="variable">$xcarchiveBackUpFolder</span></span><br><span class="line">  mv <span class="variable">$output</span>/*.xcarchive <span class="variable">$xcarchiveBackUpFolder</span>/</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> [[ <span class="string">"<span class="variable">$ONLY_HOTUPDATE</span>"</span> == <span class="string">"N"</span> ]]; <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">    proxy_on</span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Building ios: pod install"</span></span><br><span class="line">    /usr/<span class="built_in">local</span>/bin/pod install</span><br><span class="line"></span><br><span class="line">    proxy_off</span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Building ios: xcodebuild clean"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"xcodebuild \</span></span><br><span class="line"><span class="string">      -workspace \"<span class="variable">$&#123;APP_NAME&#125;</span>.xcworkspace\" \</span></span><br><span class="line"><span class="string">      -scheme \"<span class="variable">$&#123;APP_NAME&#125;</span>\"  \</span></span><br><span class="line"><span class="string">      -configuration \"<span class="variable">$&#123;BUILD_TYPE&#125;</span>\" \</span></span><br><span class="line"><span class="string">      clean &gt; /dev/null"</span></span><br><span class="line">    xcodebuild \</span><br><span class="line">      -workspace <span class="string">"<span class="variable">$&#123;APP_NAME&#125;</span>.xcworkspace"</span> \</span><br><span class="line">      -scheme <span class="string">"<span class="variable">$&#123;APP_NAME&#125;</span>"</span>  \</span><br><span class="line">      -configuration <span class="string">"<span class="variable">$&#123;BUILD_TYPE&#125;</span>"</span> \</span><br><span class="line">      clean &gt; /dev/null</span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Building ios: xcodebuild archive"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"xcodebuild archive -workspace \"<span class="variable">$&#123;APP_NAME&#125;</span>.xcworkspace\" \</span></span><br><span class="line"><span class="string">      -scheme <span class="variable">$&#123;APP_NAME&#125;</span> \</span></span><br><span class="line"><span class="string">      -configuration \"<span class="variable">$&#123;BUILD_TYPE&#125;</span>\" \</span></span><br><span class="line"><span class="string">      -archivePath \"<span class="variable">$&#123;output&#125;</span>/<span class="variable">$&#123;APP_NAME&#125;</span>-<span class="variable">$&#123;BUILD_TYPE&#125;</span>.xcarchive\" &gt; /dev/null"</span></span><br><span class="line">    security unlock-keychain -p <span class="string">'xxxxxx'</span></span><br><span class="line">    xcodebuild archive -workspace <span class="string">"<span class="variable">$&#123;APP_NAME&#125;</span>.xcworkspace"</span> \</span><br><span class="line">      -scheme <span class="variable">$&#123;APP_NAME&#125;</span> \</span><br><span class="line">      -configuration <span class="string">"<span class="variable">$&#123;BUILD_TYPE&#125;</span>"</span> \</span><br><span class="line">      -archivePath <span class="string">"<span class="variable">$&#123;output&#125;</span>/<span class="variable">$&#123;APP_NAME&#125;</span>-<span class="variable">$&#123;BUILD_TYPE&#125;</span>.xcarchive"</span> &gt; /dev/null</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">          <span class="built_in">echo</span> <span class="string">"Archive failed!"</span></span><br><span class="line">          <span class="built_in">exit</span> -1</span><br><span class="line">      <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Building ios: xcodebuild export archive to ipa"</span></span><br><span class="line">    <span class="keyword">if</span> [[ <span class="string">"<span class="variable">$ENV</span>"</span> == <span class="string">"prod"</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"xcodebuild -exportArchive -archivePath \"<span class="variable">$&#123;output&#125;</span>/<span class="variable">$&#123;APP_NAME&#125;</span>-<span class="variable">$&#123;BUILD_TYPE&#125;</span>.xcarchive\" \</span></span><br><span class="line"><span class="string">        -exportPath \"<span class="variable">$&#123;output&#125;</span>/<span class="variable">$&#123;APP_NAME&#125;</span>-<span class="variable">$&#123;BUILD_TYPE&#125;</span>.ipa\" \</span></span><br><span class="line"><span class="string">        -exportOptionsPlist <span class="variable">$RELEASE_PLIST</span>  &gt; /dev/null"</span></span><br><span class="line">      xcodebuild -exportArchive -archivePath <span class="string">"<span class="variable">$&#123;output&#125;</span>/<span class="variable">$&#123;APP_NAME&#125;</span>-<span class="variable">$&#123;BUILD_TYPE&#125;</span>.xcarchive"</span> \</span><br><span class="line">        -exportPath <span class="string">"<span class="variable">$&#123;output&#125;</span>/<span class="variable">$&#123;APP_NAME&#125;</span>-<span class="variable">$&#123;BUILD_TYPE&#125;</span>.ipa"</span> \</span><br><span class="line">        -exportOptionsPlist <span class="variable">$RELEASE_PLIST</span> \</span><br><span class="line">        -allowProvisioningUpdates YES  &gt; /dev/null</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">          <span class="built_in">echo</span> <span class="string">"Exporting archive to ipa failed!"</span></span><br><span class="line">          <span class="built_in">exit</span> -1</span><br><span class="line">      <span class="keyword">fi</span></span><br><span class="line">    </span><br><span class="line">      <span class="keyword">if</span> [[ <span class="string">"<span class="variable">$UPLOAD_APPSTORE</span>"</span> == <span class="string">"Y"</span> ]]; <span class="keyword">then</span></span><br><span class="line">        IPAPATH=<span class="variable">$&#123;output&#125;</span>/<span class="variable">$&#123;APP_NAME&#125;</span>-<span class="variable">$&#123;BUILD_TYPE&#125;</span>.ipa/<span class="variable">$&#123;APP_NAME&#125;</span>.ipa</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Uploading file to app store, it may make a few minutes, please wait..."</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"\"<span class="variable">$&#123;ALTOOLPATH&#125;</span>\" --upload-app -f \"<span class="variable">$&#123;IPAPATH&#125;</span>\" -u \"<span class="variable">$&#123;appId&#125;</span>\" -p \"******\" --output-format xml"</span></span><br><span class="line">        uploadResult=`<span class="string">"<span class="variable">$&#123;ALTOOLPATH&#125;</span>"</span> --upload-app -f <span class="string">"<span class="variable">$&#123;IPAPATH&#125;</span>"</span> -u <span class="string">"<span class="variable">$&#123;appId&#125;</span>"</span> -p <span class="string">"<span class="variable">$&#123;appPassword&#125;</span>"</span> -t ios --output-format xml`</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"uploadResult=<span class="variable">$uploadResult</span>"</span></span><br><span class="line">        <span class="comment">#"$&#123;ALTOOLPATH&#125;" --upload-app -f "$&#123;IPAPATH&#125;" -u "$&#123;appId&#125;" -p "$&#123;appPassword&#125;" --output-format xml | grep "No errors uploading"</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"<span class="variable">$uploadResult</span>"</span> | grep <span class="string">"No errors uploading"</span> &gt; /dev/null</span><br><span class="line">        <span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">          <span class="built_in">echo</span> <span class="string">"Building ios successfully, but uploading to app store failed!"</span></span><br><span class="line">          <span class="built_in">exit</span> -1</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          <span class="built_in">echo</span> <span class="string">"Uploading file to app store successfully!"</span></span><br><span class="line">          <span class="comment">#Recorded the last version in the history when app was uploaded to google play successfully.</span></span><br><span class="line">          <span class="comment">#echo "CURRENT_PROJECT_VERSION = $&#123;currAppVersionName&#125;" &gt; $&#123;ios_history_list&#125;</span></span><br><span class="line">          <span class="built_in">echo</span> <span class="string">"MARKETING_VERSION = <span class="variable">$&#123;currMarketingVersion&#125;</span>"</span> &gt; <span class="variable">$&#123;ios_history_list&#125;</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">      <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      xcodebuild -exportArchive -archivePath <span class="string">"<span class="variable">$&#123;output&#125;</span>/<span class="variable">$&#123;APP_NAME&#125;</span>-<span class="variable">$&#123;BUILD_TYPE&#125;</span>.xcarchive"</span> \</span><br><span class="line">        -exportPath <span class="string">"<span class="variable">$&#123;output&#125;</span>/<span class="variable">$&#123;APP_NAME&#125;</span>-<span class="variable">$&#123;BUILD_TYPE&#125;</span>.ipa"</span> \</span><br><span class="line">        -exportOptionsPlist <span class="variable">$DEV_PLIST</span> \</span><br><span class="line">        -allowProvisioningUpdates YES  &gt; /dev/null</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  <span class="keyword">if</span> [[ $? == 0 ]]; <span class="keyword">then</span></span><br><span class="line">    currPwd=`<span class="built_in">pwd</span>`</span><br><span class="line">    <span class="built_in">cd</span> <span class="variable">$&#123;WORKSPACE&#125;</span>/ios/bundle</span><br><span class="line">    zip -rq <span class="variable">$&#123;APP_SAVE_PATH&#125;</span>/IOS.bundle.zip *</span><br><span class="line">    <span class="built_in">cd</span> <span class="variable">$currPwd</span></span><br><span class="line">    ipaFile=`ls <span class="variable">$output</span>|grep ipa`</span><br><span class="line">    <span class="comment"># IPA only exist when non-hotfix</span></span><br><span class="line">    <span class="keyword">if</span> [[ $? == 0 &amp;&amp; -d <span class="variable">$output</span>/<span class="variable">$ipaFile</span> ]]; <span class="keyword">then</span></span><br><span class="line">      filePath=<span class="variable">$output</span>/<span class="variable">$ipaFile</span>/<span class="variable">$&#123;APP_NAME&#125;</span>.ipa</span><br><span class="line">      ipaFile=<span class="variable">$&#123;APP_NAME&#125;</span>-<span class="variable">$&#123;RELEASE_NAME&#125;</span>.ipa</span><br><span class="line">      cp -a <span class="variable">$filePath</span> <span class="variable">$APP_SAVE_PATH</span>/<span class="variable">$&#123;ipaFile&#125;</span></span><br><span class="line">      iosIpaUrl=<span class="variable">$&#123;APP_URL&#125;</span>/<span class="variable">$&#123;ipaFile&#125;</span></span><br><span class="line">      pngUrl=<span class="variable">$&#123;APP_BASE_URL&#125;</span>/xpay-merchant-app.png</span><br><span class="line">      md5Size=`ls -l <span class="variable">$filePath</span> | awk <span class="string">'&#123;print $5&#125;'</span>`</span><br><span class="line">      cat <span class="variable">$PLIST_TEMPLATE</span> | sed <span class="string">"s;#&#123;downloadFile&#125;;<span class="variable">$&#123;iosIpaUrl&#125;</span>;g"</span> | sed <span class="string">"s;#&#123;md5Size&#125;;<span class="variable">$&#123;md5Size&#125;</span>;g"</span>| sed <span class="string">"s;#&#123;pngFile&#125;;<span class="variable">$&#123;pngUrl&#125;</span>;g"</span> | sed <span class="string">"s;#&#123;releaseName&#125;;<span class="variable">$RELEASE_NAME</span>;g"</span> &gt; <span class="variable">$APP_SAVE_PATH</span>/<span class="variable">$&#123;APP_NAME&#125;</span>.plist</span><br><span class="line">      appJenkinsUrl=<span class="string">"itms-services://?action=download-manifest&amp;url=<span class="variable">$&#123;APP_URL&#125;</span>/<span class="variable">$&#123;APP_NAME&#125;</span>.plist"</span></span><br><span class="line">      uploadApp <span class="variable">$BUILD_PLATFORM</span> <span class="variable">$filePath</span> <span class="variable">$appJenkinsUrl</span> <span class="variable">$iosIpaUrl</span></span><br><span class="line">      <span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Building ios is successful, but upload failed, maybe caused by establishing network, it exited, please try again."</span></span><br><span class="line">	      <span class="built_in">exit</span> -1</span><br><span class="line">      <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Building ios is failed, it exited."</span></span><br><span class="line">    <span class="built_in">exit</span> -1</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">proxy_off</span></span>() &#123;</span><br><span class="line">    <span class="built_in">unset</span> http_proxy</span><br><span class="line">    <span class="built_in">unset</span> https_proxy</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">"The proxy has been closed!"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">proxy_on</span></span>() &#123;</span><br><span class="line">    <span class="built_in">export</span> no_proxy=<span class="string">"127.0.0.1,localhost,*.abc.net,192.168.100.88,10.0.0.0/8,192.168.0.0/16,172.16.0.0/12"</span></span><br><span class="line">    <span class="built_in">export</span> http_proxy=<span class="string">"http://<span class="variable">$&#123;PROXY_HOST&#125;</span>:<span class="variable">$&#123;PROXY_PORT&#125;</span>"</span></span><br><span class="line">    <span class="built_in">export</span> https_proxy=<span class="variable">$http_proxy</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">"The proxy has been opened!"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#Enabled proxy</span></span><br><span class="line"><span class="comment"># proxy_on</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Init the project</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$&#123;WORKSPACE&#125;</span>/init</span><br><span class="line">./update.sh</span><br><span class="line"></span><br><span class="line"><span class="comment">#SSL Pinning</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$&#123;WORKSPACE&#125;</span></span><br><span class="line"><span class="keyword">if</span> [[ -f pinset.json ]]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"npx pinset gen -f"</span></span><br><span class="line">  npx pinset gen -f</span><br><span class="line">  <span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"npx pinset gen failure!"</span></span><br><span class="line">    <span class="built_in">exit</span> -1</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Replacing Environment variables</span></span><br><span class="line"><span class="keyword">if</span> [[ -d <span class="variable">$&#123;EVN_FOLDER&#125;</span> ]]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"Destination path '<span class="variable">$&#123;EVN_FOLDER&#125;</span>' already exists, delete first..."</span></span><br><span class="line">  rm -fr <span class="variable">$&#123;EVN_FOLDER&#125;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">git <span class="built_in">clone</span> http://gitlab.xxx.net/x-pay/k8s-<span class="variable">$&#123;ENV&#125;</span>-config/ <span class="variable">$&#123;EVN_FOLDER&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ ! -d <span class="variable">$&#123;EVN_FOLDER&#125;</span>/<span class="variable">$&#123;K8S_FILE_NAME&#125;</span> ]]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"Replacing Environment variables failed: Destination path '<span class="variable">$&#123;EVN_FOLDER&#125;</span>/<span class="variable">$&#123;K8S_FILE_NAME&#125;</span>' doesn't exist."</span></span><br><span class="line">  <span class="built_in">exit</span> -1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Starting build</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$&#123;WORKSPACE&#125;</span></span><br><span class="line"><span class="comment"># sed -i "" "s;^ *export const ENV *= *'.*';export const ENV = '$&#123;ENV&#125;';g" $&#123;WORKSPACE&#125;/component/Common/Environment.js</span></span><br><span class="line">/bin/cp -a <span class="variable">$&#123;EVN_FOLDER&#125;</span>/<span class="variable">$&#123;K8S_FILE_NAME&#125;</span>/Constants.js <span class="variable">$&#123;WORKSPACE&#125;</span>/src/</span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">"<span class="variable">$PLATFORM</span>"</span> == <span class="string">"android"</span> ]]; <span class="keyword">then</span></span><br><span class="line">  /bin/cp -a <span class="variable">$&#123;EVN_FOLDER&#125;</span>/<span class="variable">$&#123;K8S_FILE_NAME&#125;</span>/google-services.json <span class="variable">$&#123;WORKSPACE&#125;</span>/android/app/</span><br><span class="line">  buildAndroid</span><br><span class="line"><span class="keyword">elif</span> [[ <span class="string">"<span class="variable">$PLATFORM</span>"</span> == <span class="string">"ios"</span> ]]; <span class="keyword">then</span></span><br><span class="line"><span class="comment">#  /bin/cp -a $&#123;EVN_FOLDER&#125;/$&#123;K8S_FILE_NAME&#125;/GoogleService-Info.plist $&#123;WORKSPACE&#125;/ios/$&#123;APP_NAME&#125;/</span></span><br><span class="line">  buildIos</span><br><span class="line"><span class="keyword">elif</span> [[ <span class="string">"<span class="variable">$PLATFORM</span>"</span> == <span class="string">"both"</span> ]]; <span class="keyword">then</span></span><br><span class="line">  /bin/cp -a <span class="variable">$&#123;EVN_FOLDER&#125;</span>/<span class="variable">$&#123;K8S_FILE_NAME&#125;</span>/google-services.json <span class="variable">$&#123;WORKSPACE&#125;</span>/android/app/</span><br><span class="line">  buildAndroid</span><br><span class="line"></span><br><span class="line"><span class="comment">#  /bin/cp -a $&#123;EVN_FOLDER&#125;/$&#123;K8S_FILE_NAME&#125;/GoogleService-Info.plist $&#123;WORKSPACE&#125;/ios/$&#123;APP_NAME&#125;/</span></span><br><span class="line">  buildIos</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">"<span class="variable">$TAG_DESC</span>"</span> == <span class="string">""</span> ]]; <span class="keyword">then</span></span><br><span class="line">  TAG_DESC=<span class="string">"For prod version <span class="variable">$&#123;newTag&#125;</span> based on <span class="variable">$releaseBranch</span> via jenkins"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Disabled proxy</span></span><br><span class="line">proxy_off</span><br><span class="line"><span class="comment">#Tagging for the prod git release version</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">"<span class="variable">$ENV</span>"</span> == <span class="string">"prod"</span> ]]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"Tagging the release version for prod..."</span></span><br><span class="line">  releaseBranch=<span class="variable">$&#123;GIT_BRANCH//origin\//&#125;</span></span><br><span class="line">  <span class="comment">#releaseBranch=$&#123;GIT_BRANCH//refs\/heads\//&#125;</span></span><br><span class="line">  newTag=<span class="variable">$&#123;releaseBranch&#125;</span>-`date +%Y%m%d%H%M`</span><br><span class="line">  git tag -a <span class="variable">$newTag</span> -m <span class="string">"<span class="variable">$&#123;TAG_DESC&#125;</span>"</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"Pushing the release version to the origin..."</span></span><br><span class="line">  git push origin <span class="variable">$&#123;newTag&#125;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<p>自动清理过期文件:</p>
<p>vim cleanHistoryFiles.sh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">days=90</span><br><span class="line"><span class="comment">#Cleaning the files before days of the works directory</span></span><br><span class="line">find /Users/jenkins/works/xpayapp-* -<span class="built_in">type</span> f -mtime +<span class="variable">$&#123;days&#125;</span> -<span class="built_in">exec</span> rm -rf &#123;&#125; \;</span><br><span class="line">find /Users/jenkins/works/xwallet-* -<span class="built_in">type</span> f -mtime +<span class="variable">$&#123;days&#125;</span> -<span class="built_in">exec</span> rm -rf &#123;&#125; \;</span><br><span class="line">find /Users/jenkins/works/xpaymerchant-* -<span class="built_in">type</span> f -mtime +<span class="variable">$&#123;days&#125;</span> -<span class="built_in">exec</span> rm -rf &#123;&#125; \;</span><br><span class="line"><span class="comment">#cleaning the files before days of the app_host directory</span></span><br><span class="line"><span class="comment">#find /opt/app-host/shared/public/uploads/pkg -type f -mtime +$&#123;days&#125; -exec rm -rf &#123;&#125; \;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Cleaning files is done!</span></span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://github.com/pluosi/app-host" target="_blank" rel="noopener">https://github.com/pluosi/app-host</a></li>
<li><a href="https://github.com/rock-app/fabu.love" target="_blank" rel="noopener">https://github.com/rock-app/fabu.love</a></li>
<li><a href="http://zhangzr.cn/2018/07/27/iOS%E5%BC%80%E5%8F%91-%E8%87%AA%E5%8A%A8%E6%89%93%E5%8C%85%E5%88%9D%E6%AD%A5%E6%8E%A2%E7%A9%B6/" target="_blank" rel="noopener">http://zhangzr.cn/2018/07/27/iOS%E5%BC%80%E5%8F%91-%E8%87%AA%E5%8A%A8%E6%89%93%E5%8C%85%E5%88%9D%E6%AD%A5%E6%8E%A2%E7%A9%B6/</a></li>
<li><a href="https://www.jianshu.com/p/38b2e17ced73" target="_blank" rel="noopener">https://www.jianshu.com/p/38b2e17ced73</a></li>
<li><a href="https://juejin.im/post/5b6a542b5188251a9e171bf2" target="_blank" rel="noopener">https://juejin.im/post/5b6a542b5188251a9e171bf2</a></li>
<li><a href="https://blog.csdn.net/li530893850/article/details/70889763" target="_blank" rel="noopener">https://blog.csdn.net/li530893850/article/details/70889763</a></li>
<li><a href="https://blog.csdn.net/zrina1314/article/details/80102199" target="_blank" rel="noopener">https://blog.csdn.net/zrina1314/article/details/80102199</a></li>
<li><a href="https://github.com/eventOneHQ/apkup" target="_blank" rel="noopener">https://github.com/eventOneHQ/apkup</a></li>
<li><a href="https://stackoverflow.com/questions/14665518/api-to-automatically-upload-apk-to-google-play" target="_blank" rel="noopener">https://stackoverflow.com/questions/14665518/api-to-automatically-upload-apk-to-google-play</a></li>
<li><a href="https://developers.google.com/android-publisher/getting_started" target="_blank" rel="noopener">https://developers.google.com/android-publisher/getting_started</a></li>
</ul>
]]></content>
      <tags>
        <tag>app</tag>
      </tags>
  </entry>
  <entry>
    <title>EnglishPod</title>
    <url>/2020/01/EnglishPod%E5%AD%A6%E4%B9%A0%E6%96%B9%E5%BC%8F.html</url>
    <content><![CDATA[<p>学习完ESLPod完强烈建议学习这套。</p>
<a id="more"></a>
<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>学习完ESLPod完强烈建议学习这套，原因：</p>
<ol>
<li><p>每次的对话几乎都是有口音的，从第一期开始那个意大利餐厅的服务生意大利口音就重，到后来的美国各地的口音，英式口音，印度的墨西哥的等等都有。符合！ </p>
</li>
<li><p>所有节目都是近似节目脱口秀的形式播出，主持人讲解细心，以一种固定形式播讲英语，符合！ </p>
</li>
<li><p>材料难度分级，从基础，中级，中高级，到高级，让学习者慢慢过渡，不仅是说话速度难度加大，高级的内容也多为演讲大学授课等形式，比日常对话词汇难度大，符合！ </p>
</li>
<li><p>所有内容都非常搞笑，有点冷笑话的意思！主持人讲解生动，去官网留言还会有主持人的细心解答。符合！ </p>
</li>
<li><p>虽然是音频，不能直接放图片，但是音效做的非常好，场景利于学习者想象，在讲解某些生词的时候会放出音效让人知道是什么样子，图片和场景的感觉通过音效表达的栩栩如生，EP的工作团队要赞一个！符合！ </p>
</li>
<li><p>输入输出，不用说了吧。符合！</p>
</li>
</ol>
<p>我拿了EP300期的脚本做了词频统计，所有生词，大约在6000个左右，足以表达生活中的各个方面，不管是日常对话还是正式场合演讲，这么多词 汇，够了。在听完300期以后，听力问题解决后，我还是建议大家好好的多读些报刊，从华尔街日报开始读（网上主页中英对照，免费），纽约时报的电子版（免 费）。在搞定听说，积累主动词汇这方面，EP，全胜！ </p>
<p>所有学习材料选择最重要的两条，i+1原则和情绪机制，EP主要是用近似正常语速的腔调播报，间或主持人的搞怪和幽默，我强烈推荐觉得VOA慢速太简单而 VOA常速又太难的童鞋听这个，而且我建议把它当成流行歌曲放MP3，在精听完一期后，平时有空就放开，有一搭没一搭的多听。 </p>
<p>至于觉得EP有点快的童鞋那么ESL最适合你不过了，ESL符不符合Krashen的二语获得理论不需要我论证了，因为它是得到过Krashen本人亲自认可的，官方认证就是牛！Krashen在接受记者采访时候被问道，你丫理论讲的一套套的，有没符合你这么龟毛条件的材料啊！Krashen回答，有！那就是最出名的ESL播客！说实话这老头居然还没死，每一个在我教科书里出现没死的人我都大吃一惊。 </p>
<p>根据两百个小时精听搞定听力的原则，慢速50小时，常速150小时左右，大家听完150期的ESL再听完900期的Englishpod听说就完全过关了，前提条件是有效输入，就是集中精力的情况下听力 跟读。可是EP没出道900期，所以大家还是购买正版，支持EP团队再接再厉吧。</p>
<p>顺带一提，学英语的材料，其它的都可以抛弃了，把EP现在出的几百期反复听个好几遍，单词句法都记得，英语想不流利都难。</p>
<p>对如此科学的材料，就说平时带着听听模仿简直就是焚琴煮鹤，一定要下定决心，有系统的在一年之内狠狠的把这材料学个好多遍，之后再有半年阅读和背单词时间，英语就可以做到彻底获得了。</p>
<p>注意！englishpod适合中高级英语学习者，如果英语不太好或者初学者就不要尝试了，容易打击信心，不过如果只学里面的初级部分，也是能够轻松驾驭的。下面是englishpod的介绍。 </p>
<p>EnglishPod的音频教程分为4个等级： </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">B－Elementary 初级 </span><br><span class="line">C－Intermediate 中级 </span><br><span class="line">D－Upper Intermediate 中高级 </span><br><span class="line">E－Advance 高级</span><br></pre></td></tr></table></figure>
<h2 id="学习方式"><a href="#学习方式" class="headerlink" title="学习方式"></a>学习方式</h2><ol>
<li><p>盲听录音5遍：不看文本，盲听录音至少5遍，尽可能听懂大意，并把没听懂的部分记下来。</p>
</li>
<li><p>查阅文本：查阅对话文本，把没听懂的部分查找出来，分析没听懂的原因，做好备注。</p>
</li>
<li><p>二次盲听录音3遍：经过文本的查阅，已经能理解对话的意思，也知道了自己没听懂的地方，重新不看文本去听，做一个验证，看是否已经能全部听懂。</p>
</li>
<li><p>对话材料的分析学习：前面三个步骤只能保证大概理解对话的意思，还需要具体去分析文本中的语言点，包括语法、词汇、句型等，做好相应的笔记，保证能把材料中的知识点理解透。</p>
</li>
<li><p>跟读对话3-5遍：看文本跟着录音去朗读，第一遍可一句一句跟读，往后可以多句跟读，跟读过程中要注意模仿发音和语调。</p>
</li>
<li><p>复述对话3遍：不看文本，不听录音，仅靠记忆把对话复述出来。有复述不了地方可翻查文本，直到能完全复述出来为止。</p>
</li>
<li><p>录音与原音频对比：把自己朗读的对话录音下来，与原音频做对比，发现自己朗读的差异，反复修正，直到满意为止。</p>
</li>
<li><p>音频和文本的复习：最后一个步骤则是复习，因为有了前面非常细致的学习，复习只需要非常简短的时间即可。只要能定期听一下录音或翻一下文本，复习效果就能很好。</p>
</li>
</ol>
<p>总结就是：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">盲听三遍</span><br><span class="line">对照文本</span><br><span class="line">再次盲听一遍</span><br><span class="line">语言点的细究和学习</span><br><span class="line">语音现象的分析</span><br><span class="line">跟读对话两遍</span><br><span class="line">复述对话并录音</span><br><span class="line">将录音和原对话进行比对</span><br><span class="line">每学习十期内容后进行一次大复习</span><br><span class="line">坚持学习</span><br></pre></td></tr></table></figure>
<p>如果想按我介绍的方法听一期完整的englishipod，一期分3部分，每部分不到2分钟，大概一小时左右就可以完全吃透了。贪多嚼不烂，学十篇新文章，不如把一篇文章学十遍，就是这个意思。</p>
<p>比如原来是一小时学习一篇1000字左右的文章，现在可以只看一段文章，直到把这部分内容完全吃透。</p>
<h2 id="听力"><a href="#听力" class="headerlink" title="听力"></a>听力</h2><p>听力有三层境界。一层听懂慢速；二层听懂常速；三层听懂不同口音和音色。听力的内力提升需要从慢速过度到常速，最后再到适应不同口音和不同人的音色。口语也有三层。一层日常对话，二层流利表达，三层深度表达自我。</p>
<h3 id="泛听步骤"><a href="#泛听步骤" class="headerlink" title="泛听步骤"></a>泛听步骤</h3><ol>
<li>一篇常速的录音下载到手机，无限循环泛听。（至少听30遍，一周循环三篇即可）</li>
<li>泛听，不需要你听懂每一个单词，只需要你仔细听，用心去理解。</li>
<li>泛听是为了磨耳朵，打通耳朵与英语之间的“隔膜”</li>
<li>如果听烦了，可以试着复述，挑战下自己。</li>
</ol>
<p>注意：如果觉得自己能力提升很快，可以放弃慢速材料，直接拿常速做精听。</p>
<p>达到第三层的方法：明星访谈／美剧／脱口秀＋真人外教对话练习</p>
<p>美剧适合练泛听，不适合练精听。泛听是每日必做之事，初练时最少30分钟，保持每天听听新闻等好习惯就可以了。</p>
<p>练习诀窍：还是遵循重复的原则，看一遍听一篇肯定没用。所以要反反复复的观看，不要看中文字幕的。看的过程中记得记下你觉得地道或者你不知道的表达，这样才会有积累，有进步。</p>
<h3 id="精听步骤"><a href="#精听步骤" class="headerlink" title="精听步骤"></a>精听步骤</h3><ol>
<li>听录音三遍，不看文本，尽力去理解文章大意。（后两遍重点听第一遍听不懂的地方）</li>
<li>查看文本，弄懂所有生单词以及词组并记录下来，日后需要背诵和复习。</li>
<li>再次听录音三遍。听了三遍之后，生单词和词组其实你已经记忆的熟练了。</li>
<li>跟读三遍。何为跟读？录音放一句，你暂停录音，然后跟着重复一句。注意模仿录音的发音、口音、语气。这么做是为了纠正发音、剔除中式口音。这样学出来的发音和老外最近接。</li>
<li>复述三遍。何为复述？发录音，全程不暂停。录音说一句，你紧跟一句直至结束。</li>
<li>上述步骤，每一步根据自身接受情况，重复次数无上限。</li>
<li>复习阶段。第二周复习第一周听的文章。（每周3至5篇就即可）</li>
</ol>
<p>精听每周三次即可，如果强度比较大，可以降低强度，但需要保持至少每周三次的频率。</p>
<h4 id="严格听写"><a href="#严格听写" class="headerlink" title="严格听写"></a>严格听写</h4><p>第一遍大概写一部份词句，然后一遍一遍补全，第三遍开始可以反复使用暂停键。<br>反复听写，一遍一遍直至认为写不出的部分已经不是听的问题，而确定是生僻词等造成的，再开始对照文稿。<br>千万别听写第一遍成稿就对照文本。如果是认识的词有听出来，请反复依照音频中的声音来进行模仿，把它<br>当成声音来模仿而不是单词。然后通读，把逻辑理顺，再听几次全文，保证自己再遇到同样的情况 可以顺利过关。</p>
<h4 id="要点听写"><a href="#要点听写" class="headerlink" title="要点听写"></a>要点听写</h4><p>将所听内容的每句话的核心内容听写</p>
<h4 id="要点复述"><a href="#要点复述" class="headerlink" title="要点复述"></a>要点复述</h4><p>不要记笔记，在听完某段录音后，迅速暂停听力，并复述之后前1-3分钟的录音的大概内容。<br>针对复述，可以采用外语和母语两方式的复述，外语复述可以练习口语，母语复述可以练习信息存储后再转化成母语的脱口速度。</p>
<p>听力到后期要大大依赖于阅读的积累。</p>
<p>练听力的同时，口语的磨炼绝不可忽视，所以练听力最好结合口语，让听力-口语这条“输入-输出”的线真正联通贯穿进来。<br>练听力的时候要适当丰富不同的口音。</p>
<h4 id="主动语汇的积累"><a href="#主动语汇的积累" class="headerlink" title="主动语汇的积累"></a>主动语汇的积累</h4><p>基础比较好：2-3制，基础比较差：3-2制。</p>
<p>仔细阅读释义，体会怕有例句，一定要注意词的搭配方式，把字典中觉得很好的例句，修改几个词变成自己感兴趣的话题相关的句子。</p>
<p>2-3制：就是修改2个例句，然后 仿造3个句子</p>
<p>3-2制：就是修改3个例句，然后 仿造2个句子</p>
<p>仿造时一定不要打开字典，也不要看刚才修改过的例句，要尽量凭空，想一个自己最近想谈论的话题或相关的事。做完后再返回字典<br>看看此词条的上下文有没有衍生词、源头词等，一并学习。要去尽量使用一些你最近增加的积极词汇量，这很重要。<br>根据自己的遗忘规律，定期复习：</p>
<p>每天不要超过但5个，每一定要每天进行。</p>
<h4 id="被动词汇的积累"><a href="#被动词汇的积累" class="headerlink" title="被动词汇的积累"></a>被动词汇的积累</h4><p>按照正常步骤按部就搬就可以。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://kknews.cc/education/5z968b2.html" target="_blank" rel="noopener">https://kknews.cc/education/5z968b2.html</a></li>
<li><a href="https://kknews.cc/education/6kygzq.html" target="_blank" rel="noopener">https://kknews.cc/education/6kygzq.html</a></li>
<li><a href="http://m.sohu.com/a/208645965_100051699" target="_blank" rel="noopener">http://m.sohu.com/a/208645965_100051699</a></li>
</ul>
]]></content>
      <categories>
        <category>English</category>
      </categories>
      <tags>
        <tag>English</tag>
      </tags>
  </entry>
  <entry>
    <title>English二语习得方法</title>
    <url>/2019/11/English%E4%BA%8C%E8%AF%AD%E4%B9%A0%E5%BE%97%E6%96%B9%E6%B3%95.html</url>
    <content><![CDATA[<p>二语习得讲究2000个小时的可理解性输入。只有达到至少2000小时的可理解性输入，才能习得一门语言。</p>
<a id="more"></a>
<h2 id="学习方式"><a href="#学习方式" class="headerlink" title="学习方式"></a>学习方式</h2><h3 id="听力输入"><a href="#听力输入" class="headerlink" title="听力输入"></a>听力输入</h3><p>要从听入手，而且要听各种口音的英语，母语国家和非母语国家的人讲的英语都要多听，因为成年人的耳朵有障碍，听不标准音有对比才能打通，发音才能变好。</p>
<h3 id="狭窄输入Narrow-Input"><a href="#狭窄输入Narrow-Input" class="headerlink" title="狭窄输入Narrow Input"></a>狭窄输入Narrow Input</h3><p>在某一段时间内要只听一种特定类型的材料，比如喜欢新闻就在几个月里只听新闻，喜欢听有声书就只听有声书，听熟了后再接触其他材料。</p>
<h3 id="可理解性-1的听力输入"><a href="#可理解性-1的听力输入" class="headerlink" title="可理解性+1的听力输入"></a>可理解性+1的听力输入</h3><p>就是i+1，i代表你现在的水平。听力一定要在自己听懂的水平上稍微难一点点，然后逐级过渡，一开始就是正常语速，那叫无效输入，跟杂音没两样（针对成人，小孩子没关系） </p>
<h3 id="情绪机制"><a href="#情绪机制" class="headerlink" title="情绪机制"></a>情绪机制</h3><p>学习材料要有趣让人感兴趣，学习者在学习过程中始终感到愉快有收获，挫折感不是太重。</p>
<h3 id="图像理论"><a href="#图像理论" class="headerlink" title="图像理论"></a>图像理论</h3><p>一开始一定要重视图像和语言联系的作用，这样就直接是听到外语反映图像，而不是听到外语，反映中文，再是图像。</p>
<h3 id="输入和输出理论"><a href="#输入和输出理论" class="headerlink" title="输入和输出理论"></a>输入和输出理论</h3><p>输入一定要重视！只有在输入达到足够多的情况下，口语和写作的输出在会流利正确，甚至有很多人专门练习输入从未练过输出但是去国外后畅通无阻的。</p>
<h3 id="听说在前"><a href="#听说在前" class="headerlink" title="听说在前"></a>听说在前</h3><p>先达到一千个小时左右的有效输入，这样听力和口语问题彻底解决后，前期积累的5000左右单词都是主动词汇，然后再大量接触各种原版读物，增加词汇量。随后再练习写，彻底解决英语问题，跟骑自行车一样，彻底获得英语，而不是总是在苦苦的煎熬学习英语。</p>
<h2 id="推荐教材"><a href="#推荐教材" class="headerlink" title="推荐教材"></a>推荐教材</h2><h3 id="赖世雄美语从头学系列"><a href="#赖世雄美语从头学系列" class="headerlink" title="赖世雄美语从头学系列"></a>赖世雄美语从头学系列</h3><p>零基础或基础差的同学最好花一年时间学习这套教材，强烈推荐。</p>
<h3 id="ESL-Pod"><a href="#ESL-Pod" class="headerlink" title="ESL Pod"></a>ESL Pod</h3><p>播讲类慢速英语，建议学习完赖世雄美语从头学学习这个，学习大概200集左右。学习方式：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.听一遍音频</span><br><span class="line">2.看一遍文本</span><br><span class="line">3.再听音频</span><br><span class="line">4.再听音频</span><br></pre></td></tr></table></figure>
<p>第一遍听音频时，如果理解度是50-60% 第四遍听的时候可以达到80-90% 这就够了。</p>
<p>如何到达2000个小时的可理解性输入？成人可自行根据自己每天的空闲时间进行划分。可以每天1小时，2小时，3小时都行。除以天数定个计划。再根据自己的学习情况分为每天解决5分钟还是10分钟的视频分钟数。<br>例如：每天两小时的可理解性输入，每天吃透10分钟。与孩子不同的是，需要把视频里的生词挑出来，挑重点词即可，有些用处不大的词可过滤掉。背了再继续看和听，这样才能把不可理性输入转为自己的可理解性输入，然后就是慢慢升级英语资料的难度。</p>
<h3 id="English-Pod"><a href="#English-Pod" class="headerlink" title="English Pod"></a>English Pod</h3><p>学习完ESLPod完强烈建议学习这套。EnglishPod的音频教程分为4个等级： </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">B－Elementary 初级 </span><br><span class="line">C－Intermediate 中级 </span><br><span class="line">D－Upper Intermediate 中高级 </span><br><span class="line">E－Advance 高级</span><br></pre></td></tr></table></figure>
<p>具体学习方式详见<a href="/blog/2020/01/EnglishPod学习方式.html">EnglishPod学习方式</a></p>
<h2 id="练习方式"><a href="#练习方式" class="headerlink" title="练习方式"></a>练习方式</h2><h3 id="泛听"><a href="#泛听" class="headerlink" title="泛听"></a>泛听</h3><p>每一个新单元都先播放两遍，测试自己能听懂多少内容。</p>
<h3 id="看着文本听"><a href="#看着文本听" class="headerlink" title="看着文本听"></a>看着文本听</h3><p>第三遍看着英文文本搭配外教音频，目的是要让你能结合平面的文字与立体的声音。此时可以小声地跟读，但是重点还是要听母语人士的发音。</p>
<h3 id="看着中文听"><a href="#看着中文听" class="headerlink" title="看着中文听"></a>看着中文听</h3><p>很多人觉得口语书的对话太简单了，所以无须看中文，其实中文译文部分可以拿来作中英互译训练使用，这对日后的日常交流会起到非常大的作用，毕竟我们是中文为母语的人士。</p>
<h3 id="精听"><a href="#精听" class="headerlink" title="精听"></a>精听</h3><p>这一步是要强化对声音的记忆，此阶段的精听可以在任何时间、任何地点进行，例如排队和等待搭车等任何闲暇时间。</p>
<h3 id="跟读练习"><a href="#跟读练习" class="headerlink" title="跟读练习"></a>跟读练习</h3><p>接着就是直接开口跟读，但是务必不要看着文本念，国人习惯依赖课本，当课本盖起来就不敢念了，其实把课本盖上后去想怎么说才是最重要的步骤。</p>
<p>跟读方式:</p>
<ol>
<li>不看文本，播放一句暂停，然后跟读，如果跟读不了，倒带反复。</li>
<li>翻开文本不暂停，跟着录音反复朗读，一气呵成。</li>
<li>丢开文本不暂停，跟着录音反复朗读，一气呵成。</li>
</ol>
<h3 id="一人分饰两角"><a href="#一人分饰两角" class="headerlink" title="一人分饰两角"></a>一人分饰两角</h3><p>最后可以一人分饰两角，自己把对话练习出来，可以训练对话思维。这么做有助于日后轻易说出流利的英语。注意，不一定要一字不漏地背出对话，而是要真正地融会贯通。</p>
]]></content>
      <categories>
        <category>English</category>
      </categories>
      <tags>
        <tag>English</tag>
      </tags>
  </entry>
  <entry>
    <title>WSL</title>
    <url>/2020/12/WSL.html</url>
    <content><![CDATA[<p>Windows Subsystem for Linux（简称WSL）是一个在Windows 10上能够运行原生Linux二进制可执行文件（ELF格式）的兼容层。它是由微软与Canonical公司合作开发，其目标是使纯正的Ubuntu 14.04 “Trusty Tahr”映像能下载和解压到用户的本地计算机，并且映像内的工具和实用工具能在此子系统上原生运行。</p>
<a id="more"></a>
<h2 id="安装WSL"><a href="#安装WSL" class="headerlink" title="安装WSL"></a>安装WSL</h2><p>最新版本的操作系统Windows 11安装简单很多，参考：<a href="https://docs.microsoft.com/en-us/windows/wsl/install" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/windows/wsl/install</a></p>
<p>先安装：<a href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi" target="_blank" rel="noopener">适用于 x64 计算机的 WSL2 Linux 内核更新包</a>，否则会报：0x80072f78错误。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wsl --install</span><br><span class="line"><span class="comment">#或者安装指点的版本</span></span><br><span class="line">wsl -l -o</span><br><span class="line">以下是可安装的有效分发的列表。</span><br><span class="line">请使用“wsl --install -d &lt;分发&gt;”安装。</span><br><span class="line"></span><br><span class="line">NAME            FRIENDLY NAME</span><br><span class="line">Ubuntu          Ubuntu</span><br><span class="line">Debian          Debian GNU/Linux</span><br><span class="line">kali-linux      Kali Linux Rolling</span><br><span class="line">openSUSE-42     openSUSE Leap 42</span><br><span class="line">SLES-12         SUSE Linux Enterprise Server v12</span><br><span class="line">Ubuntu-16.04    Ubuntu 16.04 LTS</span><br><span class="line">Ubuntu-18.04    Ubuntu 18.04 LTS</span><br><span class="line">Ubuntu-20.04    Ubuntu 20.04 LTS</span><br><span class="line"></span><br><span class="line">wsl --install -d Ubuntu</span><br></pre></td></tr></table></figure>
<p>Windows 10版本参考以下内容：</p>
<p>安装最新的Win10：cn_windows_10_business_editions_version_20h2_x64_dvd_f978664f.iso</p>
<p>安装参考：<a href="https://docs.microsoft.com/zh-cn/windows/wsl/install-win10" target="_blank" rel="noopener">https://docs.microsoft.com/zh-cn/windows/wsl/install-win10</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#步骤 1 - 启用适用于 Linux 的 Windows 子系统</span></span><br><span class="line"><span class="comment">#以管理员身份打开 PowerShell 并运行：</span></span><br><span class="line">dism.exe /online /<span class="built_in">enable</span>-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart</span><br><span class="line"><span class="comment">#步骤 2 - 启用虚拟机功能</span></span><br><span class="line"><span class="comment">#以管理员身份打开 PowerShell 并运行：</span></span><br><span class="line">dism.exe /online /<span class="built_in">enable</span>-feature /featurename:VirtualMachinePlatform /all /norestart</span><br><span class="line"><span class="comment">#步骤 3 - 下载 Linux 内核更新包</span></span><br><span class="line">wget http://aka.ms/wsl2kernelmsix64</span><br><span class="line"><span class="comment">#步骤 4 - 将 WSL 2 设置为默认版本</span></span><br><span class="line">wsl --<span class="built_in">set</span>-default-version 2</span><br><span class="line"><span class="comment">#步骤 5 - 安装所选的 Linux 分发</span></span><br><span class="line">直接在Microsoft Store中搜索并安装</span><br></pre></td></tr></table></figure>
<p>如果已经安装了最新的Win10与docker desktop后，可以直接跳到<a href="https://docs.microsoft.com/zh-cn/windows/wsl/install-win10#step-4---download-the-linux-kernel-update-package" target="_blank" rel="noopener">步骤4</a>，下载以下文件进行安装：</p>
<p><a href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi" target="_blank" rel="noopener">https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi</a></p>
<p>安装docker时也会提示更新这个。另外注意：不需要开启Hyper-V。安装完后设置一下默认为v2:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wsl --<span class="built_in">set</span>-default-version 2</span><br></pre></td></tr></table></figure>
<p>安装ubuntu</p>
<p>参考：<a href="https://docs.microsoft.com/zh-cn/windows/wsl/install-win10#step-6---install-your-linux-distribution-of-choice" target="_blank" rel="noopener">https://docs.microsoft.com/zh-cn/windows/wsl/install-win10#step-6---install-your-linux-distribution-of-choice</a></p>
<h2 id="终端"><a href="#终端" class="headerlink" title="终端"></a>终端</h2><p>Windows终端(建议)：</p>
<p>参考：</p>
<ul>
<li><a href="https://docs.microsoft.com/zh-cn/windows/terminal/get-started" target="_blank" rel="noopener">https://docs.microsoft.com/zh-cn/windows/terminal/get-started</a></li>
<li><a href="https://blog.walterlv.com/post/add-a-new-profile-for-windows-terminal.html" target="_blank" rel="noopener">https://blog.walterlv.com/post/add-a-new-profile-for-windows-terminal.html</a></li>
</ul>
<p>添加git-bash支持：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"guid"</span>: <span class="string">"&#123;4d4cc780-cacb-5b6f-a183-29b5f6cdcd23&#125;"</span>,</span><br><span class="line">    <span class="string">"hidden"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">"name"</span>: <span class="string">"CentOS"</span>,</span><br><span class="line">    <span class="string">"icon"</span> : <span class="string">"D:\\Developer\\Git\\centos.png"</span>,</span><br><span class="line">    <span class="string">"colorScheme"</span>: <span class="string">"Campbell Powershell"</span>,</span><br><span class="line">    <span class="string">"source"</span>: <span class="string">"Windows.Terminal.Wsl"</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"guid"</span> : <span class="string">"&#123;1d4e097e-fe87-4164-97d7-3ca794c316fd&#125;"</span>,</span><br><span class="line">    <span class="string">"name"</span> : <span class="string">"Bash"</span>,</span><br><span class="line">    <span class="string">"icon"</span> : <span class="string">"D:\\Developer\\Git\\git-bash.png"</span>,</span><br><span class="line">    <span class="string">"colorScheme"</span>: <span class="string">"Vintage"</span>,</span><br><span class="line">    <span class="string">"fontFace"</span> : <span class="string">"Consolas"</span>,</span><br><span class="line">    <span class="string">"fontSize"</span> : 14,</span><br><span class="line">    <span class="string">"commandline"</span> : <span class="string">"D:\\Developer\\Git\\bin\\bash.exe --login -i"</span>,</span><br><span class="line">    <span class="string">"startingDirectory"</span> : <span class="string">"%USERPROFILE%"</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"guid"</span>: <span class="string">"&#123;4360b1d2-9732-4bfd-8967-93338bcbb568&#125;"</span>,</span><br><span class="line">    <span class="string">"name"</span>: <span class="string">"192.168.80.98"</span>,</span><br><span class="line">    <span class="string">"commandline"</span>: <span class="string">"ssh dev@192.168.80.98"</span>,</span><br><span class="line">    <span class="string">"colorScheme"</span> : <span class="string">"One Half Dark"</span>,</span><br><span class="line">    <span class="string">"fontFace"</span> : <span class="string">"Consolas"</span>,</span><br><span class="line">    <span class="string">"fontSize"</span> : 14,</span><br><span class="line">    <span class="string">"icon"</span> : <span class="string">"ms-appx:///ProfileIcons/&#123;9acb9455-ca41-5af7-950f-6bca1bc9722f&#125;.png"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">colorScheme请参考：https://docs.microsoft.com/en-us/windows/terminal/customize-settings/color-schemes</span><br></pre></td></tr></table></figure>
<p>wsl-terminal：</p>
<p>参考：<a href="https://link.jianshu.com/?t=https://github.com/goreliu/wsl-terminal" target="_blank" rel="noopener">https://link.jianshu.com/?t=https://github.com/goreliu/wsl-terminal</a></p>
<h2 id="设置默认Linux发行版"><a href="#设置默认Linux发行版" class="headerlink" title="设置默认Linux发行版"></a>设置默认Linux发行版</h2><p>参考：<a href="http://www.xitongzhijia.net/xtjc/20180316/122477.html" target="_blank" rel="noopener">http://www.xitongzhijia.net/xtjc/20180316/122477.html</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wslconfig /l</span><br><span class="line">wslconfig /setdefault Ubuntu-20.04</span><br><span class="line"></span><br><span class="line">wsl.exe -l -v</span><br><span class="line"><span class="comment">#wsl.exe --set-version Ubuntu-20.04 2</span></span><br><span class="line"><span class="comment">#wsl.exe --set-default-version 2</span></span><br></pre></td></tr></table></figure>
<h2 id="配置WSL为独立的系统"><a href="#配置WSL为独立的系统" class="headerlink" title="配置WSL为独立的系统"></a>配置WSL为独立的系统</h2><p>默认WSL可以以windows共享vscode/docker等资源，但不支持systemd相关的服务，可以通过以下方式开启，参考：<a href="https://kubernetes.io/blog/2020/05/21/wsl-docker-kubernetes-on-the-windows-desktop/#minikube-enabling-systemd" target="_blank" rel="noopener">https://kubernetes.io/blog/2020/05/21/wsl-docker-kubernetes-on-the-windows-desktop/#minikube-enabling-systemd</a></p>
<p>注意：开启systemd后将不再支持直接在linux开启vscode，与windows共享资源。也就是开启后将是一个完整独立的linux系统。不太建议。如果只是使用docker与k8s的话，直接使用docker-desktop即可。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Edit the sudoers with the visudo command</span></span><br><span class="line">sudo visudo</span><br><span class="line"><span class="comment"># Change the %sudo group to be password-less</span></span><br><span class="line">%sudo   ALL=(ALL:ALL) NOPASSWD: ALL</span><br><span class="line"><span class="comment"># Press CTRL+X to exit</span></span><br><span class="line"><span class="comment"># Press Y to save</span></span><br><span class="line"><span class="comment"># Press Enter to confirm</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Systemctl couldn't start</span></span><br><span class="line">sudo apt install -y conntrack</span><br><span class="line">sudo apt install -yqq daemonize dbus-user-session fontconfig</span><br><span class="line"><span class="comment"># Create the start-systemd-namespace script</span></span><br><span class="line">sudo vi /usr/sbin/start-systemd-namespace</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SYSTEMD_PID=$(ps -ef | grep <span class="string">'/lib/systemd/systemd --system-unit=basic.target$'</span> | grep -v unshare | awk <span class="string">'&#123;print $2&#125;'</span>)</span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$SYSTEMD_PID</span>"</span> ] || [ <span class="string">"<span class="variable">$SYSTEMD_PID</span>"</span> != <span class="string">"1"</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">export</span> PRE_NAMESPACE_PATH=<span class="string">"<span class="variable">$PATH</span>"</span></span><br><span class="line">    (<span class="built_in">set</span> -o posix; <span class="built_in">set</span>) | \</span><br><span class="line">        grep -v <span class="string">"^BASH"</span> | \</span><br><span class="line">        grep -v <span class="string">"^DIRSTACK="</span> | \</span><br><span class="line">        grep -v <span class="string">"^EUID="</span> | \</span><br><span class="line">        grep -v <span class="string">"^GROUPS="</span> | \</span><br><span class="line">        grep -v <span class="string">"^HOME="</span> | \</span><br><span class="line">        grep -v <span class="string">"^HOSTNAME="</span> | \</span><br><span class="line">        grep -v <span class="string">"^HOSTTYPE="</span> | \</span><br><span class="line">        grep -v <span class="string">"^IFS='.*"</span>$<span class="string">'\n'</span><span class="string">"'"</span> | \</span><br><span class="line">        grep -v <span class="string">"^LANG="</span> | \</span><br><span class="line">        grep -v <span class="string">"^LOGNAME="</span> | \</span><br><span class="line">        grep -v <span class="string">"^MACHTYPE="</span> | \</span><br><span class="line">        grep -v <span class="string">"^NAME="</span> | \</span><br><span class="line">        grep -v <span class="string">"^OPTERR="</span> | \</span><br><span class="line">        grep -v <span class="string">"^OPTIND="</span> | \</span><br><span class="line">        grep -v <span class="string">"^OSTYPE="</span> | \</span><br><span class="line">        grep -v <span class="string">"^PIPESTATUS="</span> | \</span><br><span class="line">        grep -v <span class="string">"^POSIXLY_CORRECT="</span> | \</span><br><span class="line">        grep -v <span class="string">"^PPID="</span> | \</span><br><span class="line">        grep -v <span class="string">"^PS1="</span> | \</span><br><span class="line">        grep -v <span class="string">"^PS4="</span> | \</span><br><span class="line">        grep -v <span class="string">"^SHELL="</span> | \</span><br><span class="line">        grep -v <span class="string">"^SHELLOPTS="</span> | \</span><br><span class="line">        grep -v <span class="string">"^SHLVL="</span> | \</span><br><span class="line">        grep -v <span class="string">"^SYSTEMD_PID="</span> | \</span><br><span class="line">        grep -v <span class="string">"^UID="</span> | \</span><br><span class="line">        grep -v <span class="string">"^USER="</span> | \</span><br><span class="line">        grep -v <span class="string">"^_="</span> | \</span><br><span class="line">        cat - &gt; <span class="string">"<span class="variable">$HOME</span>/.systemd-env"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"PATH='<span class="variable">$PATH</span>'"</span> &gt;&gt; <span class="string">"<span class="variable">$HOME</span>/.systemd-env"</span></span><br><span class="line">    <span class="built_in">exec</span> sudo /usr/sbin/enter-systemd-namespace <span class="string">"<span class="variable">$BASH_EXECUTION_STRING</span>"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$PRE_NAMESPACE_PATH</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">export</span> PATH=<span class="string">"<span class="variable">$PRE_NAMESPACE_PATH</span>"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create the enter-systemd-namespace</span></span><br><span class="line">sudo vi /usr/sbin/enter-systemd-namespace</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$UID</span>"</span> != 0 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"You need to run <span class="variable">$0</span> through sudo"</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">SYSTEMD_PID=<span class="string">"<span class="variable">$(ps -ef | grep '/lib/systemd/systemd --system-unit=basic.target$' | grep -v unshare | awk '&#123;print $2&#125;')</span>"</span></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$SYSTEMD_PID</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">    /usr/sbin/daemonize /usr/bin/unshare --fork --pid --mount-proc /lib/systemd/systemd --system-unit=basic.target</span><br><span class="line">    <span class="keyword">while</span> [ -z <span class="string">"<span class="variable">$SYSTEMD_PID</span>"</span> ]; <span class="keyword">do</span></span><br><span class="line">        SYSTEMD_PID=<span class="string">"<span class="variable">$(ps -ef | grep '/lib/systemd/systemd --system-unit=basic.target$' | grep -v unshare | awk '&#123;print $2&#125;')</span>"</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$SYSTEMD_PID</span>"</span> ] &amp;&amp; [ <span class="string">"<span class="variable">$SYSTEMD_PID</span>"</span> != <span class="string">"1"</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$1</span>"</span> ] &amp;&amp; [ <span class="string">"<span class="variable">$1</span>"</span> != <span class="string">"bash --login"</span> ] &amp;&amp; [ <span class="string">"<span class="variable">$1</span>"</span> != <span class="string">"/bin/bash --login"</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">exec</span> /usr/bin/nsenter -t <span class="string">"<span class="variable">$SYSTEMD_PID</span>"</span> -a \</span><br><span class="line">            /usr/bin/sudo -H -u <span class="string">"<span class="variable">$SUDO_USER</span>"</span> \</span><br><span class="line">            /bin/bash -c <span class="string">'set -a; source "$HOME/.systemd-env"; set +a; exec bash -c '</span><span class="string">"<span class="variable">$(printf "%q" "$@")</span>"</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">exec</span> /usr/bin/nsenter -t <span class="string">"<span class="variable">$SYSTEMD_PID</span>"</span> -a \</span><br><span class="line">            /bin/login -p -f <span class="string">"<span class="variable">$SUDO_USER</span>"</span> \</span><br><span class="line">            $(/bin/cat <span class="string">"<span class="variable">$HOME</span>/.systemd-env"</span> | grep -v <span class="string">"^PATH="</span>)</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Existential crisis"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Edit the permissions of the enter-systemd-namespace script</span></span><br><span class="line">sudo chmod +x /usr/sbin/enter-systemd-namespace</span><br><span class="line"><span class="comment"># Edit the bash.bashrc file</span></span><br><span class="line">sudo sed -i 2a<span class="string">"# Start or enter a PID namespace in WSL2\nsource /usr/sbin/start-systemd-namespace\n"</span> /etc/bash.bashrc</span><br><span class="line">sudo cp -a ~/.systemd-env /root/.systemd-env</span><br><span class="line"><span class="comment">#Finally, exit and launch a new session. You do not need to stop WSL2, a new session is enough</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#can't set the locale; make sure $LC_* and $LANG are correct</span></span><br><span class="line"><span class="comment">#https://www.cnblogs.com/skiloop/archive/2013/02/20/2919266.html</span></span><br><span class="line">locale</span><br><span class="line">sudo locale-gen zh_CN.UTF-8</span><br></pre></td></tr></table></figure>
<h2 id="备注与还原"><a href="#备注与还原" class="headerlink" title="备注与还原"></a>备注与还原</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://www.howtogeek.com/426562/how-to-export-and-import-your-linux-systems-on-windows-10/</span></span><br><span class="line"><span class="comment">#Backup</span></span><br><span class="line">wsl --list -v</span><br><span class="line">wsl --<span class="built_in">export</span> Ubuntu-20.04 <span class="string">"D:\Developer\WSL\Ubuntu-20.04.tar"</span></span><br><span class="line"><span class="comment"># wsl --import Ubuntu D:\Developer\WSL D:\Developer\WSL\Bak\Ubuntu-20.04.tar</span></span><br><span class="line">wsl --unregister Ubuntu-20.04</span><br><span class="line">wsl --import Ubuntu-20.04 <span class="string">"D:\Developer\WSL\Ubuntu-20.04"</span> <span class="string">"D:\Developer\WSL\Ubuntu-20.04.tar"</span> --version 2</span><br><span class="line">wslconfig /setdefault Ubuntu-20.04</span><br><span class="line"><span class="comment">#Import后默认用户变成了root，需要在windows命令行中执行：</span></span><br><span class="line">ubuntu2004.exe config --default-user dave</span><br><span class="line"><span class="comment">#Move</span></span><br><span class="line">https://github.com/pxlrbt/move-wsl</span><br><span class="line"></span><br><span class="line"><span class="comment">#Move CentOS</span></span><br><span class="line">wsl --list -v</span><br><span class="line">wsl --<span class="built_in">export</span> CentOS <span class="string">"D:\Developer\wsl\CentOS.tar"</span></span><br><span class="line">wsl --unregister CentOS</span><br><span class="line">wsl --import CentOS <span class="string">"D:\Developer\wsl\CentOS"</span> <span class="string">"D:\Developer\wsl\CentOS.tar"</span> --version 2</span><br><span class="line">mydistro config --default-user dave</span><br><span class="line"></span><br><span class="line"><span class="comment">#Move Docker's wsl data</span></span><br><span class="line">wsl --list -v</span><br><span class="line">wsl --<span class="built_in">export</span> docker-desktop <span class="string">"D:\Developer\WSL\docker-desktop.tar"</span></span><br><span class="line">wsl --unregister docker-desktop</span><br><span class="line">wsl --import docker-desktop <span class="string">"D:\Developer\wsl\docker-desktop"</span> <span class="string">"D:\Developer\wsl\docker-desktop.tar"</span> --version 2</span><br><span class="line"></span><br><span class="line">wsl --list -v</span><br><span class="line">wsl --<span class="built_in">export</span> docker-desktop-data <span class="string">"D:\Developer\WSL\docker-desktop-data.tar"</span></span><br><span class="line">wsl --unregister docker-desktop-data</span><br><span class="line">wsl --import docker-desktop-data <span class="string">"D:\Developer\wsl\docker-desktop-data"</span> <span class="string">"D:\Developer\wsl\docker-desktop-data.tar"</span> --version 2</span><br></pre></td></tr></table></figure>
<h2 id="其他参考"><a href="#其他参考" class="headerlink" title="其他参考"></a>其他参考</h2><blockquote>
<p><a href="https://www.jianshu.com/p/f59f902fd885" target="_blank" rel="noopener">https://www.jianshu.com/p/f59f902fd885</a></p>
</blockquote>
]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes Development Environment</title>
    <url>/2020/12/Kubernetes-Development-Environment.html</url>
    <content><![CDATA[<p>This article will teach us how to set up a development environment in you local machine, including java/k8s/spring cloud kubernetes, etc.</p>
<a id="more"></a>
<h2 id="OS"><a href="#OS" class="headerlink" title="OS"></a>OS</h2><p>reference: <a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/windows/wsl/install-win10</a></p>
<p>I’d recommend you base on WSL system to develop, if you don’t know what’s the wsl, look at <a href="http://blog.gcalls.cn/blog/2020/12/WSL.html">this article</a></p>
<p>Installing WSL as below:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Step 1 - Enable WSL</span></span><br><span class="line"><span class="comment">#Openning PowerShell as administrotor：</span></span><br><span class="line">dism.exe /online /<span class="built_in">enable</span>-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart</span><br><span class="line"><span class="comment">#Step 2 - Enable Virtual Machine </span></span><br><span class="line"><span class="comment">#Openning PowerShell as administrotor：</span></span><br><span class="line">dism.exe /online /<span class="built_in">enable</span>-feature /featurename:VirtualMachinePlatform /all /norestart</span><br><span class="line"><span class="comment">#Step 3 - Downloading Linux Kernel</span></span><br><span class="line">wget http://aka.ms/wsl2kernelmsix64</span><br><span class="line"><span class="comment">#Step 4 - Setting WSL 2 as default</span></span><br><span class="line">wsl --<span class="built_in">set</span>-default-version 2</span><br><span class="line"><span class="comment">#Step 5 - Installing linux </span></span><br><span class="line">Searching proper linux version <span class="keyword">in</span> Microsoft Store</span><br></pre></td></tr></table></figure>
<h2 id="Windows-Terminal"><a href="#Windows-Terminal" class="headerlink" title="Windows Terminal"></a>Windows Terminal</h2><p>I’d highly recommend using Windows terminal in Windows 10, it’s pretty handly.</p>
<p>Reference: <a href="https://docs.microsoft.com/en-us/windows/terminal/get-started" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/windows/terminal/get-started</a></p>
<p>Adding git-bash support：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"closeOnExit"</span> : <span class="literal">true</span>,</span><br><span class="line">    <span class="string">"commandline"</span> : <span class="string">"D:\\Developer\\Git\\bin\\bash.exe --login -i"</span>,</span><br><span class="line">    <span class="string">"guid"</span> : <span class="string">"&#123;1d4e097e-fe87-4164-97d7-3ca794c316fd&#125;"</span>,</span><br><span class="line">    <span class="string">"icon"</span> : <span class="string">"D:\\Developer\\Git\\git-bash.png"</span>,</span><br><span class="line">    <span class="string">"name"</span> : <span class="string">"Bash"</span>,</span><br><span class="line">    <span class="string">"startingDirectory"</span> : <span class="string">"%USERPROFILE%"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Install-Local-Docker-Optional"><a href="#Install-Local-Docker-Optional" class="headerlink" title="Install Local Docker(Optional)"></a>Install Local Docker(Optional)</h2><p>If you want to use the remote development environment, don’t need it. </p>
<p>Reference:</p>
<ul>
<li><a href="https://docs.docker.com/docker-for-windows/wsl/" target="_blank" rel="noopener">https://docs.docker.com/docker-for-windows/wsl/</a></li>
<li><a href="https://kubernetes.io/blog/2020/05/21/wsl-docker-kubernetes-on-the-windows-desktop/" target="_blank" rel="noopener">https://kubernetes.io/blog/2020/05/21/wsl-docker-kubernetes-on-the-windows-desktop/</a></li>
</ul>
<p>Just need to install Docker-Desktop for Windows, and select the ubuntu at “Setting-&gt;Resources/WSL Integration”, that’s all.</p>
<h2 id="Install-Local-Kubernetes-Optional"><a href="#Install-Local-Kubernetes-Optional" class="headerlink" title="Install Local Kubernetes(Optional)"></a>Install Local Kubernetes(Optional)</h2><p>If you want to use the remote development environment, don’t need it. </p>
<p>Just need to enable kubernetes in “Docker-Desktop Settings”, that’s all. But you need to set the proxy in the Docker Setting, or you will get the failure by Downloading google’s containers.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://192.168.101.175:1082</span><br><span class="line">127.0.0.1,localhost,10.0.0.0/8,172.0.0.0/8,192.168.0.0/16,*.zerofinance.net,*.aliyun.com,*.163.com,*.docker-cn.com,registry.gcalls.cn</span><br></pre></td></tr></table></figure>
<p>Enable Ingress Addon:</p>
<p>Reference：<a href="https://github.com/docker/for-win/issues/7094" target="_blank" rel="noopener">https://github.com/docker/for-win/issues/7094</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://kubernetes.github.io/ingress-nginx/deploy/#docker-for-mac</span></span><br><span class="line"> <span class="comment">#kubectl.exe create -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-0.32.0/deploy/static/provider/cloud/deploy.yaml</span></span><br><span class="line"> <span class="comment">#Resolved: Unable to connect to the server</span></span><br><span class="line"> proxy_on</span><br><span class="line">wget https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v0.41.2/deploy/static/provider/cloud/deploy.yaml</span><br><span class="line">proxy_off</span><br><span class="line"> kubectl apply -f deploy.yaml</span><br></pre></td></tr></table></figure>
<p>demo.yaml</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: hello</span><br><span class="line">  labels:</span><br><span class="line">    app: hello</span><br><span class="line">spec:</span><br><span class="line">  <span class="comment">#type: NodePort</span></span><br><span class="line">  ports:</span><br><span class="line">  - protocol: TCP</span><br><span class="line">    name: http</span><br><span class="line">    port: 8080</span><br><span class="line">    targetPort: 8080</span><br><span class="line">  selector:</span><br><span class="line">    app: hello</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">kind: Deployment</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">metadata:</span><br><span class="line">  name: hello</span><br><span class="line">  labels:</span><br><span class="line">    app: hello</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: hello</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: hello</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: hello</span><br><span class="line">        <span class="comment"># image: paulbouwer/hello-kubernetes:1.8</span></span><br><span class="line">        image: gcr.io/google-samples/hello-app:1.0</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 8080</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">apiVersion: networking.k8s.io/v1 <span class="comment"># for versions before 1.14 use extensions/v1beta1</span></span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: hello</span><br><span class="line">  <span class="comment"># annotations:</span></span><br><span class="line">  <span class="comment">#   nginx.ingress.kubernetes.io/rewrite-target: /$1</span></span><br><span class="line">    <span class="comment"># nginx.ingress.kubernetes.io/whitelist-source-range: 192.168.147.174/32</span></span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: hello.info</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        pathType: Prefix</span><br><span class="line">        backend:</span><br><span class="line">          service: </span><br><span class="line">            name: hello</span><br><span class="line">            port:</span><br><span class="line">              number: 8080</span><br></pre></td></tr></table></figure>
<h2 id="Remote-Kubernetes-Environment"><a href="#Remote-Kubernetes-Environment" class="headerlink" title="Remote Kubernetes Environment"></a>Remote Kubernetes Environment</h2><p>I’d recommend installing docker and kubernetes on the remote machine, and all of developers can share it and save some of local resources.</p>
<h3 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h3><p>Ubuntu Reference: <a href="http://blog.gcalls.cn/blog/2018/12/ubuntu-os.html#Docker">http://blog.gcalls.cn/blog/2018/12/ubuntu-os.html#Docker</a></p>
<p>For CentOS:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://www.cnblogs.com/763977251-sg/p/11837130.html</span></span><br><span class="line"><span class="comment">#Docker installation</span></span><br><span class="line"><span class="comment">#https://aka.ms/vscode-remote/samples/docker-from-docker</span></span><br><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line">sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line">sudo yum makecache fast</span><br><span class="line">sudo yum -y install docker-ce</span><br></pre></td></tr></table></figure>
<h3 id="Kubernetes"><a href="#Kubernetes" class="headerlink" title="Kubernetes"></a>Kubernetes</h3><h4 id="Kubectl"><a href="#Kubectl" class="headerlink" title="Kubectl"></a>Kubectl</h4><p>Following the instructions to install the k8s client tools:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#For MAC</span></span><br><span class="line"><span class="comment">#https://kubernetes.io/zh/docs/tasks/tools/install-kubectl-macos/</span></span><br><span class="line"><span class="comment">#curl -LO "https://dl.k8s.io/release/v1.18.18/bin/darwin/amd64/kubectl"</span></span><br><span class="line"><span class="comment">#chmod +x ./kubectl</span></span><br><span class="line"><span class="comment">#sudo mv ./kubectl /usr/local/bin/kubectl</span></span><br><span class="line"><span class="comment">#sudo chown root: /usr/local/bin/kubectl</span></span><br><span class="line">brew install kubectl</span><br><span class="line">mkdir .kube</span><br><span class="line"><span class="comment">#the "config" file located in the root of project</span></span><br><span class="line">cp config ~/.kube/</span><br><span class="line">kubectl config use microk8s-0</span><br><span class="line"></span><br><span class="line"><span class="comment">#For Windows</span></span><br><span class="line">Step 1:</span><br><span class="line">Downloading https://dl.k8s.io/release/v1.18.18/bin/windows/amd64/kubectl.exe, and put it to a executable environment path(I<span class="string">'d recommend putting it to the folder of GIT_HOME/bin), and make sure $GIT_HOME is in the PATH of your environment.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Step 2: </span></span><br><span class="line"><span class="string">Open the terminal of CMD, executing the following command(Press Win+R, and input "cmd"):</span></span><br><span class="line"><span class="string">cd %HOMEPATH%</span></span><br><span class="line"><span class="string">mkdir .kube</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Step 3: </span></span><br><span class="line"><span class="string">Copying the "config" file located in the root folder of project to the ".kube" folder located in current user home(like: C:\Users\YourName\.kube).</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Step 4:</span></span><br><span class="line"><span class="string">Open the terminal of CMD again, executing the following command:</span></span><br><span class="line"><span class="string">kubectl config use microk8s-0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Congratulations, That'</span>s all <span class="keyword">done</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">#For Linux</span></span><br><span class="line"><span class="comment">#https://kubernetes.io/zh/docs/tasks/tools/install-kubectl-linux/</span></span><br><span class="line">curl -LO <span class="string">"https://dl.k8s.io/release/<span class="variable">$(curl -L -s https://dl.k8s.io/release/stable.txt)</span>/bin/linux/amd64/kubectl"</span></span><br><span class="line">sudo install -o root -g root -m 0755 kubectl /usr/<span class="built_in">local</span>/bin/kubectl</span><br><span class="line">kubectl version --client</span><br><span class="line">mkdir ~/.kube</span><br><span class="line"><span class="comment">#the "config" file located in the root of project</span></span><br><span class="line">cp config ~/.kube/</span><br><span class="line">kubectl config use microk8s-0</span><br></pre></td></tr></table></figure>
<h4 id="microk8s"><a href="#microk8s" class="headerlink" title="microk8s"></a>microk8s</h4><p>Recommend using microk8s on Linux. It’s the best performance.</p>
<p>Reference：</p>
<p><a href="https://jiajunhuang.com/articles/2019_11_17-microk8s.md.html" target="_blank" rel="noopener">https://jiajunhuang.com/articles/2019_11_17-microk8s.md.html</a><br><a href="https://microk8s.io/#quick-start" target="_blank" rel="noopener">https://microk8s.io/#quick-start</a><br><a href="https://microk8s.io/docs" target="_blank" rel="noopener">https://microk8s.io/docs</a><br><a href="https://www.cnblogs.com/xiao987334176/p/10931290.html" target="_blank" rel="noopener">https://www.cnblogs.com/xiao987334176/p/10931290.html</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#For ubuntu:</span></span><br><span class="line"><span class="comment">#https://blog.flyfox.top/2020/04/03/microk8s%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</span></span><br><span class="line"><span class="comment">#https://microk8s.io/#install-microk8s</span></span><br><span class="line"><span class="comment">#Ubuntu 20.04 has been installed with snap pre-installed</span></span><br><span class="line">sudo snap install microk8s --classic</span><br><span class="line">apt install bash-completion -y</span><br><span class="line"><span class="built_in">source</span> /usr/share/bash-completion/bash_completion</span><br><span class="line"></span><br><span class="line"><span class="comment">#For centos7:</span></span><br><span class="line"><span class="comment">#sudo yum install epel-release</span></span><br><span class="line">sudo su - dev</span><br><span class="line">sudo yum install snapd</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> --now snapd.socket</span><br><span class="line">sudo ln -s /var/lib/snapd/snap /snap</span><br><span class="line">sudo snap install microk8s --classic</span><br><span class="line">yum install bash-completion -y</span><br><span class="line"><span class="built_in">source</span> /usr/share/bash-completion/bash_completion</span><br><span class="line"></span><br><span class="line"><span class="comment">#Notice: microk8s is using containerd, not docker any more.</span></span><br><span class="line"><span class="comment">#Either log out and back in again or restart your system to ensure </span></span><br><span class="line">sudo vim /var/snap/microk8s/current/args/containerd-env</span><br><span class="line">HTTP_PROXY=<span class="string">"http://192.168.101.175:1082"</span></span><br><span class="line">HTTPS_PROXY=<span class="string">"http://192.168.101.175:1082"</span></span><br><span class="line">NO_PROXY=<span class="string">"127.0.0.1,localhost,10.0.0.0/8,172.0.0.0/8,192.168.0.0/16,*.zerofinance.net,*.aliyun.com,*.163.com,*.docker-cn.com,registry.gcalls.cn"</span></span><br><span class="line">sudo systemctl list-unit-files |grep -i microk8s</span><br><span class="line">sudo systemctl restart snap.microk8s.daemon-containerd.service</span><br><span class="line">microk8s.start</span><br><span class="line"><span class="comment">#Addons: https://microk8s.io/docs/addons#heading--list</span></span><br><span class="line"><span class="comment">#microk8s.enable dashboard dns ingress istio registry storage rbac</span></span><br><span class="line">microk8s.enable dashboard dns ingress hostpath-storage</span><br><span class="line">microk8s status --<span class="built_in">wait</span>-ready</span><br><span class="line"><span class="comment">#list all of enabled addons</span></span><br><span class="line">microk8s status</span><br><span class="line">microk8s.kubectl describe pods -A</span><br><span class="line">microk8s.inspect</span><br><span class="line"></span><br><span class="line">kubectl cluster-info</span><br><span class="line">Kubernetes master is running at https://192.168.95.234:16443</span><br><span class="line">Metrics-server is running at https://192.168.95.234:16443/api/v1/namespaces/kube-system/services/https:metrics-server:/proxy</span><br><span class="line"></span><br><span class="line">CoreDNS is running at https://192.168.95.234:16443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy</span><br><span class="line"></span><br><span class="line">To further debug and diagnose cluster problems, use <span class="string">'kubectl cluster-info dump'</span>.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#bashboard:</span></span><br><span class="line"><span class="comment">#https://medium.com/@junya.kaneko/quick-way-of-using-kubernetes-dashboard-on-microk8s-9c7b0e26be02</span></span><br><span class="line"><span class="comment">#Skip login</span></span><br><span class="line">microk8s kubectl edit deployment/kubernetes-dashboard -n kube-system</span><br><span class="line">spec:</span><br><span class="line">    containers:</span><br><span class="line">    - args:</span><br><span class="line">    - --auto-generate-certificates</span><br><span class="line">    - --namespace=kube-system</span><br><span class="line">    - --<span class="built_in">enable</span>-skip-login</span><br><span class="line"></span><br><span class="line">microk8s kubectl create clusterrolebinding kubernertes-dashboard-admin --clusterrole=cluster-admin --serviceaccount=kube-system:kubernetes-dashboard</span><br><span class="line">microk8s kubectl proxy --accept-hosts=.* --address=0.0.0.0</span><br><span class="line">http://192.168.80.98:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/<span class="comment">#/login</span></span><br><span class="line">token=$(microk8s kubectl -n kube-system get secret | grep default-token | cut -d <span class="string">" "</span> -f1)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$token</span></span><br><span class="line">microk8s kubectl -n kube-system describe secret <span class="variable">$token</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#uninstall microk8s</span></span><br><span class="line">sudo snap remove microk8s</span><br><span class="line">rm -fr /root/snap/microk8s /home/dev/snap/microk8s</span><br><span class="line"></span><br><span class="line"><span class="comment">#https://microk8s.io/docs/working-with-kubectl</span></span><br><span class="line"><span class="comment">#Export the config for clients</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$HOME</span></span><br><span class="line">mkdir .kube</span><br><span class="line"><span class="built_in">cd</span> .kube</span><br><span class="line">microk8s config &gt; config</span><br><span class="line"></span><br><span class="line"><span class="comment">#https://kubernetes.io/zh/docs/reference/kubectl/cheatsheet/</span></span><br><span class="line"><span class="comment">#kubectl context config</span></span><br><span class="line">kubectl config get-contexts</span><br><span class="line"><span class="comment">#current context config</span></span><br><span class="line">kubectl config current-context</span><br><span class="line"><span class="comment">#switch config as alik8s-0</span></span><br><span class="line">kubectl config use-context alik8s-0</span><br><span class="line"></span><br><span class="line"><span class="comment">#~/.bash_profile</span></span><br><span class="line"><span class="comment">#yum install bash-completion -y </span></span><br><span class="line">~/.bash_profile</span><br><span class="line"><span class="built_in">alias</span> k=kubectl</span><br><span class="line"><span class="built_in">source</span> &lt;(kubectl completion bash | sed s/kubectl/k/g)</span><br><span class="line"><span class="comment">#source /usr/share/bash-completion/bash_completion</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Kubectl installation:</span></span><br><span class="line">curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.19.4/bin/linux/amd64/kubectl</span><br><span class="line">chmod +x kubectl &amp;&amp; sudo mv kubectl /usr/<span class="built_in">local</span>/bin/</span><br><span class="line"></span><br><span class="line"><span class="comment">#OR</span></span><br><span class="line"><span class="comment">#Kubectl For CentOS</span></span><br><span class="line"><span class="comment">#https://blog.csdn.net/nklinsirui/article/details/80581286</span></span><br><span class="line">cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">repo_gpgcheck=1</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br><span class="line">yum install -y kubectl</span><br><span class="line"><span class="comment">#Kubectl For Ubuntu</span></span><br><span class="line"><span class="comment">#https://blog.csdn.net/nklinsirui/article/details/80581286</span></span><br><span class="line">curl https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | apt-key add - </span><br><span class="line"><span class="built_in">echo</span> <span class="string">"deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main"</span> &gt;&gt; /etc/apt/sources.list</span><br><span class="line">apt-get update</span><br><span class="line">apt-get install -y kubectl</span><br></pre></td></tr></table></figure>
<h4 id="Harbor"><a href="#Harbor" class="headerlink" title="Harbor"></a>Harbor</h4><p>Harbor is an open source trusted cloud native registry project that stores, signs, and scans content. Harbor extends the open source Docker Distribution by adding the functionalities usually required by users such as security, identity and management. Having a registry closer to the build and run environment can improve the image transfer efficiency. Harbor supports replication of images between registries, and also offers advanced security features such as user management, access control and activity auditing.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Habor:</span></span><br><span class="line"><span class="comment">#Using root enviroment:</span></span><br><span class="line">sudo yum install python3-pip</span><br><span class="line"><span class="comment">#root</span></span><br><span class="line">pip3 install -U docker-compose</span><br><span class="line"><span class="comment">#non-root</span></span><br><span class="line"><span class="comment">#pip3 install --user docker-compose</span></span><br><span class="line"><span class="comment">#https://goharbor.io/docs/2.1.0/install-config/configure-https/</span></span><br><span class="line"><span class="comment">#Generating the certificate:</span></span><br><span class="line"><span class="comment">#Using dev enviroment:</span></span><br><span class="line">sudo su - dev</span><br><span class="line"><span class="built_in">export</span> DP_Id=<span class="string">""</span></span><br><span class="line"><span class="built_in">export</span> DP_Key=<span class="string">""</span></span><br><span class="line">acme.sh --issue --dns dns_dp -d gcalls.cn -d *.gcalls.cn</span><br><span class="line"><span class="comment">#acme.sh --issue --dns dns_dp -d registry.gcalls.cn --keylength ec-256</span></span><br><span class="line">Your cert is <span class="keyword">in</span>  /home/dev/.acme.sh/gcalls.cn/gcalls.cn.cer </span><br><span class="line">Your cert key is <span class="keyword">in</span>  /home/dev/.acme.sh/gcalls.cn/gcalls.cn.key </span><br><span class="line">The intermediate CA cert is <span class="keyword">in</span>  /home/dev/.acme.sh/gcalls.cn/ca.cer </span><br><span class="line">The full chain certs is there:  /home/dev/.acme.sh/gcalls.cn/fullchain.cer</span><br><span class="line"></span><br><span class="line">sudo mkdir -p /etc/docker/certs.d/registry.gcalls.cn</span><br><span class="line">sudo cp /home/dev/.acme.sh/gcalls.cn/gcalls.cn.cer /etc/docker/certs.d/registry.gcalls.cn/</span><br><span class="line"><span class="comment">#must be gcalls.cn.cert</span></span><br><span class="line">sudo cp /home/dev/.acme.sh/gcalls.cn/fullchain.cer /etc/docker/certs.d/registry.gcalls.cn/gcalls.cn.cert</span><br><span class="line">sudo cp /home/dev/.acme.sh/gcalls.cn/gcalls.cn.key /etc/docker/certs.d/registry.gcalls.cn/</span><br><span class="line">sudo cp /home/dev/.acme.sh/gcalls.cn/ca.cer /etc/docker/certs.d/registry.gcalls.cn/</span><br><span class="line">cp -a harbor-offline-installer-v2.1.2.tgz /works/k8s/</span><br><span class="line"><span class="built_in">cd</span> /works/k8s/</span><br><span class="line">tar zxvf harbor-offline-installer-v2.1.2.tgz</span><br><span class="line">sudo chown -R dev.dev /works/k8s/harbor</span><br><span class="line"><span class="comment">#https://goharbor.io/docs/2.1.0/install-config/configure-yml-file/</span></span><br><span class="line"><span class="comment">#Modifying the harbor.yml</span></span><br><span class="line"><span class="built_in">cd</span> /works/k8s/harbor</span><br><span class="line">cp -a harbor.yml.tmpl harbor.yml</span><br><span class="line">vim harbor.yml:</span><br><span class="line">hostname: registry.gcalls.cn</span><br><span class="line">https:</span><br><span class="line">  <span class="comment"># The path of cert and key files for nginx</span></span><br><span class="line">  <span class="comment">#certificate: /home/dev/.acme.sh/gcalls.cn/gcalls.cn.cer</span></span><br><span class="line">  certificate: /etc/docker/certs.d/registry.gcalls.cn/gcalls.cn.cert</span><br><span class="line">  private_key: /home/dev/.acme.sh/gcalls.cn/gcalls.cn.key</span><br><span class="line"> <span class="comment">#Execting the script </span></span><br><span class="line">./prepare</span><br><span class="line">sudo su - root</span><br><span class="line"><span class="built_in">cd</span> /works/k8s/harbor</span><br><span class="line"><span class="comment">#https://goharbor.io/docs/2.1.0/install-config/run-installer-script/</span></span><br><span class="line">./install.sh  </span><br><span class="line"><span class="comment">#If Harbor is running, stop and remove the existing instance.Your image data remains in the file system, so no data is lost.</span></span><br><span class="line"><span class="comment">#docker-compose down -v</span></span><br><span class="line"><span class="comment">#Restarting</span></span><br><span class="line">docker-compose stop</span><br><span class="line">docker-compose up -d</span><br><span class="line"><span class="comment">#Open a browser and enter https://yourdomain.com. It should display the Harbor interface</span></span><br><span class="line">https://registry.gcalls.cn</span><br><span class="line">admin/Harbor12345</span><br><span class="line">docker login registry.gcalls.cn</span><br><span class="line"><span class="comment">#troubleshooting</span></span><br><span class="line">Get https://registry.gcalls.cn/v2/: net/http: TLS handshake timeout</span><br><span class="line">If you got the error above, it seems you are using the proxy, try to exclude <span class="string">"registry.gcalls.cn"</span> <span class="keyword">in</span> the <span class="string">"NO_PROXY"</span>, the file is located:</span><br><span class="line">/etc/systemd/system/docker.service.d/http-proxy.conf</span><br><span class="line">Environment=<span class="string">"HTTP_PROXY=http://192.168.101.175:1082"</span></span><br><span class="line">Environment=<span class="string">"HTTPS_PROXY=http://192.168.101.175:1082"</span></span><br><span class="line">Environment=<span class="string">"NO_PROXY=127.0.0.1,localhost,10.0.0.0/8,172.0.0.0/8,192.168.0.0/16,*.zerofinance.net,*.aliyun.com,*.163.com,*.docker-cn.com,registry.gcalls.cn"</span></span><br><span class="line">systemctl daemon-reload &amp;&amp; systemctl restart docker</span><br><span class="line"><span class="comment">#Test</span></span><br><span class="line">docker pull hello-world</span><br><span class="line"><span class="comment">#must include the project name, like xwallet, and created the project beforehand:</span></span><br><span class="line">docker tag hello-world registry.gcalls.cn/xwallet/hello-world</span><br><span class="line">docker push registry.gcalls.cn/xwallet/hello-world</span><br><span class="line"></span><br><span class="line"><span class="comment">#If the registry work without http, need to add the following(https don't do it):</span></span><br><span class="line"><span class="comment">#server-side</span></span><br><span class="line"><span class="comment">#vim /etc/docker/daemon.json</span></span><br><span class="line"><span class="comment">#"insecure-registries" : ["localhost:32000", "192.168.95.233:32000"]</span></span><br><span class="line"><span class="comment">#client-side</span></span><br><span class="line"><span class="comment">#"insecure-registries" : ["192.168.95.233:32000"]</span></span><br><span class="line"><span class="comment">#Don't forget rebooting docker</span></span><br></pre></td></tr></table></figure>
<h4 id="docker-registry2"><a href="#docker-registry2" class="headerlink" title="docker registry2"></a>docker registry2</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo su - dev</span><br><span class="line"><span class="comment">#ssl</span></span><br><span class="line">acme.sh --issue --dns dns_dp -d registry.gcalls.cn</span><br><span class="line"></span><br><span class="line"><span class="comment">#install</span></span><br><span class="line">mkdir -p /works/docker/registry</span><br><span class="line"></span><br><span class="line">docker run -d \</span><br><span class="line">    --name private_registry  --restart=always \</span><br><span class="line">    -e SETTINGS_FLAVOUR=dev \</span><br><span class="line">    -e STORAGE_PATH=/registry-storage \</span><br><span class="line">    -v /works/docker/registry:/var/lib/registry \</span><br><span class="line">    -u root \</span><br><span class="line">    -p 5000:5000 \</span><br><span class="line">    -v /home/dev/.acme.sh/registry.gcalls.cn:/certs \</span><br><span class="line">    -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/fullchain.cer \</span><br><span class="line">    -e REGISTRY_HTTP_TLS_KEY=/certs/registry.gcalls.cn.key \</span><br><span class="line">    registry:2</span><br><span class="line"></span><br><span class="line"><span class="comment">#test</span></span><br><span class="line">docker pull hello-world</span><br><span class="line">docker tag hello-world registry.gcalls.cn:5000/hello-world</span><br><span class="line">docker push registry.gcalls.cn:5000/hello-world</span><br></pre></td></tr></table></figure>
<h4 id="kind"><a href="#kind" class="headerlink" title="kind"></a>kind</h4><p>Not Recommend.</p>
<p>Reference：<a href="https://kind.sigs.k8s.io/docs/user/quick-start/" target="_blank" rel="noopener">https://kind.sigs.k8s.io/docs/user/quick-start/</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Download the latest version of Kind</span></span><br><span class="line">curl -Lo ./kind https://github.com/kubernetes-sigs/kind/releases/download/v0.9.0/kind-$(uname)-amd64</span><br><span class="line"><span class="comment"># Make the binary executable</span></span><br><span class="line">chmod +x ./kind</span><br><span class="line"><span class="comment"># Move the binary to your executable path</span></span><br><span class="line">sudo mv ./kind /usr/<span class="built_in">local</span>/bin/</span><br><span class="line"></span><br><span class="line"><span class="comment"># Check if the KUBECONFIG is not set</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$KUBECONFIG</span></span><br><span class="line"><span class="comment"># Check if the .kube directory is created &gt; if not, no need to create it</span></span><br><span class="line">ls <span class="variable">$HOME</span>/.kube</span><br><span class="line"><span class="comment"># Create the cluster and give it a name (optional)</span></span><br><span class="line"><span class="built_in">export</span> http_proxy=<span class="string">"http://192.168.101.175:1082"</span></span><br><span class="line"><span class="built_in">export</span> https_proxy=<span class="variable">$http_proxy</span></span><br><span class="line"><span class="built_in">export</span> no_proxy=<span class="string">"127.0.0.1,localhost,10.0.0.0/8,172.0.0.0/8,192.168.0.0/16,*.zerofinance.net,*.aliyun.com,*.163.com,*.docker-cn.com,registry.gcalls.cn"</span></span><br><span class="line">kind create cluster --name wslkind</span><br><span class="line">kind delete cluster --name wslkind</span><br><span class="line">kind get clusters</span><br><span class="line"><span class="comment"># Check if the .kube has been created and populated with files</span></span><br><span class="line">ls <span class="variable">$HOME</span>/.kube</span><br><span class="line">kubectl get nodes</span><br></pre></td></tr></table></figure>
<p>Notice: Kind clusters based on docker, cannot communicate with the internal docker container. Adding the extraPortMappings:</p>
<p>Reference：<a href="https://kind.sigs.k8s.io/docs/user/using-wsl2/" target="_blank" rel="noopener">https://kind.sigs.k8s.io/docs/user/using-wsl2/</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cluster-config.yml</span></span><br><span class="line">kind: Cluster</span><br><span class="line">apiVersion: kind.x-k8s.io/v1alpha4</span><br><span class="line">nodes:</span><br><span class="line">- role: control-plane</span><br><span class="line">  extraPortMappings:</span><br><span class="line">  - containerPort: 8080</span><br><span class="line">    hostPort: 8080</span><br><span class="line">    protocol: TCP</span><br><span class="line">  - containerPort: 30000</span><br><span class="line">    hostPort: 30000</span><br><span class="line">    protocol: TCP</span><br><span class="line"></span><br><span class="line">kind create cluster --config=cluster-config.yml</span><br><span class="line"><span class="comment">#kubectl run nginx --image=nginx --port=3000 --targetPort=80 --expose</span></span><br><span class="line">kubectl create deployment nginx --image=nginx</span><br><span class="line"><span class="comment">#kubectl create service nodeport nginx --tcp=81:80 --node-port=30000</span></span><br><span class="line">kubectl expose deployment nginx --<span class="built_in">type</span>=NodePort --name nginx --port=80 --target-port=80</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#access service </span></span><br><span class="line">curl localhost:30000</span><br></pre></td></tr></table></figure>
<h2 id="Local-development"><a href="#Local-development" class="headerlink" title="Local development"></a>Local development</h2><p>Reference：</p>
<ul>
<li><a href="https://www.telepresence.io/discussion/overview" target="_blank" rel="noopener">https://www.telepresence.io/discussion/overview</a></li>
<li><a href="https://github.com/cesartl/telepresence-k8s" target="_blank" rel="noopener">https://github.com/cesartl/telepresence-k8s</a></li>
<li><a href="https://kubernetes.io/zh/docs/tasks/debug-application-cluster/local-debugging/" target="_blank" rel="noopener">https://kubernetes.io/zh/docs/tasks/debug-application-cluster/local-debugging/</a></li>
<li><a href="https://cloud.google.com/community/tutorials/developing-services-with-k8s" target="_blank" rel="noopener">https://cloud.google.com/community/tutorials/developing-services-with-k8s</a></li>
</ul>
<h3 id="telepresence"><a href="#telepresence" class="headerlink" title="telepresence"></a>telepresence</h3><p><a href="https://www.telepresence.io/reference/windows" target="_blank" rel="noopener">https://www.telepresence.io/reference/windows</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#For Windows:</span></span><br><span class="line">1. Install Windows Subsystem <span class="keyword">for</span> Linux.</span><br><span class="line">2. Start the BASH.exe program.</span><br><span class="line">3. Install Telepresence by following the Ubuntu instructions above.</span><br><span class="line"></span><br><span class="line"><span class="comment">#For ubuntu:</span></span><br><span class="line">curl -s https://packagecloud.io/install/repositories/datawireio/telepresence/script.deb.sh | sudo bash</span><br><span class="line">sudo apt install --no-install-recommends telepresence</span><br><span class="line"></span><br><span class="line"><span class="comment">#For CentOS:</span></span><br><span class="line">sudo yum install torsocks sshfs conntrack python3 -y</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/telepresenceio/telepresence.git /Developer/telepresence \</span><br><span class="line"> &amp;&amp; <span class="built_in">cd</span> /Developer/telepresence \</span><br><span class="line"> &amp;&amp; sudo env PREFIX=/usr/<span class="built_in">local</span> ./install.sh</span><br></pre></td></tr></table></figure>
<h3 id="Develop"><a href="#Develop" class="headerlink" title="Develop"></a>Develop</h3><ul>
<li><a href="https://anjia0532.github.io/2019/01/21/debug-cloud-native/" target="_blank" rel="noopener">https://anjia0532.github.io/2019/01/21/debug-cloud-native/</a></li>
<li><a href="https://www.telepresence.io/tutorials/docker" target="_blank" rel="noopener">https://www.telepresence.io/tutorials/docker</a></li>
<li><a href="https://www.telepresence.io/tutorials/kubernetes" target="_blank" rel="noopener">https://www.telepresence.io/tutorials/kubernetes</a></li>
<li><a href="https://github.com/telepresenceio/telepresence/tree/master/examples/guestbook" target="_blank" rel="noopener">https://github.com/telepresenceio/telepresence/tree/master/examples/guestbook</a></li>
<li><a href="https://github.com/cesartl/telepresence-k8s" target="_blank" rel="noopener">https://github.com/cesartl/telepresence-k8s</a></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://www.telepresence.io/tutorials/java</span></span><br><span class="line"><span class="comment">#kubectl apply -f https://raw.githubusercontent.com/telepresenceio/telepresence/master/docs/tutorials/hello-world.yaml</span></span><br><span class="line"><span class="comment">#kubectl create deployment hello-world --image=datawire/hello-world</span></span><br><span class="line"><span class="comment">#kubectl expose deployment hello-world --type=LoadBalancer --port=8000</span></span><br><span class="line"><span class="comment">#$ curl 127.0.0.1:8000</span></span><br><span class="line"><span class="comment">#Hello, world!</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/cesartl/telepresence-k8s</span><br><span class="line"><span class="built_in">cd</span> telepresence-k8s</span><br><span class="line"><span class="comment">#Setting up Quote Of the Moment Service</span></span><br><span class="line">kubectl run qotm --image=datawire/qotm:1.3 --port=5000 --expose</span><br><span class="line"><span class="comment">#Basic profile</span></span><br><span class="line"><span class="comment">#Using the basic profile, service disovery using K8S API is disable; The Ribbon client use the service #host name directly:</span></span><br><span class="line">qotm:</span><br><span class="line">    ribbon:</span><br><span class="line">        listOfServers: qotm:5000</span><br><span class="line"></span><br><span class="line"><span class="comment">#telepresence --docker-run --rm -it pstauffer/curl -- curl http://hello-world:8000/</span></span><br><span class="line"><span class="comment">#telepresence --new-deployment telepresence-k8s --expose 8080:8080 --run-shell</span></span><br><span class="line"><span class="comment">#telepresence --new-deployment telepresence-k8s --expose 8080 --expose 8081 --run-shell</span></span><br><span class="line"><span class="comment">#telepresence --swap-deployment telepresence-k8s --docker-run --rm -it --name mynginx -p 8080:80 nginx</span></span><br><span class="line"><span class="comment">#telepresence --new-deployment telepresence-k8s --docker-run --rm -it --name mynginx -p 8081:80 nginx</span></span><br><span class="line"><span class="comment">#telepresence --swap-deployment hello-world --expose 8000 --run python3 -m http.server 8000 &amp;</span></span><br><span class="line">telepresence --new-deployment telepresence-k8s --run-shell</span><br><span class="line"></span><br><span class="line"><span class="comment">#Notice: Some of spring-boot versions don't support remote debug through mvnDebug or MAVEN_DEBUG_OPTS:</span></span><br><span class="line"><span class="comment">#cat /Developer/apache-maven-3.3.9/bin/mvnDebug</span></span><br><span class="line"><span class="comment">#MAVEN_DEBUG_OPTS="-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000"</span></span><br><span class="line">&gt;<span class="built_in">cd</span> /mnt/d/Developer/workspace/telepresence-k8s/</span><br><span class="line">&gt;<span class="built_in">export</span> KUBERNETES_NAMESPACE=default</span><br><span class="line">&gt;<span class="built_in">export</span> PROFILES=basic</span><br><span class="line">&gt;mvn spring-boot:run -Dspring-boot.run.jvmArguments=<span class="string">"-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000"</span></span><br><span class="line"><span class="comment">#Preparing to Execute Maven in Debug Mode</span></span><br><span class="line"><span class="comment">#It'll pause until the client is connected, you can set suspend=n to against it.</span></span><br><span class="line"><span class="comment">#Listening for transport dt_socket at address: 8000</span></span><br><span class="line"><span class="comment">#Notice：pom.xml musn't add the section，or you cannot remote debug:</span></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;</span><br><span class="line">    &lt;optional&gt;<span class="literal">true</span>&lt;/optional&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"><span class="comment">#Testing:</span></span><br><span class="line">curl localhost:8080/rest/quote/cesar</span><br></pre></td></tr></table></figure>
<p>Notice: </p>
<p>Making sure “KUBERNETES_NAMESPACE” is set in the OS environment. You can set it of “remoteEnv” of devcontainer.json file if you develop with VSCODE.</p>
<h3 id="JRebel"><a href="#JRebel" class="headerlink" title="JRebel"></a>JRebel</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://www.jrebel.com/success/products/jrebel/free-trial</span></span><br><span class="line"><span class="comment">#https://www.jrebel.com/products/jrebel/quickstart/eclipse/</span></span><br><span class="line"><span class="comment">#https://www.jrebel.com/products/jrebel/download/prev-releases</span></span><br><span class="line"><span class="comment">#https://manuals.jrebel.com/jrebel/standalone/activate.html</span></span><br><span class="line"><span class="comment">#Plugin for eclipse:</span></span><br><span class="line"><span class="comment">#update site: </span></span><br><span class="line">http://update.zeroturnaround.com/update-site</span><br><span class="line"><span class="comment">#Download ZIP</span></span><br><span class="line">http://update.zeroturnaround.com/update-site/update-site.zip</span><br><span class="line"></span><br><span class="line"><span class="comment">#Crack</span></span><br><span class="line"><span class="comment">#https://www.cnblogs.com/flyrock/archive/2019/09/23/11574617.html</span></span><br><span class="line"><span class="comment">#Generating GUID  from: </span></span><br><span class="line">https://www.guidgen.com/</span><br><span class="line"><span class="comment">#Activation Server URL： Pasting the following url on the "Licensing service"</span></span><br><span class="line">https://jrebel.qekang.com/&#123;GUID&#125;</span><br><span class="line">https://jrebel.qekang.com/d1b8919f-e1e9-4a8d-84da-0c43d75aa970</span><br><span class="line">aaa@bbb.com</span><br><span class="line"><span class="comment">#Activation for standalone:</span></span><br><span class="line">wget https://www.jrebel.com/download/jrebel/496</span><br><span class="line"><span class="built_in">cd</span> /Developer/jrebel/bin</span><br><span class="line">./activate.sh https://jrebel.qekang.com/d1b8919f-e1e9-4a8d-84da-0c43d75aa970 aaa@bbb.com</span><br><span class="line"></span><br><span class="line"><span class="comment">#https://manuals.jrebel.com/jrebel/standalone/springboot.html#spring-boot-2-x-using-maven</span></span><br><span class="line"><span class="comment">#https://manuals.jrebel.com/jrebel/standalone/config.html#rebel-xml</span></span><br><span class="line"><span class="comment">#https://www.javazhiyin.com/22460.html</span></span><br><span class="line">mvn spring-boot:run -Dspring-boot.run.jvmArguments=<span class="string">"-agentpath:/Developer/jrebel/lib/libjrebel64.so"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!!!Important!!!: Project must be located at linux folder, a windows folder located won't take affect by JRebel.</span></span><br><span class="line"><span class="comment">#If you see the following message, it works.</span></span><br><span class="line">2020-12-14 12:26:33 JRebel: Reloading class <span class="string">'com.ctl.telepresencek8s.DummyRestController'</span>.</span><br><span class="line">2020-12-14 12:26:38 JRebel: Reconfiguring bean <span class="string">'dummyRestController'</span> [com.ctl.telepresencek8s.DummyRestController]</span><br></pre></td></tr></table></figure>
<p>demo:</p>
<ul>
<li><a href="https://github.com/zq2599/blog_demos" target="_blank" rel="noopener">https://github.com/zq2599/blog_demos</a></li>
<li><a href="https://xinchen.blog.csdn.net/article/details/92394559" target="_blank" rel="noopener">https://xinchen.blog.csdn.net/article/details/92394559</a></li>
<li><a href="http://www.mydlq.club/article/31" target="_blank" rel="noopener">http://www.mydlq.club/article/31</a></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#account-service</span></span><br><span class="line"><span class="built_in">cd</span> /mnt/d/Developer/workspace/java-k8s/spring-cloud-k8s-account-service</span><br><span class="line">mvn clean install -Pk8s</span><br><span class="line"><span class="comment">#cd /mnt/d/Developer/workspace/java-k8s/spring-cloud-k8s-web-service</span></span><br><span class="line"><span class="comment">#mvn clean install -Pk8s</span></span><br><span class="line"><span class="comment">#telepresence --swap-deployment web-service --run-shell</span></span><br><span class="line">telepresence --new-deployment web-service --run-shell</span><br><span class="line"><span class="comment">#new-deployment will get the error message： </span></span><br><span class="line"><span class="comment">#Did not find any endpoints in ribbon in namespace [null] for name [account-service] and portName [null]</span></span><br><span class="line"><span class="comment">#https://github.com/telepresenceio/telepresence/issues/947</span></span><br><span class="line"><span class="comment">#You can fix this with:</span></span><br><span class="line"><span class="built_in">export</span> KUBERNETES_NAMESPACE=default</span><br><span class="line"><span class="built_in">cd</span> /mnt/d/Developer/workspace/java-k8s/spring-cloud-k8s-web-service</span><br><span class="line">mvn spring-boot:run -Dspring-boot.run.jvmArguments=<span class="string">"-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000"</span></span><br><span class="line">curl 127.0.0.1:8080/account</span><br><span class="line">kubectl scale --replicas=0 deployment account-service</span><br></pre></td></tr></table></figure>
<p>Notice: Some of spring-boot versions don’t support remote debug through mvnDebug or MAVEN_DEBUG_OPTS:</p>
<p><a href="https://docs.spring.io/spring-boot/docs/2.3.4.RELEASE/maven-plugin/reference/html/" target="_blank" rel="noopener">https://docs.spring.io/spring-boot/docs/2.3.4.RELEASE/maven-plugin/reference/html/</a></p>
<p>Fixed this by:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;plugin&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">    &lt;configuration&gt;</span><br><span class="line">      &lt;jvmArguments&gt;</span><br><span class="line">        -Xdebug -Xrunjdwp:transport=dt_socket,server=y,<span class="built_in">suspend</span>=n,address=8000</span><br><span class="line">      &lt;/jvmArguments&gt;</span><br><span class="line">    &lt;/configuration&gt;</span><br><span class="line">    &lt;executions&gt;</span><br><span class="line">        &lt;execution&gt;</span><br><span class="line">            &lt;goals&gt;</span><br><span class="line">                &lt;goal&gt;repackage&lt;/goal&gt;</span><br><span class="line">            &lt;/goals&gt;</span><br><span class="line">        &lt;/execution&gt;</span><br><span class="line">    &lt;/executions&gt;</span><br><span class="line">&lt;/plugin&gt;</span><br></pre></td></tr></table></figure>
<p>Or：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mvn spring-boot:run -Dspring-boot.run.jvmArguments=<span class="string">"-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000"</span></span><br></pre></td></tr></table></figure>
<h3 id="kubernetes-maven-plugin"><a href="#kubernetes-maven-plugin" class="headerlink" title="kubernetes-maven-plugin"></a>kubernetes-maven-plugin</h3><p><a href="https://www.eclipse.org/jkube/docs/kubernetes-maven-plugin" target="_blank" rel="noopener">https://www.eclipse.org/jkube/docs/kubernetes-maven-plugin</a></p>
<p>Building Kubernetes, strongly recommended.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Copying remote config into "~/.kube/config" of local</span></span><br><span class="line"><span class="comment">#https://github.com/eclipse/jkube/tree/master/quickstarts/maven/</span></span><br><span class="line"><span class="built_in">cd</span> /mnt/d/Developer/workspace/java-k8s/spring-cloud-k8s-account-service</span><br><span class="line"><span class="comment">#For private docker registry, the most mavenish way is to add a server to the Maven settings file /Developer/apache-maven-3.3.9/conf/settings.xml</span></span><br><span class="line">&lt;server&gt;</span><br><span class="line">    &lt;id&gt;registry.gcalls.cn&lt;/id&gt;</span><br><span class="line">    &lt;username&gt;dave.zhao&lt;/username&gt;</span><br><span class="line">    &lt;password&gt;******&lt;/password&gt;</span><br><span class="line">&lt;/server&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#Generating the configuration automatically, remember don't adding "dockerHost" and "images" selection,</span></span><br><span class="line"><span class="comment">#Or will be generated two image section in the deployment yaml file:</span></span><br><span class="line">&lt;plugin&gt;</span><br><span class="line">    &lt;groupId&gt;org.eclipse.jkube&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;kubernetes-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.1.0&lt;/version&gt;</span><br><span class="line">    &lt;executions&gt;</span><br><span class="line">        &lt;execution&gt;</span><br><span class="line">            &lt;id&gt;fmp&lt;/id&gt;</span><br><span class="line">            &lt;goals&gt;</span><br><span class="line">                &lt;goal&gt;resource&lt;/goal&gt;</span><br><span class="line">                &lt;goal&gt;build&lt;/goal&gt;</span><br><span class="line">                &lt;goal&gt;push&lt;/goal&gt;</span><br><span class="line">                &lt;goal&gt;apply&lt;/goal&gt;</span><br><span class="line">            &lt;/goals&gt;</span><br><span class="line">        &lt;/execution&gt;</span><br><span class="line">    &lt;/executions&gt;</span><br><span class="line">    &lt;configuration&gt;   </span><br><span class="line">        &lt;resources&gt;</span><br><span class="line">            &lt;imagePullPolicy&gt;Always&lt;/imagePullPolicy&gt;</span><br><span class="line">        &lt;/resources&gt;</span><br><span class="line">        &lt;enricher&gt;</span><br><span class="line">            &lt;config&gt;</span><br><span class="line">                &lt;fmp-service&gt;</span><br><span class="line">                    &lt;<span class="built_in">type</span>&gt;NodePort&lt;/<span class="built_in">type</span>&gt;</span><br><span class="line">                &lt;/fmp-service&gt;</span><br><span class="line">            &lt;/config&gt;</span><br><span class="line">        &lt;/enricher&gt;</span><br><span class="line">    &lt;/configuration&gt;</span><br><span class="line">&lt;/plugin&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#Using the external Dockerfile and deployment.yaml/service.yaml：</span></span><br><span class="line"><span class="comment">#https://www.eclipse.org/jkube/docs/kubernetes-maven-plugin#external-dockerfile</span></span><br><span class="line">&lt;plugin&gt;</span><br><span class="line">    &lt;groupId&gt;org.eclipse.jkube&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;kubernetes-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.1.0&lt;/version&gt;</span><br><span class="line">    &lt;executions&gt;</span><br><span class="line">        &lt;execution&gt;</span><br><span class="line">            &lt;id&gt;fmp&lt;/id&gt;</span><br><span class="line">            &lt;goals&gt;</span><br><span class="line">                &lt;goal&gt;build&lt;/goal&gt;</span><br><span class="line">                &lt;goal&gt;push&lt;/goal&gt;</span><br><span class="line">                &lt;goal&gt;resource&lt;/goal&gt;</span><br><span class="line">                <span class="comment">#&lt;!-- Don't use deploy, or twice build was triggered --&gt;</span></span><br><span class="line">                &lt;goal&gt;apply&lt;/goal&gt;</span><br><span class="line">            &lt;/goals&gt;</span><br><span class="line">        &lt;/execution&gt;</span><br><span class="line">    &lt;/executions&gt;</span><br><span class="line">    &lt;configuration&gt;   </span><br><span class="line">        &lt;!-- &lt;dockerHost&gt;tcp://registry.gcalls.cn:2375&lt;/dockerHost&gt; --&gt;</span><br><span class="line">        &lt;dockerHost&gt;tcp://localhost:2375&lt;/dockerHost&gt;</span><br><span class="line">        &lt;images&gt;</span><br><span class="line">            &lt;image&gt;</span><br><span class="line">            &lt;name&gt;registry.gcalls.cn/xwallet/<span class="variable">$&#123;project.name&#125;</span>:<span class="variable">$&#123;project.version&#125;</span>&lt;/name&gt;</span><br><span class="line">            &lt;build&gt;</span><br><span class="line">                &lt;!-- https://github.com/eclipse/jkube/issues/149 --&gt;</span><br><span class="line">                &lt;assembly&gt;</span><br><span class="line">                    &lt;name&gt;target&lt;/name&gt;</span><br><span class="line">                &lt;/assembly&gt;</span><br><span class="line">                &lt;dockerFile&gt;<span class="variable">$&#123;project.basedir&#125;</span>/src/main/docker/Dockerfile&lt;/dockerFile&gt; </span><br><span class="line">                &lt;!-- &lt;contextDir&gt;<span class="variable">$&#123;project.basedir&#125;</span>&lt;/contextDir&gt;  --&gt;</span><br><span class="line">                &lt;filter&gt;@&lt;/filter&gt;</span><br><span class="line">            &lt;/build&gt;</span><br><span class="line">            &lt;/image&gt;</span><br><span class="line">        &lt;/images&gt;</span><br><span class="line">        &lt;enricher&gt;</span><br><span class="line">            &lt;config&gt;</span><br><span class="line">                &lt;fmp-service&gt;</span><br><span class="line">                    &lt;<span class="built_in">type</span>&gt;NodePort&lt;/<span class="built_in">type</span>&gt;</span><br><span class="line">                &lt;/fmp-service&gt;</span><br><span class="line">            &lt;/config&gt;</span><br><span class="line">        &lt;/enricher&gt;</span><br><span class="line">    &lt;/configuration&gt;</span><br><span class="line">&lt;/plugin&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#Only include the jar file</span></span><br><span class="line">.maven-dockerinclude:</span><br><span class="line">target/*.jar</span><br><span class="line"></span><br><span class="line"><span class="comment">#src/man/docker/Dockerfile</span></span><br><span class="line">FROM java:8-jdk</span><br><span class="line">RUN mkdir /app</span><br><span class="line">WORKDIR /app</span><br><span class="line">ENV APPNAME=account-service \</span><br><span class="line">    VERSION=0.0.1-SNAPSHOT \</span><br><span class="line">    CONFIG=/config/</span><br><span class="line">RUN ln -snf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; <span class="built_in">echo</span> Asia/Shanghai &gt; /etc/timezone</span><br><span class="line">COPY target/<span class="variable">$&#123;APPNAME&#125;</span>-<span class="variable">$&#123;VERSION&#125;</span>.jar /app/</span><br><span class="line">ENTRYPOINT [<span class="string">"sh"</span>, <span class="string">"-c"</span>, <span class="string">"java -Djava.security.egd=file:/dev/./urandom -jar /app/<span class="variable">$&#123;APPNAME&#125;</span>-<span class="variable">$&#123;VERSION&#125;</span>.jar --spring.config.location=<span class="variable">$&#123;CONFIG&#125;</span> --spring.profiles.active=@spring.profile@"</span>]</span><br><span class="line">EXPOSE 8100</span><br><span class="line"></span><br><span class="line"><span class="comment">#src/man/jkube/account-service-deployment.yml</span></span><br><span class="line">kind: Deployment</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">metadata:</span><br><span class="line">  name: account-service</span><br><span class="line">  namespace: default</span><br><span class="line">  labels:</span><br><span class="line">    app: account-service</span><br><span class="line">    group: com.xwallet</span><br><span class="line">    version: 0.0.1-SNAPSHOT</span><br><span class="line">    provider: jkube</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: account-service</span><br><span class="line">      group: com.xwallet</span><br><span class="line">      version: 0.0.1-SNAPSHOT</span><br><span class="line">      provider: jkube</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: account-service</span><br><span class="line">        group: com.xwallet</span><br><span class="line">        version: 0.0.1-SNAPSHOT</span><br><span class="line">        provider: jkube</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: account-service</span><br><span class="line">        <span class="comment">#image: registry.gcalls.cn/xwallet/account-service:0.0.1-SNAPSHOT</span></span><br><span class="line">        imagePullPolicy: Always</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 8089</span><br><span class="line"></span><br><span class="line"><span class="comment">#src/man/jkube/account-service-service.yml</span></span><br><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: account-service</span><br><span class="line">  namespace: default</span><br><span class="line">  labels:</span><br><span class="line">    app: account-service</span><br><span class="line">    group: com.xwallet</span><br><span class="line">    version: 0.0.1-SNAPSHOT</span><br><span class="line">    provider: jkube</span><br><span class="line">spec:</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line">  ports:</span><br><span class="line">  - protocol: TCP</span><br><span class="line">    name: http</span><br><span class="line">    port: 8080</span><br><span class="line">    targetPort: 8080</span><br><span class="line">  selector:</span><br><span class="line">    app: account-service</span><br><span class="line">    group: com.xwallet</span><br><span class="line">    version: 0.0.1-SNAPSHOT</span><br><span class="line">    provider: jkube</span><br><span class="line"></span><br><span class="line"><span class="comment">#Running:</span></span><br><span class="line"><span class="comment">#If don't define the dockerHost or private registry parameter, using the following command:</span></span><br><span class="line"><span class="comment">#export DOCKER_HOST="tcp://registry.gcalls.cn:2375"</span></span><br><span class="line"><span class="comment">#mvn clean install k8s:push k8s:deploy -Pk8s -Ddocker.registry=registry.gcalls.cn</span></span><br><span class="line"><span class="comment">#mvn clean install k8s:build k8s:push k8s:resource k8s:apply -Dmaven.test.skip=true -Dspring.profile=dev -Pk8s</span></span><br><span class="line">mvn clean install -Pk8s</span><br><span class="line"></span><br><span class="line"><span class="comment">#Building by parameters</span></span><br><span class="line"><span class="comment">#Dockerfile</span></span><br><span class="line"><span class="comment">#ENTRYPOINT ["sh", "-c", "java -Djava.security.egd=file:/dev/./urandom -jar /app/$&#123;APPNAME&#125;-$&#123;VERSION&#125;.jar --spring.profiles.active=@spring.profile@"]</span></span><br><span class="line"><span class="comment">#OR</span></span><br><span class="line">&lt;profiles&gt;</span><br><span class="line">  &lt;profile&gt;</span><br><span class="line">      &lt;id&gt;k8s&lt;/id&gt;</span><br><span class="line">        &lt;properties&gt;</span><br><span class="line">            &lt;spring.profile&gt;default&lt;/spring.profile&gt;</span><br><span class="line">        &lt;/properties&gt;</span><br><span class="line"><span class="comment">#OR</span></span><br><span class="line">mvn clean install -Pk8s -Dspring.profile=dev</span><br><span class="line"></span><br><span class="line"><span class="comment">#Exposing extra port of existing docker container </span></span><br><span class="line"><span class="comment">#https://blog.csdn.net/lsziri/article/details/69396990</span></span><br><span class="line"><span class="comment">#Assuming docker container's name is: asset-app</span></span><br><span class="line">docker inspect asset-app | grep IPAddress</span><br><span class="line">docker port asset-app</span><br><span class="line">sudo iptables -t nat -nvL --line-number</span><br><span class="line"><span class="comment">#Exposing 5100 of host -&gt; 5100 of container </span></span><br><span class="line">sudo iptables -t nat -A PREROUTING  -p tcp -m tcp --dport 5100 -j DNAT --to-destination  10.244.47.4:5100 </span><br><span class="line">sudo iptables-save</span><br><span class="line"><span class="comment">#docker port asset-app couldn't show the 5100, do this to view:</span></span><br><span class="line">sudo iptables -t nat -nvL | grep 10.244.47.4</span><br><span class="line"></span><br><span class="line"><span class="comment">#Push images to aliyun</span></span><br><span class="line">docker login --username=zhaoxunyong@139.com registry.cn-shenzhen.aliyuncs.com</span><br><span class="line">docker tag [ImageId] registry.cn-shenzhen.aliyuncs.com/zerofinance/fisco:[镜像版本号]</span><br><span class="line">docker push registry.cn-shenzhen.aliyuncs.com/zerofinance/fisco:[镜像版本号]</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>iptables</title>
    <url>/2021/03/iptables.html</url>
    <content><![CDATA[<p>记录一下iptables相关的命令。</p>
<a id="more"></a>
<h2 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#(n：不进行host反查，v：详细信息)</span><br><span class="line">iptables -nvL</span><br><span class="line">iptables -nL --line-number</span><br><span class="line">#Only for INPUT</span><br><span class="line">iptables -nL INPUT --line-number</span><br><span class="line">#Delete rule</span><br><span class="line">iptables -D INPUT 2</span><br><span class="line"></span><br><span class="line">#Example</span><br><span class="line">iptables -t nat -nL V2RAY</span><br><span class="line">iptables -t nat -nL V2RAY --line-number</span><br><span class="line">iptables -t nat -D V2RAY 11</span><br><span class="line"></span><br><span class="line">#插入到INPUT链中的第7行位置</span><br><span class="line">iptables -I INPUT 7 -i eth0 -p tcp -m tcp --dport 11111 -j ACCEPT </span><br><span class="line">#最前</span><br><span class="line">iptables -I</span><br><span class="line">#最后</span><br><span class="line">iptables -A</span><br><span class="line"></span><br><span class="line">#Delete</span><br><span class="line">iptables -D INPUT -i eth0 -p udp -m udp --dport 11111 -j ACCEPT </span><br><span class="line">iptables -nL INPUT --line-number</span><br><span class="line">iptables -D INPUT 7</span><br><span class="line"></span><br><span class="line">#Clean iptables</span><br><span class="line">iptables -t nat -D OUTPUT -p tcp -j XRAY</span><br><span class="line">#iptables -t nat -F XRAY</span><br><span class="line">iptables -t nat -F #删除前需要清空策略，否则删除不掉  </span><br><span class="line">iptables -t nat -X XRAY</span><br><span class="line">iptables -t nat -Z XRAY</span><br></pre></td></tr></table></figure>
<h2 id="设定"><a href="#设定" class="headerlink" title="设定"></a>设定</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-F：清除所有已定的规则</span><br><span class="line">-X：除掉所有用户“自定义”的链</span><br><span class="line">-Z：将所有的chain的计数与流量统计归零</span><br><span class="line">-A：插入规则的最后面</span><br><span class="line">-I：插入变为第一条规则</span><br><span class="line">-i：进入网络接口(eth0,lo等)</span><br><span class="line">-o：传出网络接口</span><br><span class="line">-p：协议(tcp、udp、icmp及all或者!ICMP=tcp/udp)</span><br><span class="line">-s：来源IP匹配：192.168.0.0/24或192.168.0.0/255.255.255.0</span><br><span class="line">--sport：来源端口</span><br><span class="line">-d：目标网络</span><br><span class="line">--dport：目的端口</span><br><span class="line">-j：操作：ACCEPT/DROP/REJECT/LOG</span><br><span class="line">-P：策略：INPUT/OUTPUT/FORWARD</span><br><span class="line">-m：模块：state/mac</span><br><span class="line">--state：状态</span><br><span class="line">            INVAID：无效</span><br><span class="line">            ESTABLISHED：联机成功的</span><br><span class="line">            NEW：新建的包</span><br><span class="line">            RELATED：成功发邮并返回的包</span><br><span class="line">注意：指定port时必须指定是udp还是tcp</span><br><span class="line">A PREROUTING -p tcp --dport 8022 -j DNAT --to-destination 192.168.0.133:22</span><br><span class="line">-A POSTROUTING -d 192.168.0.133 -p tcp --dport 22 -j SNAT --to 192.168.0.9</span><br></pre></td></tr></table></figure>
<p>例子：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">iptables -F</span><br><span class="line">iptables -X</span><br><span class="line">iptables -Z</span><br><span class="line">iptables -P INPUT DROP</span><br><span class="line">iptables -P OUTPUT ACCEPT</span><br><span class="line">iptables -P FORWARD ACCEPT</span><br><span class="line">#内部循环放行</span><br><span class="line">iptables -A INPUT -i lo -j ACCEPT</span><br><span class="line">#联机成功、并且成功发出与返回的包放行</span><br><span class="line">iptables -A INPUT -i eth0 -m state --state RELATED,ESTABLISHED -j ACCEPT</span><br><span class="line">iptables -A INPUT -i eth0 -s 192.168.0.5 -j ACCEPT</span><br><span class="line">iptables -A INPUT -i eth0 -p icmp --icmp-type any -j ACCEPT</span><br><span class="line">#只允许本机连接mysql</span><br><span class="line">iptables -A INPUT -s ! 127.0.0.1 -p tcp -m tcp --dport 3306 -j REJECT</span><br></pre></td></tr></table></figure>
<h2 id="备份与还原"><a href="#备份与还原" class="headerlink" title="备份与还原"></a>备份与还原</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">iptables-save &gt; /etc/sysconfig/iptables.bak</span><br></pre></td></tr></table></figure>
<p>格式与/etc/sysconfig/iptables中的内容一样</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">iptables-restore &lt; /etc/sysconfig/iptables.bak</span><br></pre></td></tr></table></figure>
<p>加载/etc/sysconfig/iptables.bak中的内容，不会写入/etc/sysconfig/iptables中</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/etc/init.d/iptables save</span><br></pre></td></tr></table></figure>
<p>保存内容至/etc/sysconfig/iptables中，并可以使用service iptables start启动</p>
<h2 id="NAT"><a href="#NAT" class="headerlink" title="NAT"></a>NAT</h2><p>端口转发：</p>
<p>1.到本机端口：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">iptables -t nat -A PREROUTING -p tcp -m tcp --dport 80 -j REDIRECT --to-ports 81</span><br></pre></td></tr></table></figure></p>
<p>2.到其它IP端口：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">iptables -t nat -A PREROUTING -p tcp -m tcp --dport 80 -j DNAT --to 192.168.0.10:81</span><br></pre></td></tr></table></figure></p>
<p>3.修改流入包的信息：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">iptables -t nat -A PREROUTING -d 183.63.2.202 -j DNAT --to-destination 92.168.0.10</span><br></pre></td></tr></table></figure></p>
<p>4.修改流出包的信息：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">iptables -t nat -A POSTROUTING -s 192.168.0.0/24 -j SNAT --to-source 183.63.2.202</span><br></pre></td></tr></table></figure></p>
<p>5.ip伪装（当为动态IP时使用ip装，当为静态IP时可用第4条）：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">iptables -t nat -A POSTROUTING -s 192.168.0.0/24 -o eth0 -j MASQUERADE</span><br></pre></td></tr></table></figure></p>
<p>6.打开路由：</p>
<p>永久修改：/etc/sysctl.conf中的net.ipv4.ip_forward=1，生效：sysctl -p</p>
<p>临时修改：echo 1 &gt; /proc/sys/net/ipv4/ip_forward，重启后失效</p>
<p>7.屏蔽某个网站：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">iptables -A FORWARD -m string --string &quot;qq.com&quot; --algo bm -j DROP</span><br></pre></td></tr></table></figure></p>
<p>–algo:bm|kmp：bm比kmp快</p>
<p>8.禁止某个IP段不能上网：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">iptables -A FORWARD -m iprange --src-range 192.168.0.0-192.168.0.100 -j DROP</span><br></pre></td></tr></table></figure></p>
<p>其中：<br>–src-range：源地址  –dst-range：目的地址</p>
<p>9.多个端口：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-m --multport --sport 80,82</span><br></pre></td></tr></table></figure></p>
<p>–sport 80:82 #80到82端口</p>
<p>10.时间限制：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-m time --time-start 00:00 --time-stop 13:00</span><br></pre></td></tr></table></figure></p>
<p>11.限速：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">iptables -A FORWARD -s 192.168.0.158 -m limit --limit 20/s -j ACCEPT</span><br><span class="line">iptables -A FORWARD -s 192.168.0.158 -j DROP</span><br></pre></td></tr></table></figure></p>
<p>20/s表示限速30k/s：</p>
<p>先用ifconfig查看MUT(1500字节)，30k/1500B=20个MTU</p>
<p>12.禁止其他主机ping防火墙主机，但是允许从防火墙上ping其他主机:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -p icmp --icmp-type Echo-Request -j DROP</span><br><span class="line">iptables -A INPUT -p icmp --icmp-type Echo-Reply -j ACCEPT</span><br><span class="line">iptables -A INPUT -p icmp --icmp-type destination-Unreachable -j ACCEPT</span><br></pre></td></tr></table></figure>
<p>13.开放vpn服务:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -p tcp -m multiport --destination-port 47,1723 -j ACCEPT</span><br><span class="line">iptables -A INPUT -p gre -j ACCEPT</span><br><span class="line">iptables -A OUTPUT -p tcp -m multiport --source-port 47,1723 -j ACCEPT</span><br><span class="line">iptables -A OUTPUT -p gre -j ACCEPT</span><br></pre></td></tr></table></figure></p>
<h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Generated by iptables-save v1.3.5 on Tue Jun  8 08:43:18 2010</span><br><span class="line">*nat</span><br><span class="line">:PREROUTING ACCEPT [9:721]</span><br><span class="line">:POSTROUTING ACCEPT [0:0]</span><br><span class="line">:OUTPUT ACCEPT [0:0]</span><br><span class="line">#-A PREROUTING -d 183.63.2.202 -j DNAT --to-destination 192.168.0.0/24</span><br><span class="line">#-A POSTROUTING -s 192.168.0.0/24 -j SNAT --to-source 183.63.2.202</span><br><span class="line"></span><br><span class="line">-A POSTROUTING -s 192.168.0.0/24 -j MASQUERADE</span><br><span class="line"></span><br><span class="line">#-A PREROUTING  -s 192.168.0.0/24 -p tcp -m tcp --dport 81 -j DNAT --to 10.35.60.79:8443</span><br><span class="line">#-A PREROUTING -p tcp -m tcp --dport 80 -j REDIRECT --to-ports 81</span><br><span class="line">-A PREROUTING -p tcp -m tcp --dport 81 -j REDIRECT --to-ports 80</span><br><span class="line">#-A PREROUTING -p tcp -m tcp --dport 23 -j DNAT --to 192.168.0.167:22</span><br><span class="line">COMMIT</span><br><span class="line"># Completed on Tue Jun  8 08:43:18 2010</span><br><span class="line"># Generated by iptables-save v1.3.5 on Tue Jun  8 08:43:18 2010</span><br><span class="line">*filter</span><br><span class="line">:INPUT DROP [30:2480]</span><br><span class="line">:FORWARD ACCEPT [0:0]</span><br><span class="line">:OUTPUT ACCEPT [104:11777]</span><br><span class="line">-A INPUT -i lo -j ACCEPT</span><br><span class="line">-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT</span><br><span class="line">#-A INPUT -p tcp -m tcp --sport 1:1023 --dport 1:1023 --tcp-flags FIN,SYN,RST,ACK SYN -j DROP</span><br><span class="line">#open ssh</span><br><span class="line">#-A INPUT -s 192.168.0.0/255.255.255.0 -p tcp -m tcp --dport 22 -j ACCEPT</span><br><span class="line">-A INPUT -p tcp -m tcp --dport 22 -j ACCEPT</span><br><span class="line">#-A INPUT -p tcp -m tcp --dport 22 -j ACCEPT</span><br><span class="line">#open smb</span><br><span class="line">-A INPUT -s 192.168.0.0/255.255.255.0 -p udp -m udp --dport 137:138 -j ACCEPT</span><br><span class="line">-A INPUT -s 192.168.0.0/255.255.255.0 -p tcp -m tcp --dport 139 -j ACCEPT</span><br><span class="line">-A INPUT -s 192.168.0.0/255.255.255.0 -p tcp -m tcp --dport 445 -j ACCEPT</span><br><span class="line">#open postfix</span><br><span class="line">-A INPUT -p tcp -m tcp --dport 25 -j ACCEPT</span><br><span class="line">-A INPUT -p tcp -m tcp --dport 110 -j ACCEPT</span><br><span class="line">-A INPUT -p tcp -m tcp --dport 143 -j ACCEPT</span><br><span class="line">-A INPUT -p tcp -m tcp --dport 53 -j ACCEPT</span><br><span class="line">#open mysql</span><br><span class="line">-A INPUT -s 192.168.0.0/255.255.255.0 -p tcp -m tcp --dport 3306 -j ACCEPT</span><br><span class="line">#-A INPUT --dport 3306 -j ACCEPT</span><br><span class="line">#open vnc</span><br><span class="line">-A INPUT -s 192.168.0.0/255.255.255.0 -p tcp -m tcp --dport 5801 -j ACCEPT</span><br><span class="line">-A INPUT -s 192.168.0.0/255.255.255.0 -p tcp -m tcp --dport 5901 -j ACCEPT</span><br><span class="line">#open http</span><br><span class="line">-A INPUT -p tcp -m tcp --dport 80 -j ACCEPT</span><br><span class="line">-A INPUT -p tcp -m tcp --dport 81 -j ACCEPT</span><br><span class="line">-A INPUT -s 192.168.0.0/255.255.255.0 -p tcp -m tcp --dport 8080 -j ACCEPT</span><br><span class="line">-A INPUT -s 192.168.0.0/255.255.255.0 -p tcp -m tcp --dport 8088 -j ACCEPT</span><br><span class="line">-A INPUT -s 192.168.0.0/255.255.255.0 -p tcp -m tcp --dport 10000 -j ACCEPT</span><br><span class="line">#open socket</span><br><span class="line">-A INPUT -s 192.168.0.0/255.255.255.0 -p tcp -m tcp --dport 5555 -j ACCEPT</span><br><span class="line">-A INPUT -s 192.168.0.0/255.255.255.0 -p tcp -m tcp --dport 5556 -j ACCEPT</span><br><span class="line">-A INPUT -s 192.168.0.0/255.255.255.0 -p tcp -m tcp --dport 6666 -j ACCEPT</span><br><span class="line">-A INPUT -s 192.168.0.0/255.255.255.0 -p tcp -m tcp --dport 6667 -j ACCEPT</span><br><span class="line">-A INPUT -s 192.168.0.0/255.255.255.0 -p tcp -m tcp --dport 7777 -j ACCEPT</span><br><span class="line">-A INPUT -s 192.168.0.0/255.255.255.0 -p tcp -m tcp --dport 7778 -j ACCEPT</span><br><span class="line">-A INPUT -s 192.168.0.0/255.255.255.0 -p tcp -m tcp --dport 7788 -j ACCEPT</span><br><span class="line">-A INPUT -s 192.168.0.0/255.255.255.0 -p tcp -m tcp --dport 7789 -j ACCEPT</span><br><span class="line">-A INPUT -s 192.168.0.0/255.255.255.0 -p tcp -m tcp --dport 8888 -j ACCEPT</span><br><span class="line">-A INPUT -s 192.168.0.0/255.255.255.0 -p tcp -m tcp --dport 8889 -j ACCEPT</span><br><span class="line">#open ping</span><br><span class="line">-A INPUT -s 192.168.0.0/255.255.255.0 -p icmp -m icmp --icmp-type any -j ACCEPT</span><br><span class="line">#dns</span><br><span class="line">-A INPUT -s 192.168.0.0/255.255.255.0 -p tcp -m tcp --dport 53 -j ACCEPT</span><br><span class="line">-A INPUT -s 192.168.0.0/255.255.255.0 -p udp -m udp --dport 53 -j ACCEPT</span><br><span class="line">#vpn</span><br><span class="line">-A INPUT -p tcp -m multiport --destination-port 47,1723 -j ACCEPT</span><br><span class="line">-A INPUT -p udp -m multiport --destination-port 47,1723 -j ACCEPT</span><br><span class="line">#openvpn</span><br><span class="line">#-A INPUT -s 192.168.0.0/255.255.255.0 -p tcp -m tcp --dport 444 -j ACCEPT</span><br><span class="line">#-A INPUT -p gre -j ACCEPT</span><br><span class="line">#nfs</span><br><span class="line">-A INPUT -s 192.168.0.0/255.255.255.0 -p tcp -m multiport --dport 111,2049 -j ACCEPT</span><br><span class="line">-A INPUT -s 192.168.0.0/255.255.255.0 -p udp -m multiport --dport 111,2049 -j ACCEPT</span><br><span class="line">-A INPUT -s 192.168.0.0/255.255.255.0 -p tcp --dport 10001:10004 -j ACCEPT</span><br><span class="line">-A INPUT -s 192.168.0.0/255.255.255.0 -p udp --dport 10001:10004 -j ACCEPT</span><br><span class="line">#forward</span><br><span class="line">#-A FORWARD -s 192.168.0.0/255.255.255.0 -j ACCEPT</span><br><span class="line">COMMIT</span><br><span class="line"># Completed on Tue Jun  8 08:43:18 2010</span><br><span class="line"># Generated by webmin</span><br><span class="line">*mangle</span><br><span class="line">:FORWARD ACCEPT [0:0]</span><br><span class="line">:INPUT ACCEPT [0:0]</span><br><span class="line">:OUTPUT ACCEPT [0:0]</span><br><span class="line">:PREROUTING ACCEPT [0:0]</span><br><span class="line">:POSTROUTING ACCEPT [0:0]</span><br><span class="line">COMMIT</span><br><span class="line"># Completed</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>istio学习总结</title>
    <url>/2021/09/istio%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93.html</url>
    <content><![CDATA[<p>istio学习总结</p>
<a id="more"></a>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>不使用micro.k8s中的istio插件。</p>
<ul>
<li><a href="https://istio.io/latest/docs/setup/getting-started/" target="_blank" rel="noopener">https://istio.io/latest/docs/setup/getting-started/</a></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://istio.io/latest/zh/docs/setup/install/istioctl/</span></span><br><span class="line">curl -L https://istio.io/downloadIstio | sh -</span><br><span class="line"><span class="built_in">cd</span> istio-1.11.4</span><br><span class="line"><span class="comment">#https://istio.io/latest/zh/docs/setup/getting-started/</span></span><br><span class="line">vim /etc/profile.d/istio.sh</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">"<span class="variable">$PATH</span>:/works/istio/istio-1.11.4/bin"</span></span><br><span class="line"></span><br><span class="line">. /etc/profile</span><br><span class="line"></span><br><span class="line">istioctl install --<span class="built_in">set</span> profile=demo -y</span><br><span class="line">kubectl label namespace default istio-injection=enabled</span><br><span class="line"></span><br><span class="line"><span class="comment">#Example</span></span><br><span class="line"><span class="comment">#https://blog.frognew.com/2021/07/learning-istio-1.10-01.html</span></span><br><span class="line">kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml</span><br><span class="line">kubectl get pods -w</span><br><span class="line"></span><br><span class="line">kubectl apply -f samples/bookinfo/networking/bookinfo-gateway.yaml</span><br><span class="line">kubectl get gateway</span><br><span class="line"></span><br><span class="line">istioctl analyze</span><br><span class="line">✔ No validation issues found when analyzing namespace: default.</span><br><span class="line"></span><br><span class="line">kubectl <span class="built_in">exec</span> <span class="string">"<span class="variable">$(kubectl get pod -l app=ratings -o jsonpath='&#123;.items[0].metadata.name&#125;')</span>"</span> -c ratings -- curl -s productpage:9080/productpage | grep -o <span class="string">"&lt;title&gt;.*&lt;/title&gt;"</span></span><br><span class="line"></span><br><span class="line">kubectl get svc istio-ingressgateway -n istio-system</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> INGRESS_HOST=$(kubectl get po -l istio=ingressgateway -n istio-system -o jsonpath=<span class="string">'&#123;.items[0].status.hostIP&#125;'</span>)</span><br><span class="line"><span class="comment">#export INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='&#123;.spec.ports[?(@.name=="http2")].port&#125;')</span></span><br><span class="line"><span class="built_in">export</span> INGRESS_PORT=$(kubectl get svc istio-ingressgateway -n istio-system|awk <span class="string">'&#123;print $5&#125;'</span>|sed <span class="string">'1d'</span>|awk -F <span class="string">','</span> <span class="string">'&#123;print $2&#125;'</span>|awk -F <span class="string">'/'</span> <span class="string">'&#123;print $1&#125;'</span>|awk -F <span class="string">':'</span> <span class="string">'&#123;print $2&#125;'</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> GATEWAY_URL=<span class="variable">$INGRESS_HOST</span>:<span class="variable">$INGRESS_PORT</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$GATEWAY_URL</span>"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"http://<span class="variable">$GATEWAY_URL</span>/productpage"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看仪表板</span></span><br><span class="line">kubectl apply -f samples/addons</span><br><span class="line">kubectl rollout status deployment/kiali -n istio-system</span><br><span class="line"></span><br><span class="line">istioctl dashboard --address 0.0.0.0 kiali</span><br><span class="line"></span><br><span class="line"><span class="comment">#istioctl dashboard kiali</span></span><br><span class="line">http://192.168.95.234:20001/kiali</span><br><span class="line"></span><br><span class="line"><span class="comment">#Mocking some traffic data:</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq 1 100); <span class="keyword">do</span> curl -s -o /dev/null <span class="string">"http://<span class="variable">$GATEWAY_URL</span>/productpage"</span>; <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#jinjecting sidecar with existing namespace</span></span><br><span class="line">https://istio.io/latest/docs/setup/additional-setup/sidecar-injection/</span><br><span class="line">kubectl label zerofinance-dev istio-injection=enabled</span><br><span class="line"><span class="comment">#Injection occurs at pod creation time. Kill the running pod and verify a new pod is created with the injected sidecar. The original pod has 1/1 READY containers, and the pod with injected sidecar has 2/2 READY containers.</span></span><br><span class="line">kubectl -n zerofinance-dev delete po --all</span><br><span class="line"></span><br><span class="line"><span class="comment">#Disable injection for the default namespace and verify new pods are created without the sidecar.</span></span><br><span class="line">kubectl label zerofinance-dev default istio-injection-</span><br></pre></td></tr></table></figure>
<h2 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#卸载application</span></span><br><span class="line">kubectl delete -f samples/addons</span><br><span class="line">istioctl manifest generate --<span class="built_in">set</span> profile=demo | kubectl delete --ignore-not-found=<span class="literal">true</span> -f -</span><br><span class="line">kubectl delete namespace istio-system</span><br><span class="line">kubectl label namespace default istio-injection-</span><br><span class="line"><span class="comment">#or https://istio.io/latest/zh/docs/examples/bookinfo/#cleanup</span></span><br><span class="line">samples/bookinfo/platform/kube/cleanup.sh</span><br><span class="line"></span><br><span class="line">kubectl get virtualservices   <span class="comment">#-- there should be no virtual services</span></span><br><span class="line">kubectl get destinationrules  <span class="comment">#-- there should be no destination rules</span></span><br><span class="line">kubectl get gateway           <span class="comment">#-- there should be no gateway</span></span><br><span class="line">kubectl get pods              <span class="comment">#-- the Bookinfo pods should be deleted</span></span><br><span class="line">kubectl get se                <span class="comment">#-- ServerEntity</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#卸载istio</span></span><br><span class="line"><span class="comment">#https://istio.io/latest/zh/docs/setup/install/istioctl/#uninstall</span></span><br><span class="line"><span class="comment">#可选的 --purge 参数将删除所有 Istio 资源，包括可能被其他 Istio 控制平面共享的、集群范围的资源。</span></span><br><span class="line">istioctl x uninstall --purge</span><br></pre></td></tr></table></figure>
<h2 id="bookinfo应用"><a href="#bookinfo应用" class="headerlink" title="bookinfo应用"></a>bookinfo应用</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://blog.frognew.com/2021/07/learning-istio-1.10-03.html</span></span><br><span class="line">kubectl get deploy -l app=reviews</span><br><span class="line">kubectl get pod -l app=reviews</span><br><span class="line"></span><br><span class="line"><span class="comment">#将请求路由到固定版本的微服务上</span></span><br><span class="line">kubectl apply -f samples/bookinfo/networking/destination-rule-all-mtls.yaml</span><br><span class="line"><span class="comment">#上面reviews微服务的destinationrule的subsets包含v1, v2, v3。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#接下来使用下面的命令创建VirtualService:</span></span><br><span class="line">kubectl apply -f samples/bookinfo/networking/virtual-service-all-v1.yaml</span><br><span class="line"><span class="comment">#reviews微服务的VirtualService配置了路由的目标只到v1 subset，其他服务在请求reviews时将只被路由到reviews v1。 istio配置的传播是最终一致性的，等待几秒钟后，多次刷新/prodctpage页，确认书籍评不再不包含评分信息，说明请求一直被路由到v1版本的reviews服务。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#基于用户身份进行请求路由</span></span><br><span class="line">kubectl apply -f samples/bookinfo/networking/virtual-service-reviews-test-v2.yaml</span><br><span class="line"><span class="comment">#请求头中end-user=jason的路由目标是reviews-v2，其他是reviews-v1。测试以jason登录(密码任意输入)，登录后多次刷新/productpage页面，书籍的评论都一直包含黑星评级，而以其他用户名登录或匿名不登录访问时书籍评论都不包含星级评论。 这说明已经成功配置按用户身份的路由控制。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#还原</span></span><br><span class="line">kubectl delete -f samples/bookinfo/networking/virtual-service-all-v1.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用Istio对服务进行流量管理之故障注入</span></span><br><span class="line"><span class="comment">#https://blog.frognew.com/2021/07/learning-istio-1.10-04.html</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#流量管理API资源对象VirtualService和DestinationRule</span></span><br><span class="line"><span class="comment">#https://blog.frognew.com/2021/07/learning-istio-1.10-05.html</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#使用Istio对服务进行流量管理之流量转移</span></span><br><span class="line"><span class="comment">#https://blog.frognew.com/2021/07/learning-istio-1.10-06.html</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#使用Istio Gateway将外部流量接入到服务网格</span></span><br><span class="line"><span class="comment">#https://blog.frognew.com/2021/07/learning-istio-1.10-07.html</span></span><br><span class="line"><span class="comment">#https://www.cnblogs.com/boshen-hzb/p/10679863.html</span></span><br><span class="line"><span class="comment">#https://jonathangazeley.com/2020/12/30/load-balancing-ingress-with-metallb-on-microk8s/</span></span><br><span class="line">上面istio-ingressgateway的Service的Type是LoadBalancer, 它的EXTERNAL-IP处于pending状态， 这是因为我们目前的环境并没有可用于Istio Ingress Gateway外部的负载均衡器，为了使得可以从外部访问， 通过修改istio-ingressgateway这个Service的externalIps:</span><br><span class="line">kubectl edit service istio-ingressgateway -n istio-system</span><br><span class="line">spec:</span><br><span class="line">  externalIPs:</span><br><span class="line">  - 192.168.95.234</span><br><span class="line"></span><br><span class="line">samples/bookinfo/networking/bookinfo-gateway.yaml</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#Istio流量管理之TCP流量转移</span></span><br><span class="line"><span class="comment">#https://blog.frognew.com/2021/07/learning-istio-1.10-08.html</span></span><br><span class="line">kubectl create namespace istio-io-tcp-traffic-shifting</span><br><span class="line">kubectl label namespace istio-io-tcp-traffic-shifting istio-injection=enabled</span><br><span class="line">kubectl apply -f samples/tcp-echo/tcp-echo-services.yaml -n istio-io-tcp-traffic-shifting</span><br><span class="line">kubectl get svc istio-ingressgateway -n istio-system -o yaml</span><br><span class="line"><span class="comment">#test</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..10&#125;; <span class="keyword">do</span> \</span><br><span class="line">sh -c <span class="string">"(date; sleep 1) | nc 192.168.95.234 31400"</span>; \</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">10个请求中的输出结果都是one说明请求流量被100%的路由到了v1版本的服务。</span><br><span class="line"></span><br><span class="line">接下来通过以下命令，将20%流量从tcp-echo:v1迁移到tcp-echo:v2:</span><br><span class="line">kubectl apply -f samples/tcp-echo/tcp-echo-20-v2.yaml -n istio-io-tcp-traffic-shifting</span><br><span class="line"><span class="comment">#test</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..10&#125;; <span class="keyword">do</span> \</span><br><span class="line">sh -c <span class="string">"(date; sleep 1) | nc 192.168.95.234 31400"</span>; \</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">10个请求中差不多有20%的请求被路由到了版本v2的服务商。</span><br><span class="line"></span><br><span class="line"><span class="comment">#Istio流量管理之设置请求超时和熔断</span></span><br><span class="line"><span class="comment">#https://blog.frognew.com/2021/07/learning-istio-1.10-09.html</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Istio流量管理之流量镜像</span></span><br><span class="line"><span class="comment">#https://blog.frognew.com/2021/07/learning-istio-1.10-10.html</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Istio流量管理之访问外部服务的三种方法</span></span><br><span class="line"><span class="comment">#https://blog.frognew.com/2021/07/learning-istio-1.10-11.html</span></span><br><span class="line">使用ServiceEntry API资源对象将一个可访问的外部服务注册到服务网格中(推荐)</span><br><span class="line">kubectl get istiooperator installed-state -n istio-system -o jsonpath=<span class="string">'&#123;.spec.meshConfig.outboundTrafficPolicy.mode&#125;'</span></span><br><span class="line">如果显示为空，则表示为ALLOW_ANY</span><br><span class="line">选项值为ALLOW_ANY，sidecar将允许调用未知的服务，调整为：REGISTRY_ONLY</span><br><span class="line">istioctl install --<span class="built_in">set</span> profile=demo -y --<span class="built_in">set</span> meshConfig.outboundTrafficPolicy.mode=REGISTRY_ONLY</span><br><span class="line"><span class="comment">#test namespace可选</span></span><br><span class="line">kubectl apply -f - &lt;&lt;EOF</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: ServiceEntry</span><br><span class="line">metadata:</span><br><span class="line">  name: external-svc</span><br><span class="line">  namespace: istio-system</span><br><span class="line">spec:</span><br><span class="line">  hosts:</span><br><span class="line">  - <span class="string">"baidu.com"</span></span><br><span class="line">  - <span class="string">"www.baidu.com"</span></span><br><span class="line">  ports:</span><br><span class="line">  - name: http</span><br><span class="line">    number: 80</span><br><span class="line">    protocol: HTTP</span><br><span class="line">  - name: https</span><br><span class="line">    number: 443</span><br><span class="line">    protocol: HTTPS</span><br><span class="line">  location: MESH_EXTERNAL</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">kubectl -n istio-system get se</span><br><span class="line">kubectl run curl --image=radial/busyboxplus:curl -it</span><br><span class="line"><span class="comment">#kubectl attach curl -c curl -i -t</span></span><br><span class="line">kubectl <span class="built_in">exec</span> -it curl -c curl -- curl http://www.baidu.com</span><br><span class="line">kubectl <span class="built_in">exec</span> -it curl -c curl -- curl https://www.baidu.com</span><br><span class="line"></span><br><span class="line">kubectl apply -f - &lt;&lt;EOF</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: ServiceEntry</span><br><span class="line">metadata:</span><br><span class="line">  name: httpbin-ext</span><br><span class="line">spec:</span><br><span class="line">  hosts:</span><br><span class="line">  - httpbin.org</span><br><span class="line">  ports:</span><br><span class="line">  - number: 80</span><br><span class="line">    name: http</span><br><span class="line">    protocol: HTTP</span><br><span class="line">  - number: 443</span><br><span class="line">    name: https</span><br><span class="line">    protocol: HTTPS</span><br><span class="line">  resolution: DNS</span><br><span class="line">  location: MESH_EXTERNAL</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">kubectl run curl --image=radial/busyboxplus:curl -it</span><br><span class="line"><span class="comment">#kubectl attach curl -c curl -i -t</span></span><br><span class="line">kubectl <span class="built_in">exec</span> -it curl -c curl -- curl http://httpbin.org/headers</span><br><span class="line">kubectl <span class="built_in">exec</span> -it curl -c curl -- curl -sSI https://httpbin.org/headers</span><br><span class="line"></span><br><span class="line"><span class="comment">#Istio Egress Gateway及其使用场景</span></span><br><span class="line"><span class="comment">#https://blog.frognew.com/2021/07/learning-istio-1.10-12.html</span></span><br><span class="line">kubectl <span class="built_in">exec</span> -it curl -c curl -- curl -sSI https://httpbin.org/headers | grep <span class="string">"HTTP/"</span></span><br><span class="line">为httpbin.org的443端口创建Egress Gateway。并为指向Egress Gateway的流量创建一个目标规则DestinationRule。</span><br><span class="line">kubectl apply -f - &lt;&lt;EOF</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: Gateway</span><br><span class="line">metadata:</span><br><span class="line">  name: istio-egressgateway</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    istio: egressgateway</span><br><span class="line">  servers:</span><br><span class="line">  - port:</span><br><span class="line">      number: 443</span><br><span class="line">      name: tls</span><br><span class="line">      protocol: TLS</span><br><span class="line">    hosts:</span><br><span class="line">    - httpbin.org</span><br><span class="line">    tls:</span><br><span class="line">      mode: PASSTHROUGH</span><br><span class="line">---</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: DestinationRule</span><br><span class="line">metadata:</span><br><span class="line">  name: egressgateway-for-httpbin-ext</span><br><span class="line">spec:</span><br><span class="line">  host: istio-egressgateway.istio-system.svc.cluster.local</span><br><span class="line">  subsets:</span><br><span class="line">  - name: httpbin-ext</span><br><span class="line">EOF</span><br><span class="line">创建一个虚拟服务VirtualService，将流量从 sidecar 引导至 egress gateway，再从 egress gateway 引导至外部服务：</span><br><span class="line">kubectl apply -f - &lt;&lt;EOF</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: VirtualService</span><br><span class="line">metadata:</span><br><span class="line">  name: direct-httpbin-ext-through-egress-gateway</span><br><span class="line">spec:</span><br><span class="line">  hosts:</span><br><span class="line">  - httpbin.org</span><br><span class="line">  gateways:</span><br><span class="line">  - mesh</span><br><span class="line">  - istio-egressgateway</span><br><span class="line">  tls:</span><br><span class="line">  - match:</span><br><span class="line">    - gateways:</span><br><span class="line">      - mesh</span><br><span class="line">      port: 443</span><br><span class="line">      sniHosts:</span><br><span class="line">      - httpbin.org</span><br><span class="line">    route:</span><br><span class="line">    - destination:</span><br><span class="line">        host: istio-egressgateway.istio-system.svc.cluster.local</span><br><span class="line">        subset: httpbin-ext</span><br><span class="line">        port:</span><br><span class="line">          number: 443</span><br><span class="line">  - match:</span><br><span class="line">    - gateways:</span><br><span class="line">      - istio-egressgateway</span><br><span class="line">      port: 443</span><br><span class="line">      sniHosts:</span><br><span class="line">      - httpbin.org</span><br><span class="line">    route:</span><br><span class="line">    - destination:</span><br><span class="line">        host: httpbin.org</span><br><span class="line">        port:</span><br><span class="line">          number: 443</span><br><span class="line">      weight: 100</span><br><span class="line">EOF</span><br><span class="line">kubectl <span class="built_in">exec</span> -it curl -c curl -- curl -sSI https://httpbin.org/headers | grep <span class="string">"HTTP/"</span></span><br><span class="line">检查istio-egressgateway代理的日志：</span><br><span class="line">kubectl logs -l istio=egressgateway -n istio-system</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用认证策略设置双向TLS和基本的终端用户认证</span></span><br><span class="line"><span class="comment">#https://blog.frognew.com/2021/07/learning-istio-1.10-13.html</span></span><br><span class="line">kubectl create ns foo</span><br><span class="line">kubectl label namespace foo istio-injection=enabled</span><br><span class="line">kubectl create ns bar</span><br><span class="line">kubectl label namespace bar istio-injection=enabled</span><br><span class="line"></span><br><span class="line">kubectl apply -f samples/httpbin/httpbin.yaml -n foo</span><br><span class="line">kubectl run curl --image=radial/busyboxplus:curl -it -n foo</span><br><span class="line">kubectl apply -f samples/httpbin/httpbin.yaml -n bar</span><br><span class="line">kubectl run curl --image=radial/busyboxplus:curl -it -n bar</span><br><span class="line"></span><br><span class="line">kubectl create ns legacy</span><br><span class="line">kubectl apply -f samples/httpbin/httpbin.yaml -n legacy</span><br><span class="line">kubectl run curl --image=radial/busyboxplus:curl -it -n legacy</span><br><span class="line"></span><br><span class="line"><span class="comment">#Test</span></span><br><span class="line"><span class="keyword">for</span> from <span class="keyword">in</span> <span class="string">"foo"</span> <span class="string">"bar"</span> <span class="string">"legacy"</span>; <span class="keyword">do</span> <span class="keyword">for</span> to <span class="keyword">in</span> <span class="string">"foo"</span> <span class="string">"bar"</span> <span class="string">"legacy"</span>; <span class="keyword">do</span> kubectl <span class="built_in">exec</span> curl -c curl -n <span class="variable">$&#123;from&#125;</span> -- curl -s <span class="string">"http://httpbin.<span class="variable">$&#123;to&#125;</span>:8000/ip"</span> -s -o /dev/null -w <span class="string">"curl.<span class="variable">$&#123;from&#125;</span> to httpbin.<span class="variable">$&#123;to&#125;</span>: %&#123;http_code&#125;\n"</span>; <span class="keyword">done</span>; <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">kubectl get peerauthentication --all-namespaces</span><br><span class="line">No resources found</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置全局严格模式启用istio双向TLS</span></span><br><span class="line"><span class="comment">#前面学习了具有sidecar代理的工作负载之间将自动启用双向TLS认证，但工作负载仍然可以接收plain-text流量。可以通过将整个服务网格的对等认证策略(PeerAuthentication)设置为STRICT模式，以阻止整个网格的服务以非双向TLS通信。 如下所示，全局的对等认证策略是没有selector的，且它必须位于安装istio的根命名空间内(如istio-system)。</span></span><br><span class="line">kubectl apply -f - &lt;&lt;EOF</span><br><span class="line">apiVersion: security.istio.io/v1beta1</span><br><span class="line">kind: PeerAuthentication</span><br><span class="line">metadata:</span><br><span class="line">  name: <span class="string">"default"</span></span><br><span class="line">  namespace: <span class="string">"istio-system"</span></span><br><span class="line">spec:</span><br><span class="line">  mtls:</span><br><span class="line">    mode: STRICT</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#Test</span></span><br><span class="line"><span class="keyword">for</span> from <span class="keyword">in</span> <span class="string">"foo"</span> <span class="string">"bar"</span> <span class="string">"legacy"</span>; <span class="keyword">do</span> <span class="keyword">for</span> to <span class="keyword">in</span> <span class="string">"foo"</span> <span class="string">"bar"</span> <span class="string">"legacy"</span>; <span class="keyword">do</span> kubectl <span class="built_in">exec</span> curl -c curl -n <span class="variable">$&#123;from&#125;</span> -- curl -s <span class="string">"http://httpbin.<span class="variable">$&#123;to&#125;</span>:8000/ip"</span> -s -o /dev/null -w <span class="string">"curl.<span class="variable">$&#123;from&#125;</span> to httpbin.<span class="variable">$&#123;to&#125;</span>: %&#123;http_code&#125;\n"</span>; <span class="keyword">done</span>; <span class="keyword">done</span></span><br><span class="line">会发现没有sidecar代理的curl.legacy到有sidecar代理的httpbin.foo和httpbin.bar的请求将会失败，因为全局的对等认证策略是严格模式，要求客户端与httpbin.foo和httpbin.bar之间的流量必须是双向TLS的。</span><br><span class="line"></span><br><span class="line"><span class="comment">#终端用户认证</span></span><br><span class="line">kubectl -n foo <span class="built_in">exec</span> -it curl -- curl http://httpbin.foo.svc.cluster.local:8000/headers</span><br><span class="line">kubectl apply -f - &lt;&lt;EOF</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: Gateway</span><br><span class="line">metadata:</span><br><span class="line">  name: httpbin-gateway</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    istio: ingressgateway <span class="comment"># use istio default controller</span></span><br><span class="line">  servers:</span><br><span class="line">  - port:</span><br><span class="line">      number: 80</span><br><span class="line">      name: http</span><br><span class="line">      protocol: HTTP</span><br><span class="line">    hosts:</span><br><span class="line">    - <span class="string">"httpbin.example.com"</span></span><br><span class="line">---</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: VirtualService</span><br><span class="line">metadata:</span><br><span class="line">  name: httpbin</span><br><span class="line">spec:</span><br><span class="line">  hosts:</span><br><span class="line">  - <span class="string">"httpbin.example.com"</span></span><br><span class="line">  gateways:</span><br><span class="line">  - httpbin-gateway</span><br><span class="line">  http:</span><br><span class="line">  - route:</span><br><span class="line">    - destination:</span><br><span class="line">        host: httpbin.foo.svc.cluster.local</span><br><span class="line">        port:</span><br><span class="line">          number: 8000</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">配置要求必须提供有效的token，这样没有token的请求也会被拒绝:</span><br><span class="line">kubectl apply -f - &lt;&lt;EOF</span><br><span class="line">apiVersion: security.istio.io/v1beta1</span><br><span class="line">kind: AuthorizationPolicy</span><br><span class="line">metadata:</span><br><span class="line">  name: <span class="string">"frontend-ingress"</span></span><br><span class="line">  namespace: istio-system</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      istio: ingressgateway</span><br><span class="line">  action: DENY</span><br><span class="line">  rules:</span><br><span class="line">  - from:</span><br><span class="line">    - <span class="built_in">source</span>:</span><br><span class="line">        notRequestPrincipals: [<span class="string">"*"</span>]</span><br><span class="line">    to:</span><br><span class="line">    - operation:</span><br><span class="line">        hosts: [<span class="string">"httpbin.example.com"</span>]</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">curl http://httpbin.example.com/headers -s -o /dev/null -w <span class="string">"%&#123;http_code&#125;\n"</span></span><br><span class="line">403</span><br><span class="line"></span><br><span class="line">TOKEN=$(curl https://raw.githubusercontent.com/istio/istio/release-1.10/security/tools/jwt/samples/demo.jwt -s)</span><br><span class="line">curl --header <span class="string">"Authorization: Bearer <span class="variable">$TOKEN</span>"</span> http://httpbin.example.com/headers -s -o /dev/null -w <span class="string">"%&#123;http_code&#125;\n"</span></span><br><span class="line">200</span><br><span class="line"></span><br><span class="line">配置按路由提供有效token，路径指host、path、或者method:</span><br><span class="line">kubectl apply -f - &lt;&lt;EOF</span><br><span class="line">apiVersion: security.istio.io/v1beta1</span><br><span class="line">kind: AuthorizationPolicy</span><br><span class="line">metadata:</span><br><span class="line">  name: <span class="string">"frontend-ingress"</span></span><br><span class="line">  namespace: istio-system</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      istio: ingressgateway</span><br><span class="line">  action: DENY</span><br><span class="line">  rules:</span><br><span class="line">  - from:</span><br><span class="line">    - <span class="built_in">source</span>:</span><br><span class="line">        notRequestPrincipals: [<span class="string">"*"</span>]</span><br><span class="line">    to:</span><br><span class="line">    - operation:</span><br><span class="line">        paths: [<span class="string">"/headers"</span>]</span><br><span class="line">        hosts: [<span class="string">"httpbin.example.com"</span>]</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">不提供token访问https://httpbin.example.com/headers将被拒绝，但可以访问其他路径：</span><br><span class="line">curl http://httpbin.example.com/headers -s -o /dev/null -w <span class="string">"%&#123;http_code&#125;\n"</span></span><br><span class="line">403</span><br><span class="line">curl http://httpbin.example.com/ip -s -o /dev/null -w <span class="string">"%&#123;http_code&#125;\n"</span></span><br><span class="line">200</span><br><span class="line">curl --header <span class="string">"Authorization: Bearer <span class="variable">$TOKEN</span>"</span> http://httpbin.example.com/headers -s -o /dev/null -w <span class="string">"%&#123;http_code&#125;\n"</span></span><br><span class="line">200</span><br></pre></td></tr></table></figure>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ul>
<li><a href="https://blog.frognew.com/2021/07/learning-istio-1.10-01.html" target="_blank" rel="noopener">https://blog.frognew.com/2021/07/learning-istio-1.10-01.html</a></li>
<li><a href="https://blog.frognew.com/2021/07/learning-istio-1.10-03.html" target="_blank" rel="noopener">https://blog.frognew.com/2021/07/learning-istio-1.10-03.html</a></li>
<li><a href="http://jartto.wang/2020/07/29/istio-1/" target="_blank" rel="noopener">http://jartto.wang/2020/07/29/istio-1/</a></li>
<li><a href="https://developer.51cto.com/art/202101/641511.htm" target="_blank" rel="noopener">https://developer.51cto.com/art/202101/641511.htm</a></li>
<li><a href="https://www.cxymm.net/article/weixin_43188769/110915810" target="_blank" rel="noopener">https://www.cxymm.net/article/weixin_43188769/110915810</a></li>
<li><a href="https://jimmysong.io/blog/what-is-a-service-mesh/" target="_blank" rel="noopener">https://jimmysong.io/blog/what-is-a-service-mesh/</a></li>
</ul>
]]></content>
      <categories>
        <category>kubernetes</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>Containerd</title>
    <url>/2022/05/Containerd.html</url>
    <content><![CDATA[<p>An industry-standard container runtime with an emphasis on simplicity, robustness and portability: <a href="https://containerd.io/" target="_blank" rel="noopener">https://containerd.io/</a></p>
<a id="more"></a>
<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>nerdctl is a Docker-compatible CLI for containerd. The release full version has been included dependencies such as containerd, runc, and CNI.<br>Maybe nerdctl is not the latest version, you can install the latest version step by step by the following instructions:</p>
<p><a href="https://github.com/containerd/containerd/blob/main/docs/getting-started.md" target="_blank" rel="noopener">https://github.com/containerd/containerd/blob/main/docs/getting-started.md</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Option 1: From the official binaries</span></span><br><span class="line">Step 1: Installing containerd</span><br><span class="line"><span class="comment">#Step 2: Installing runc</span></span><br><span class="line">Step 2: Installing CNI plugins</span><br><span class="line"><span class="comment">#Option 2: From apt-get or dnf</span></span><br><span class="line"><span class="comment">#The containerd.io packages in DEB and RPM formats are distributed by Docker (not by the containerd project). See the Docker documentation for how to set up apt-get or dnf to install containerd.io packages:</span></span><br><span class="line"><span class="comment">#The containerd.io package contains runc too, but does not contain CNI plugins.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#https://docs.docker.com/engine/install/ubuntu/</span></span><br><span class="line"><span class="comment"># Add Docker's official GPG key:</span></span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install ca-certificates curl</span><br><span class="line">sudo install -m 0755 -d /etc/apt/keyrings</span><br><span class="line">sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc</span><br><span class="line">sudo chmod a+r /etc/apt/keyrings/docker.asc</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add the repository to Apt sources:</span></span><br><span class="line"><span class="built_in">echo</span> \</span><br><span class="line">  <span class="string">"deb [arch=<span class="variable">$(dpkg --print-architecture)</span> signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \</span></span><br><span class="line"><span class="string">  <span class="variable">$(. /etc/os-release &amp;&amp; echo "$VERSION_CODENAME")</span> stable"</span> | \</span><br><span class="line">  sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line">apt install containerd.io</span><br><span class="line"></span><br><span class="line"><span class="comment">#Installing CNI plugins</span></span><br><span class="line">wget https://github.com/containernetworking/plugins/releases/download/v1.4.0/cni-plugins-linux-amd64-v1.4.0.tgz</span><br><span class="line"><span class="comment">#Extract it under /opt/cni/bin</span></span><br><span class="line">mkdir -p /opt/cni/bin</span><br><span class="line">tar Cxzvf /opt/cni/bin cni-plugins-linux-amd64-v1.4.0.tgz</span><br><span class="line"></span><br><span class="line"><span class="comment">#https://github.com/containerd/containerd/blob/main/containerd.service</span></span><br><span class="line"><span class="comment">#wget https://raw.githubusercontent.com/containerd/containerd/main/containerd.service -P /usr/local/lib/systemd/system/</span></span><br><span class="line"><span class="comment">#sed -i 's;/usr/local/bin/containerd;/usr/bin/containerd;g' /usr/local/lib/systemd/system/containerd.service</span></span><br><span class="line">systemctl <span class="built_in">enable</span> --now containerd</span><br><span class="line"></span><br><span class="line"><span class="comment">#Optional: Proxy</span></span><br><span class="line">sudo mkdir -p /etc/systemd/system/containerd.service.d</span><br><span class="line">sudo touch /etc/systemd/system/containerd.service.d/http-proxy.conf</span><br><span class="line">sudo tee /etc/systemd/system/containerd.service.d/http-proxy.conf &lt;&lt;-<span class="string">'EOF'</span></span><br><span class="line">[Service]</span><br><span class="line">Environment=<span class="string">"HTTP_PROXY=http://127.0.0.1:1082"</span></span><br><span class="line">Environment=<span class="string">"HTTPS_PROXY=http://127.0.0.1:1082"</span></span><br><span class="line">Environment=<span class="string">"NO_PROXY=127.0.0.1,localhost,10.0.0.0/8,172.0.0.0/8,192.168.0.0/16,*.zerofinance.net,*.aliyun.com,*.163.com,*.docker-cn.com,kubernetes.docker.internal"</span></span><br><span class="line">EOF</span><br><span class="line"><span class="comment"># Restart service:</span></span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart containerd</span><br><span class="line">sudo systemctl show --property=Environment containerd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#Nerdctl(Optional)</span></span><br><span class="line">wget https://github.com/containerd/nerdctl/releases/download/v1.7.4/nerdctl-1.7.4-linux-amd64.tar.gz</span><br><span class="line"><span class="comment">#Extract the archive to a path like /usr/local/bin or ~/bin</span></span><br><span class="line">tar Cxzvvf /usr/<span class="built_in">local</span>/bin nerdctl-1.7.4-linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line">ln -s /usr/<span class="built_in">local</span>/bin/nerdctl /usr/<span class="built_in">local</span>/bin/docker</span><br><span class="line"></span><br><span class="line"><span class="comment">#Buildkit</span></span><br><span class="line">wget https://github.com/moby/buildkit/releases/download/v0.13.0/buildkit-v0.13.0.linux-amd64.tar.gz</span><br><span class="line">tar Cxzvvf /usr/<span class="built_in">local</span>/ buildkit-v0.13.0.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">#https://github.com/moby/buildkit/tree/master/examples/systemd/system</span></span><br><span class="line">wget https://raw.githubusercontent.com/moby/buildkit/master/examples/systemd/system/buildkit.service -P /usr/<span class="built_in">local</span>/lib/systemd/system/</span><br><span class="line">wget https://raw.githubusercontent.com/moby/buildkit/master/examples/systemd/system/buildkit.socket -P /usr/<span class="built_in">local</span>/lib/systemd/system/</span><br><span class="line"><span class="comment">#cp -a buildkit.service /usr/local/lib/systemd/system/buildkit.service</span></span><br><span class="line">systemctl <span class="built_in">enable</span> --now buildkit</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#Uninstall</span></span><br><span class="line">systemctl stop containerd</span><br><span class="line">systemctl stop buildkit</span><br><span class="line">tar -tf nerdctl-1.7.4-linux-amd64.tar.gz | sed <span class="string">'s;^;rm /usr/local/bin/;'</span> | sh +x</span><br><span class="line">tar -tf buildkit-v0.13.0.linux-amd64.tar.gz | grep <span class="string">"^bin/.+*"</span> | sed <span class="string">'s;^;rm /usr/local/;'</span> | sh +x</span><br><span class="line">rm -fr /opt/cni/bin/</span><br><span class="line">rm /usr/<span class="built_in">local</span>/lib/systemd/system/buildkit.socket</span><br><span class="line">rm /usr/<span class="built_in">local</span>/lib/systemd/system/buildkit.service</span><br><span class="line"></span><br><span class="line">apt remove containerd.io</span><br><span class="line">rm /usr/<span class="built_in">local</span>/lib/systemd/system/containerd.service</span><br><span class="line"></span><br><span class="line"><span class="comment">#Test</span></span><br><span class="line">sudo nerdctl run --rm --name nginx -p 80:80 nginx:alpine</span><br></pre></td></tr></table></figure>
<p>cat Dockerfile:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FROM nginx:alpine</span><br><span class="line">RUN <span class="built_in">echo</span> <span class="string">'Hello Nerdctl From Containerd'</span> &gt; /usr/share/nginx/html/index.html</span><br></pre></td></tr></table></figure>
<p>Relocated /var/lib/containerd:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop containerd</span><br><span class="line">mv /var/lib/containerd /data/containerd-lib</span><br><span class="line">ln -s /data/containerd-lib /var/lib/containerd</span><br><span class="line">systemctl start containerd</span><br></pre></td></tr></table></figure>
<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Build:</span></span><br><span class="line">nerdctl build  -t nginx:nerctl -f Dockerfile .</span><br><span class="line"><span class="comment">#Run:</span></span><br><span class="line">nerdctl run -d --name nginx -p 80:80 nginx:nerctl</span><br><span class="line"><span class="comment">#Test:</span></span><br><span class="line">curl localhost</span><br></pre></td></tr></table></figure>
<p>The native containderd command:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://cloudyuga.guru/blogs/containerd-and-ctr/</span></span><br><span class="line"><span class="comment">#https://medium.com/@seifeddinerajhi/understanding-and-using-containerd-a-comprehensive-guide-7b34f6136058</span></span><br><span class="line">ctr --<span class="built_in">help</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#container can short as c</span></span><br><span class="line"><span class="comment">#task can short as t</span></span><br><span class="line">ctr c ls</span><br><span class="line">ctr t ls</span><br><span class="line"></span><br><span class="line"><span class="comment">#vie namespace</span></span><br><span class="line">ctr ns ls</span><br><span class="line"></span><br><span class="line"><span class="comment">#pull</span></span><br><span class="line">ctr images pull docker.io/library/nginx:alpine</span><br><span class="line"></span><br><span class="line"><span class="comment">#push</span></span><br><span class="line"><span class="comment">#ctr image push localhost:5000/saif/test:latest</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#List out the images</span></span><br><span class="line">ctr images ls</span><br><span class="line"></span><br><span class="line"><span class="comment">#For listing the images with names</span></span><br><span class="line">ctr images ls -q</span><br><span class="line"></span><br><span class="line"><span class="comment">#mount images</span></span><br><span class="line">mkdir /tmp/nginx</span><br><span class="line">ctr images mount docker.io/library/nginx:alpine /tmp/golang</span><br><span class="line">ls -l /tmp/nginx/</span><br><span class="line"></span><br><span class="line"><span class="comment">#unmount point</span></span><br><span class="line">ctr images unmount /tmp/nginx</span><br><span class="line"></span><br><span class="line"><span class="comment">#extract the tarball to a temporary directory and explore its contents</span></span><br><span class="line">mkdir /tmp/nginx_image</span><br><span class="line">tar -xf /tmp/nginx.tar -C /tmp/nginx_image/</span><br><span class="line">ls -lah /tmp/nginx_image/</span><br><span class="line"></span><br><span class="line"><span class="comment">#delete the images</span></span><br><span class="line">ctr images rm docker.io/library/nginx:alpine</span><br><span class="line">ctr image remove docker.io/library/nginx:alpine</span><br><span class="line"></span><br><span class="line"><span class="comment">#tag</span></span><br><span class="line">ctr image tag docker.io/library/nginx:alpine localhost:5000/library/nginx:alpine</span><br><span class="line"></span><br><span class="line"><span class="comment">#export images</span></span><br><span class="line">ctr images <span class="built_in">export</span> /data/images/nginx.tar docker.io/library/nginx:alpine --platform linux/amd64</span><br><span class="line"></span><br><span class="line"><span class="comment">#import images</span></span><br><span class="line">ctr images import /data/images/nginx.tar</span><br><span class="line"></span><br><span class="line"><span class="comment">#create a container</span></span><br><span class="line">ctr container create docker.io/library/nginx:alpine nginx_ctr</span><br><span class="line"></span><br><span class="line"><span class="comment">#List out the containers</span></span><br><span class="line">ctr containers ls</span><br><span class="line"></span><br><span class="line"><span class="comment">#start</span></span><br><span class="line">ctr task start nginx_ctr</span><br><span class="line"></span><br><span class="line"><span class="comment">#List the tasks</span></span><br><span class="line">ctr task ls</span><br><span class="line"></span><br><span class="line"><span class="comment">#create and start</span></span><br><span class="line">ctr run -d docker.io/library/nginx:alpine nginx_web</span><br><span class="line"></span><br><span class="line"><span class="comment">#To see the stdout and stderr of a running task</span></span><br><span class="line"><span class="comment">#But be careful, the ctr task attach command will also reconnect the stdin stream and start forwarding signals from the controlling terminal to the task processes, so hitting Ctrl+C might kill the task.</span></span><br><span class="line"><span class="comment">#Unfortunately, ctr doesn't support the Ctrl+P+Q shortcut to detach from a task - it's solely docker's feature. There is also no ctr task logs, so you can't see the stdout/stderr of a task without attaching to it. Neither can you easily see the logs of a stopped task. It's a lower-level tool, remember?</span></span><br><span class="line">ctr task attach nginx_web</span><br><span class="line"></span><br><span class="line"><span class="comment">#interact with the container</span></span><br><span class="line">ctr task <span class="built_in">exec</span> -t --<span class="built_in">exec</span>-id bash_1 nginx_web sh</span><br><span class="line"></span><br><span class="line"><span class="comment">#check the usage of the metrics by the task</span></span><br><span class="line">ctr task metrics nginx_web</span><br><span class="line"></span><br><span class="line"><span class="comment">#stop all the tasks</span></span><br><span class="line">ctr task <span class="built_in">kill</span> nginx_web</span><br><span class="line"></span><br><span class="line"><span class="comment">#remove the container</span></span><br><span class="line">ctr container rm nginx_web</span><br><span class="line"></span><br><span class="line"><span class="comment">#inspect</span></span><br><span class="line">ctr container info nginx_web</span><br><span class="line"></span><br><span class="line"><span class="comment">#snapshot commit</span></span><br><span class="line">ctr snapshot commit dave_nginx_ctr nginx_ctr</span><br><span class="line"></span><br><span class="line"><span class="comment">#snapshot list</span></span><br><span class="line">ctr snapshot ls</span><br></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul>
<li><a href="https://github.com/containerd/containerd/blob/main/docs/getting-started.md" target="_blank" rel="noopener">https://github.com/containerd/containerd/blob/main/docs/getting-started.md</a></li>
<li><a href="https://www.qikqiak.com/post/containerd-usage/" target="_blank" rel="noopener">https://www.qikqiak.com/post/containerd-usage/</a></li>
<li><a href="https://kubernetes.io/zh/docs/tasks/administer-cluster/migrating-from-dockershim/change-runtime-containerd/" target="_blank" rel="noopener">https://kubernetes.io/zh/docs/tasks/administer-cluster/migrating-from-dockershim/change-runtime-containerd/</a></li>
<li><a href="https://www.51cto.com/article/678323.html" target="_blank" rel="noopener">https://www.51cto.com/article/678323.html</a></li>
<li><a href="https://developer.51cto.com/article/700609.html" target="_blank" rel="noopener">https://developer.51cto.com/article/700609.html</a></li>
<li><a href="https://www.jianshu.com/p/4c31554df8c9" target="_blank" rel="noopener">https://www.jianshu.com/p/4c31554df8c9</a></li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>A Guide to Vagrant</title>
    <url>/2022/04/A-Guide-to-Vagrant.html</url>
    <content><![CDATA[<p>This is a guide to how to use Vagrant to virtual some OS, like Linux/Windows/MacOS etc.</p>
<a id="more"></a>
<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>Simple and Powerful</p>
<p>HashiCorp Vagrant provides the same, easy workflow regardless of your role as a developer, operator, or designer. It leverages a declarative configuration file which describes all your software requirements, packages, operating system configuration, users, and more.</p>
<p>Works where you work</p>
<p>Vagrant works on Mac, Linux, Windows, and more. Remote development environments force users to give up their favorite editors and programs. Vagrant works on your local system with the tools you’re already familiar with. Easily code in your favorite text editor, edit images in your favorite manipulation program, and debug using your favorite tools, all from the comfort of your local laptop.</p>
<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><h3 id="vagrant-docker"><a href="#vagrant-docker" class="headerlink" title="vagrant+docker"></a>vagrant+docker</h3><p>Recommanding by vagrant plus docker:</p>
<p><a href="https://www.vagrantup.com/docs/providers/docker" target="_blank" rel="noopener">https://www.vagrantup.com/docs/providers/docker</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -</span><br><span class="line">sudo apt-add-repository <span class="string">"deb [arch=amd64] https://apt.releases.hashicorp.com <span class="variable">$(lsb_release -cs)</span> main"</span></span><br><span class="line">sudo apt-get update &amp;&amp; sudo apt-get install vagrant</span><br><span class="line"></span><br><span class="line"><span class="comment">#Installing docker following this: http://blog.gcalls.cn/blog/2018/12/ubuntu-os.html#Docker</span></span><br></pre></td></tr></table></figure>
<h3 id="vagrant-virtualbox"><a href="#vagrant-virtualbox" class="headerlink" title="vagrant+virtualbox"></a>vagrant+virtualbox</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://www.vagrantup.com/downloads</span></span><br><span class="line"><span class="comment">#The executable 'bsdtar' Vagrant is trying to run was not found in the PATH variable. This is an error. Please verify this software is installed and on the path.</span></span><br><span class="line"><span class="comment"># wget https://releases.hashicorp.com/vagrant/2.2.19/vagrant_2.2.19_linux_amd64.zip</span></span><br><span class="line"><span class="comment"># unzip vagrant_2.2.19_linux_amd64.zip</span></span><br><span class="line"><span class="comment">#Recommend:</span></span><br><span class="line">curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -</span><br><span class="line">sudo apt-add-repository <span class="string">"deb [arch=amd64] https://apt.releases.hashicorp.com <span class="variable">$(lsb_release -cs)</span> main"</span></span><br><span class="line">sudo apt-get update &amp;&amp; sudo apt-get install vagrant</span><br><span class="line"></span><br><span class="line"><span class="comment">#VirtualBox</span></span><br><span class="line">wget https://download.virtualbox.org/virtualbox/6.1.34/virtualbox-6.1_6.1.34-150636.1~Ubuntu~eoan_amd64.deb</span><br><span class="line">dpkg -i virtualbox-6.1_6.1.34-150636.1~Ubuntu~eoan_amd64.deb</span><br><span class="line"><span class="comment">##If some error occurred, executing the following command, and run again:</span></span><br><span class="line"><span class="comment"># sudo apt install -f</span></span><br><span class="line"><span class="comment"># dpkg -i virtualbox-6.1_6.1.34-150636.1~Ubuntu~eoan_amd64.deb</span></span><br><span class="line">sudo apt install -y gcc make perl</span><br><span class="line">sudo /sbin/vboxconfig</span><br><span class="line"><span class="comment">#If some error occurred, just following the messge to resolve.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#extpack</span></span><br><span class="line">VBoxManage extpack install Oracle_VM_VirtualBox_Extension_Pack-6.1.34.vbox-extpack</span><br></pre></td></tr></table></figure>
<h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><h3 id="vagrant-docker-1"><a href="#vagrant-docker-1" class="headerlink" title="vagrant+docker"></a>vagrant+docker</h3><p>Dockerfile:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Version: 1.0.0</span></span><br><span class="line"></span><br><span class="line">FROM ubuntu:22.04</span><br><span class="line"></span><br><span class="line">RUN mkdir -p /container/shell </span><br><span class="line"></span><br><span class="line">ENV WORK_SHELL /container/shell</span><br><span class="line">WORKDIR <span class="variable">$WORK_SHELL</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#ADD ./sources.list /etc/apt/sources.list</span></span><br><span class="line"><span class="comment">#RUN apt update &amp;&amp; apt install -y init</span></span><br><span class="line"></span><br><span class="line">ADD docker-entrypoint.sh script.sh <span class="variable">$WORK_SHELL</span>/</span><br><span class="line"></span><br><span class="line">RUN chmod +x <span class="variable">$WORK_SHELL</span>/*.sh</span><br><span class="line"></span><br><span class="line">RUN <span class="variable">$WORK_SHELL</span>/script.sh</span><br><span class="line"></span><br><span class="line">ENTRYPOINT [<span class="string">"/container/shell/docker-entrypoint.sh"</span>]</span><br><span class="line"><span class="comment">#CMD ["bash", "-c" ,"$WORK_SHELL/init.sh"]</span></span><br></pre></td></tr></table></figure>
<p>docker-entrypoint.sh:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># run the command given as arguments from CMD</span></span><br><span class="line"><span class="built_in">exec</span> <span class="string">"<span class="variable">$@</span>"</span></span><br></pre></td></tr></table></figure></p>
<p>script.sh: Finding the details from belows.</p>
<p>Building docker image:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker build -t dave/ubuntu:22.04 .</span><br></pre></td></tr></table></figure>
<p>Vagrangfile:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- mode: ruby -*-</span></span><br><span class="line"><span class="comment"># vi: set ft=ruby :</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># All Vagrant configuration is done below. The "2" in Vagrant.configure</span></span><br><span class="line"><span class="comment"># configures the configuration version (we support older styles for</span></span><br><span class="line"><span class="comment"># backwards compatibility). Please don't change it unless you know what</span></span><br><span class="line"><span class="comment"># you're doing.</span></span><br><span class="line">Vagrant.configure(<span class="string">"2"</span>) <span class="keyword">do</span> |config|</span><br><span class="line"></span><br><span class="line">  config.vm.network :public_network, ip: <span class="string">"192.168.109.50"</span>, netmask: <span class="string">"255.255.255.0"</span>, bridge: <span class="string">"eno1"</span>, docker_network__gateway: <span class="string">"192.168.109.254"</span></span><br><span class="line"></span><br><span class="line">  config.vm.provider <span class="string">"docker"</span> <span class="keyword">do</span> |d|</span><br><span class="line">    d.image = <span class="string">"registry.zerofinance.net/library/ubuntu:22.04"</span></span><br><span class="line">    <span class="comment">#d.build_dir = "."</span></span><br><span class="line">    <span class="comment">#d.create_args = ["--hostname=config", "-v", "/data/fisco:/data/fisco", "-v", "/data/vagrant/docker/fisco/shell:/data/shell"]</span></span><br><span class="line">    d.create_args = [<span class="string">"--cpus=40"</span>, <span class="string">"--memory=64g"</span>, <span class="string">"--hostname=ubuntu-analysis"</span>, <span class="string">"-v"</span>, <span class="string">"/data/containerd:/var/lib/containerd"</span>, <span class="string">"-v"</span>, <span class="string">"/works/app/container_apps:/works/app"</span>, <span class="string">"-v"</span>, <span class="string">"/data/container_datas:/data"</span>]</span><br><span class="line">    d.privileged = <span class="literal">true</span></span><br><span class="line">    d.cmd = [<span class="string">"/sbin/init"</span>]</span><br><span class="line">  end</span><br><span class="line"></span><br><span class="line">  config.vm.provision <span class="string">"shell"</span>, run: <span class="string">"always"</span>, inline: &lt;&lt;-SHELL</span><br><span class="line">    sudo route del default gw 172.17.0.1</span><br><span class="line">    sudo route add default gw 192.168.109.254</span><br><span class="line">  SHELL</span><br><span class="line"></span><br><span class="line">end</span><br></pre></td></tr></table></figure>
<p>Or just using docker by itself:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://www.cnblogs.com/bakari/p/10893589.html</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#https://blog.oddbit.com/post/2018-03-12-using-docker-macvlan-networks/</span></span><br><span class="line"><span class="comment">#Solved: Container can communicate with host machine:</span></span><br><span class="line">docker network create \</span><br><span class="line">    -d <span class="string">'macvlan'</span> \</span><br><span class="line">    -o parent=enp2s0 \</span><br><span class="line">    --subnet=192.168.101.0/24 \</span><br><span class="line">    --gateway=192.168.101.254 \</span><br><span class="line">    --aux-address <span class="string">'host=192.168.101.81'</span> \</span><br><span class="line">    my-network</span><br><span class="line"></span><br><span class="line"><span class="comment">#/etc/rc.local</span></span><br><span class="line">ip link add mynet-shim link enp2s0 <span class="built_in">type</span> macvlan mode bridge</span><br><span class="line"><span class="comment">#192.168.101.81: a host ip</span></span><br><span class="line">ip addr add 192.168.101.81/32 dev mynet-shim</span><br><span class="line">ip link <span class="built_in">set</span> mynet-shim up</span><br><span class="line"><span class="comment">#192.168.101.85: a container ip</span></span><br><span class="line">ip route add 192.168.101.85/32 dev mynet-shim</span><br><span class="line">ip route add 192.168.101.86/32 dev mynet-shim</span><br><span class="line">ip route add 192.168.101.87/32 dev mynet-shim</span><br><span class="line">ip route add 192.168.101.88/32 dev mynet-shim</span><br><span class="line"></span><br><span class="line">mkdir -p /data/dave/rancher /data/peter/rancher /data/eino/rancher /data/xiaotie/rancher</span><br><span class="line"></span><br><span class="line">docker run -d \</span><br><span class="line">    --name=dave-server --hostname=dave-server \</span><br><span class="line">    --network=my-network \</span><br><span class="line">    --ip=192.168.101.85 \</span><br><span class="line">    --privileged=<span class="literal">true</span> \</span><br><span class="line">    -v /etc/localtime:/etc/localtime \</span><br><span class="line">    -v /etc/hosts:/etc/hosts \</span><br><span class="line">    -v /data/dave:/data \</span><br><span class="line">    -v /works/app:/works/app \</span><br><span class="line">    -v /data/dave/rancher:/var/lib/rancher \</span><br><span class="line">    registry.zerofinance.net/library/ubuntu:22.04 \</span><br><span class="line">    /sbin/init</span><br><span class="line"></span><br><span class="line">docker run -d \</span><br><span class="line">    --name=peter-server --hostname=peter-server \</span><br><span class="line">    --network=my-network \</span><br><span class="line">    --ip=192.168.101.86 \</span><br><span class="line">    --privileged=<span class="literal">true</span> \</span><br><span class="line">    -v /etc/localtime:/etc/localtime \</span><br><span class="line">    -v /etc/hosts:/etc/hosts \</span><br><span class="line">    -v /data/peter:/data \</span><br><span class="line">    -v /works/app:/works/app \</span><br><span class="line">    -v /data/peter/rancher:/var/lib/rancher \</span><br><span class="line">    registry.zerofinance.net/library/ubuntu:22.04 \</span><br><span class="line">    /sbin/init</span><br><span class="line"></span><br><span class="line">docker run -d \</span><br><span class="line">    --name=eino-server --hostname=eino-server \</span><br><span class="line">    --network=my-network \</span><br><span class="line">    --ip=192.168.101.87 \</span><br><span class="line">    --privileged=<span class="literal">true</span> \</span><br><span class="line">    -v /etc/localtime:/etc/localtime \</span><br><span class="line">    -v /etc/hosts:/etc/hosts \</span><br><span class="line">    -v /data/eino:/data \</span><br><span class="line">    -v /works/app:/works/app \</span><br><span class="line">    -v /data/eino/rancher:/var/lib/rancher \</span><br><span class="line">    registry.zerofinance.net/library/ubuntu:22.04 \</span><br><span class="line">    /sbin/init</span><br><span class="line"></span><br><span class="line">docker run -d \</span><br><span class="line">    --name=xiaotie-server --hostname=xiaotie-server \</span><br><span class="line">    --network=my-network \</span><br><span class="line">    --ip=192.168.101.88 \</span><br><span class="line">    --privileged=<span class="literal">true</span> \</span><br><span class="line">    -v /etc/localtime:/etc/localtime \</span><br><span class="line">    -v /etc/hosts:/etc/hosts \</span><br><span class="line">    -v /data/xiaotie:/data \</span><br><span class="line">    -v /works/app:/works/app \</span><br><span class="line">    -v /data/xiaotie/rancher:/var/lib/rancher \</span><br><span class="line">    registry.zerofinance.net/library/ubuntu:22.04 \</span><br><span class="line">    /sbin/init</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># docker run -d \</span></span><br><span class="line"><span class="comment">#     --name=my-other-nginx \</span></span><br><span class="line"><span class="comment">#     --network=my-network \</span></span><br><span class="line"><span class="comment">#     --ip=192.168.101.84 \</span></span><br><span class="line"><span class="comment">#     nginx:latest</span></span><br></pre></td></tr></table></figure>
<p>Or multiple nodes with Vagrantfile:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- mode: ruby -*-</span></span><br><span class="line"><span class="comment"># vi: set ft=ruby :</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># All Vagrant configuration is done below. The "2" in Vagrant.configure</span></span><br><span class="line"><span class="comment"># configures the configuration version (we support older styles for</span></span><br><span class="line"><span class="comment"># backwards compatibility). Please don't change it unless you know what</span></span><br><span class="line"><span class="comment"># you're doing.</span></span><br><span class="line">Vagrant.configure(<span class="string">"2"</span>) <span class="keyword">do</span> |config|</span><br><span class="line"></span><br><span class="line">  config.vm.define <span class="string">"node1"</span>  <span class="keyword">do</span> |node1|</span><br><span class="line">    node1.vm.network :public_network, ip: <span class="string">"192.168.101.83"</span>, netmask: <span class="string">"255.255.255.0"</span>, bridge: <span class="string">"enp2s0"</span>, docker_network__gateway: <span class="string">"192.168.101.254"</span></span><br><span class="line">    node1.vm.provider <span class="string">"docker"</span> <span class="keyword">do</span> |d|</span><br><span class="line">      d.image = <span class="string">"dave/docker:22.04"</span></span><br><span class="line">      <span class="comment">#d.build_dir = "."</span></span><br><span class="line">      d.create_args = [<span class="string">"--hostname=node1"</span>, <span class="string">"-v"</span>, <span class="string">"/data/var-lib-docker:/var/lib/docker"</span>, <span class="string">"-v"</span>,<span class="string">"/data/fabric:/data/fabric"</span>]</span><br><span class="line">      d.privileged = <span class="literal">true</span></span><br><span class="line">      d.cmd = [<span class="string">"/sbin/init"</span>]</span><br><span class="line">    end</span><br><span class="line">  end</span><br><span class="line"></span><br><span class="line">  config.vm.define <span class="string">"node2"</span>  <span class="keyword">do</span> |node2|</span><br><span class="line">    node2.vm.network :public_network, ip: <span class="string">"192.168.101.84"</span>, netmask: <span class="string">"255.255.255.0"</span>, bridge: <span class="string">"enp2s0"</span>, docker_network__gateway: <span class="string">"192.168.101.254"</span></span><br><span class="line">    node2.vm.provider <span class="string">"docker"</span> <span class="keyword">do</span> |d|</span><br><span class="line">      d.image = <span class="string">"dave/docker:22.04"</span></span><br><span class="line">      <span class="comment">#d.build_dir = "."</span></span><br><span class="line">      d.create_args = [<span class="string">"--hostname=node2"</span>, <span class="string">"-v"</span>, <span class="string">"/data/var-lib-docker:/var/lib/docker"</span>, <span class="string">"-v"</span>,<span class="string">"/data/fabric:/data/fabric"</span>]</span><br><span class="line">      d.privileged = <span class="literal">true</span></span><br><span class="line">      d.cmd = [<span class="string">"/sbin/init"</span>]</span><br><span class="line">    end</span><br><span class="line">  end</span><br><span class="line"></span><br><span class="line">end</span><br></pre></td></tr></table></figure>
<p>Installing docker in dokcer:</p>
<p>docker.sh:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">apt-get -y install apt-transport-https ca-certificates software-properties-common</span><br><span class="line">curl -fsSL http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | apt-key add -</span><br><span class="line">add-apt-repository <span class="string">"deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu <span class="variable">$(lsb_release -cs)</span> stable"</span></span><br><span class="line">apt-get -y update</span><br><span class="line">apt-get -y install docker-ce docker-ce-cli containerd.io docker-compose-plugin</span><br><span class="line"></span><br><span class="line">mkdir -p /etc/docker/</span><br><span class="line">tee /etc/docker/daemon.json &lt;&lt;-<span class="string">'EOF'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"dns"</span> : [</span><br><span class="line">     <span class="string">"8.8.4.4"</span>,</span><br><span class="line">     <span class="string">"8.8.8.8"</span>,</span><br><span class="line">     <span class="string">"114.114.114.114"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [</span><br><span class="line">    <span class="string">"https://registry.docker-cn.com"</span>,</span><br><span class="line">    <span class="string">"https://3laho3y3.mirror.aliyuncs.com"</span>,</span><br><span class="line">    <span class="string">"http://hub-mirror.c.163.com"</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>
<p>Starting:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vagrant up</span><br></pre></td></tr></table></figure>
<p>Entering the container:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vagrant docker-exec -it -- /bin/bash</span><br><span class="line"><span class="comment">#Or</span></span><br><span class="line">docker <span class="built_in">exec</span> -it dockerid /bin/bash</span><br></pre></td></tr></table></figure>
<h3 id="vagrant-virtualbox-1"><a href="#vagrant-virtualbox-1" class="headerlink" title="vagrant+virtualbox"></a>vagrant+virtualbox</h3><p>How to get the box images?</p>
<p>Search from <a href="https://app.vagrantup.com/boxes/search" target="_blank" rel="noopener">https://app.vagrantup.com/boxes/search</a> to get a certain box, like “ubuntu 22.04”, going to the details you can get the following command:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vagrant init generic/ubuntu2004</span><br><span class="line">vagrant up</span><br></pre></td></tr></table></figure>
<p>Just running the command above, you will see the box url. Since the internet connection is very slow in China, you can interrupt the operation when you get the final download url.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#Centos</span><br><span class="line">https://vagrantcloud.com/centos/boxes/7/versions/2004.01/providers/virtualbox.box</span><br><span class="line">#Ubuntu</span><br><span class="line">https://vagrantcloud.com/bento/boxes/ubuntu-22.04/versions/202112.19.0/providers/virtualbox.box</span><br><span class="line">#Win10</span><br><span class="line">http://vagrantcloud.com/gusztavvargadr/boxes/windows-10/versions/2102.0.2204/providers/virtualbox.box</span><br></pre></td></tr></table></figure>
<h3 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h3><p>Adding box:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo vagrant box add ubuntu22.04 box/ubuntu-22.04.box</span><br><span class="line">sudo vagrant plugin install vagrant-disksize</span><br></pre></td></tr></table></figure>
<p>Vagrantfile:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- mode: ruby -*-</span></span><br><span class="line"><span class="comment"># vi: set ft=ruby :</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># All Vagrant configuration is done below. The "2" in Vagrant.configure</span></span><br><span class="line"><span class="comment"># configures the configuration version (we support older styles for</span></span><br><span class="line"><span class="comment"># backwards compatibility). Please don't change it unless you know what</span></span><br><span class="line"><span class="comment"># you're doing.</span></span><br><span class="line">Vagrant.configure(<span class="string">"2"</span>) <span class="keyword">do</span> |config|</span><br><span class="line"></span><br><span class="line">  <span class="comment">#config.vm.box = "ubuntu22.04"</span></span><br><span class="line">  <span class="comment">#config.vm.hostname = "mydocker"</span></span><br><span class="line">  <span class="comment">#config.vm.network "private_network", ip: "192.168.10.9"</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">  <span class="comment">#config.vm.synced_folder "/data/docker/registry", "/docker/registry"</span></span><br><span class="line">  <span class="comment">#config.vm.synced_folder "/data/docker/works", "/docker/works"</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">  <span class="comment">#config.vm.provider "virtualbox" do |vb|</span></span><br><span class="line">  <span class="comment">#  #vb.gui = true</span></span><br><span class="line">  <span class="comment">#  vb.memory = "2048"</span></span><br><span class="line">  <span class="comment">#end</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#config.vm.provision "shell", run: "always", inline: &lt;&lt;-SHELL</span></span><br><span class="line">  <span class="comment">#  systemctl restart network</span></span><br><span class="line">  <span class="comment">#SHELL</span></span><br><span class="line">  <span class="comment">#config.vm.provision "shell", path: "script.sh"</span></span><br><span class="line"></span><br><span class="line">  config.vm.define :node1 <span class="keyword">do</span> |node1|</span><br><span class="line">    node1.vm.box = <span class="string">"ubuntu22.04"</span></span><br><span class="line">    node1.vm.hostname = <span class="string">"node1"</span></span><br><span class="line">    node1.vm.network <span class="string">"public_network"</span>, ip: <span class="string">"192.168.101.83"</span>, netmask: <span class="string">"255.255.255.0"</span>, gateway: <span class="string">"192.168.101.254"</span>, bridge: <span class="string">"enp2s0"</span></span><br><span class="line">    <span class="comment">#excel01_prod.vm.network "public_network", bridge: "enp0s31f6", auto_config: false</span></span><br><span class="line">    <span class="comment">#node1.vm.synced_folder "/home/dev/vagrant", "/data/vagrant"</span></span><br><span class="line">    node1.vm.provider <span class="string">"virtualbox"</span> <span class="keyword">do</span> |vb|</span><br><span class="line">      <span class="comment">#vb.gui = true</span></span><br><span class="line">      vb.cpus = 4 </span><br><span class="line">      vb.memory = <span class="string">"4096"</span></span><br><span class="line">    end</span><br><span class="line">    node1.vm.provision <span class="string">"shell"</span>, run: <span class="string">"always"</span>, inline: &lt;&lt;-SHELL</span><br><span class="line">      <span class="comment">#cp -a /vagrant/sources.list /etc/apt/sources.list</span></span><br><span class="line">      <span class="comment">#apt-get install sudo net-tools -y</span></span><br><span class="line">      <span class="comment">#sudo route del default gw 10.0.2.2</span></span><br><span class="line">      <span class="comment">#ifconfig eth1 192.168.69.200 netmask 255.255.255.0 up</span></span><br><span class="line">      <span class="comment">#route add default gw 192.168.69.254</span></span><br><span class="line">      <span class="comment">#If cannot ping from remote server, do the following command, but it won't be login by vagrant ssh:</span></span><br><span class="line">      <span class="comment">#ip link set eth0 down</span></span><br><span class="line">    SHELL</span><br><span class="line">    node1.vm.provision <span class="string">"shell"</span> <span class="keyword">do</span> |s|</span><br><span class="line">      s.path = <span class="string">"script.sh"</span></span><br><span class="line">      <span class="comment">#s.args = ["--bip=10.1.10.1/24"]</span></span><br><span class="line">    end</span><br><span class="line">    <span class="comment">#node1.vm.provision "shell", path: "script.sh"</span></span><br><span class="line">  end</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  config.vm.define :node2 <span class="keyword">do</span> |node2|</span><br><span class="line">    node2.vm.box = <span class="string">"ubuntu22.04"</span></span><br><span class="line">    node2.vm.hostname = <span class="string">"node2"</span></span><br><span class="line">    node2.vm.network <span class="string">"public_network"</span>, ip: <span class="string">"192.168.101.84"</span>, netmask: <span class="string">"255.255.255.0"</span>, gateway: <span class="string">"192.168.101.254"</span>, bridge: <span class="string">"enp2s0"</span></span><br><span class="line">    <span class="comment">#node1.vm.synced_folder "/home/dev/vagrant", "/data/vagrant"</span></span><br><span class="line">    node2.vm.provider <span class="string">"virtualbox"</span> <span class="keyword">do</span> |vb|</span><br><span class="line">      <span class="comment">#vb.gui = true</span></span><br><span class="line">      vb.cpus = 4</span><br><span class="line">      vb.memory = <span class="string">"4096"</span></span><br><span class="line">    end</span><br><span class="line">    node2.vm.provision <span class="string">"shell"</span>, run: <span class="string">"always"</span>, inline: &lt;&lt;-SHELL</span><br><span class="line">      <span class="comment">#cp -a /vagrant/sources.list /etc/apt/sources.list</span></span><br><span class="line">      <span class="comment">#apt-get install sudo net-tools -y</span></span><br><span class="line">      <span class="comment">#sudo route del default gw 10.0.2.2</span></span><br><span class="line">      <span class="comment">#If cannot ping from remote server, do the following command, but it won't be login by vagrant ssh:</span></span><br><span class="line">      <span class="comment">#ip link set eth0 down</span></span><br><span class="line">    SHELL</span><br><span class="line">    node2.vm.provision <span class="string">"shell"</span> <span class="keyword">do</span> |s|</span><br><span class="line">      s.path = <span class="string">"script.sh"</span></span><br><span class="line">      <span class="comment">#s.args = ["--bip=10.1.20.1/24"]</span></span><br><span class="line">    end</span><br><span class="line">  end</span><br><span class="line"></span><br><span class="line">end</span><br></pre></td></tr></table></figure>
<p>script.sh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#http://www.360doc.com/content/14/1125/19/7044580_428024359.shtml</span></span><br><span class="line"><span class="comment">#http://blog.csdn.net/54powerman/article/details/50684844</span></span><br><span class="line"><span class="comment">#http://c.biancheng.net/cpp/view/2739.html</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"scripting......"</span></span><br><span class="line"></span><br><span class="line">cp /etc/apt/sources.list /etc/apt/sources.list.bak</span><br><span class="line"><span class="comment"># cat &gt;&gt; /etc/apt/sources.list.d/aliyun.list &lt;&lt; EOF</span></span><br><span class="line">tee /etc/apt/sources.list &lt;&lt; EOF</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ jammy main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ jammy main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ jammy-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ jammy-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ jammy-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ jammy-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ jammy-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ jammy-proposed main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ jammy-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ jammy-backports main restricted universe multiverse</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">apt-get update</span><br><span class="line"><span class="comment">#apt-get install make g++ init inetutils-ping sudo jq iproute2 net-tools wget htop vim screen curl lsof lrzsz zip unzip expect openssh-server -y</span></span><br><span class="line">apt-get install init inetutils-ping sudo iptables psmisc jq iproute2 net-tools wget htop vim screen curl lsof lrzsz zip unzip expect openssh-server -y</span><br><span class="line"></span><br><span class="line"><span class="comment">#LANG="en_US.UTF-8"</span></span><br><span class="line"><span class="comment">#sed -i 's;LANG=.*;LANG="zh_CN.UTF-8";' /etc/locale.conf</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">disable</span> iptables</span><br><span class="line">systemctl stop iptables</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br><span class="line">systemctl stop firewalld</span><br><span class="line"></span><br><span class="line"><span class="comment">#ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span></span><br><span class="line">timedatectl <span class="built_in">set</span>-timezone Asia/Shanghai</span><br><span class="line"></span><br><span class="line"><span class="comment">#logined limit</span></span><br><span class="line">cat /etc/security/limits.conf|grep <span class="string">"^root"</span> &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">		cat &gt;&gt; /etc/security/limits.conf  &lt;&lt; EOF</span><br><span class="line">root            -    nofile             100000</span><br><span class="line">root            -    nproc              100000</span><br><span class="line">*               -    nofile             100000</span><br><span class="line">*               -    nproc              100000</span><br><span class="line">EOF</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#systemd service limit</span></span><br><span class="line">cat /etc/systemd/system.conf|egrep <span class="string">'^DefaultLimitNOFILE'</span> &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">		cat &gt;&gt; /etc/systemd/system.conf &lt;&lt; EOF</span><br><span class="line">DefaultLimitCORE=infinity</span><br><span class="line">DefaultLimitNOFILE=100000</span><br><span class="line">DefaultLimitNPROC=100000</span><br><span class="line">EOF</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">#user service limit</span></span><br><span class="line">cat /etc/systemd/user.conf|egrep <span class="string">'^DefaultLimitNOFILE'</span> &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">		cat &gt;&gt; /etc/systemd/system.conf &lt;&lt; EOF</span><br><span class="line">DefaultLimitCORE=infinity</span><br><span class="line">DefaultLimitNOFILE=100000</span><br><span class="line">DefaultLimitNPROC=100000</span><br><span class="line">EOF</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">cat /etc/sysctl.conf|grep <span class="string">"net.ipv4.ip_local_port_range"</span> &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">	cat &gt;&gt; /etc/sysctl.conf  &lt;&lt; EOF</span><br><span class="line">net.ipv4.tcp_syncookies = 1</span><br><span class="line">net.ipv4.tcp_fin_timeout = 30</span><br><span class="line">net.ipv4.tcp_keepalive_time = 300</span><br><span class="line">net.ipv4.tcp_tw_reuse = 1</span><br><span class="line">net.ipv4.ip_local_port_range = 1024 65535</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 8192</span><br><span class="line">net.ipv4.tcp_max_tw_buckets = 500</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">fs.inotify.max_user_instances=1280</span><br><span class="line">fs.inotify.max_user_watches=655360</span><br><span class="line">vm.overcommit_memory=1</span><br><span class="line">fs.protected_regular=0</span><br><span class="line">EOF</span><br><span class="line">sysctl -p</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">su - root -c <span class="string">"ulimit -a"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#tee /etc/resolv.conf &lt;&lt; EOF</span></span><br><span class="line"><span class="comment">#search myk8s.com</span></span><br><span class="line"><span class="comment">#nameserver 114.114.114.114</span></span><br><span class="line"><span class="comment">#nameserver 8.8.8.8</span></span><br><span class="line"><span class="comment">#EOF</span></span><br><span class="line"></span><br><span class="line">sed -i <span class="string">'s;#PermitRootLogin.*;PermitRootLogin yes;g'</span> /etc/ssh/sshd_config</span><br><span class="line"><span class="comment">#systemctl enable ssh</span></span><br><span class="line"><span class="comment">#systemctl restart ssh</span></span><br></pre></td></tr></table></figure>
<p>Starting:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vagrant up</span><br></pre></td></tr></table></figure>
<h3 id="CentOS"><a href="#CentOS" class="headerlink" title="CentOS"></a>CentOS</h3><p>Adding box:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo vagrant box add centos7 box/CentOS-7-x86_64-Vagrant-2004_01.VirtualBox.box</span><br></pre></td></tr></table></figure>
<p>Vagrantfile</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- mode: ruby -*-</span></span><br><span class="line"><span class="comment"># vi: set ft=ruby :</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># All Vagrant configuration is done below. The "2" in Vagrant.configure</span></span><br><span class="line"><span class="comment"># configures the configuration version (we support older styles for</span></span><br><span class="line"><span class="comment"># backwards compatibility). Please don't change it unless you know what</span></span><br><span class="line"><span class="comment"># you're doing.</span></span><br><span class="line">Vagrant.configure(<span class="string">"2"</span>) <span class="keyword">do</span> |config|</span><br><span class="line"></span><br><span class="line">  <span class="comment">#config.vm.box = "centos7"</span></span><br><span class="line">  <span class="comment">#config.vm.hostname = "mydocker"</span></span><br><span class="line">  <span class="comment">#config.vm.network "private_network", ip: "192.168.10.9"</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">  <span class="comment">#config.vm.synced_folder "/data/docker/registry", "/docker/registry"</span></span><br><span class="line">  <span class="comment">#config.vm.synced_folder "/data/docker/works", "/docker/works"</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">  <span class="comment">#config.vm.provider "virtualbox" do |vb|</span></span><br><span class="line">  <span class="comment">#  #vb.gui = true</span></span><br><span class="line">  <span class="comment">#  vb.memory = "2048"</span></span><br><span class="line">  <span class="comment">#end</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#config.vm.provision "shell", run: "always", inline: &lt;&lt;-SHELL</span></span><br><span class="line">  <span class="comment">#  systemctl restart network</span></span><br><span class="line">  <span class="comment">#SHELL</span></span><br><span class="line">  <span class="comment">#config.vm.provision "shell", path: "script.sh"</span></span><br><span class="line"></span><br><span class="line">  config.vm.define :node1 <span class="keyword">do</span> |node1|</span><br><span class="line">    node1.vm.box = <span class="string">"centos7"</span></span><br><span class="line">    node1.vm.hostname = <span class="string">"node1"</span></span><br><span class="line">    node1.vm.network <span class="string">"public_network"</span>, ip: <span class="string">"192.168.101.83"</span>, netmask: <span class="string">"255.255.255.0"</span>, gateway: <span class="string">"192.168.101.254"</span>, bridge: <span class="string">"enp2s0"</span></span><br><span class="line">    <span class="comment">#node1.vm.synced_folder "/home/dev/vagrant", "/data/vagrant"</span></span><br><span class="line">    node1.vm.provider <span class="string">"virtualbox"</span> <span class="keyword">do</span> |vb|</span><br><span class="line">      <span class="comment">#vb.gui = true</span></span><br><span class="line">      vb.cpus = 4 </span><br><span class="line">      vb.memory = <span class="string">"4096"</span></span><br><span class="line">    end</span><br><span class="line">    node1.vm.provision <span class="string">"shell"</span>, run: <span class="string">"always"</span>, inline: &lt;&lt;-SHELL</span><br><span class="line">      yum -y install net-tools &gt; /dev/null</span><br><span class="line">      <span class="comment">#ifconfig eth1 192.168.101.83 netmask 255.255.255.0 up</span></span><br><span class="line">      <span class="comment">#route add default gw 192.168.101.254</span></span><br><span class="line">      sudo route del default gw 10.0.2.2</span><br><span class="line">    SHELL</span><br><span class="line">    node1.vm.provision <span class="string">"shell"</span> <span class="keyword">do</span> |s|</span><br><span class="line">      s.path = <span class="string">"script.sh"</span></span><br><span class="line">      <span class="comment">#s.args = ["--bip=10.1.10.1/24"]</span></span><br><span class="line">    end</span><br><span class="line">    <span class="comment">#node1.vm.provision "shell", path: "script.sh"</span></span><br><span class="line">  end</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  config.vm.define :node2 <span class="keyword">do</span> |node2|</span><br><span class="line">    node2.vm.box = <span class="string">"centos7"</span></span><br><span class="line">    node2.vm.hostname = <span class="string">"node2"</span></span><br><span class="line">    node2.vm.network <span class="string">"public_network"</span>, ip: <span class="string">"192.168.101.84"</span>, netmask: <span class="string">"255.255.255.0"</span>, gateway: <span class="string">"192.168.101.254"</span>, bridge: <span class="string">"enp2s0"</span></span><br><span class="line">    <span class="comment">#node1.vm.synced_folder "/home/dev/vagrant", "/data/vagrant"</span></span><br><span class="line">    node2.vm.provider <span class="string">"virtualbox"</span> <span class="keyword">do</span> |vb|</span><br><span class="line">      <span class="comment">#vb.gui = true</span></span><br><span class="line">      vb.cpus = 4</span><br><span class="line">      vb.memory = <span class="string">"4096"</span></span><br><span class="line">    end</span><br><span class="line">    node2.vm.provision <span class="string">"shell"</span>, run: <span class="string">"always"</span>, inline: &lt;&lt;-SHELL</span><br><span class="line">      yum -y install net-tools &gt; /dev/null</span><br><span class="line">      <span class="comment">#ifconfig eth1 192.168.101.84 netmask 255.255.255.0 up</span></span><br><span class="line">      <span class="comment">#route add default gw 192.168.101.254</span></span><br><span class="line">      sudo route del default gw 10.0.2.2</span><br><span class="line">    SHELL</span><br><span class="line">    node2.vm.provision <span class="string">"shell"</span> <span class="keyword">do</span> |s|</span><br><span class="line">      s.path = <span class="string">"script.sh"</span></span><br><span class="line">      <span class="comment">#s.args = ["--bip=10.1.20.1/24"]</span></span><br><span class="line">    end</span><br><span class="line">  end</span><br><span class="line"></span><br><span class="line">end</span><br></pre></td></tr></table></figure>
<p>script.sh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment">#http://www.360doc.com/content/14/1125/19/7044580_428024359.shtml</span></span><br><span class="line"><span class="comment">#http://blog.csdn.net/54powerman/article/details/50684844</span></span><br><span class="line"><span class="comment">#http://c.biancheng.net/cpp/view/2739.html</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"scripting......"</span></span><br><span class="line"></span><br><span class="line">yum -y install net-tools wget</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">'s;SELINUX=.*;SELINUX=disabled;'</span> /etc/selinux/config</span><br><span class="line">setenforce 0</span><br><span class="line">getenforce</span><br><span class="line"></span><br><span class="line"><span class="comment">#LANG="en_US.UTF-8"</span></span><br><span class="line"><span class="comment">#sed -i 's;LANG=.*;LANG="zh_CN.UTF-8";' /etc/locale.conf</span></span><br><span class="line"></span><br><span class="line">cat /etc/NetworkManager/NetworkManager.conf|grep <span class="string">"dns=none"</span> &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"dns=none"</span> &gt;&gt; /etc/NetworkManager/NetworkManager.conf</span><br><span class="line">    systemctl restart NetworkManager.service</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">disable</span> iptables</span><br><span class="line">systemctl stop iptables</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br><span class="line">systemctl stop firewalld</span><br><span class="line"></span><br><span class="line"><span class="comment">#ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span></span><br><span class="line">timedatectl <span class="built_in">set</span>-timezone Asia/Shanghai</span><br><span class="line"></span><br><span class="line"><span class="comment">#logined limit</span></span><br><span class="line">cat /etc/security/limits.conf|grep 100000 &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">cat &gt;&gt; /etc/security/limits.conf  &lt;&lt; EOF</span><br><span class="line">*               -    nofile             100000</span><br><span class="line">*               -    nproc              100000</span><br><span class="line">EOF</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">sed -i <span class="string">'s;4096;100000;g'</span> /etc/security/limits.d/20-nproc.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#systemd service limit</span></span><br><span class="line">cat /etc/systemd/system.conf|egrep <span class="string">'^DefaultLimitCORE'</span> &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">cat &gt;&gt; /etc/systemd/system.conf &lt;&lt; EOF</span><br><span class="line">DefaultLimitCORE=infinity</span><br><span class="line">DefaultLimitNOFILE=100000</span><br><span class="line">DefaultLimitNPROC=100000</span><br><span class="line">EOF</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">cat /etc/sysctl.conf|grep <span class="string">"net.ipv4.ip_local_port_range"</span> &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">cat &gt;&gt; /etc/sysctl.conf  &lt;&lt; EOF</span><br><span class="line">net.ipv4.tcp_fin_timeout = 30</span><br><span class="line">net.ipv4.tcp_keepalive_time = 300</span><br><span class="line">net.ipv4.tcp_tw_reuse = 1</span><br><span class="line">net.ipv4.tcp_tw_recycle = 1</span><br><span class="line">net.ipv4.ip_local_port_range = 1024 65535</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line"><span class="comment">#k8s</span></span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">EOF</span><br><span class="line">sysctl -p</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">su - root -c <span class="string">"ulimit -a"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"192.168.10.6   k8s-master</span></span><br><span class="line"><span class="string">192.168.10.7   k8s-node1</span></span><br><span class="line"><span class="string">192.168.10.8   k8s-node2"</span> &gt;&gt; /etc/hosts</span><br><span class="line"></span><br><span class="line"><span class="comment">#tee /etc/resolv.conf &lt;&lt; EOF</span></span><br><span class="line"><span class="comment">#search myk8s.com</span></span><br><span class="line"><span class="comment">#nameserver 114.114.114.114</span></span><br><span class="line"><span class="comment">#nameserver 8.8.8.8</span></span><br><span class="line"><span class="comment">#EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#yum -y install gcc kernel-devel</span></span><br><span class="line">mv -f /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br><span class="line"><span class="comment"># wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.163.com/.help/CentOS7-Base-163.repo</span></span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">wget -O /etc/yum.repos.d/epel-7.repo http://mirrors.aliyun.com/repo/epel-7.repo</span><br><span class="line"></span><br><span class="line">yum -y install epel-release</span><br><span class="line"></span><br><span class="line">sudo mv /etc/yum.repos.d/epel.repo /etc/yum.repos.d/epel.repo.backup</span><br><span class="line">sudo mv /etc/yum.repos.d/epel-testing.repo /etc/yum.repos.d/epel-testing.repo.backup</span><br><span class="line"></span><br><span class="line">cat &gt; /etc/yum.repos.d/epel.repo  &lt;&lt; EOF</span><br><span class="line">[epel]</span><br><span class="line">name=Extra Packages <span class="keyword">for</span> Enterprise Linux 7 - \<span class="variable">$basearch</span></span><br><span class="line">baseurl=https://mirrors.tuna.tsinghua.edu.cn/epel/7/\<span class="variable">$basearch</span></span><br><span class="line"><span class="comment">#mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-7&amp;arch=\$basearch</span></span><br><span class="line">failovermethod=priority</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7</span><br><span class="line">[epel-debuginfo]</span><br><span class="line">name=Extra Packages <span class="keyword">for</span> Enterprise Linux 7 - \<span class="variable">$basearch</span> - Debug</span><br><span class="line">baseurl=https://mirrors.tuna.tsinghua.edu.cn/epel/7/\<span class="variable">$basearch</span>/debug</span><br><span class="line"><span class="comment">#mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-debug-7&amp;arch=\$basearch</span></span><br><span class="line">failovermethod=priority</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7</span><br><span class="line">gpgcheck=1</span><br><span class="line">[epel-source]</span><br><span class="line">name=Extra Packages <span class="keyword">for</span> Enterprise Linux 7 - \<span class="variable">$basearch</span> - Source</span><br><span class="line">baseurl=https://mirrors.tuna.tsinghua.edu.cn/epel/7/SRPMS</span><br><span class="line"><span class="comment">#mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-source-7&amp;arch=\$basearch</span></span><br><span class="line">failovermethod=priority</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7</span><br><span class="line">gpgcheck=1</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">yum clean all</span><br><span class="line">yum makecache</span><br><span class="line"></span><br><span class="line"><span class="comment">#yum -y install createrepo rpm-sign rng-tools yum-utils </span></span><br><span class="line">yum -y install htop <span class="built_in">bind</span>-utils bridge-utils ntpdate setuptool iptables system-config-securitylevel-tui system-config-network-tui \</span><br><span class="line"> ntsysv net-tools lrzsz telnet lsof vim dos2unix unix2dos zip unzip \</span><br><span class="line"> lsof openssl openssh-server openssh-clients</span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">enable</span> sshd</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">'s;#PasswordAuthentication yes;PasswordAuthentication yes;g'</span> /etc/ssh/sshd_config</span><br><span class="line">systemctl restart sshd</span><br></pre></td></tr></table></figure>
<p>Starting:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vagrant up</span><br></pre></td></tr></table></figure>
<h3 id="Windows10"><a href="#Windows10" class="headerlink" title="Windows10"></a>Windows10</h3><p>Adding box:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo vagrant box add win10 box/win10.box</span><br></pre></td></tr></table></figure>
<p>Vagrantfile</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- mode: ruby -*-</span></span><br><span class="line"><span class="comment"># vi: set ft=ruby :</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># All Vagrant configuration is done below. The "2" in Vagrant.configure</span></span><br><span class="line"><span class="comment"># configures the configuration version (we support older styles for</span></span><br><span class="line"><span class="comment"># backwards compatibility). Please don't change it unless you know what</span></span><br><span class="line"><span class="comment"># you're doing.</span></span><br><span class="line">Vagrant.configure(<span class="string">"2"</span>) <span class="keyword">do</span> |config|</span><br><span class="line">  config.vm.box = <span class="string">"win10"</span></span><br><span class="line">  config.vm.hostname = <span class="string">"node3"</span></span><br><span class="line">  config.vm.network <span class="string">"public_network"</span>, ip: <span class="string">"192.168.101.85"</span>, netmask: <span class="string">"255.255.255.0"</span>, gateway: <span class="string">"192.168.101.254"</span>, bridge: <span class="string">"enp2s0"</span></span><br><span class="line">  config.vm.provider <span class="string">"virtualbox"</span> <span class="keyword">do</span> |vb|</span><br><span class="line">    <span class="comment">#vb.gui = true</span></span><br><span class="line">    vb.cpus = 2</span><br><span class="line">    vb.memory = <span class="string">"2048"</span></span><br><span class="line">  end</span><br><span class="line">  config.vm.provision <span class="string">"shell"</span>, run: <span class="string">"always"</span>, inline: &lt;&lt;-SHELL</span><br><span class="line">    netsh advfirewall <span class="built_in">set</span> allprofiles state off</span><br><span class="line">    ROUTE ADD 0.0.0.0  MASK 0.0.0.0  192.168.101.254  METRIC 25</span><br><span class="line">  SHELL</span><br><span class="line">end</span><br></pre></td></tr></table></figure>
<p>Starting:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vagrant up</span><br></pre></td></tr></table></figure>
<h3 id="MacOS"><a href="#MacOS" class="headerlink" title="MacOS"></a>MacOS</h3><p>It doesn’t work, reslove it later.</p>
<p>Adding box:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo vagrant box add macos box/macos-10.15.box</span><br></pre></td></tr></table></figure>
<p>Vagrantfile</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- mode: ruby -*-</span></span><br><span class="line"><span class="comment"># vi: set ft=ruby :</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># All Vagrant configuration is done below. The "2" in Vagrant.configure</span></span><br><span class="line"><span class="comment"># configures the configuration version (we support older styles for</span></span><br><span class="line"><span class="comment"># backwards compatibility). Please don't change it unless you know what</span></span><br><span class="line"><span class="comment"># you're doing.</span></span><br><span class="line">Vagrant.configure(<span class="string">"2"</span>) <span class="keyword">do</span> |config|</span><br><span class="line">  config.vm.box = <span class="string">"macos"</span></span><br><span class="line">  config.vm.hostname = <span class="string">"node4"</span></span><br><span class="line">  config.vm.network <span class="string">"public_network"</span>, ip: <span class="string">"192.168.101.86"</span>, netmask: <span class="string">"255.255.255.0"</span>, gateway: <span class="string">"192.168.101.254"</span>, bridge: <span class="string">"enp2s0"</span></span><br><span class="line">  config.vm.provider <span class="string">"virtualbox"</span> <span class="keyword">do</span> |vb|</span><br><span class="line">    <span class="comment">#vb.gui = true</span></span><br><span class="line">    vb.cpus = 2</span><br><span class="line">    vb.memory = <span class="string">"2048"</span></span><br><span class="line">  end</span><br><span class="line">  config.vm.provision <span class="string">"shell"</span>, run: <span class="string">"always"</span>, inline: &lt;&lt;-SHELL</span><br><span class="line">    <span class="comment">#netsh advfirewall set allprofiles state off</span></span><br><span class="line">    <span class="comment">#ROUTE ADD 0.0.0.0  MASK 0.0.0.0  192.168.101.254  METRIC 25</span></span><br><span class="line">  SHELL</span><br><span class="line">end</span><br></pre></td></tr></table></figure>
<p>Starting:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vagrant up</span><br></pre></td></tr></table></figure>
<h2 id="Command-Usage"><a href="#Command-Usage" class="headerlink" title="Command Usage"></a>Command Usage</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#cd vagrant</span></span><br><span class="line"><span class="comment">#Remove box</span></span><br><span class="line">sudo vagrant box remove centos7</span><br><span class="line"><span class="comment">#Add box</span></span><br><span class="line">sudo vagrant box add centos7 centos7-0.0.99.box</span><br><span class="line"><span class="comment">#List box</span></span><br><span class="line">sudo vagrant box list</span><br><span class="line"></span><br><span class="line"><span class="comment">#sudo vagrant init centos7</span></span><br><span class="line">sudo vagrant up</span><br><span class="line"><span class="comment">#sudo vagrant up node1</span></span><br><span class="line">sudo vagrant halt</span><br><span class="line">sudo vagrant reload</span><br><span class="line"><span class="comment">#sudo vagrant destroy</span></span><br><span class="line">sudo vagrant ssh</span><br><span class="line"><span class="comment">#sudo vagrant ssh node1</span></span><br><span class="line">vagrant status</span><br><span class="line"></span><br><span class="line"><span class="comment">#Export and use "add box" to import </span></span><br><span class="line">sudo vagrant package node1 --output node1.box</span><br><span class="line"></span><br><span class="line"><span class="comment">#Snapshot</span></span><br><span class="line">sudo vagrant plugin install vagrant-vbox-snapshot</span><br><span class="line">sudo vagrant snapshot list node1</span><br><span class="line"><span class="comment">#snapshot save</span></span><br><span class="line">sudo vagrant snapshot save node1 node1_snapshot</span><br><span class="line"><span class="comment">#snapshot restore</span></span><br><span class="line">sudo vagrant snapshot restore node1 node1_snapshot</span><br></pre></td></tr></table></figure>
<p>Modifying the directory of VirtualBox:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Using root to handle:</span></span><br><span class="line"><span class="comment">#https://www.jianshu.com/p/12cf1ecb224b</span></span><br><span class="line"><span class="comment">#https://www.cnblogs.com/csliwei/p/5860005.html</span></span><br><span class="line">mv ~/.vagrant.d/ /data/vagrant/</span><br><span class="line"><span class="comment">#vim /etc/profile.d/java.sh</span></span><br><span class="line"><span class="built_in">export</span> VAGRANT_HOME=<span class="string">'/data/vagrant/.vagrant.d'</span></span><br><span class="line"><span class="built_in">export</span> VAGRANT_DISABLE_VBOXSYMLINKCREATE=1</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment">#VBoxManage setproperty machinefolder  /data/vagrant/</span></span><br><span class="line">sudo mkdir -p <span class="string">"/data/vagrant/"</span></span><br><span class="line">mv <span class="string">"/root/VirtualBox VMs"</span> <span class="string">"/data/vagrant/VirtualBox VMs"</span></span><br><span class="line">sudo ln -s <span class="string">"/data/vagrant/VirtualBox VMs"</span> <span class="string">"/root/VirtualBox VMs"</span></span><br><span class="line"><span class="comment">#To relogin to take effect</span></span><br></pre></td></tr></table></figure>
<p>Resize Disk:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vagrant plugin install vagrant-disksize</span><br><span class="line"><span class="comment">#Edit the Vagrantfile:</span></span><br><span class="line">Vagrant.configure(<span class="string">'2'</span>) <span class="keyword">do</span> |config|</span><br><span class="line">  ...</span><br><span class="line">  config.vm.box = <span class="string">'ubuntu/xenial64'</span></span><br><span class="line">  config.disksize.size = <span class="string">'150GB'</span></span><br><span class="line">  ...</span><br><span class="line">end</span><br><span class="line">vagrant halt &amp;&amp; vagrant up</span><br></pre></td></tr></table></figure>
<p>Note: this will not work with vagrant reload</p>
<h2 id="Nvidia-Docker"><a href="#Nvidia-Docker" class="headerlink" title="Nvidia Docker"></a>Nvidia Docker</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://github.com/NVIDIA/nvidia-docker/issues/1034</span><br><span class="line">https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html</span><br><span class="line"><span class="comment">#nvidia-container-toolkit</span></span><br><span class="line">curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg \</span><br><span class="line">  &amp;&amp; curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list | \</span><br><span class="line">    sed <span class="string">'s#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g'</span> | \</span><br><span class="line">    sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list</span><br><span class="line"></span><br><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line">sudo apt-get install -y nvidia-container-toolkit</span><br><span class="line"></span><br><span class="line">docker run --rm --name dave-nvidia --gpus all nvidia/cuda:12.3.2-devel-ubuntu22.04 nvidia-smi</span><br></pre></td></tr></table></figure>
<p>vim Vagrantfile:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- mode: ruby -*-</span></span><br><span class="line"><span class="comment"># vi: set ft=ruby :</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># All Vagrant configuration is done below. The "2" in Vagrant.configure</span></span><br><span class="line"><span class="comment"># configures the configuration version (we support older styles for</span></span><br><span class="line"><span class="comment"># backwards compatibility). Please don't change it unless you know what</span></span><br><span class="line"><span class="comment"># you're doing.</span></span><br><span class="line"><span class="string">Vagrant.configure("2")</span> <span class="string">do</span> <span class="string">|config|</span></span><br><span class="line"></span><br><span class="line">  <span class="string">config.vm.network</span> <span class="string">:public_network,</span> <span class="attr">ip:</span> <span class="string">"192.168.109.50"</span><span class="string">,</span> <span class="attr">netmask:</span> <span class="string">"255.255.255.0"</span><span class="string">,</span> <span class="attr">bridge:</span> <span class="string">"eno1"</span><span class="string">,</span> <span class="attr">docker_network__gateway:</span> <span class="string">"192.168.109.254"</span></span><br><span class="line"></span><br><span class="line">  <span class="string">config.vm.provider</span> <span class="string">"docker"</span> <span class="string">do</span> <span class="string">|d|</span></span><br><span class="line">    <span class="comment">#d.image = "registry.zerofinance.net/library/ubuntu:22.04"</span></span><br><span class="line">    <span class="string">d.image</span> <span class="string">=</span> <span class="string">"registry.zerofinance.net/library/cuda:12.3.2-devel-ubuntu22.04"</span></span><br><span class="line">    <span class="comment">#d.build_dir = "."</span></span><br><span class="line">    <span class="comment">#d.create_args = ["--hostname=config", "-v", "/data/fisco:/data/fisco", "-v", "/data/vagrant/docker/fisco/shell:/data/shell"]</span></span><br><span class="line">    <span class="string">d.create_args</span> <span class="string">=</span> <span class="string">["--cpus=40",</span> <span class="string">"--memory=64g"</span><span class="string">,</span> <span class="string">"--hostname=ubuntu-analysis"</span><span class="string">,</span> <span class="string">"--gpus=all"</span><span class="string">,"-v",</span> <span class="string">"/data/containerd:/var/lib/containerd"</span><span class="string">,</span> <span class="string">"-v"</span><span class="string">,</span> <span class="string">"/works/app/container_apps:/works/app"</span><span class="string">,</span> <span class="string">"-v"</span><span class="string">,</span> <span class="string">"/data/container_datas:/data"</span><span class="string">]</span></span><br><span class="line">    <span class="string">d.privileged</span> <span class="string">=</span> <span class="literal">true</span></span><br><span class="line">    <span class="string">d.cmd</span> <span class="string">=</span> <span class="string">["/sbin/init"]</span></span><br><span class="line">  <span class="string">end</span></span><br><span class="line"></span><br><span class="line">  <span class="string">config.vm.provision</span> <span class="string">"shell"</span><span class="string">,</span> <span class="attr">run:</span> <span class="string">"always"</span><span class="string">,</span> <span class="attr">inline:</span> <span class="string">&lt;&lt;-SHELL</span></span><br><span class="line">    <span class="string">sudo</span> <span class="string">route</span> <span class="string">del</span> <span class="string">default</span> <span class="string">gw</span> <span class="number">172.17</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">    <span class="string">sudo</span> <span class="string">route</span> <span class="string">add</span> <span class="string">default</span> <span class="string">gw</span> <span class="number">192.168</span><span class="number">.109</span><span class="number">.254</span></span><br><span class="line">  <span class="string">SHELL</span></span><br><span class="line"></span><br><span class="line"><span class="string">end</span></span><br></pre></td></tr></table></figure>
<h2 id="Refrence"><a href="#Refrence" class="headerlink" title="Refrence"></a>Refrence</h2><ul>
<li><a href="https://www.ityoudao.cn/posts/vagrant-network/" target="_blank" rel="noopener">https://www.ityoudao.cn/posts/vagrant-network/</a></li>
<li><a href="http://sunyongfeng.com/201703/programmer/tools/vagrant" target="_blank" rel="noopener">http://sunyongfeng.com/201703/programmer/tools/vagrant</a></li>
<li><a href="https://cn.opensuse.org/Virtualbox_Network_Bridging" target="_blank" rel="noopener">https://cn.opensuse.org/Virtualbox_Network_Bridging</a></li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Vagrant</tag>
      </tags>
  </entry>
  <entry>
    <title>Fabric Getting Started</title>
    <url>/2022/06/Fabric-Getting-Started.html</url>
    <content><![CDATA[<p>A getting started guilde to Fabric. Following <a href="https://hyperledger-fabric.readthedocs.io/en/latest/whatis.html" target="_blank" rel="noopener">https://hyperledger-fabric.readthedocs.io/en/latest/whatis.html</a> to what it is.</p>
<a id="more"></a>
<h1 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h1><p>Using Vagant and docker as a platform to try.</p>
<p>The detailed instructions refer to: <a href="https://github.com/zhaoxunyong/boxes/tree/main/docker/fabric" target="_blank" rel="noopener">https://github.com/zhaoxunyong/boxes/tree/main/docker/fabric</a> </p>
<h2 id="Startup"><a href="#Startup" class="headerlink" title="Startup"></a>Startup</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Step 1:</span><br><span class="line"><span class="built_in">cd</span> /data/vagrant/docker</span><br><span class="line">vagrant destroy node1 -f</span><br><span class="line">rm -fr /data/var-lib-docker/</span><br><span class="line">vagrant up node1</span><br><span class="line"></span><br><span class="line"><span class="comment">#Entering the container:</span></span><br><span class="line"><span class="comment">#vagrant docker-exec -it node1 -- /bin/bash</span></span><br><span class="line"><span class="comment">#docker exec -it `docker ps|grep node1|awk '&#123;print $1&#125;'` /vagrant/changepwd.sh</span></span><br><span class="line">docker <span class="built_in">exec</span> -it `docker ps|grep node1|awk <span class="string">'&#123;print $1&#125;'</span>` /vagrant/images/importImages.sh</span><br><span class="line">vagrant reload node1</span><br><span class="line"><span class="comment">#Then login with terminal, not docker exec</span></span><br><span class="line"><span class="comment">#docker restart `docker ps|grep node1|awk '&#123;print $1&#125;'`</span></span><br></pre></td></tr></table></figure>
<h1 id="Starting-a-chaincode-on-the-channel"><a href="#Starting-a-chaincode-on-the-channel" class="headerlink" title="Starting a chaincode on the channel"></a>Starting a chaincode on the channel</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#https://hyperledger-fabric.readthedocs.io/en/latest/test_network.html</span><br><span class="line">#Openning a new terminal to input the following command:</span><br><span class="line">cd /data/fabric/fabric-samples/test-network</span><br><span class="line">./network.sh up </span><br><span class="line">#Creating a channel</span><br><span class="line">./network.sh createChannel</span><br><span class="line">#./network.sh up createChannel</span><br><span class="line">#Monitor:</span><br><span class="line">./monitordocker.sh fabric_test</span><br><span class="line"></span><br><span class="line">#The following instruction need GO to be installed.</span><br><span class="line">./network.sh deployCC -ccn basic -ccp ../asset-transfer-basic/chaincode-go -ccl go</span><br><span class="line"></span><br><span class="line">#The following instruction need node.js to be installed.</span><br><span class="line">./network.sh deployCC -ccn basic -ccp ../asset-transfer-basic/chaincode-javascript -ccl javascript</span><br><span class="line"></span><br><span class="line">#The following instruction need java to be installed.</span><br><span class="line"># Not need:</span><br><span class="line"># #Setting the proxy to download gradle-7.3.1-bin.zip. Or downloading maybe is very slow...</span><br><span class="line"># tee /data/fabric/fabric-samples/asset-transfer-basic/chaincode-java/gradle.properties &lt;&lt;-&apos;EOF&apos;</span><br><span class="line"># systemProp.http.proxyHost=192.168.102.82</span><br><span class="line"># systemProp.http.proxyPort=1082</span><br><span class="line"># systemProp.https.proxyHost=192.168.102.82</span><br><span class="line"># systemProp.https.proxyPort=1082</span><br><span class="line"># systemProp.http.nonProxyHosts=192.*|172.*|127.*|localhost</span><br><span class="line"># EOF</span><br><span class="line">./network.sh deployCC -ccn basic -ccp ../asset-transfer-basic/chaincode-java -ccl java</span><br><span class="line">#Don&apos;t use the proxy to build, Or you will encouter the following errors:</span><br><span class="line">Error: chaincode install failed with status: 500 - error in simulation: failed to execute transaction c6d2553ed5f14fa4336438c686f538730f90f51bf1c5737f60c0cd3f0e17561a: error sending: timeout expired while executing transaction</span><br></pre></td></tr></table></figure>
<h1 id="Interacting-with-the-network"><a href="#Interacting-with-the-network" class="headerlink" title="Interacting with the network"></a>Interacting with the network</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd /data/fabric/fabric-samples/test-network</span><br><span class="line">export PATH=$&#123;PWD&#125;/../bin:$PATH</span><br><span class="line">export FABRIC_CFG_PATH=$PWD/../config/</span><br><span class="line"></span><br><span class="line">#You can now set the environment variables that allow you to operate the peer CLI as Org1:</span><br><span class="line">#Environment variables for Org1</span><br><span class="line">export CORE_PEER_TLS_ENABLED=true</span><br><span class="line">export CORE_PEER_LOCALMSPID=&quot;Org1MSP&quot;</span><br><span class="line">export CORE_PEER_TLS_ROOTCERT_FILE=$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt</span><br><span class="line">export CORE_PEER_MSPCONFIGPATH=$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp</span><br><span class="line">export CORE_PEER_ADDRESS=localhost:7051</span><br><span class="line"></span><br><span class="line">#Run the following command to initialize the ledger with assets.</span><br><span class="line">peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile &quot;$&#123;PWD&#125;/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem&quot; -C mychannel -n basic --peerAddresses localhost:7051 --tlsRootCertFiles &quot;$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt&quot; --peerAddresses localhost:9051 --tlsRootCertFiles &quot;$&#123;PWD&#125;/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt&quot; -c &apos;&#123;&quot;function&quot;:&quot;InitLedger&quot;,&quot;Args&quot;:[]&#125;&apos;</span><br><span class="line"></span><br><span class="line">#You can now query the ledger from your CLI. Run the following command to get the list of assets that were added to your channel ledger:</span><br><span class="line">peer chaincode query -C mychannel -n basic -c &apos;&#123;&quot;Args&quot;:[&quot;GetAllAssets&quot;]&#125;&apos; | prettyjson</span><br><span class="line"></span><br><span class="line">#Use the following command to change the owner of an asset on the ledger by invoking the asset-transfer (basic) chaincode:</span><br><span class="line">peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile &quot;$&#123;PWD&#125;/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem&quot; -C mychannel -n basic --peerAddresses localhost:7051 --tlsRootCertFiles &quot;$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt&quot; --peerAddresses localhost:9051 --tlsRootCertFiles &quot;$&#123;PWD&#125;/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt&quot; -c &apos;&#123;&quot;function&quot;:&quot;TransferAsset&quot;,&quot;Args&quot;:[&quot;asset6&quot;,&quot;Christopher&quot;]&#125;&apos;</span><br><span class="line"></span><br><span class="line">#Set the following environment variables to operate as Org2:</span><br><span class="line">#Environment variables for Org2</span><br><span class="line">export CORE_PEER_TLS_ENABLED=true</span><br><span class="line">export CORE_PEER_LOCALMSPID=&quot;Org2MSP&quot;</span><br><span class="line">export CORE_PEER_TLS_ROOTCERT_FILE=$&#123;PWD&#125;/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt</span><br><span class="line">export CORE_PEER_MSPCONFIGPATH=$&#123;PWD&#125;/organizations/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp</span><br><span class="line">export CORE_PEER_ADDRESS=localhost:9051</span><br><span class="line"></span><br><span class="line">#You can now query the asset-transfer (basic) chaincode running on peer0.org2.example.com:</span><br><span class="line">peer chaincode query -C mychannel -n basic -c &apos;&#123;&quot;Args&quot;:[&quot;ReadAsset&quot;,&quot;asset6&quot;]&#125;&apos;</span><br><span class="line"></span><br><span class="line">#Bring down the network</span><br><span class="line">./network.sh down</span><br><span class="line">#relogin to take effect from trying again.</span><br><span class="line">&lt;!-- docker rm -f $(docker ps -aq)</span><br><span class="line">docker rmi -f $(docker images -q)</span><br><span class="line">docker rmi -f $(docker images | grep dev-peer[0-9] | awk &apos;&#123;print $3&#125;&apos;) --&gt;</span><br></pre></td></tr></table></figure>
<h1 id="Deploying-a-smart-contract-to-a-channel"><a href="#Deploying-a-smart-contract-to-a-channel" class="headerlink" title="Deploying a smart contract to a channel"></a>Deploying a smart contract to a channel</h1><h2 id="Package-the-smart-contract"><a href="#Package-the-smart-contract" class="headerlink" title="Package the smart contract"></a>Package the smart contract</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#GO</span><br><span class="line">cd /data/fabric/fabric-samples/test-network</span><br><span class="line">export PATH=$&#123;PWD&#125;/../bin:$PATH</span><br><span class="line">export FABRIC_CFG_PATH=$PWD/../config/</span><br><span class="line">peer version</span><br><span class="line">#You can now create the chaincode package using the peer lifecycle chaincode package command:</span><br><span class="line">peer lifecycle chaincode package basic.tar.gz --path ../asset-transfer-basic/chaincode-go/ --lang golang --label basic_1.0</span><br></pre></td></tr></table></figure>
<h2 id="Install-the-chaincode-package"><a href="#Install-the-chaincode-package" class="headerlink" title="Install the chaincode package"></a>Install the chaincode package</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">both Org1 and org2</span><br><span class="line"></span><br><span class="line">#We can now install the chaincode on the Org1 peer</span><br><span class="line">export CORE_PEER_TLS_ENABLED=true</span><br><span class="line">export CORE_PEER_LOCALMSPID=&quot;Org1MSP&quot;</span><br><span class="line">export CORE_PEER_TLS_ROOTCERT_FILE=$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt</span><br><span class="line">export CORE_PEER_MSPCONFIGPATH=$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp</span><br><span class="line">export CORE_PEER_ADDRESS=localhost:7051</span><br><span class="line"></span><br><span class="line">peer lifecycle chaincode install basic.tar.gz</span><br><span class="line"></span><br><span class="line">#We can now install the chaincode on the Org2 peer</span><br><span class="line">export CORE_PEER_LOCALMSPID=&quot;Org2MSP&quot;</span><br><span class="line">export CORE_PEER_TLS_ROOTCERT_FILE=$&#123;PWD&#125;/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt</span><br><span class="line">export CORE_PEER_MSPCONFIGPATH=$&#123;PWD&#125;/organizations/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp</span><br><span class="line">export CORE_PEER_ADDRESS=localhost:9051</span><br><span class="line"></span><br><span class="line">peer lifecycle chaincode install basic.tar.gz</span><br></pre></td></tr></table></figure>
<h2 id="Approve-a-chaincode-definition"><a href="#Approve-a-chaincode-definition" class="headerlink" title="Approve a chaincode definition"></a>Approve a chaincode definition</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">both Org1 and org2</span><br><span class="line"></span><br><span class="line">#You can find the package ID of a chaincode by using the peer lifecycle chaincode queryinstalled command to query your peer</span><br><span class="line">peer lifecycle chaincode queryinstalled</span><br><span class="line"></span><br><span class="line">#let’s go ahead and save it as an environment variable. Paste the package ID returned by peer lifecycle chaincode queryinstalled into the command below</span><br><span class="line">export CC_PACKAGE_ID=basic_1.0:2e20ce421c8037420718c8a3918a1eea76343b7361fffdac454181c54e5736c7</span><br><span class="line"></span><br><span class="line">#Chaincode is approved at the organization level, so the command only needs to target one peer. The approval is distributed to the other peers within the organization using gossip. Approve the chaincode definition using the peer lifecycle chaincode approveformyorg command:</span><br><span class="line"></span><br><span class="line">peer lifecycle chaincode approveformyorg -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --channelID mychannel --name basic --version 1.0 --package-id $CC_PACKAGE_ID --sequence 1 --tls --cafile &quot;$&#123;PWD&#125;/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#We still need to approve the chaincode definition as Org1</span><br><span class="line">export CORE_PEER_LOCALMSPID=&quot;Org1MSP&quot;</span><br><span class="line">export CORE_PEER_MSPCONFIGPATH=$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp</span><br><span class="line">export CORE_PEER_TLS_ROOTCERT_FILE=$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt</span><br><span class="line">export CORE_PEER_ADDRESS=localhost:7051</span><br><span class="line"></span><br><span class="line">peer lifecycle chaincode approveformyorg -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --channelID mychannel --name basic --version 1.0 --package-id $CC_PACKAGE_ID --sequence 1 --tls --cafile &quot;$&#123;PWD&#125;/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem&quot;</span><br><span class="line"></span><br><span class="line">#We now have the majority we need to deploy the asset-transfer (basic) the chaincode to the channel.</span><br></pre></td></tr></table></figure>
<h2 id="Committing-the-chaincode-definition-to-the-channel"><a href="#Committing-the-chaincode-definition-to-the-channel" class="headerlink" title="Committing the chaincode definition to the channel"></a>Committing the chaincode definition to the channel</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;peer lifecycle chaincode commit&quot; need to imply the both of peers of Org1 and Org2:</span><br><span class="line">--peerAddresses localhost:7051</span><br><span class="line">--peerAddresses localhost:9051 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#After a sufficient number of organizations have approved a chaincode definition, one organization can commit the chaincode definition to the channel</span><br><span class="line">You can use the peer lifecycle chaincode checkcommitreadiness command to check whether channel members have approved the same chaincode definition</span><br><span class="line"></span><br><span class="line">peer lifecycle chaincode checkcommitreadiness --channelID mychannel --name basic --version 1.0 --sequence 1 --tls --cafile &quot;$&#123;PWD&#125;/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem&quot; --output json</span><br><span class="line"></span><br><span class="line">#You can use the peer lifecycle chaincode commit command to commit the chaincode definition to the channel. The commit command also needs to be submitted by an organization admin.</span><br><span class="line"></span><br><span class="line">peer lifecycle chaincode commit -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --channelID mychannel --name basic --version 1.0 --sequence 1 --tls --cafile &quot;$&#123;PWD&#125;/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem&quot; --peerAddresses localhost:7051 --tlsRootCertFiles &quot;$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt&quot; --peerAddresses localhost:9051 --tlsRootCertFiles &quot;$&#123;PWD&#125;/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt&quot;</span><br><span class="line"></span><br><span class="line">#You can use the peer lifecycle chaincode querycommitted command to confirm that the chaincode definition has been committed to the channel.</span><br><span class="line"></span><br><span class="line">peer lifecycle chaincode querycommitted --channelID mychannel --name basic --cafile &quot;$&#123;PWD&#125;/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem&quot;</span><br></pre></td></tr></table></figure>
<h2 id="Invoking-the-chaincode"><a href="#Invoking-the-chaincode" class="headerlink" title="Invoking the chaincode"></a>Invoking the chaincode</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#Use the following command to create an initial set of assets on the ledger. Note the CLI does not access the Fabric Gateway peer, so each endorsing peer must be specified.</span><br><span class="line"></span><br><span class="line">peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile &quot;$&#123;PWD&#125;/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem&quot; -C mychannel -n basic --peerAddresses localhost:7051 --tlsRootCertFiles &quot;$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt&quot; --peerAddresses localhost:9051 --tlsRootCertFiles &quot;$&#123;PWD&#125;/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt&quot; -c &apos;&#123;&quot;function&quot;:&quot;InitLedger&quot;,&quot;Args&quot;:[]&#125;&apos;</span><br><span class="line"></span><br><span class="line">#We can use a query function to read the set of cars that were created by the chaincode:</span><br><span class="line"></span><br><span class="line">peer chaincode query -C mychannel -n basic -c &apos;&#123;&quot;Args&quot;:[&quot;GetAllAssets&quot;]&#125;&apos; | prettyjson</span><br></pre></td></tr></table></figure>
<h2 id="Upgrading-a-smart-contract"><a href="#Upgrading-a-smart-contract" class="headerlink" title="Upgrading a smart contract"></a>Upgrading a smart contract</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#Openning a new terminal to input the following command:</span><br><span class="line">cd /data/fabric/fabric-samples/asset-transfer-basic/chaincode-javascript</span><br><span class="line">npm install</span><br><span class="line">cd ../../test-network</span><br><span class="line">export PATH=$&#123;PWD&#125;/../bin:$PATH</span><br><span class="line">export FABRIC_CFG_PATH=$PWD/../config/</span><br><span class="line"></span><br><span class="line">#You can then issue the following commands to package the JavaScript chaincode from the test-network directory. We will set the environment variables needed to use the peer CLI again in case you closed your terminal.</span><br><span class="line"></span><br><span class="line">export CORE_PEER_MSPCONFIGPATH=$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp</span><br><span class="line">peer lifecycle chaincode package basic_2.tar.gz --path ../asset-transfer-basic/chaincode-javascript/ --lang node --label basic_2.0</span><br><span class="line"></span><br><span class="line">#Run the following commands to operate the peer CLI as the Org1 admin:</span><br><span class="line"></span><br><span class="line">export CORE_PEER_TLS_ENABLED=true</span><br><span class="line">export CORE_PEER_LOCALMSPID=&quot;Org1MSP&quot;</span><br><span class="line">export CORE_PEER_TLS_ROOTCERT_FILE=$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt</span><br><span class="line">export CORE_PEER_MSPCONFIGPATH=$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp</span><br><span class="line">export CORE_PEER_ADDRESS=localhost:7051</span><br><span class="line"></span><br><span class="line">#https://charlielin.top/2020/03/26/%E5%9C%A8-fabric-%E4%B8%8A%E6%89%A7%E8%A1%8C-chaincode-%E7%9A%84%E6%A2%B3%E7%90%86/</span><br><span class="line">#We can now use the following command to install the new chaincode package on the Org1 peer.</span><br><span class="line">#It much more slower than installing go, which needs a few seconds to be installed, just wait with patient:</span><br><span class="line">peer lifecycle chaincode install basic_2.tar.gz</span><br><span class="line">peer lifecycle chaincode queryinstalled</span><br><span class="line"></span><br><span class="line">#ou can use the package label to find the package ID of the new chaincode and save it as a new environment variable. This output is for example only – your package ID will be different, so DO NOT COPY AND PASTE!</span><br><span class="line">export NEW_CC_PACKAGE_ID=basic_2.0:65dc35f2a2bfc653fc329254b5e0ab2646b4fd65f7613f7772d9954da064a224</span><br><span class="line"></span><br><span class="line">#Org1 can now approve a new chaincode definition:</span><br><span class="line">#Because the sequence parameter is used by the Fabric chaincode lifecycle to keep track of chaincode upgrades, Org1 also needs to increment the sequence number from 1 to 2</span><br><span class="line">peer lifecycle chaincode approveformyorg -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --channelID mychannel --name basic --version 2.0 --package-id $NEW_CC_PACKAGE_ID --sequence 2 --tls --cafile &quot;$&#123;PWD&#125;/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#We now need to install the chaincode package and approve the chaincode definition as Org2 in order to upgrade the chaincode. </span><br><span class="line"></span><br><span class="line">export CORE_PEER_LOCALMSPID=&quot;Org2MSP&quot;</span><br><span class="line">export CORE_PEER_TLS_ROOTCERT_FILE=$&#123;PWD&#125;/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt</span><br><span class="line">export CORE_PEER_MSPCONFIGPATH=$&#123;PWD&#125;/organizations/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp</span><br><span class="line">export CORE_PEER_ADDRESS=localhost:9051</span><br><span class="line"></span><br><span class="line">#We can now use the following command to install the new chaincode package on the Org2 peer.</span><br><span class="line">peer lifecycle chaincode install basic_2.tar.gz</span><br><span class="line"></span><br><span class="line">#You can now approve the new chaincode definition for Org2.</span><br><span class="line"></span><br><span class="line">peer lifecycle chaincode approveformyorg -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --channelID mychannel --name basic --version 2.0 --package-id $NEW_CC_PACKAGE_ID --sequence 2 --tls --cafile &quot;$&#123;PWD&#125;/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem&quot;</span><br><span class="line"></span><br><span class="line">#check if the chaincode definition with sequence 2 is ready to be committed to the channel:</span><br><span class="line"></span><br><span class="line">peer lifecycle chaincode checkcommitreadiness --channelID mychannel --name basic --version 2.0 --sequence 2 --tls --cafile &quot;$&#123;PWD&#125;/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem&quot; --output json</span><br><span class="line"></span><br><span class="line">#Org2 can use the following command to upgrade the chaincode:</span><br><span class="line"></span><br><span class="line">peer lifecycle chaincode commit -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --channelID mychannel --name basic --version 2.0 --sequence 2 --tls --cafile &quot;$&#123;PWD&#125;/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem&quot; --peerAddresses localhost:7051 --tlsRootCertFiles &quot;$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt&quot; --peerAddresses localhost:9051 --tlsRootCertFiles &quot;$&#123;PWD&#125;/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#we can test our new JavaScript chaincode by creating a new car:</span><br><span class="line"></span><br><span class="line">peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile &quot;$&#123;PWD&#125;/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem&quot; -C mychannel -n basic --peerAddresses localhost:7051 --tlsRootCertFiles &quot;$&#123;PWD&#125;/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt&quot; --peerAddresses localhost:9051 --tlsRootCertFiles &quot;$&#123;PWD&#125;/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt&quot; -c &apos;&#123;&quot;function&quot;:&quot;CreateAsset&quot;,&quot;Args&quot;:[&quot;asset8&quot;,&quot;blue&quot;,&quot;16&quot;,&quot;Kelley&quot;,&quot;750&quot;]&#125;&apos;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#Clean up</span><br><span class="line"></span><br><span class="line">docker stop logspout</span><br><span class="line">docker rm logspout</span><br><span class="line">cd /data/fabric/fabric-samples/test-network</span><br><span class="line">./network.sh down</span><br></pre></td></tr></table></figure>
<h1 id="Running-a-Fabric-Application"><a href="#Running-a-Fabric-Application" class="headerlink" title="Running a Fabric Application"></a>Running a Fabric Application</h1><h2 id="Set-up-the-blockchain-network"><a href="#Set-up-the-blockchain-network" class="headerlink" title="Set up the blockchain network"></a>Set up the blockchain network</h2><p>./network.sh up createChannel -c mychannel -ca</p>
<h2 id="Deploy-the-smart-contract"><a href="#Deploy-the-smart-contract" class="headerlink" title="Deploy the smart contract"></a>Deploy the smart contract</h2><p>./network.sh deployCC -ccn basic -ccp ../asset-transfer-basic/chaincode-typescript/ -ccl typescript</p>
<h2 id="Prepare-the-sample-application"><a href="#Prepare-the-sample-application" class="headerlink" title="Prepare the sample application"></a>Prepare the sample application</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd ../asset-transfer-basic/application-gateway-typescript</span><br><span class="line">apt install -y make g++</span><br><span class="line">npm install</span><br><span class="line">npm run-script build</span><br><span class="line">npm start</span><br></pre></td></tr></table></figure>
<h1 id="Running-chaincode-in-development-mode"><a href="#Running-chaincode-in-development-mode" class="headerlink" title="Running chaincode in development mode"></a>Running chaincode in development mode</h1><h2 id="Set-up-environment"><a href="#Set-up-environment" class="headerlink" title="Set up environment"></a>Set up environment</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#git clone https://github.com/hyperledger/fabric</span><br><span class="line">apt install -y make g++</span><br><span class="line">cp -a /vagrant/fabric /Developer/</span><br><span class="line">cd /Developer/fabric</span><br><span class="line">make orderer peer configtxgen</span><br><span class="line"></span><br><span class="line">export PATH=$(pwd)/build/bin:$PATH</span><br><span class="line">export FABRIC_CFG_PATH=$(pwd)/sampleconfig</span><br><span class="line">sudo mkdir /var/hyperledger</span><br><span class="line">configtxgen -profile SampleDevModeSolo -channelID syschannel -outputBlock genesisblock -configPath $FABRIC_CFG_PATH -outputBlock &quot;$(pwd)/sampleconfig/genesisblock&quot;</span><br></pre></td></tr></table></figure>
<h2 id="Start-the-orderer"><a href="#Start-the-orderer" class="headerlink" title="Start the orderer"></a>Start the orderer</h2><p>ORDERER_GENERAL_GENESISPROFILE=SampleDevModeSolo orderer</p>
<h2 id="Start-the-peer-in-DevMode"><a href="#Start-the-peer-in-DevMode" class="headerlink" title="Start the peer in DevMode"></a>Start the peer in DevMode</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#Open another terminal window and set the required environment variables to override the peer configuration and start the peer node:</span><br><span class="line">cd /Developer/fabric</span><br><span class="line">export CORE_OPERATIONS_LISTENADDRESS=127.0.0.1:9444</span><br><span class="line">export PATH=$(pwd)/build/bin:$PATH</span><br><span class="line">export FABRIC_CFG_PATH=$(pwd)/sampleconfig</span><br><span class="line">FABRIC_LOGGING_SPEC=chaincode=debug CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052 peer node start --peer-chaincodedev=true</span><br></pre></td></tr></table></figure>
<h2 id="Create-channel-and-join-peer"><a href="#Create-channel-and-join-peer" class="headerlink" title="Create channel and join peer"></a>Create channel and join peer</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#Open another terminal window</span><br><span class="line"></span><br><span class="line">cd /Developer/fabric</span><br><span class="line">export PATH=$(pwd)/build/bin:$PATH</span><br><span class="line">export FABRIC_CFG_PATH=$(pwd)/sampleconfig</span><br><span class="line">configtxgen -channelID ch1 -outputCreateChannelTx ch1.tx -profile SampleSingleMSPChannel -configPath $FABRIC_CFG_PATH</span><br><span class="line">peer channel create -o 127.0.0.1:7050 -c ch1 -f ch1.tx</span><br><span class="line">peer channel join -b ch1.block</span><br></pre></td></tr></table></figure>
<h2 id="Build-the-chaincode"><a href="#Build-the-chaincode" class="headerlink" title="Build the chaincode"></a>Build the chaincode</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd /Developer/fabric</span><br><span class="line">go build -o simpleChaincode ./integration/chaincode/simple/cmd</span><br></pre></td></tr></table></figure>
<h2 id="Start-the-chaincode"><a href="#Start-the-chaincode" class="headerlink" title="Start the chaincode"></a>Start the chaincode</h2><p>CORE_CHAINCODE_LOGLEVEL=debug CORE_PEER_TLS_ENABLED=false CORE_CHAINCODE_ID_NAME=mycc:1.0 ./simpleChaincode -peer.address 127.0.0.1:7052</p>
<h2 id="Approve-and-commit-the-chaincode-definition"><a href="#Approve-and-commit-the-chaincode-definition" class="headerlink" title="Approve and commit the chaincode definition"></a>Approve and commit the chaincode definition</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#Open another terminal window</span><br><span class="line"></span><br><span class="line">cd /Developer/fabric</span><br><span class="line">export PATH=$(pwd)/build/bin:$PATH</span><br><span class="line">export FABRIC_CFG_PATH=$(pwd)/sampleconfig</span><br><span class="line">peer lifecycle chaincode approveformyorg  -o 127.0.0.1:7050 --channelID ch1 --name mycc --version 1.0 --sequence 1 --init-required --signature-policy &quot;OR (&apos;SampleOrg.member&apos;)&quot; --package-id mycc:1.0</span><br><span class="line">peer lifecycle chaincode checkcommitreadiness -o 127.0.0.1:7050 --channelID ch1 --name mycc --version 1.0 --sequence 1 --init-required --signature-policy &quot;OR (&apos;SampleOrg.member&apos;)&quot;</span><br><span class="line">peer lifecycle chaincode commit -o 127.0.0.1:7050 --channelID ch1 --name mycc --version 1.0 --sequence 1 --init-required --signature-policy &quot;OR (&apos;SampleOrg.member&apos;)&quot; --peerAddresses 127.0.0.1:7051</span><br></pre></td></tr></table></figure>
<h2 id="Next-steps"><a href="#Next-steps" class="headerlink" title="Next steps"></a>Next steps</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CORE_PEER_ADDRESS=127.0.0.1:7051 peer chaincode invoke -o 127.0.0.1:7050 -C ch1 -n mycc -c &apos;&#123;&quot;Args&quot;:[&quot;init&quot;,&quot;a&quot;,&quot;100&quot;,&quot;b&quot;,&quot;200&quot;]&#125;&apos; --isInit</span><br><span class="line">CORE_PEER_ADDRESS=127.0.0.1:7051 peer chaincode invoke -o 127.0.0.1:7050 -C ch1 -n mycc -c &apos;&#123;&quot;Args&quot;:[&quot;invoke&quot;,&quot;a&quot;,&quot;b&quot;,&quot;10&quot;]&#125;&apos;</span><br><span class="line">CORE_PEER_ADDRESS=127.0.0.1:7051 peer chaincode invoke -o 127.0.0.1:7050 -C ch1 -n mycc -c &apos;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;a&quot;]&#125;&apos;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>BlockChain</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux Shell Script</title>
    <url>/2022/08/Linux-Shell-Script.html</url>
    <content><![CDATA[<p>记录Linux脚本的常用技巧。</p>
<a id="more"></a>
<h2 id="cat"><a href="#cat" class="headerlink" title="cat"></a>cat</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#输出多行到屏幕：</span></span><br><span class="line">cat &lt;&lt; USAGE &gt;&amp;2</span><br><span class="line">Usage:</span><br><span class="line">    <span class="variable">$WAITFORIT_cmdname</span> host:port [-s] [-t timeout] [-- <span class="built_in">command</span> args]</span><br><span class="line">    -h HOST | --host=HOST       Host or IP under <span class="built_in">test</span></span><br><span class="line">    -p PORT | --port=PORT       TCP port under <span class="built_in">test</span></span><br><span class="line">                                Alternatively, you specify the host and port as host:port</span><br><span class="line">    -s | --strict               Only execute subcommand <span class="keyword">if</span> the <span class="built_in">test</span> succeeds</span><br><span class="line">    -q | --quiet                Don<span class="string">'t output any status messages</span></span><br><span class="line"><span class="string">    -t TIMEOUT | --timeout=TIMEOUT</span></span><br><span class="line"><span class="string">                                Timeout in seconds, zero for no timeout</span></span><br><span class="line"><span class="string">    -- COMMAND ARGS             Execute command with args after the test finishes</span></span><br><span class="line"><span class="string">USAGE</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">cat &lt;&lt; EOF &gt;&amp;2</span></span><br><span class="line"><span class="string">This is a test1</span></span><br><span class="line"><span class="string">This is a test1</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#输出多行到文件：</span></span><br><span class="line"><span class="string">#追加：</span></span><br><span class="line"><span class="string">cat &gt;&gt; /tmp/tmp.log &lt;&lt; EOF</span></span><br><span class="line"><span class="string">net.ipv4.tcp_syncookies = 1</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string">#不追加：</span></span><br><span class="line"><span class="string">cat &gt; /tmp/tmp.log &lt;&lt; EOF</span></span><br><span class="line"><span class="string">net.ipv4.tcp_syncookies = 1</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#同时输出日志与文件</span></span><br><span class="line"><span class="string">./ping_check.sh |&amp; tee -a ping_full.log</span></span><br></pre></td></tr></table></figure>
<h3 id="SED"><a href="#SED" class="headerlink" title="SED"></a>SED</h3><p><a href="https://coolshell.cn/articles/9104.html" target="_blank" rel="noopener">https://coolshell.cn/articles/9104.html</a></p>
<h3 id="插入换行"><a href="#插入换行" class="headerlink" title="插入换行"></a>插入换行</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed $<span class="string">'s;AAA;\\\nAAA;g'</span> my.txt</span><br></pre></td></tr></table></figure>
<h3 id="多个匹配"><a href="#多个匹配" class="headerlink" title="多个匹配"></a>多个匹配</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed <span class="string">'1,3s/my/your/g; 3,$s/This/That/g'</span> my.txt</span><br><span class="line"></span><br><span class="line">sed -e <span class="string">'1,3s/my/your/g'</span> -e <span class="string">'3,$s/This/That/g'</span> my.txt</span><br></pre></td></tr></table></figure>
<p>我们可以使用&amp;来当做被匹配的变量，然后可以在基本左右加点东西：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat my.txt</span><br><span class="line">This is my cat, my cat<span class="string">'s name is betty</span></span><br><span class="line"><span class="string">This is my dog, my dog'</span>s name is frank</span><br><span class="line">This is my fish, my fish<span class="string">'s name is george</span></span><br><span class="line"><span class="string">This is my goat, my goat'</span>s name is adam</span><br><span class="line"></span><br><span class="line">$ sed <span class="string">'s/my/[&amp;]/g'</span> my.txt</span><br><span class="line">This is [my] cat, [my] cat<span class="string">'s name is betty</span></span><br><span class="line"><span class="string">This is [my] dog, [my] dog'</span>s name is frank</span><br><span class="line">This is [my] fish, [my] fish<span class="string">'s name is george</span></span><br><span class="line"><span class="string">This is [my] goat, [my] goat'</span>s name is adam</span><br></pre></td></tr></table></figure>
<h3 id="圆括号匹配"><a href="#圆括号匹配" class="headerlink" title="圆括号匹配"></a>圆括号匹配</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat my.txt</span><br><span class="line">This is my cat, my cat<span class="string">'s name is betty</span></span><br><span class="line"><span class="string">This is my dog, my dog'</span>s name is frank</span><br><span class="line">This is my fish, my fish<span class="string">'s name is george</span></span><br><span class="line"><span class="string">This is my goat, my goat'</span>s name is adam</span><br><span class="line"></span><br><span class="line">sed <span class="string">'s/This is my \([^,&amp;]*\),.*is \(.*\)/\1:\2/g'</span> my.txt</span><br><span class="line">cat:betty</span><br><span class="line">dog:frank</span><br><span class="line">fish:george</span><br><span class="line">goat:adam</span><br><span class="line"></span><br><span class="line">正则为：This is my ([^,]*),.*is (.*)</span><br><span class="line">匹配为：This is my (cat),……….is (betty)</span><br><span class="line"></span><br><span class="line">然后：\1就是cat，\2就是betty</span><br></pre></td></tr></table></figure>
<p>也就是：<br>&amp;匹配所有的内容；<br>\1匹配到的第一个 \ ( \)中的内容；<br>\2匹配到的第二个\ ( \)内容。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://www.yiibai.com/sed/sed_regular_expressions.html" target="_blank" rel="noopener">https://www.yiibai.com/sed/sed_regular_expressions.html</a></li>
<li><a href="https://coolshell.cn/articles/9104.html" target="_blank" rel="noopener">https://coolshell.cn/articles/9104.html</a></li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Seata</title>
    <url>/2022/06/Seata.html</url>
    <content><![CDATA[<p>Seata is an open source distributed transaction solution that delivers high performance and easy to use distributed transaction services under a microservices architecture.</p>
<a id="more"></a>
<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>mysql:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d  -p 3306:3306 --restart=always --name mysql \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=Aa654321 \</span><br><span class="line">-e MYSQL_DATABASE=seata-server \</span><br><span class="line">-e MYSQL_USER=seata \</span><br><span class="line">-e MYSQL_PASSWORD=Aa123456 \</span><br><span class="line">mysql:5.7.24 \</span><br><span class="line">--character-set-server=utf8 --collation-server=utf8_general_ci --lower_case_table_names=1</span><br></pre></td></tr></table></figure>
<p><a href="https://seata.io/zh-cn/docs/ops/deploy-by-docker.html" target="_blank" rel="noopener">https://seata.io/zh-cn/docs/ops/deploy-by-docker.html</a></p>
<p>#Copying out configs from docker container:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run -d -p 8091:8091 -p 7091:7091  --name seata-server seataio/seata-server:latest</span><br><span class="line">docker cp seata-serve:/seata-server/resources ./config</span><br><span class="line">docker  rm -vf seata-server</span><br></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Nacos:</span></span><br><span class="line"><span class="comment">#https://github.com/nacos-group/nacos-docker/tree/master/example</span></span><br><span class="line">docker run -d --name nacos-server -p 8848:8848 -p 9848:9848 -e MODE=standalone nacos/nacos-server:v2.1.0</span><br><span class="line"></span><br><span class="line"><span class="comment">#Cluster</span></span><br><span class="line"><span class="comment">#Create Dataabse:</span></span><br><span class="line">https://github.com/alibaba/nacos/blob/master/distribution/conf/nacos-mysql.sql</span><br><span class="line">docker run -d --name nacos-cluster \</span><br><span class="line">  -p 8848:8848 \</span><br><span class="line">  -p 9848:9848 \</span><br><span class="line">  -e TZ=Asia/Shanghai \</span><br><span class="line">  --env SPRING_DATASOURCE_PLATFORM=mysql \</span><br><span class="line">  --env MYSQL_SERVICE_HOST=192.168.101.82 \</span><br><span class="line">  --env MYSQL_SERVICE_DB_NAME=nacos-server \</span><br><span class="line">  --env MYSQL_SERVICE_USER=root \</span><br><span class="line">  --env MYSQL_SERVICE_PASSWORD=Aa123<span class="comment">#@! \</span></span><br><span class="line">  nacos/nacos-server:v2.1.0</span><br><span class="line"><span class="comment">#集群模式下Seata连接会报错：server is DOWNnow, detailed error message: Optional[Distro protocol is not initialized]，先用standalone模式启动，后面再解决。</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#Browser, login with nacos/nacos</span></span><br><span class="line">  http://192.168.101.82:8848/nacos/<span class="comment">#/login</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Seata:</span></span><br><span class="line"><span class="comment">#Create Database:</span></span><br><span class="line">https://github.com/seata/seata/blob/develop/script/server/db/mysql.sql</span><br><span class="line">docker run -d --name seata-server \</span><br><span class="line">        -p 8091:8091 \</span><br><span class="line">        -p 7091:7091 \</span><br><span class="line">        -e SEATA_IP=192.168.101.82 \</span><br><span class="line">        -e SEATA_PORT=8091 \</span><br><span class="line">        -v /data/vagrant/boxes/docker/seata/config:/seata-server/resources  \</span><br><span class="line">        seataio/seata-server:1.5.1</span><br><span class="line"><span class="comment">#Browser, login with seata/seata</span></span><br><span class="line">http://192.168.101.82:7091/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#Sentinel Dashboard</span></span><br><span class="line"><span class="comment">#https://www.cnblogs.com/wintersoft/p/11235192.html</span></span><br><span class="line">wget https://github.com/alibaba/Sentinel/releases/download/1.8.4/sentinel-dashboard-1.8.4.jar</span><br><span class="line">java -Dserver.port=8082 \</span><br><span class="line">-Dcsp.sentinel.dashboard.server=192.168.101.82:8082 \</span><br><span class="line">-Dproject.name=sentinel-dashboard \</span><br><span class="line">-jar sentinel-dashboard-1.8.4.jar</span><br><span class="line"></span><br><span class="line"><span class="comment">#cat sentinel-dashboard-Dockerfile </span></span><br><span class="line">FROM openjdk:8</span><br><span class="line">ENV SENTINEL_HOME /opt/sentinel-dashboard</span><br><span class="line">RUN mkdir -p <span class="variable">$&#123;SENTINEL_HOME&#125;</span></span><br><span class="line">COPY ./sentinel-dashboard-1.8.4.jar <span class="variable">$&#123;SENTINEL_HOME&#125;</span></span><br><span class="line">RUN chmod -R +x <span class="variable">$&#123;SENTINEL_HOME&#125;</span>/*jar</span><br><span class="line">WORKDIR <span class="variable">$&#123;SENTINEL_HOME&#125;</span></span><br><span class="line">EXPOSE 8080</span><br><span class="line">CMD java <span class="variable">$&#123;JAVA_OPTS&#125;</span> -jar -Dcsp.sentinel.dashboard.server=192.168.101.82:8082 -Dproject.name=sentinel-dashboard sentinel-dashboard-1.8.4.jar</span><br><span class="line"></span><br><span class="line"><span class="comment">#build</span></span><br><span class="line">docker build -t <span class="string">"dave/sentinel-dashboard:1.8.4"</span> . -f sentinel-dashboard-Dockerfile</span><br><span class="line"><span class="comment">#start</span></span><br><span class="line">docker run -d --name sentinel-dashboard -p 8082:8080 dave/sentinel-dashboard:1.8.4</span><br><span class="line"><span class="comment">#Browser, login with sentinel/sentinel</span></span><br><span class="line">  http://192.168.101.82:8082/</span><br></pre></td></tr></table></figure>
<p>application.yml<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: 7091</span><br><span class="line"></span><br><span class="line">spring:</span><br><span class="line">  application:</span><br><span class="line">    name: seata-server</span><br><span class="line"></span><br><span class="line">logging:</span><br><span class="line">  config: classpath:logback-spring.xml</span><br><span class="line">  file:</span><br><span class="line">    path: $&#123;user.home&#125;/logs/seata</span><br><span class="line">  extend:</span><br><span class="line">    logstash-appender:</span><br><span class="line">      destination: 127.0.0.1:4560</span><br><span class="line">    kafka-appender:</span><br><span class="line">      bootstrap-servers: 127.0.0.1:9092</span><br><span class="line">      topic: logback_to_logstash</span><br><span class="line"></span><br><span class="line">console:</span><br><span class="line">  user:</span><br><span class="line">    username: seata</span><br><span class="line">    password: seata</span><br><span class="line"></span><br><span class="line">seata:</span><br><span class="line">  config:</span><br><span class="line">    # support: nacos, consul, apollo, zk, etcd3</span><br><span class="line">    type: nacos</span><br><span class="line">    nacos:</span><br><span class="line">      server-addr: 192.168.101.82:8848</span><br><span class="line">      namespace:</span><br><span class="line">      group: SEATA_GROUP</span><br><span class="line">      username: nacos</span><br><span class="line">      password: nacos</span><br><span class="line"></span><br><span class="line">  registry:</span><br><span class="line">    # support: nacos, eureka, redis, zk, consul, etcd3, sofa</span><br><span class="line">    type: nacos</span><br><span class="line">    nacos:</span><br><span class="line">      application: seata-server</span><br><span class="line">      server-addr: 192.168.101.82:8848</span><br><span class="line">      group: SEATA_GROUP</span><br><span class="line">      namespace:</span><br><span class="line">      cluster: default</span><br><span class="line">      username: nacos</span><br><span class="line">      password: nacos</span><br><span class="line">  store:</span><br><span class="line">    # support: file 、 db 、 redis</span><br><span class="line">    mode: db</span><br><span class="line">    db:</span><br><span class="line">      datasource: druid</span><br><span class="line">      db-type: mysql</span><br><span class="line">      driver-class-name: com.mysql.jdbc.Driver</span><br><span class="line">      url: jdbc:mysql://192.168.101.82:3306/seata-server?rewriteBatchedStatements=true</span><br><span class="line">      user: root</span><br><span class="line">      password: Aa123#@!</span><br><span class="line">      min-conn: 5</span><br><span class="line">      max-conn: 100</span><br><span class="line">      global-table: global_table</span><br><span class="line">      branch-table: branch_table</span><br><span class="line">      lock-table: lock_table</span><br><span class="line">      distributed-lock-table: distributed_lock</span><br><span class="line">      query-limit: 100</span><br><span class="line">      max-wait: 5000</span><br><span class="line">#  server:</span><br><span class="line">#    service-port: 8091 #If not configured, the default is &apos;$&#123;server.port&#125; + 1000&apos;</span><br><span class="line">  security:</span><br><span class="line">    secretKey: SeataSecretKey0c382ef121d778043159209298fd40bf3850a017</span><br><span class="line">    tokenValidityInMilliseconds: 1800000</span><br><span class="line">    ignore:</span><br><span class="line">      urls: /,/**/*.css,/**/*.js,/**/*.html,/**/*.map,/**/*.svg,/**/*.png,/**/*.ico,/console-fe/public/**,/api/v1/auth/login</span><br></pre></td></tr></table></figure></p>
<p>The scripts are located at: <a href="https://github.com/seata/seata/tree/develop/script" target="_blank" rel="noopener">https://github.com/seata/seata/tree/develop/script</a></p>
<h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><p><a href="https://seata.io/zh-cn/docs/user/quickstart.html" target="_blank" rel="noopener">https://seata.io/zh-cn/docs/user/quickstart.html</a></p>
<p><a href="https://github.com/seata/seata-samples/tree/master/dubbo" target="_blank" rel="noopener">https://github.com/seata/seata-samples/tree/master/dubbo</a></p>
<h2 id="Nacos"><a href="#Nacos" class="headerlink" title="Nacos"></a>Nacos</h2><p><a href="https://nacos.io/zh-cn/docs/quick-start-spring-boot.html" target="_blank" rel="noopener">https://nacos.io/zh-cn/docs/quick-start-spring-boot.html</a></p>
<p><a href="https://github.com/nacos-group/nacos-examples.git" target="_blank" rel="noopener">https://github.com/nacos-group/nacos-examples.git</a></p>
<h2 id="Shardingsphere-proxy"><a href="#Shardingsphere-proxy" class="headerlink" title="Shardingsphere-proxy"></a>Shardingsphere-proxy</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir /data/shardingsphere-proxy/conf /data/ext-lib</span><br><span class="line"></span><br><span class="line">wget https://repo1.maven.org/maven2/mysql/mysql-connector-java/8.0.11/mysql-connector-java-8.0.11.jar -P /data/ext-lib/</span><br><span class="line"></span><br><span class="line">docker run -d --name tmp --entrypoint=bash apache/shardingsphere-proxy:5.2.1</span><br><span class="line">docker cp tmp:/opt/shardingsphere-proxy/conf /data/shardingsphere-proxy/conf</span><br><span class="line">docker rm tmp</span><br><span class="line"></span><br><span class="line">docker run -d --name shardingsphere-proxy \</span><br><span class="line">    -v /data/shardingsphere-proxy/conf:/opt/shardingsphere-proxy/conf \</span><br><span class="line">    -v /data/shardingsphere-proxy/ext-lib:/opt/shardingsphere-proxy/ext-lib \</span><br><span class="line">    -e PORT=3308 -p13308:3308 apache/shardingsphere-proxy:5.2.1</span><br></pre></td></tr></table></figure>
<p>cat server.yaml:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rules:</span><br><span class="line">  - !AUTHORITY</span><br><span class="line">    users:</span><br><span class="line">      - root@%:Aa1234$#@!</span><br><span class="line">    provider:</span><br><span class="line">      type: ALL_PERMITTED</span><br><span class="line">  - !TRANSACTION</span><br><span class="line">    defaultType: XA</span><br><span class="line">    providerType: Atomikos</span><br></pre></td></tr></table></figure>
<p>一个库一个配置文件。</p>
<p>config-sharding-test.yaml:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">schemaName: seata_test</span><br><span class="line"></span><br><span class="line">dataSources:</span><br><span class="line"> ds_0:</span><br><span class="line">   url: jdbc:mysql://192.168.101.82/seata_test?serverTimezone=UTC&amp;useSSL=false</span><br><span class="line">   username: root</span><br><span class="line">   password: aaa</span><br><span class="line">   connectionTimeoutMilliseconds: 30000</span><br><span class="line">   idleTimeoutMilliseconds: 60000</span><br><span class="line">   maxLifetimeMilliseconds: 1800000</span><br><span class="line">   maxPoolSize: 50</span><br><span class="line">   minPoolSize: 1</span><br><span class="line"></span><br><span class="line">rules:</span><br><span class="line">- !SHARDING</span><br><span class="line">  tables:</span><br><span class="line">    service_at:</span><br><span class="line">      actualDataNodes: ds_0.service_at_$-&gt;&#123;0..2&#125;</span><br><span class="line">      tableStrategy:</span><br><span class="line">        standard:</span><br><span class="line">          shardingColumn: name</span><br><span class="line">          shardingAlgorithmName: database_consistent</span><br><span class="line">          #shardingAlgorithmName: database_inline</span><br><span class="line">      keyGenerateStrategy:</span><br><span class="line">        column: id</span><br><span class="line">        keyGeneratorName: snowflake</span><br><span class="line">    service_tm:</span><br><span class="line">      actualDataNodes: ds_0.service_tm_$-&gt;&#123;0..2&#125;</span><br><span class="line">      tableStrategy:</span><br><span class="line">        standard:</span><br><span class="line">          shardingColumn: aName</span><br><span class="line">          shardingAlgorithmName: database_consistent</span><br><span class="line">          #shardingAlgorithmName: database_inline</span><br><span class="line">      keyGenerateStrategy:</span><br><span class="line">        column: id</span><br><span class="line">        keyGeneratorName: snowflake</span><br><span class="line">  shardingAlgorithms:</span><br><span class="line">    database_consistent:</span><br><span class="line">      type: CONSISTENT_HASH</span><br><span class="line">    #database_inline:</span><br><span class="line">    #  type: INLINE</span><br><span class="line">    #  props:</span><br><span class="line">    #    algorithm-expression: service_at_$-&gt;&#123;account_id % 3&#125;</span><br><span class="line"></span><br><span class="line">  keyGenerators:</span><br><span class="line">    snowflake:</span><br><span class="line">      type: SNOWFLAKE</span><br><span class="line">      props:</span><br><span class="line">        worker-id: 123</span><br></pre></td></tr></table></figure>
<p>cat config-sharding-account.yaml:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">schemaName: account_dev</span><br><span class="line"></span><br><span class="line">dataSources:</span><br><span class="line"> ds_0:</span><br><span class="line">   url: jdbc:mysql://rm-3ns38ayfen92i16o6.mysql.rds.aliyuncs.com:3306/account_dev?serverTimezone=UTC&amp;useSSL=false</span><br><span class="line">   username: root</span><br><span class="line">   password: aaa</span><br><span class="line">   connectionTimeoutMilliseconds: 30000</span><br><span class="line">   idleTimeoutMilliseconds: 60000</span><br><span class="line">   maxLifetimeMilliseconds: 1800000</span><br><span class="line">   maxPoolSize: 50</span><br><span class="line">   minPoolSize: 1</span><br><span class="line"></span><br><span class="line">rules:</span><br><span class="line">- !SHARDING</span><br><span class="line">  tables:</span><br><span class="line">    capital_accounting_record:</span><br><span class="line">      actualDataNodes: ds_0.capital_accounting_record_$-&gt;&#123;0..2&#125;</span><br><span class="line">      tableStrategy:</span><br><span class="line">        standard:</span><br><span class="line">          shardingColumn: account_number</span><br><span class="line">          shardingAlgorithmName: database_consistent</span><br><span class="line">          #shardingAlgorithmName: database_inline</span><br><span class="line">      keyGenerateStrategy:</span><br><span class="line">        column: id</span><br><span class="line">        keyGeneratorName: snowflake</span><br><span class="line">  shardingAlgorithms:</span><br><span class="line">    database_consistent:</span><br><span class="line">      type: CONSISTENT_HASH</span><br><span class="line">    #database_inline:</span><br><span class="line">    #  type: INLINE</span><br><span class="line">    #  props:</span><br><span class="line">    #    algorithm-expression: capital_accounting_record_$-&gt;&#123;account_id % 3&#125;</span><br><span class="line"></span><br><span class="line">  keyGenerators:</span><br><span class="line">    snowflake:</span><br><span class="line">      type: SNOWFLAKE</span><br><span class="line">      props:</span><br><span class="line">        worker-id: 123</span><br></pre></td></tr></table></figure>
<p>自定义分片规则:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#https://shardingsphere.apache.org/document/5.2.1/cn/user-manual/shardingsphere-proxy/startup/bin/</span><br><span class="line">1. 实现 `ShardingAlgorithm` 接口定义的算法实现类。</span><br><span class="line">2. 在项目 `resources` 目录下创建 `META-INF/services` 目录。</span><br><span class="line">3. 在 `META-INF/services` 目录下新建文件 `org.apache.shardingsphere.sharding.spi.ShardingAlgorithm`</span><br><span class="line">4. 将实现类的全限定类名写入至文件 `org.apache.shardingsphere.sharding.spi.ShardingAlgorithm`</span><br><span class="line">5. 将上述 Java 文件打包成 jar 包。</span><br><span class="line">6. 将上述 jar 包拷贝至 `ext-lib` 目录。</span><br><span class="line">7. 将上述自定义算法实现类的 Java 文件引用配置在 YAML 文件中:</span><br><span class="line">      tableStrategy:</span><br><span class="line">        standard:</span><br><span class="line">          ...</span><br><span class="line">          shardingAlgorithmName: database_consistent</span><br><span class="line">      ...</span><br><span class="line">  shardingAlgorithms:</span><br><span class="line">    database_consistent:</span><br><span class="line">      type: CONSISTENT_HASH</span><br></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul>
<li><a href="https://help.aliyun.com/document_detail/157850.html" target="_blank" rel="noopener">https://help.aliyun.com/document_detail/157850.html</a></li>
<li><a href="https://www.macrozheng.com/cloud/seata.html" target="_blank" rel="noopener">https://www.macrozheng.com/cloud/seata.html</a></li>
<li><a href="https://github.com/macrozheng/springcloud-learning" target="_blank" rel="noopener">https://github.com/macrozheng/springcloud-learning</a></li>
<li><a href="https://seata.io/zh-cn/docs/ops/deploy-guide-beginner.html" target="_blank" rel="noopener">https://seata.io/zh-cn/docs/ops/deploy-guide-beginner.html</a></li>
<li><a href="https://github.com/seata/seata/tree/v1.5.1/script" target="_blank" rel="noopener">https://github.com/seata/seata/tree/v1.5.1/script</a></li>
<li><a href="https://nacos.io/zh-cn/docs/what-is-nacos.html" target="_blank" rel="noopener">https://nacos.io/zh-cn/docs/what-is-nacos.html</a></li>
<li><a href="http://c.biancheng.net/springcloud/seata.html" target="_blank" rel="noopener">http://c.biancheng.net/springcloud/seata.html</a></li>
<li><a href="http://c.biancheng.net/springcloud/nacos.html" target="_blank" rel="noopener">http://c.biancheng.net/springcloud/nacos.html</a></li>
<li><a href="https://www.apolloconfig.com/#/zh/README" target="_blank" rel="noopener">https://www.apolloconfig.com/#/zh/README</a></li>
</ul>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>Prometheus</title>
    <url>/2023/10/Prometheus.html</url>
    <content><![CDATA[<a id="more"></a>
<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p /works/config/prometheus</span><br><span class="line">chown -R 10001:10001 /data/prometheus/prometheus-data/</span><br><span class="line">cp -a prometheus.yml prometheus.rules.yml /works/config/prometheus/</span><br><span class="line"></span><br><span class="line">docker run -d --name prometheus \</span><br><span class="line">    --user 10001 -p 9090:9090 \</span><br><span class="line">    -v /works/config/prometheus:/etc/prometheus \</span><br><span class="line">    -v /data/prometheus/prometheus-data:/prometheus \</span><br><span class="line">    prom/prometheus:v2.47.1</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
        <category>Prometheus</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>CD</title>
    <url>/2023/09/CD.html</url>
    <content><![CDATA[<p>This is a guide to CD and CI.</p>
<a id="more"></a>
<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. ArgoCD &lt;--- ok</span><br><span class="line">2. FluxCD &lt;--- Not Recommend</span><br><span class="line">3. JenkinsX &lt;--- Not Recommend</span><br><span class="line">4. aliyun</span><br><span class="line">5. GitlabCI &lt;--- ok</span><br><span class="line">6. tekton &lt;--- based on k8s, more complicated than others.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Prometheus</span><br><span class="line">kustomize &lt;--- ok</span><br><span class="line"></span><br><span class="line">rancher &lt;--- ok</span><br><span class="line">k3s/AutoK3s &lt;--- ok</span><br></pre></td></tr></table></figure>
<h2 id="K3s"><a href="#K3s" class="headerlink" title="K3s"></a>K3s</h2><p>A lightweight kubernetes, like minikube.</p>
<p><a href="https://k3s.io/" target="_blank" rel="noopener">K3s</a></p>
<h3 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://docs.k3s.io/quick-start</span></span><br><span class="line"><span class="comment">#https://github.com/k3s-io/k3s/issues/1160</span></span><br><span class="line"><span class="comment">#Must have hostname can resolved by dns, or add them in /etc/hosts file of all machines:</span></span><br><span class="line">cat /etc/hosts:</span><br><span class="line">192.168.101.82 dave-PC</span><br><span class="line">192.168.109.50 dave-analysis-server</span><br><span class="line">192.168.109.52 peter-analysis-server</span><br><span class="line">192.168.109.53 eino-analysis-server</span><br><span class="line"></span><br><span class="line"><span class="comment">#Install Master:</span></span><br><span class="line">curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC=<span class="string">"server --disable traefik"</span> sh</span><br><span class="line"><span class="comment">#In China:</span></span><br><span class="line">curl -sfL https://rancher-mirror.rancher.cn/k3s/k3s-install.sh | INSTALL_K3S_EXEC=<span class="string">"server --disable traefik"</span> INSTALL_K3S_MIRROR=cn sh -</span><br><span class="line"></span><br><span class="line">cp -a /etc/rancher/k3s/k3s.yaml ~/.kube/config</span><br><span class="line">sed -i <span class="string">'s;127.0.0.1;192.168.101.82;g'</span> ~/.kube/config</span><br><span class="line">kubectl get all -A -o wide</span><br><span class="line"></span><br><span class="line"><span class="comment">#Install Node:</span></span><br><span class="line"><span class="comment">#K3S_TOKEN is located in Master Server: /var/lib/rancher/k3s/server/node-token</span></span><br><span class="line">curl -sfL https://rancher-mirror.rancher.cn/k3s/k3s-install.sh | \</span><br><span class="line">INSTALL_K3S_EXEC=<span class="string">"--node-ip=192.168.109.50 --flannel-iface=eth1"</span> \</span><br><span class="line">INSTALL_K3S_MIRROR=cn K3S_URL=https://192.168.101.82:6443 K3S_NODE_NAME=dave-analysis-server \</span><br><span class="line">K3S_TOKEN=K10944a3ff29886d4bc05ba79fa6f8a8504bca00e35231e397f9242d7af6724d16c::server:32d4961ba4b4ea871855e856d0ccef06 sh -</span><br><span class="line"></span><br><span class="line">curl -sfL https://rancher-mirror.rancher.cn/k3s/k3s-install.sh | \</span><br><span class="line">INSTALL_K3S_EXEC=<span class="string">"--node-ip=192.168.109.52 --flannel-iface=eth1"</span> \</span><br><span class="line">INSTALL_K3S_MIRROR=cn K3S_URL=https://192.168.101.82:6443 K3S_NODE_NAME=peter-analysis-server \</span><br><span class="line">K3S_TOKEN=K10944a3ff29886d4bc05ba79fa6f8a8504bca00e35231e397f9242d7af6724d16c::server:32d4961ba4b4ea871855e856d0ccef06 sh -</span><br><span class="line"></span><br><span class="line">curl -sfL https://rancher-mirror.rancher.cn/k3s/k3s-install.sh | \</span><br><span class="line">INSTALL_K3S_EXEC=<span class="string">"--node-ip=192.168.109.53 --flannel-iface=eth1"</span> \</span><br><span class="line">INSTALL_K3S_MIRROR=cn K3S_URL=https://192.168.101.82:6443 K3S_NODE_NAME=eino-analysis-server \</span><br><span class="line">K3S_TOKEN=K10944a3ff29886d4bc05ba79fa6f8a8504bca00e35231e397f9242d7af6724d16c::server:32d4961ba4b4ea871855e856d0ccef06 sh -</span><br><span class="line"></span><br><span class="line"><span class="comment">#cloudeon(Just a memo, ignore this)</span></span><br><span class="line"><span class="comment">#https://cloudeon.top/</span></span><br><span class="line">docker run -d -p 7700:7700  --name cloudeon \</span><br><span class="line"> -v /data/cloudeon/application.properties:/usr/<span class="built_in">local</span>/cloudeon/cloudeon-assembly/conf/application.properties \</span><br><span class="line"> registry.cn-hangzhou.aliyuncs.com/udh/cloudeon:v1.3.0</span><br><span class="line"></span><br><span class="line"><span class="comment">#https://blog.thenets.org/how-to-create-a-k3s-cluster-with-nginx-ingress-controller/</span></span><br><span class="line"><span class="comment">#https://blog.csdn.net/weixin_45444133/article/details/116952250</span></span><br><span class="line">kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.5/deploy/static/provider/cloud/deploy.yaml</span><br></pre></td></tr></table></figure>
<h3 id="Uninstall"><a href="#Uninstall" class="headerlink" title="Uninstall"></a>Uninstall</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Master</span></span><br><span class="line">/usr/<span class="built_in">local</span>/bin/k3s-uninstall.sh</span><br><span class="line"><span class="comment">#Node</span></span><br><span class="line">/usr/<span class="built_in">local</span>/bin/k3s-agent-uninstall.sh</span><br></pre></td></tr></table></figure>
<h3 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Create a test Namespace, if not exist</span></span><br><span class="line"><span class="string">kubectl</span> <span class="string">create</span> <span class="string">namespace</span> <span class="string">test</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Apply the example file</span></span><br><span class="line"><span class="comment">#https://kubernetes.github.io/ingress-nginx/user-guide/basic-usage/</span></span><br><span class="line"><span class="string">kubectl</span> <span class="string">-n</span> <span class="string">test</span> <span class="string">apply</span> <span class="string">-f</span> <span class="string">my-example.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test-nginx-app</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">test</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">test-nginx-backend</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">test-nginx-backend</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">backend</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">docker.io/nginx:alpine</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">Always</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test-nginx-service</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">test</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">test-nginx-backend</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test-nginx-ingress</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">test</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">test.w1.thenets.org</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">          <span class="attr">pathType:</span> <span class="string">Prefix</span></span><br><span class="line">          <span class="attr">backend:</span></span><br><span class="line">            <span class="attr">service:</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">test-nginx-service</span></span><br><span class="line">              <span class="attr">port:</span> </span><br><span class="line">                <span class="attr">number:</span> <span class="number">80</span></span><br><span class="line">  <span class="attr">ingressClassName:</span> <span class="string">nginx</span></span><br></pre></td></tr></table></figure>
<h2 id="Kustomize"><a href="#Kustomize" class="headerlink" title="Kustomize"></a>Kustomize</h2><p><a href="https://kubernetes.io/docs/tasks/manage-kubernetes-objects/kustomization/" target="_blank" rel="noopener">Declarative Management of Kubernetes Objects Using Kustomize | Kubernetes</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Kustomize/</span><br><span class="line">├── base</span><br><span class="line">│   ├── deployment.yaml</span><br><span class="line">│   ├── kustomization.yaml</span><br><span class="line">│   └── service.yaml</span><br><span class="line">└── overlays</span><br><span class="line">    ├── dev</span><br><span class="line">    │   ├── deployment.yaml</span><br><span class="line">    │   ├── kustomization.yaml</span><br><span class="line">    │   ├── password.txt</span><br><span class="line">    │   └── service.yaml</span><br><span class="line">    └── prod</span><br><span class="line">        ├── deployment.yaml</span><br><span class="line">        ├── kustomization.yaml</span><br><span class="line">        ├── password.txt</span><br><span class="line">        └── service.yaml</span><br></pre></td></tr></table></figure>
<p>base/kustomization.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">commonLabels:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">demo</span></span><br><span class="line"><span class="attr">commonAnnotations:</span></span><br><span class="line">  <span class="attr">version:</span> <span class="number">1.1</span><span class="number">.0</span></span><br><span class="line"><span class="attr">resources:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">deployment.yaml</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">service.yaml</span></span><br></pre></td></tr></table></figure>
<p>base/deployment.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">apache</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">portfolio</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">apache</span></span><br><span class="line">  <span class="attr">strategy:</span> <span class="string">&#123;&#125;</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">apache</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">singharunk/webserver:v3</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">portfolio</span></span><br><span class="line">        <span class="attr">resources:</span> <span class="string">&#123;&#125;</span></span><br></pre></td></tr></table></figure>
<p>base/service.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">portfolio-service</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">apache</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">porty</span></span><br></pre></td></tr></table></figure>
<p>Dev environment:</p>
<p>overlays/dev/kustomization.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">namePrefix:</span> <span class="string">dev-</span></span><br><span class="line"><span class="attr">commonLabels:</span></span><br><span class="line">  <span class="attr">env:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">commonAnnotations:</span></span><br><span class="line">  <span class="attr">typeofApp:</span> <span class="string">htmlApp</span></span><br><span class="line"><span class="attr">bases:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">../../base</span></span><br><span class="line"><span class="attr">namespace:</span> <span class="string">kustomize-namespace</span></span><br><span class="line"><span class="attr">patchesStrategicMerge:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">deployment.yaml</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">service.yaml</span></span><br><span class="line"><span class="attr">secretGenerator:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">dummy</span></span><br><span class="line">  <span class="attr">files:</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="string">password.txt</span></span><br></pre></td></tr></table></figure>
<p>overlays/dev/deployment.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">portfolio</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">singharunk/webserver:v3</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">portfolio</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">dummy</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/opt/password.txt</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">dummy</span></span><br><span class="line">          <span class="attr">secret:</span></span><br><span class="line">             <span class="attr">secretName:</span> <span class="string">dummy</span></span><br></pre></td></tr></table></figure>
<p>overlays/dev/password.txt</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">this is dummy secret but now I am changing it</span><br></pre></td></tr></table></figure>
<p>overlays/dev/service.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">portfolio-service</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">apache</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">82</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">httpx</span></span><br></pre></td></tr></table></figure>
<p>Prod environment:</p>
<p>overlays/prod/kustomization.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">namePrefix:</span> <span class="string">prd-</span></span><br><span class="line"></span><br><span class="line"><span class="attr">commonLabels:</span></span><br><span class="line">  <span class="attr">env:</span> <span class="string">prd</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">commonAnnotations:</span></span><br><span class="line">  <span class="attr">typeofApp:</span> <span class="string">htmlApp</span></span><br><span class="line">  <span class="attr">rollout:</span> <span class="string">value2</span></span><br><span class="line"></span><br><span class="line"><span class="attr">bases:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">../../base</span></span><br><span class="line"></span><br><span class="line"><span class="attr">patchesStrategicMerge:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">deployment.yaml</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">service.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">secretGenerator:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">dummy</span></span><br><span class="line">  <span class="attr">files:</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="string">password.txt</span></span><br><span class="line"></span><br><span class="line"><span class="attr">namespace:</span> <span class="string">kustomize-namespace</span></span><br><span class="line"></span><br><span class="line"><span class="attr">generatorOptions:</span></span><br><span class="line">  <span class="attr">disableNameSuffixHash:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>overlays/prod/deployment.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">portfolio</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">singharunk/webserver:v3</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">portfolio</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">dummy</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/opt/password.txt</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">dummy</span></span><br><span class="line">          <span class="attr">secret:</span></span><br><span class="line">             <span class="attr">secretName:</span> <span class="string">dummy</span></span><br></pre></td></tr></table></figure>
<p>overlays/prod/password.txt</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">this is dummy secret</span><br></pre></td></tr></table></figure>
<p>overlays/prod/service.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">portfolio-service</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">apache</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">81</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">portx</span></span><br></pre></td></tr></table></figure>
<p>Create</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> overlays/dev</span><br><span class="line"><span class="comment">#Run kubectl kustomize ./ to check if any error occurred</span></span><br><span class="line"><span class="comment">#kubectl kustomize &lt;kustomization_directory&gt;</span></span><br><span class="line">kubectl kustomize ./</span><br><span class="line"><span class="comment">#To apply those Resources, run kubectl apply with --kustomize or -k flag:</span></span><br><span class="line">kubectl apply -k &lt;kustomization_directory&gt;</span><br></pre></td></tr></table></figure>
<h2 id="Argocd"><a href="#Argocd" class="headerlink" title="Argocd"></a>Argocd</h2><p><a href="https://argo-cd.readthedocs.io/en/stable/getting_started/" target="_blank" rel="noopener">Getting Started - Argo CD - Declarative GitOps CD for Kubernetes (argo-cd.readthedocs.io)</a></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzU1MzY4NzQ1OA==&amp;mid=2247512193&amp;idx=1&amp;sn=da41bb4072870e34bdf338c22bcbc8cc&amp;chksm=fbedf04ccc9a795a08f4b0deb5a8518aa901dc1e8678277d232fff0d05ba1613a3f8d8636ab9&amp;scene=178&amp;cur_album_id=2470838961377427457#rd" target="_blank" rel="noopener">Argo CD 保姆级入门教程 (qq.com)</a></p>
<h3 id="Install-1"><a href="#Install-1" class="headerlink" title="Install"></a>Install</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#argocd with kubernetes 1.18</span></span><br><span class="line"><span class="comment">#https://argo-cd.readthedocs.io/en/stable/getting_started/</span></span><br><span class="line"><span class="comment">#https://mp.weixin.qq.com/s?__biz=MzU1MzY4NzQ1OA==&amp;mid=2247512193&amp;idx=1&amp;sn=da41bb4072870e34bdf338c22bcbc8cc&amp;chksm=fbedf04ccc9a795a08f4b0deb5a8518aa901dc1e8678277d232fff0d05ba1613a3f8d8636ab9&amp;scene=178&amp;cur_album_id=2470838961377427457#rd</span></span><br><span class="line"></span><br><span class="line">kubectl create namespace argocd</span><br><span class="line"><span class="comment">#kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml</span></span><br><span class="line">kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/v2.1.2/manifests/install.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment">#Service Type Load Balancer</span></span><br><span class="line"><span class="comment">#Change the argocd-server service type to LoadBalancer:</span></span><br><span class="line">kubectl patch svc argocd-server -n argocd -p <span class="string">'&#123;"spec": &#123;"type": "LoadBalancer"&#125;&#125;'</span></span><br><span class="line">kubectl -n argocd get svc</span><br></pre></td></tr></table></figure>
<p>Enable external web ui</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#Change port to 8443 and 8080</span><br><span class="line">kubectl -n argocd edit svc argocd-serve</span><br><span class="line">  ports:</span><br><span class="line">  - name: http</span><br><span class="line">    nodePort: 31291</span><br><span class="line">    port: 8080</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 8080</span><br><span class="line">  - name: https</span><br><span class="line">    nodePort: 31592</span><br><span class="line">    port: 8443</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 8080</span><br></pre></td></tr></table></figure>
<p>The URL is: <a href="https://192.168.64.6:8443/" target="_blank" rel="noopener">https://192.168.64.6:8443/</a>, login name is admin.  Getting password from:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath=&quot;&#123;.data.password&#125;&quot; | base64 -d; echo</span><br></pre></td></tr></table></figure>
<p><img src="/images/2023-09-26-CD/image-20230926173648087.png" alt="image-20230926173648087"></p>
<h3 id="Demo-1"><a href="#Demo-1" class="headerlink" title="Demo"></a>Demo</h3><h4 id="Demo1"><a href="#Demo1" class="headerlink" title="Demo1"></a>Demo1</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">fleet/</span><br><span class="line">├── application.yaml</span><br><span class="line">└── dev</span><br><span class="line">    ├── deployment.yaml</span><br><span class="line">    └── service.yaml</span><br></pre></td></tr></table></figure>
<p>application.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># application.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">argoproj.io/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Application</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">argo-demo</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">argocd</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">project:</span> <span class="string">default</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">source:</span></span><br><span class="line">    <span class="comment">#repoURL: https://github.com/yangchuansheng/argocd-lab.git</span></span><br><span class="line">    <span class="attr">repoURL:</span> <span class="string">http://gitlab.zerofinance.net/dave.zhao/fleet_demo.git</span></span><br><span class="line">    <span class="attr">targetRevision:</span> <span class="string">master</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">dev</span></span><br><span class="line">  <span class="attr">destination:</span> </span><br><span class="line">    <span class="attr">server:</span> <span class="string">https://kubernetes.default.svc</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">myapp</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># syncPolicy:</span></span><br><span class="line">  <span class="comment">#   syncOptions:</span></span><br><span class="line">  <span class="comment">#   - CreateNamespace=true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#   automated:</span></span><br><span class="line">  <span class="comment">#     selfHeal: true</span></span><br><span class="line">  <span class="comment">#     prune: true</span></span><br></pre></td></tr></table></figure>
<p>dev/deployment.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># deployment.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">myapp</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">myapp</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">myapp</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">myapp</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">registry.zerofinance.net/xpayappimage/am-webhook:1.0.x</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8088</span></span><br></pre></td></tr></table></figure>
<p>dev/service.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># service.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">myapp-service</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">myapp</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">8088</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8088</span></span><br></pre></td></tr></table></figure>
<p>Create Apps Via Command</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f application.yaml</span><br></pre></td></tr></table></figure>
<p>Creating Apps Via UI</p>
<p>Open a browser to the Argo CD external UI, and login by visiting the IP/hostname in a browser and use the credentials set in step 4.</p>
<p>After logging in, click the <strong>+ New App</strong> button:</p>
<p><img src="/images/2023-09-26-CD/image-20230926163552595.png" alt="image-20230926163552595"></p>
<p><strong><em>Notice: If you create apps via UI, you don’t need application.yaml located in root folder.</em></strong></p>
<p>More usage please visit: <a href="https://argo-cd.readthedocs.io/en/stable/getting_started/" target="_blank" rel="noopener">Getting Started - Argo CD - Declarative GitOps CD for Kubernetes (argo-cd.readthedocs.io)</a></p>
<h4 id="Demo2"><a href="#Demo2" class="headerlink" title="Demo2"></a>Demo2</h4><p>guestbook-ui-deployment.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">guestbook-ui</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">guestbook-ui</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">guestbook-ui</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">gcr.io/heptio-images/ks-guestbook-demo:0.2</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">guestbook-ui</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure>
<p>guestbook-ui-svc.yaml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">guestbook/</span><br><span class="line">├── guestbook-ui-deployment.yaml</span><br><span class="line">└── guestbook-ui-svc.yaml</span><br></pre></td></tr></table></figure>
<p>guestbook-ui-deployment.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">guestbook-ui</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">guestbook-ui</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">guestbook-ui</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">gcr.io/heptio-images/ks-guestbook-demo:0.2</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">guestbook-ui</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure>
<p>guestbook-ui-svc.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">guestbook-ui</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">guestbook-ui</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---</span></span><br><span class="line"><span class="comment"># apiVersion: networking.k8s.io/v1</span></span><br><span class="line"><span class="comment"># kind: Ingress</span></span><br><span class="line"><span class="comment"># metadata:</span></span><br><span class="line"><span class="comment">#   name: rollouts-bluegreen-ingress</span></span><br><span class="line"><span class="comment">#   annotations:</span></span><br><span class="line"><span class="comment">#     kubernetes.io/ingress.class: nginx</span></span><br><span class="line"><span class="comment"># spec:</span></span><br><span class="line"><span class="comment">#   rules:</span></span><br><span class="line"><span class="comment">#   - host: guestbook-ui.local</span></span><br><span class="line"><span class="comment">#     http:</span></span><br><span class="line"><span class="comment">#       paths:</span></span><br><span class="line"><span class="comment">#       - path: /</span></span><br><span class="line"><span class="comment">#         pathType: Prefix</span></span><br><span class="line"><span class="comment">#         backend:</span></span><br><span class="line"><span class="comment">#           # Reference to a Service name, also specified in the Rollout spec.strategy.canary.stableService field</span></span><br><span class="line"><span class="comment">#           service:</span></span><br><span class="line"><span class="comment">#             name: guestbook-ui</span></span><br><span class="line"><span class="comment">#             port:</span></span><br><span class="line"><span class="comment">#               number: 80</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">guestbook-ui-ingress</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">guestbook-ui.local</span></span><br><span class="line">      <span class="attr">http:</span></span><br><span class="line">        <span class="attr">paths:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">              <span class="attr">serviceName:</span> <span class="string">guestbook-ui</span></span><br><span class="line">              <span class="attr">servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure>
<h2 id="argo-rollouts"><a href="#argo-rollouts" class="headerlink" title="argo-rollouts"></a>argo-rollouts</h2><h3 id="Install-2"><a href="#Install-2" class="headerlink" title="Install"></a>Install</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl create namespace argo-rollouts</span><br><span class="line"><span class="comment">#kubectl apply -n argo-rollouts -f https://github.com/argoproj/argo-rollouts/releases/latest/download/install.yaml</span></span><br><span class="line">kubectl apply -n argo-rollouts -f https://github.com/argoproj/argo-rollouts/releases/download/v1.2.2/install.yaml</span><br><span class="line"></span><br><span class="line">wget https://github.com/argoproj/argo-rollouts/releases/download/v1.2.2/kubectl-argo-rollouts-linux-amd64</span><br><span class="line">wget https://github.com/argoproj/argo-rollouts/releases/download/v1.2.2/kubectl-argo-rollouts-windows-amd64</span><br></pre></td></tr></table></figure>
<h3 id="Demo-2"><a href="#Demo-2" class="headerlink" title="Demo"></a>Demo</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#demo</span></span><br><span class="line"><span class="comment">#kubectl apply -f https://raw.githubusercontent.com/argoproj/argo-rollouts/master/docs/getting-started/basic/rollout.yaml</span></span><br><span class="line"><span class="comment">#kubectl apply -f https://raw.githubusercontent.com/argoproj/argo-rollouts/master/docs/getting-started/basic/service.yaml</span></span><br><span class="line">kubectl apply -f https://raw.githubusercontent.com/argoproj/argo-rollouts/v1.2.2/docs/getting-started/basic/rollout.yaml</span><br><span class="line">kubectl apply -f https://raw.githubusercontent.com/argoproj/argo-rollouts/v1.2.2/docs/getting-started/basic/service.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment">#Watch</span></span><br><span class="line"><span class="comment">#kubectl argo rollouts get rollout rollouts-demo -w</span></span><br><span class="line">kubectl argo rollouts -n testing get rollout rollouts-demo --watch</span><br><span class="line"></span><br><span class="line"><span class="comment">#Updating a Rollout</span></span><br><span class="line">kubectl argo rollouts -n testing <span class="built_in">set</span> image rollouts-demo \</span><br><span class="line">  rollouts-demo=argoproj/rollouts-demo:yellow</span><br><span class="line"></span><br><span class="line"><span class="comment">#Promoting a Rollout</span></span><br><span class="line">kubectl argo rollouts -n testing promote rollouts-demo</span><br><span class="line"></span><br><span class="line"><span class="comment">#Updating a red Rollout</span></span><br><span class="line">kubectl argo rollouts -n testing <span class="built_in">set</span> image rollouts-demo \</span><br><span class="line">  rollouts-demo=argoproj/rollouts-demo:red</span><br><span class="line"></span><br><span class="line"><span class="comment">#Aborting a Rollout</span></span><br><span class="line">kubectl argo rollouts -n testing abort rollouts-demo</span><br><span class="line"></span><br><span class="line"><span class="comment">#In order to make Rollout considered Healthy again and not Degraded, it is necessary to change the desired state back to the previous, stable versio</span></span><br><span class="line">kubectl argo rollouts -n testing <span class="built_in">set</span> image rollouts-demo \</span><br><span class="line">  rollouts-demo=argoproj/rollouts-demo:yellow</span><br><span class="line">  </span><br><span class="line"><span class="comment">#ingress:</span></span><br><span class="line"><span class="comment">#https://argoproj.github.io/argo-rollouts/getting-started/nginx/</span></span><br><span class="line">kubectl apply -f https://raw.githubusercontent.com/argoproj/argo-rollouts/master/docs/getting-started/nginx/rollout.yaml</span><br><span class="line">kubectl apply -f https://raw.githubusercontent.com/argoproj/argo-rollouts/master/docs/getting-started/nginx/services.yaml</span><br><span class="line">kubectl apply -f https://raw.githubusercontent.com/argoproj/argo-rollouts/master/docs/getting-started/nginx/ingress.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment">#cat ingress.yaml has to be changed from &gt;=1.19 cluster</span></span><br><span class="line">apiVersion: networking.k8s.io/v1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: rollouts-demo-stable</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: nginx</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: rollouts-demo.local</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        pathType: Prefix</span><br><span class="line">        backend:</span><br><span class="line">          <span class="comment"># Reference to a Service name, also specified in the Rollout spec.strategy.canary.stableService field</span></span><br><span class="line">          service:</span><br><span class="line">            name: rollouts-demo-stable</span><br><span class="line">            port:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#Perform an update</span></span><br><span class="line">kubectl argo rollouts <span class="built_in">set</span> image rollouts-demo rollouts-demo=argoproj/rollouts-demo:yellow</span><br></pre></td></tr></table></figure>
<h3 id="Dashboard"><a href="#Dashboard" class="headerlink" title="Dashboard"></a>Dashboard</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#dashboard</span></span><br><span class="line">kubectl argo rollouts dashboard(url为启动这个命令的那台机器)</span><br><span class="line">http://192.168.102.82:3100/rollouts</span><br></pre></td></tr></table></figure>
<p><img src="/images/2023-09-26-CD/image-20230926173551648.png" alt="image-20230926173551648"></p>
<h3 id="bluegreen"><a href="#bluegreen" class="headerlink" title="bluegreen"></a>bluegreen</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#bluegreen</span></span><br><span class="line"><span class="comment">#https://github.com/argoproj/argo-rollouts/blob/master/examples/rollout-bluegreen.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#cat rollout-bluegreen.yaml</span></span><br><span class="line"><span class="comment"># This example demonstrates a Rollout using the blue-green update strategy, which contains a manual</span></span><br><span class="line"><span class="comment"># gate before promoting the new stack.</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">argoproj.io/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Rollout</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">rollout-bluegreen</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">rollout-bluegreen</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">rollout-bluegreen</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">rollouts-demo</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">argoproj/rollouts-demo:blue</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">Always</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8080</span></span><br><span class="line">  <span class="attr">strategy:</span></span><br><span class="line">    <span class="attr">blueGreen:</span> </span><br><span class="line">      <span class="comment"># activeService specifies the service to update with the new template hash at time of promotion.</span></span><br><span class="line">      <span class="comment"># This field is mandatory for the blueGreen update strategy.</span></span><br><span class="line">      <span class="attr">activeService:</span> <span class="string">rollout-bluegreen-active</span></span><br><span class="line">      <span class="comment"># previewService specifies the service to update with the new template hash before promotion.</span></span><br><span class="line">      <span class="comment"># This allows the preview stack to be reachable without serving production traffic.</span></span><br><span class="line">      <span class="comment"># This field is optional.</span></span><br><span class="line">      <span class="attr">previewService:</span> <span class="string">rollout-bluegreen-preview</span></span><br><span class="line">      <span class="comment"># autoPromotionEnabled disables automated promotion of the new stack by pausing the rollout</span></span><br><span class="line">      <span class="comment"># immediately before the promotion. If omitted, the default behavior is to promote the new</span></span><br><span class="line">      <span class="comment"># stack as soon as the ReplicaSet are completely ready/available.</span></span><br><span class="line">      <span class="comment"># Rollouts can be resumed using: `kubectl argo rollouts promote ROLLOUT`</span></span><br><span class="line">      <span class="attr">autoPromotionEnabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">rollout-bluegreen-active</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">rollout-bluegreen</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8080</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">rollout-bluegreen-preview</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">rollout-bluegreen</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8080</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">rollouts-bluegreen-ingress</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">rollouts-bluegreen.local</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">        <span class="attr">pathType:</span> <span class="string">Prefix</span></span><br><span class="line">        <span class="attr">backend:</span></span><br><span class="line">          <span class="comment"># Reference to a Service name, also specified in the Rollout spec.strategy.canary.stableService field</span></span><br><span class="line">          <span class="attr">service:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">rollout-bluegreen-active</span></span><br><span class="line">            <span class="attr">port:</span></span><br><span class="line">              <span class="attr">number:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure>
<p>Set image:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl argo rollouts <span class="built_in">set</span> image rollout-bluegreen \</span><br><span class="line">  rollouts-demo=argoproj/rollouts-demo:yellow</span><br><span class="line"></span><br><span class="line">  kubectl argo rollouts get rollout rollout-bluegreen -w</span><br></pre></td></tr></table></figure>
<h3 id="Demo-3"><a href="#Demo-3" class="headerlink" title="Demo"></a>Demo</h3><h4 id="bluegreen-1"><a href="#bluegreen-1" class="headerlink" title="bluegreen"></a>bluegreen</h4><p>rollout-bluegreen.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># This example demonstrates a Rollout using the blue-green update strategy, which contains a manual</span></span><br><span class="line"><span class="comment"># gate before promoting the new stack.</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">argoproj.io/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Rollout</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">rollout-bluegreen</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">rollout-bluegreen</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">rollout-bluegreen</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">rollouts-demo</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">argoproj/rollouts-demo:blue</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">Always</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8080</span></span><br><span class="line">  <span class="attr">strategy:</span></span><br><span class="line">    <span class="attr">blueGreen:</span> </span><br><span class="line">      <span class="comment"># activeService specifies the service to update with the new template hash at time of promotion.</span></span><br><span class="line">      <span class="comment"># This field is mandatory for the blueGreen update strategy.</span></span><br><span class="line">      <span class="attr">activeService:</span> <span class="string">rollout-bluegreen-active</span></span><br><span class="line">      <span class="comment"># previewService specifies the service to update with the new template hash before promotion.</span></span><br><span class="line">      <span class="comment"># This allows the preview stack to be reachable without serving production traffic.</span></span><br><span class="line">      <span class="comment"># This field is optional.</span></span><br><span class="line">      <span class="attr">previewService:</span> <span class="string">rollout-bluegreen-preview</span></span><br><span class="line">      <span class="comment"># autoPromotionEnabled disables automated promotion of the new stack by pausing the rollout</span></span><br><span class="line">      <span class="comment"># immediately before the promotion. If omitted, the default behavior is to promote the new</span></span><br><span class="line">      <span class="comment"># stack as soon as the ReplicaSet are completely ready/available.</span></span><br><span class="line">      <span class="comment"># Rollouts can be resumed using: `kubectl argo rollouts promote ROLLOUT`</span></span><br><span class="line">      <span class="attr">autoPromotionEnabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">rollout-bluegreen-active</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">rollout-bluegreen</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8080</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">rollout-bluegreen-preview</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">rollout-bluegreen</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8080</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---</span></span><br><span class="line"><span class="comment"># apiVersion: networking.k8s.io/v1</span></span><br><span class="line"><span class="comment"># kind: Ingress</span></span><br><span class="line"><span class="comment"># metadata:</span></span><br><span class="line"><span class="comment">#   name: rollouts-bluegreen-ingress</span></span><br><span class="line"><span class="comment">#   annotations:</span></span><br><span class="line"><span class="comment">#     kubernetes.io/ingress.class: nginx</span></span><br><span class="line"><span class="comment"># spec:</span></span><br><span class="line"><span class="comment">#   rules:</span></span><br><span class="line"><span class="comment">#   - host: rollouts-bluegreen.local</span></span><br><span class="line"><span class="comment">#     http:</span></span><br><span class="line"><span class="comment">#       paths:</span></span><br><span class="line"><span class="comment">#       - path: /</span></span><br><span class="line"><span class="comment">#         pathType: Prefix</span></span><br><span class="line"><span class="comment">#         backend:</span></span><br><span class="line"><span class="comment">#           # Reference to a Service name, also specified in the Rollout spec.strategy.canary.stableService field</span></span><br><span class="line"><span class="comment">#           service:</span></span><br><span class="line"><span class="comment">#             name: rollout-bluegreen-active</span></span><br><span class="line"><span class="comment">#             port:</span></span><br><span class="line"><span class="comment">#               number: 80</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">rollouts-bluegreen-ingress</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">rollouts-bluegreen.local</span></span><br><span class="line">      <span class="attr">http:</span></span><br><span class="line">        <span class="attr">paths:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">              <span class="attr">serviceName:</span> <span class="string">rollout-bluegreen-active</span></span><br><span class="line">              <span class="attr">servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure>
<h4 id="Canary"><a href="#Canary" class="headerlink" title="Canary"></a>Canary</h4><p>ingress.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># apiVersion: networking.k8s.io/v1</span></span><br><span class="line"><span class="comment"># kind: Ingress</span></span><br><span class="line"><span class="comment"># metadata:</span></span><br><span class="line"><span class="comment">#   name: rollouts-canary-stable</span></span><br><span class="line"><span class="comment">#   annotations:</span></span><br><span class="line"><span class="comment">#     kubernetes.io/ingress.class: nginx</span></span><br><span class="line"><span class="comment"># spec:</span></span><br><span class="line"><span class="comment">#   rules:</span></span><br><span class="line"><span class="comment">#   - host: rollouts-canary.local</span></span><br><span class="line"><span class="comment">#     http:</span></span><br><span class="line"><span class="comment">#       paths:</span></span><br><span class="line"><span class="comment">#       - path: /</span></span><br><span class="line"><span class="comment">#         pathType: Prefix</span></span><br><span class="line"><span class="comment">#         backend:</span></span><br><span class="line"><span class="comment">#           # Reference to a Service name, also specified in the Rollout spec.strategy.canary.stableService field</span></span><br><span class="line"><span class="comment">#           service:</span></span><br><span class="line"><span class="comment">#             name: rollouts-canary-stable</span></span><br><span class="line"><span class="comment">#             port:</span></span><br><span class="line"><span class="comment">#               number: 80</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">rollouts-canary-stable</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">rollouts-canary.local</span></span><br><span class="line">      <span class="attr">http:</span></span><br><span class="line">        <span class="attr">paths:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">              <span class="attr">serviceName:</span> <span class="string">rollouts-canary-stable</span></span><br><span class="line">              <span class="attr">servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure>
<p>rollout.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">argoproj.io/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Rollout</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">rollouts-canary</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">strategy:</span></span><br><span class="line">    <span class="attr">canary:</span></span><br><span class="line">      <span class="attr">canaryService:</span> <span class="string">rollouts-canary-canary</span></span><br><span class="line">      <span class="attr">stableService:</span> <span class="string">rollouts-canary-stable</span></span><br><span class="line">      <span class="attr">trafficRouting:</span></span><br><span class="line">        <span class="attr">nginx:</span></span><br><span class="line">          <span class="attr">stableIngress:</span> <span class="string">rollouts-canary-stable</span></span><br><span class="line">      <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">setWeight:</span> <span class="number">5</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">pause:</span> <span class="string">&#123;&#125;</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">rollouts-canary</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">rollouts-canary</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">rollouts-canary</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">argoproj/rollouts-demo:blue</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">          <span class="attr">containerPort:</span> <span class="number">8080</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">32Mi</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">5m</span></span><br></pre></td></tr></table></figure>
<p>services.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">rollouts-canary-canary</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">rollouts-canary</span></span><br><span class="line">    <span class="comment"># This selector will be updated with the pod-template-hash of the canary ReplicaSet. e.g.:</span></span><br><span class="line">    <span class="comment"># rollouts-pod-template-hash: 7bf84f9696</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">rollouts-canary-stable</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">rollouts-canary</span></span><br><span class="line">    <span class="comment"># This selector will be updated with the pod-template-hash of the stable ReplicaSet. e.g.:</span></span><br><span class="line">    <span class="comment"># rollouts-pod-template-hash: 789746c88d</span></span><br></pre></td></tr></table></figure>
<h2 id="Arago-workflow"><a href="#Arago-workflow" class="headerlink" title="Arago-workflow"></a>Arago-workflow</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#arago-workflow:</span></span><br><span class="line">Controller and Server</span><br><span class="line">kubectl create namespace argo</span><br><span class="line">kubectl apply -n argo -f https://github.com/argoproj/argo-workflows/releases/download/v3.3.9/install.yaml</span><br><span class="line"></span><br><span class="line">kubectl -n argo edit svc argo-server</span><br><span class="line">change argo-server to LoadBalancer</span><br><span class="line"></span><br><span class="line">https://192.168.64.6:2746/</span><br><span class="line"></span><br><span class="line"><span class="comment">#https://argoproj.github.io/argo-workflows/quick-start/</span></span><br><span class="line">kubectl patch deployment \</span><br><span class="line">  argo-server \</span><br><span class="line">  --namespace argo \</span><br><span class="line">  --<span class="built_in">type</span>=<span class="string">'json'</span> \</span><br><span class="line">  -p=<span class="string">'[&#123;"op": "replace", "path": "/spec/template/spec/containers/0/args", "value": [</span></span><br><span class="line"><span class="string">  "server",</span></span><br><span class="line"><span class="string">  "--auth-mode=server"</span></span><br><span class="line"><span class="string">]&#125;]'</span></span><br><span class="line"></span><br><span class="line">Get login password:</span><br><span class="line">k get secret  -n argo</span><br><span class="line">ARGO_TOKEN=<span class="string">"Bearer <span class="variable">$(kubectl get -n argo secret argo-server-token-vw8xf -o=jsonpath='&#123;.data.token&#125;' | base64 --decode)</span>"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$ARGO_TOKEN</span></span><br><span class="line"></span><br><span class="line">argo-windows-amd64.exe submit -n argo --watch https://raw.githubusercontent.com/argoproj/argo-workflows/v3.3.9/examples/hello-world.yaml</span><br></pre></td></tr></table></figure>
<h2 id="Gitlab-Runner"><a href="#Gitlab-Runner" class="headerlink" title="Gitlab-Runner"></a>Gitlab-Runner</h2><h3 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://docs.gitlab.com/runner/install/docker.html</span></span><br><span class="line"><span class="comment">#https://docs.gitlab.com/runner/register/index.html#docker</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#cat /etc/gitlab-runner/config.toml</span></span><br><span class="line">concurrent = 1</span><br><span class="line">check_interval = 0</span><br><span class="line"></span><br><span class="line">[session_server]</span><br><span class="line">  session_timeout = 1800</span><br><span class="line"></span><br><span class="line">[[runners]]</span><br><span class="line">  name = <span class="string">"my-runner"</span></span><br><span class="line">  url = <span class="string">"http://gitlab.zerofinance.net/"</span></span><br><span class="line">  token = <span class="string">"111111"</span></span><br><span class="line">  executor = <span class="string">"docker"</span></span><br><span class="line">  [runners.custom_build_dir]</span><br><span class="line">  [runners.cache]</span><br><span class="line">    [runners.cache.s3]</span><br><span class="line">    [runners.cache.gcs]</span><br><span class="line">    [runners.cache.azure]</span><br><span class="line">  [runners.docker]</span><br><span class="line">    tls_verify = <span class="literal">false</span></span><br><span class="line">    image = <span class="string">"docker:latest"</span></span><br><span class="line">    privileged = <span class="literal">true</span></span><br><span class="line">    disable_entrypoint_overwrite = <span class="literal">false</span></span><br><span class="line">    oom_kill_disable = <span class="literal">false</span></span><br><span class="line">    disable_cache = <span class="literal">false</span></span><br><span class="line">    volumes = [<span class="string">"/var/run/docker.sock:/var/run/docker.sock"</span>,<span class="string">"/cache"</span>,<span class="string">"/works/config/runner:/runner"</span>]</span><br><span class="line">    shm_size = 0</span><br><span class="line"></span><br><span class="line">docker run -d --name gitlab-runner --restart always \</span><br><span class="line">  -v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">  -v /works/config/runner:/etc/gitlab-runner \</span><br><span class="line">  gitlab/gitlab-runner:latest</span><br><span class="line"></span><br><span class="line"><span class="comment">#Register runner</span></span><br><span class="line">docker run --rm -it -v /works/config/runner:/etc/gitlab-runner gitlab/gitlab-runner register</span><br></pre></td></tr></table></figure>
<h3 id="Hosted-Machine"><a href="#Hosted-Machine" class="headerlink" title="Hosted-Machine"></a>Hosted-Machine</h3><p><strong><em>Recommend</em></strong></p>
<p><strong><em>Notice: Running sudo as gitlab-runner to register</em></strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Installing on Linux:</span><br><span class="line"><span class="comment">#https://docs.gitlab.com/runner/install/linux-manually.html</span></span><br><span class="line">sudo curl -L --output /usr/<span class="built_in">local</span>/bin/gitlab-runner <span class="string">"https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-linux-amd64"</span></span><br><span class="line">sudo chmod +x /usr/<span class="built_in">local</span>/bin/gitlab-runner</span><br><span class="line">sudo useradd --comment <span class="string">'GitLab Runner'</span> --create-home gitlab-runner --shell /bin/bash</span><br><span class="line">sudo gitlab-runner install --user=gitlab-runner --working-directory=/home/gitlab-runner</span><br><span class="line">sudo gitlab-runner start</span><br><span class="line"><span class="comment">#Remember git password,login as gitlab-runner:</span></span><br><span class="line">git config --global credential.helper store</span><br><span class="line"><span class="comment">#Mocking cloning a certain repo, input username and password to store credential.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#https://docs.gitlab.com/runner/shells/index.html#shell-profile-loading</span></span><br><span class="line">To troubleshoot this error, check /home/gitlab-runner/.bash_logout. For example, <span class="keyword">if</span> the .bash_logout file has a script section like the following, comment it out and restart the pipeline:</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$SHLVL</span>"</span> = 1 ]; <span class="keyword">then</span></span><br><span class="line">    [ -x /usr/bin/clear_console ] &amp;&amp; /usr/bin/clear_console -q</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Running sudo as gitlab-runner:</span></span><br><span class="line"><span class="comment">#sudo gitlab-runner register --name native-runner --url http://gitlab-prod.zerofinance.net/ --registration-token 1111111111</span></span><br><span class="line"></span><br><span class="line">choice shell as a executor.</span><br><span class="line"></span><br><span class="line">sudo gitlab-runner register</span><br></pre></td></tr></table></figure>
<h3 id="gitlab-ci-yml"><a href="#gitlab-ci-yml" class="headerlink" title=".gitlab-ci.yml"></a>.gitlab-ci.yml</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># default:</span></span><br><span class="line"><span class="comment">#   before_script:</span></span><br><span class="line"><span class="comment">#     - echo "This is a gloab before_script..."</span></span><br><span class="line"><span class="comment">#   after_script:</span></span><br><span class="line"><span class="comment">#     - echo "This is a gloab after_script..."</span></span><br><span class="line"></span><br><span class="line"><span class="attr">variables:</span></span><br><span class="line">  <span class="attr">RUN_PIPELINE:</span></span><br><span class="line">    <span class="attr">value:</span> <span class="string">"false"</span></span><br><span class="line">    <span class="attr">options:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"false"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"true"</span></span><br><span class="line">    <span class="attr">description:</span> <span class="string">"Runs pipeline immediately?"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">stages:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">stage-导出数据</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">stage-分发数据</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">stage-导入数据</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">stage-数仓调度</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">stage-数据清理</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 前置检查:</span></span><br><span class="line"><span class="comment">#   #variables:</span></span><br><span class="line"><span class="comment">#   # CI_DEBUG_TRACE: "true"</span></span><br><span class="line"><span class="comment">#   stage: stage-前置检查</span></span><br><span class="line"><span class="comment">#   needs: []</span></span><br><span class="line"><span class="comment">#   tags:</span></span><br><span class="line"><span class="comment">#     - hkcos</span></span><br><span class="line"><span class="comment">#     - hkx8</span></span><br><span class="line"><span class="comment">#   script:</span></span><br><span class="line"><span class="comment">#     - echo "前置检查 started"</span></span><br><span class="line"><span class="comment">#     - sleep 5</span></span><br><span class="line"><span class="comment">#     - echo "前置检查 done"</span></span><br><span class="line"><span class="comment">#   rules:</span></span><br><span class="line"><span class="comment">#     - if: $RUN_PIPELINE == "true"</span></span><br><span class="line"></span><br><span class="line"><span class="string">HKCASH-导出数据:</span></span><br><span class="line">  <span class="comment">#variables:</span></span><br><span class="line">  <span class="comment"># CI_DEBUG_TRACE: "true"</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">stage-导出数据</span></span><br><span class="line">  <span class="attr">needs:</span> <span class="string">[]</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">master-runner</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"[start] HKCASH-导出数据(65.105) -&gt; 数仓(84.101) - [$(date '+%F %T')]"</span></span><br><span class="line">    <span class="comment"># - bash ./mysql_hkcash_dump.sh</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"[ end ] HKCASH-导出数据(65.105) -&gt; 数仓(84.101) - [$(date '+%F %T')]"</span></span><br><span class="line">  <span class="comment"># Pass variables to next stage</span></span><br><span class="line">  <span class="comment">#   - echo "BUILD_VERSION1=hello1" &gt;&gt; build.env</span></span><br><span class="line">  <span class="comment">#   - echo "BUILD_VERSION2=hello2" &gt;&gt; build.env</span></span><br><span class="line">  <span class="comment"># artifacts:</span></span><br><span class="line">  <span class="comment">#   reports:</span></span><br><span class="line">  <span class="comment">#     dotenv: build.env</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">if:</span> <span class="string">$RUN_PIPELINE</span> <span class="string">==</span> <span class="string">"true"</span></span><br><span class="line"></span><br><span class="line"><span class="string">HKCASH-分发数据:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">stage-分发数据</span></span><br><span class="line">  <span class="attr">needs:</span> <span class="string">[HKCASH-导出数据]</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">master-runner</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"[start] HKCASH分发数据(65.105) -&gt; 数仓服务器(84.101) - [$(date '+%F %T')]"</span></span><br><span class="line">    <span class="comment"># - bash ./mysql_hkcash_dump.sh</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"[ end ] HKCASH分发数据(65.105) -&gt; 数仓服务器(84.101) - [$(date '+%F %T')]"</span></span><br><span class="line">  <span class="attr">dependencies:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">HKCASH-导出数据</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">if:</span> <span class="string">$RUN_PIPELINE</span> <span class="string">==</span> <span class="string">"true"</span></span><br><span class="line"></span><br><span class="line"><span class="string">HKCASH-导入数据:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">stage-导入数据</span></span><br><span class="line">  <span class="attr">needs:</span> <span class="string">[HKCASH-分发数据]</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">master-runner</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"HKCASH数据导入:数仓服务器(84.101) -&gt; ETL(84.101) - [$(date '+%F %T')]"</span></span><br><span class="line">    <span class="comment"># - bash ./datahouse_ods_hkcash.sh</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"HKCASH数据导入:数仓服务器(84.101) -&gt; ETL(84.101) - [$(date '+%F %T')]"</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">if:</span> <span class="string">$RUN_PIPELINE</span> <span class="string">==</span> <span class="string">"true"</span></span><br><span class="line"></span><br><span class="line"><span class="string">HKCOS-导出数据:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">stage-导出数据</span></span><br><span class="line">  <span class="attr">needs:</span> <span class="string">[]</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">slave-runner</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"[start] HKCOS-导出数据(65.106) -&gt; NAS - [$(date '+%F %T')]"</span></span><br><span class="line">    <span class="comment"># - bash ./mysql_hkcos_dump.sh</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"[ end ] HKCOS-导出数据(65.106) -&gt; NAS - [$(date '+%F %T')]"</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">if:</span> <span class="string">$RUN_PIPELINE</span> <span class="string">==</span> <span class="string">"true"</span></span><br><span class="line"></span><br><span class="line"><span class="string">HKCOS-分发数据:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">stage-分发数据</span></span><br><span class="line">  <span class="attr">needs:</span> <span class="string">[HKCOS-导出数据]</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">master-runner</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"[start] HKCASH分发数据(65.105) -&gt; 数仓服务器(84.101) - [$(date '+%F %T')]"</span></span><br><span class="line">    <span class="comment"># - bash ./mysql_hkcos_dump.sh</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"[ end ] HKCASH分发数据(65.105) -&gt; 数仓服务器(84.101) - [$(date '+%F %T')]"</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">if:</span> <span class="string">$RUN_PIPELINE</span> <span class="string">==</span> <span class="string">"true"</span></span><br><span class="line"></span><br><span class="line"><span class="string">HKCOS-导入数据:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">stage-导入数据</span></span><br><span class="line">  <span class="attr">needs:</span> <span class="string">[HKCOS-分发数据]</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">master-runner</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"HKCOS数据导入:数仓服务器(84.101) -&gt; ETL(84.101) - [$(date '+%F %T')]"</span></span><br><span class="line">    <span class="comment"># - bash ./datahouse_ods_hkcos.sh</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"HKCOS数据导入:数仓服务器(84.101) -&gt; ETL(84.101) - [$(date '+%F %T')]"</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">if:</span> <span class="string">$RUN_PIPELINE</span> <span class="string">==</span> <span class="string">"true"</span></span><br><span class="line"></span><br><span class="line"><span class="string">HKX8-导出数据:</span></span><br><span class="line">  <span class="comment"># variables:</span></span><br><span class="line">  <span class="comment">#   CI_DEBUG_TRACE: "true"</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">stage-导出数据</span></span><br><span class="line">  <span class="attr">needs:</span> <span class="string">[]</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">master-runner</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"[start] HKX8导出数据(65.105) -&gt; NAS - [$(date '+%F %T')]"</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">sudo</span> <span class="string">/bin/bash</span> <span class="string">$&#123;CI_PROJECT_DIR&#125;/mysql_hkx8_dump.sh</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"[ end ] HKX8导出数据(65.105) -&gt; NAS - [$(date '+%F %T')]"</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">if:</span> <span class="string">$RUN_PIPELINE</span> <span class="string">==</span> <span class="string">"true"</span></span><br><span class="line"></span><br><span class="line"><span class="string">HKX8-分发数据:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">stage-分发数据</span></span><br><span class="line">  <span class="attr">needs:</span> <span class="string">[HKX8-导出数据]</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">master-runner</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"[start] HKX8分发数据(65.105) -&gt; 数仓服务器(84.101) - [$(date '+%F %T')]"</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">sudo</span> <span class="string">/bin/bash</span> <span class="string">$&#123;CI_PROJECT_DIR&#125;/mysql_hkx8_dump.sh</span> <span class="string">rsync</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"[ end ] HKX8分发数据(65.105) -&gt; 数仓服务器(84.101) - [$(date '+%F %T')]"</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">if:</span> <span class="string">$RUN_PIPELINE</span> <span class="string">==</span> <span class="string">"true"</span></span><br><span class="line"></span><br><span class="line"><span class="string">HKX8-导入数据:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">stage-导入数据</span></span><br><span class="line">  <span class="attr">needs:</span> <span class="string">[HKX8-分发数据]</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">master-runner</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"[start] HKX8数据导入:数仓服务器(84.101) -&gt; ETL(84.101) - [$(date '+%F %T')]"</span></span><br><span class="line">    <span class="comment"># - bash ./datahouse_ods_hkx8.sh</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"[ end ] HKX8数据导入:数仓服务器(84.101) -&gt; ETL(84.101) - [$(date '+%F %T')]"</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">if:</span> <span class="string">$RUN_PIPELINE</span> <span class="string">==</span> <span class="string">"true"</span></span><br><span class="line"></span><br><span class="line"><span class="string">XPAY-导出数据:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">stage-导出数据</span></span><br><span class="line">  <span class="attr">needs:</span> <span class="string">[]</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">master-runner</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"[start] HKX8-导出数据(65.105) -&gt; NAS - [$(date '+%F %T')]"</span></span><br><span class="line">    <span class="comment"># - bash ./mysql_xpay_dump.sh</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"[ end ] HKX8-导出数据(65.105) -&gt; NAS - [$(date '+%F %T')]"</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">if:</span> <span class="string">$RUN_PIPELINE</span> <span class="string">==</span> <span class="string">"true"</span></span><br><span class="line"></span><br><span class="line"><span class="string">XPAY-分发数据:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">stage-分发数据</span></span><br><span class="line">  <span class="attr">needs:</span> <span class="string">[XPAY-导出数据]</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">master-runner</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"[start] XPAY分发数据(65.105) -&gt; 数仓服务器(84.101) - [$(date '+%F %T')]"</span></span><br><span class="line">    <span class="comment"># - bash ./mysql_hkx8_dump.sh rsync</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"[ end ] XPAY分发数据(65.105) -&gt; 数仓服务器(84.101) - [$(date '+%F %T')]"</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">if:</span> <span class="string">$RUN_PIPELINE</span> <span class="string">==</span> <span class="string">"true"</span></span><br><span class="line"></span><br><span class="line"><span class="string">XPAY-导入数据:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">stage-导入数据</span></span><br><span class="line">  <span class="attr">needs:</span> <span class="string">[XPAY-分发数据]</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">master-runner</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"[start] XPAY数据导入:数仓服务器(84.101) -&gt; ETL(84.101) - [$(date '+%F %T')]"</span></span><br><span class="line">    <span class="comment"># - bash ./datahouse_ods_hkx8.sh</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"[ end ] XPAY数据导入:数仓服务器(84.101) -&gt; ETL(84.101) - [$(date '+%F %T')]"</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">if:</span> <span class="string">$RUN_PIPELINE</span> <span class="string">==</span> <span class="string">"true"</span></span><br><span class="line"></span><br><span class="line"><span class="string">Datahouse-ETL调度:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">stage-数仓调度</span></span><br><span class="line">  <span class="attr">needs:</span> <span class="string">[HKCASH-导入数据,</span> <span class="string">HKCOS-导入数据,</span> <span class="string">XPAY-导入数据,</span> <span class="string">HKX8-导入数据]</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">datahouse-runner</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"[start] 数仓ETL调度 - 数仓服务器(84.101) -&gt; ETL(84.101) - [$(date '+%F %T')]"</span></span><br><span class="line">    <span class="comment"># - ./datahouse_ods_etl.sh</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"[ end ] 数仓ETL调度 - 数仓服务器(84.101) -&gt; ETL(84.101) - [$(date '+%F %T')]"</span></span><br><span class="line">    <span class="comment">#There are any variables can be showed:</span></span><br><span class="line">    <span class="comment"># - echo "BUILD_VERSION1=$BUILD_VERSION1"</span></span><br><span class="line">    <span class="comment"># - echo "BUILD_VERSION2=$BUILD_VERSION2"</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">if:</span> <span class="string">$RUN_PIPELINE</span> <span class="string">==</span> <span class="string">"true"</span></span><br><span class="line"></span><br><span class="line"><span class="string">Analyst-数据导入:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">stage-数仓调度</span></span><br><span class="line">  <span class="attr">needs:</span> <span class="string">[HKCASH-导入数据,</span> <span class="string">HKCOS-导入数据,</span> <span class="string">XPAY-导入数据,</span> <span class="string">HKX8-导入数据]</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">master-runner</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"[start] Analyst数据导入 - 数据服务器(63.17) -&gt; 阿里云RDS(rm-3nslo2652x449k4oa) - [$(date '+%F %T')]"</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">sleep</span> <span class="number">5</span></span><br><span class="line">    <span class="comment"># - bash ./mysql_analyst_masking_report.sh</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"[ end ] Analyst数据导入 - 数据服务器(63.17) -&gt; 阿里云RDS(rm-3nslo2652x449k4oa) - [$(date '+%F %T')]"</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">if:</span> <span class="string">$RUN_PIPELINE</span> <span class="string">==</span> <span class="string">"true"</span></span><br></pre></td></tr></table></figure>
<p>Pipeline UI</p>
<p><img src="/images/2023-09-26-CD/image-20230926162504964.png" alt="image-20230926162504964"></p>
<p>Trigger with remote URL</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://blog.csdn.net/lenkty/article/details/124668164</span></span><br><span class="line"><span class="comment">#https://blog.csdn.net/boling_cavalry/article/details/106991691</span></span><br><span class="line"><span class="comment">#https://blog.csdn.net/sandaawa/article/details/112897733</span></span><br><span class="line"><span class="comment">#https://github.com/lonly197/docs/blob/master/src/operation/GitLab%20CI%20%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90.md</span></span><br><span class="line">curl -X POST \</span><br><span class="line">     -F token=111222 \</span><br><span class="line">     -F ref=1.0.x \</span><br><span class="line">     -F variables[project]=dwh-pipeline \</span><br><span class="line">     http://gitlab.zerofinance.net/api/v4/projects/575/trigger/pipeline</span><br></pre></td></tr></table></figure>
<h2 id="AutoK3s"><a href="#AutoK3s" class="headerlink" title="AutoK3s"></a>AutoK3s</h2><p><strong><em>Not Recommend, recommend using k3s.</em></strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#AutoK3s:(Not Recommend)</span><br><span class="line">##https://docs.rancher.cn/docs/k3s/autok3s/_index/</span><br><span class="line">##https://jasonkayzk.github.io/2022/10/22/%E5%8D%95%E6%9C%BA%E9%83%A8%E7%BD%B2autok3s/</span><br><span class="line"></span><br><span class="line">#For docker:(Recommend)</span><br><span class="line">##docker run -itd --restart=unless-stopped --net host -v /var/run/docker.sock:/var/run/docker.sock cnrancher/autok3s:v0.6.0</span><br><span class="line">docker run --privileged -d --restart=unless-stopped -p 80:80 -p 443:443 rancher/rancher:stable</span><br><span class="line"></span><br><span class="line">##Installing on hosted machine:(optional)</span><br><span class="line">#curl -sS https://rancher-mirror.rancher.cn/autok3s/install.sh  | INSTALL_AUTOK3S_MIRROR=cn sh</span><br><span class="line">##Starting</span><br><span class="line">#autok3s serve --bind-address 192.168.101.82 --bind-port 8080</span><br><span class="line">##Uninstalling:</span><br><span class="line">#/usr/local/bin/autok3s-uninstall.sh</span><br><span class="line"></span><br><span class="line">##Install instance:</span><br><span class="line">#Put &quot;--disable traefik&quot; param into &quot;Master Extra Args&quot;</span><br><span class="line">##execute once:</span><br><span class="line">#k get ns --insecure-skip-tls-verify</span><br><span class="line">#k get ns</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>Loki Log System</title>
    <url>/2022/03/Loki-Log-System.html</url>
    <content><![CDATA[<p>This article recorded how to install and configure Log System based on Loki developing by Grafana.</p>
<a id="more"></a>
<h2 id="kafka"><a href="#kafka" class="headerlink" title="kafka"></a>kafka</h2><h3 id="Kakfa-k8s"><a href="#Kakfa-k8s" class="headerlink" title="Kakfa k8s"></a>Kakfa k8s</h3><p>It’s complex, please refer to Kakfa Config: <a href="/files/Loki-Log-System/kafka.zip">kafka.zip</a></p>
<p>Kakfa without zookeeper:</p>
<ul>
<li><a href="https://learnk8s.io/kafka-ha-kubernetes#deploying-a-3-node-kafka-cluster-on-kubernetes" target="_blank" rel="noopener">https://learnk8s.io/kafka-ha-kubernetes#deploying-a-3-node-kafka-cluster-on-kubernetes</a></li>
<li><a href="https://stackoverflow.com/questions/73380791/kafka-kraft-replication-factor-of-3" target="_blank" rel="noopener">https://stackoverflow.com/questions/73380791/kafka-kraft-replication-factor-of-3</a></li>
<li><a href="https://github.com/IBM/kraft-mode-kafka-on-kubernetes" target="_blank" rel="noopener">https://github.com/IBM/kraft-mode-kafka-on-kubernetes</a></li>
</ul>
<p>Dockerfile:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FROM openjdk:17-bullseye</span><br><span class="line"></span><br><span class="line">ENV KAFKA_VERSION=3.3.2</span><br><span class="line">ENV SCALA_VERSION=2.13</span><br><span class="line">ENV KAFKA_HOME=/opt/kafka</span><br><span class="line">ENV PATH=<span class="variable">$&#123;PATH&#125;</span>:<span class="variable">$&#123;KAFKA_HOME&#125;</span>/bin</span><br><span class="line"></span><br><span class="line">LABEL name=<span class="string">"kafka"</span> version=<span class="variable">$&#123;KAFKA_VERSION&#125;</span></span><br><span class="line"></span><br><span class="line">RUN wget -O /tmp/kafka_<span class="variable">$&#123;SCALA_VERSION&#125;</span>-<span class="variable">$&#123;KAFKA_VERSION&#125;</span>.tgz https://downloads.apache.org/kafka/<span class="variable">$&#123;KAFKA_VERSION&#125;</span>/kafka_<span class="variable">$&#123;SCALA_VERSION&#125;</span>-<span class="variable">$&#123;KAFKA_VERSION&#125;</span>.tgz \</span><br><span class="line"> &amp;&amp; tar xfz /tmp/kafka_<span class="variable">$&#123;SCALA_VERSION&#125;</span>-<span class="variable">$&#123;KAFKA_VERSION&#125;</span>.tgz -C /opt \</span><br><span class="line"> &amp;&amp; rm /tmp/kafka_<span class="variable">$&#123;SCALA_VERSION&#125;</span>-<span class="variable">$&#123;KAFKA_VERSION&#125;</span>.tgz \</span><br><span class="line"> &amp;&amp; ln -s /opt/kafka_<span class="variable">$&#123;SCALA_VERSION&#125;</span>-<span class="variable">$&#123;KAFKA_VERSION&#125;</span> <span class="variable">$&#123;KAFKA_HOME&#125;</span> \</span><br><span class="line"> &amp;&amp; rm -rf /tmp/kafka_<span class="variable">$&#123;SCALA_VERSION&#125;</span>-<span class="variable">$&#123;KAFKA_VERSION&#125;</span>.tgz</span><br><span class="line"></span><br><span class="line">COPY ./entrypoint.sh /</span><br><span class="line">RUN [<span class="string">"chmod"</span>, <span class="string">"+x"</span>, <span class="string">"/entrypoint.sh"</span>]</span><br><span class="line">ENTRYPOINT [<span class="string">"/entrypoint.sh"</span>]</span><br></pre></td></tr></table></figure>
<p>entrypoint.sh:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#NODE_ID=$&#123;HOSTNAME:6&#125;</span></span><br><span class="line">NODE_ID=$(hostname | sed s/.*-//)</span><br><span class="line">LISTENERS=<span class="string">"PLAINTEXT://:9092,CONTROLLER://:9093"</span></span><br><span class="line"><span class="comment">#ADVERTISED_LISTENERS="PLAINTEXT://kafka-$NODE_ID.$SERVICE.$NAMESPACE.svc.cluster.local:9092"</span></span><br><span class="line"><span class="comment">#ADVERTISED_LISTENERS="PLAINTEXT://kafka-$NODE_ID.$SERVICE:9092"</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">"<span class="variable">$K8S_EXPOSE_BROKERS</span>"</span> == <span class="string">"true"</span> ]]; <span class="keyword">then</span></span><br><span class="line">  ADVERTISED_LISTENERS=<span class="string">"PLAINTEXT://<span class="variable">$HOST_IP</span>:9092"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  ADVERTISED_LISTENERS=<span class="string">"PLAINTEXT://kafka-<span class="variable">$NODE_ID</span>.<span class="variable">$SERVICE</span>:9092"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">CONTROLLER_QUORUM_VOTERS=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $( seq 0 <span class="variable">$REPLICAS</span>); <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> [[ <span class="variable">$i</span> != <span class="variable">$REPLICAS</span> ]]; <span class="keyword">then</span></span><br><span class="line">        CONTROLLER_QUORUM_VOTERS=<span class="string">"<span class="variable">$CONTROLLER_QUORUM_VOTERS</span><span class="variable">$i</span>@kafka-<span class="variable">$i</span>.<span class="variable">$SERVICE</span>:9093,"</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        CONTROLLER_QUORUM_VOTERS=<span class="variable">$&#123;CONTROLLER_QUORUM_VOTERS::-1&#125;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">mkdir -p <span class="variable">$SHARE_DIR</span>/<span class="variable">$NODE_ID</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ ! -f <span class="string">"<span class="variable">$SHARE_DIR</span>/cluster_id"</span> &amp;&amp; <span class="string">"<span class="variable">$NODE_ID</span>"</span> = <span class="string">"0"</span> ]]; <span class="keyword">then</span></span><br><span class="line">    CLUSTER_ID=$(kafka-storage.sh random-uuid)</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$CLUSTER_ID</span> &gt; <span class="variable">$SHARE_DIR</span>/cluster_id</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    CLUSTER_ID=$(cat <span class="variable">$SHARE_DIR</span>/cluster_id)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sed -e "s+^node.id=.*+node.id=$NODE_ID+" \</span></span><br><span class="line"><span class="comment"># -e "s+^controller.quorum.voters=.*+controller.quorum.voters=$CONTROLLER_QUORUM_VOTERS+" \</span></span><br><span class="line"><span class="comment"># -e "s+^listeners=.*+listeners=$LISTENERS+" \</span></span><br><span class="line"><span class="comment"># -e "s+^advertised.listeners=.*+advertised.listeners=$ADVERTISED_LISTENERS+" \</span></span><br><span class="line"><span class="comment"># -e "s+^log.dirs=.*+log.dirs=$SHARE_DIR/$NODE_ID+" \</span></span><br><span class="line"><span class="comment"># /opt/kafka/config/kraft/server.properties &gt; server.properties.updated \</span></span><br><span class="line"><span class="comment"># &amp;&amp; mv server.properties.updated /opt/kafka/config/kraft/server.properties</span></span><br><span class="line"></span><br><span class="line">sed -e <span class="string">"s+^node.id=.*+node.id=<span class="variable">$NODE_ID</span>+"</span> \</span><br><span class="line">-e <span class="string">"s+^controller.quorum.voters=.*+controller.quorum.voters=<span class="variable">$CONTROLLER_QUORUM_VOTERS</span>+"</span> \</span><br><span class="line">-e <span class="string">"s+^listeners=.*+listeners=<span class="variable">$LISTENERS</span>+"</span> \</span><br><span class="line">-e <span class="string">"s+^advertised.listeners=.*+advertised.listeners=<span class="variable">$ADVERTISED_LISTENERS</span>+"</span> \</span><br><span class="line">-e <span class="string">"s+^log.dirs=.*+log.dirs=<span class="variable">$SHARE_DIR</span>/<span class="variable">$NODE_ID</span>+"</span> \</span><br><span class="line">/opt/kafka/config/kraft/server.properties &gt; server.properties.updated</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF &gt;&gt; server.properties.updated</span><br><span class="line">default.replication.factor=<span class="variable">$&#123;DEFAULT_REPLICATION_FACTOR:=3&#125;</span></span><br><span class="line">min.insync.replicas=<span class="variable">$&#123;DEFAULT_MIN_INSYNC_REPLICAS:=2&#125;</span></span><br><span class="line">offsets.topic.replication.factor=<span class="variable">$&#123;DEFAULT_REPLICATION_FACTOR:=3&#125;</span></span><br><span class="line">transaction.state.log.replication.factor=<span class="variable">$&#123;DEFAULT_REPLICATION_FACTOR:=3&#125;</span></span><br><span class="line">transaction.state.log.min.isr=<span class="variable">$&#123;DEFAULT_MIN_INSYNC_REPLICAS:=2&#125;</span></span><br><span class="line">auto.create.topics.enable=<span class="variable">$&#123;KAFKA_AUTO_CREATE_TOPICS_ENABLE:=true&#125;</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#sed -i "\$aauto.create.topics.enable=$KAFKA_AUTO_CREATE_TOPICS_ENABLE" server.properties.updated</span></span><br><span class="line"></span><br><span class="line">mv server.properties.updated /opt/kafka/config/kraft/server.properties</span><br><span class="line"></span><br><span class="line">kafka-storage.sh format -t <span class="variable">$CLUSTER_ID</span> -c /opt/kafka/config/kraft/server.properties</span><br><span class="line"></span><br><span class="line"><span class="built_in">exec</span> kafka-server-start.sh /opt/kafka/config/kraft/server.properties</span><br></pre></td></tr></table></figure>
<p>docker building:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker build -t <span class="string">"registry.zerofinance.net/xpayappimage/kafka:3.3.2"</span> .</span><br><span class="line"><span class="comment">#docker login registry.zerofinance.net</span></span><br><span class="line">docker push <span class="string">"registry.zerofinance.net/xpayappimage/kafka:3.3.2"</span></span><br></pre></td></tr></table></figure>
<p>kafka-kraft.yml:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#部署 Service Headless，用于Kafka间相互通信</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kafka-svc</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">kafka</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line">  <span class="attr">clusterIP:</span> <span class="string">None</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">'9092'</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">9092</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">9092</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">'9093'</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">9093</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">9093</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">kafka</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">#部署 Service，用于外部访问 Kafka</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="comment">#service.beta.kubernetes.io/alibaba-cloud-loadbalancer-address-type: "intranet"</span></span><br><span class="line">    <span class="comment">#service.beta.kubernetes.io/alibaba-cloud-loadbalancer-vswitch-id: "vsw-j6c8okcv03ah1uvu31tbm"</span></span><br><span class="line">    <span class="attr">service.beta.kubernetes.io/alibaba-cloud-loadbalancer-id:</span> <span class="string">"lb-3nsgew8gt6lzmtzc0vn93"</span></span><br><span class="line">    <span class="attr">service.beta.kubernetes.io/alibaba-cloud-loadbalancer-force-override-listeners:</span> <span class="string">"true"</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kafka-broker</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">kafka</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">LoadBalancer</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">'9092'</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">9092</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">9092</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">kafka</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">"kafka"</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">kafka</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">kafka</span></span><br><span class="line">  <span class="attr">serviceName:</span> <span class="string">kafka-svc</span></span><br><span class="line">  <span class="attr">podManagementPolicy:</span> <span class="string">"OrderedReady"</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">updateStrategy:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">"RollingUpdate"</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">"kafka"</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">kafka</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="comment">#securityContext:</span></span><br><span class="line">      <span class="comment">#  fsGroup: 1001</span></span><br><span class="line">      <span class="attr">nodeSelector:</span></span><br><span class="line">        <span class="attr">xpay-env:</span> <span class="string">logs</span></span><br><span class="line">      <span class="attr">tolerations:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">"xpay-env"</span></span><br><span class="line">        <span class="attr">operator:</span> <span class="string">"Equal"</span></span><br><span class="line">        <span class="attr">value:</span> <span class="string">"logs"</span></span><br><span class="line">        <span class="attr">effect:</span> <span class="string">"NoSchedule"</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kafka</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">"registry.zerofinance.net/xpayappimage/kafka:3.3.2"</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">"Always"</span></span><br><span class="line">        <span class="comment">#securityContext:</span></span><br><span class="line">        <span class="comment">#  runAsNonRoot: true</span></span><br><span class="line">        <span class="comment">#  runAsUser: 1001</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">REPLICAS</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">'3'</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SERVICE</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">kafka-svc</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SHARE_DIR</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">/mnt/kafka</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">CLUSTER_ID</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">LelM2dIFQkiUFvXCEcqRWA</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">DEFAULT_REPLICATION_FACTOR</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">'3'</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">DEFAULT_MIN_INSYNC_REPLICAS</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">'2'</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">9092</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">9093</span></span><br><span class="line">        <span class="attr">livenessProbe:</span></span><br><span class="line">          <span class="attr">tcpSocket:</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">9092</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">5</span></span><br><span class="line">          <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">          <span class="attr">failureThreshold:</span> <span class="number">2</span></span><br><span class="line">        <span class="attr">readinessProbe:</span></span><br><span class="line">          <span class="attr">tcpSocket:</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">9092</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">5</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">5</span></span><br><span class="line">          <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">          <span class="attr">failureThreshold:</span> <span class="number">6</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">data</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/mnt/kafka</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">data</span></span><br><span class="line">        <span class="attr">hostPath:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">"/data/data/kafka-k8s"</span></span><br></pre></td></tr></table></figure>
<p>kafka-ui.yml:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kafka-ui</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">kafka-ui</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="comment">#type: NodePort</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kafka</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8080</span></span><br><span class="line">    <span class="comment">#nodePort: 30900</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">kafka-ui</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kafka-ui</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">kafka-ui</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">kafka-ui</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">kafka-ui</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kafka-ui</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">provectuslabs/kafka-ui:latest</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kafka-ui</span></span><br><span class="line">          <span class="attr">containerPort:</span> <span class="number">8080</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">DYNAMIC_CONFIG_ENABLED</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">"true"</span></span><br><span class="line">        <span class="attr">livenessProbe:</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/actuator/health</span></span><br><span class="line">            <span class="attr">port:</span> <span class="string">kafka-ui</span></span><br><span class="line">        <span class="attr">readinessProbe:</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/actuator/info</span></span><br><span class="line">            <span class="attr">port:</span> <span class="string">kafka-ui</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kafka-ui</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">tls:</span> <span class="string">[]</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">kafka-ui-test.zerofinance.net</span></span><br><span class="line">      <span class="attr">http:</span></span><br><span class="line">        <span class="attr">paths:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">              <span class="attr">serviceName:</span> <span class="string">kafka-ui</span></span><br><span class="line">              <span class="attr">servicePort:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure>
<p>Test:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; kubectl -n zero-logs run kafka-client --rm -ti --image bitnami/kafka:3.1.0 -- bash</span><br><span class="line">kafka-topics.sh --create --bootstrap-server kafka-svc:9092 --replication-factor 2 --partitions 3 --topic <span class="built_in">test</span></span><br><span class="line">kafka-topics.sh --bootstrap-server kafka-svc:9092 --list</span><br><span class="line">kafka-console-producer.sh --broker-list kafka-svc:9092 --topic <span class="built_in">test</span></span><br><span class="line">kafka-console-consumer.sh --bootstrap-server kafka-svc:9092 --topic <span class="built_in">test</span> --from-beginning</span><br><span class="line"></span><br><span class="line">kafka-topics.sh --create --bootstrap-server kafka-broker-test.zerofinance.net:9092 --replication-factor 2 --partitions 3 --topic <span class="built_in">test</span></span><br><span class="line">kafka-topics.sh --bootstrap-server kafka-broker-test.zerofinance.net:9092 --list</span><br><span class="line">kafka-console-producer.sh --broker-list kafka-broker-test.zerofinance.net:9092 --topic <span class="built_in">test</span></span><br><span class="line">kafka-console-consumer.sh --bootstrap-server kafka-broker-test.zerofinance.net:9092 --topic <span class="built_in">test</span> --from-beginning</span><br></pre></td></tr></table></figure>
<h2 id="Zookeeper"><a href="#Zookeeper" class="headerlink" title="Zookeeper"></a>Zookeeper</h2><blockquote>
<p><a href="https://www.qikqiak.com/k8strain/controller/statefulset/" target="_blank" rel="noopener">https://www.qikqiak.com/k8strain/controller/statefulset/</a><br><a href="https://www.jianshu.com/p/f0b0fc3d192f" target="_blank" rel="noopener">https://www.jianshu.com/p/f0b0fc3d192f</a><br><a href="https://itopic.org/kafka-in-k8s.html" target="_blank" rel="noopener">https://itopic.org/kafka-in-k8s.html</a><br><a href="https://itopic.org/zookeeper-in-k8s.html" target="_blank" rel="noopener">https://itopic.org/zookeeper-in-k8s.html</a></p>
</blockquote>
<p>Need to modify resource from: <a href="https://github.com/31z4/zookeeper-docker/tree/master/3.8.1" target="_blank" rel="noopener">https://github.com/31z4/zookeeper-docker/tree/master/3.8.1</a></p>
<p><img src="/images/Loki-Log-System/zookeeper01.png" alt="zookeeper01.png"></p>
<p><img src="/images/Loki-Log-System/zookeeper02.png" alt="zookeeper02.png"></p>
<p>docker-entrypoint.sh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line"></span><br><span class="line">ZOO_MY_ID=$(($(hostname | sed s/.*-//) + 1))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Allow the container to be started with `--user`</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">"<span class="variable">$1</span>"</span> = <span class="string">'zkServer.sh'</span> &amp;&amp; <span class="string">"<span class="variable">$(id -u)</span>"</span> = <span class="string">'0'</span> ]]; <span class="keyword">then</span></span><br><span class="line">    chown -R zookeeper <span class="string">"<span class="variable">$ZOO_DATA_DIR</span>"</span> <span class="string">"<span class="variable">$ZOO_DATA_LOG_DIR</span>"</span> <span class="string">"<span class="variable">$ZOO_LOG_DIR</span>"</span></span><br><span class="line">    <span class="built_in">exec</span> gosu zookeeper <span class="string">"<span class="variable">$0</span>"</span> <span class="string">"<span class="variable">$@</span>"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">mkdir -p <span class="variable">$ZOO_DATA_DIR</span>/<span class="variable">$ZOO_MY_ID</span> <span class="variable">$ZOO_DATA_LOG_DIR</span>/<span class="variable">$ZOO_MY_ID</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Generate the config only if it doesn't exist</span></span><br><span class="line"><span class="keyword">if</span> [[ ! -f <span class="string">"<span class="variable">$ZOO_CONF_DIR</span>/zoo.cfg"</span> ]]; <span class="keyword">then</span></span><br><span class="line">    CONFIG=<span class="string">"<span class="variable">$ZOO_CONF_DIR</span>/zoo.cfg"</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"dataDir=<span class="variable">$ZOO_DATA_DIR</span>/<span class="variable">$ZOO_MY_ID</span>"</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"dataLogDir=<span class="variable">$ZOO_DATA_LOG_DIR</span>/<span class="variable">$ZOO_MY_ID</span>"</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"tickTime=<span class="variable">$ZOO_TICK_TIME</span>"</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"initLimit=<span class="variable">$ZOO_INIT_LIMIT</span>"</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"syncLimit=<span class="variable">$ZOO_SYNC_LIMIT</span>"</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"autopurge.snapRetainCount=<span class="variable">$ZOO_AUTOPURGE_SNAPRETAINCOUNT</span>"</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"autopurge.purgeInterval=<span class="variable">$ZOO_AUTOPURGE_PURGEINTERVAL</span>"</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"maxClientCnxns=<span class="variable">$ZOO_MAX_CLIENT_CNXNS</span>"</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"standaloneEnabled=<span class="variable">$ZOO_STANDALONE_ENABLED</span>"</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"admin.enableServer=<span class="variable">$ZOO_ADMINSERVER_ENABLED</span>"</span></span><br><span class="line">    &#125; &gt;&gt; <span class="string">"<span class="variable">$CONFIG</span>"</span></span><br><span class="line">    <span class="keyword">if</span> [[ -z <span class="variable">$ZOO_SERVERS</span> ]]; <span class="keyword">then</span></span><br><span class="line">      ZOO_SERVERS=<span class="string">"server.1=localhost:2888:3888;2181"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> server <span class="keyword">in</span> <span class="variable">$ZOO_SERVERS</span>; <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"<span class="variable">$server</span>"</span> &gt;&gt; <span class="string">"<span class="variable">$CONFIG</span>"</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [[ -n <span class="variable">$ZOO_4LW_COMMANDS_WHITELIST</span> ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"4lw.commands.whitelist=<span class="variable">$ZOO_4LW_COMMANDS_WHITELIST</span>"</span> &gt;&gt; <span class="string">"<span class="variable">$CONFIG</span>"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> cfg_extra_entry <span class="keyword">in</span> <span class="variable">$ZOO_CFG_EXTRA</span>; <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"<span class="variable">$cfg_extra_entry</span>"</span> &gt;&gt; <span class="string">"<span class="variable">$CONFIG</span>"</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Write myid only if it doesn't exist</span></span><br><span class="line"><span class="keyword">if</span> [[ ! -f <span class="string">"<span class="variable">$ZOO_DATA_DIR</span>/<span class="variable">$ZOO_MY_ID</span>/myid"</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;ZOO_MY_ID:-1&#125;</span>"</span> &gt; <span class="string">"<span class="variable">$ZOO_DATA_DIR</span>/<span class="variable">$ZOO_MY_ID</span>/myid"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exec</span> <span class="string">"<span class="variable">$@</span>"</span></span><br></pre></td></tr></table></figure>
<p>builds images:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker build -t <span class="string">"registry.zerofinance.net/xpayappimage/zookeeper:3.8.1"</span> .</span><br><span class="line">docker push registry.zerofinance.net/xpayappimage/zookeeper:3.8.1</span><br></pre></td></tr></table></figure>
<h2 id="Loki"><a href="#Loki" class="headerlink" title="Loki"></a>Loki</h2><p>What’s the Grafana Loki?</p>
<p>Loki is a log aggregation system designed to store and query logs from all your applications and infrastructure.</p>
<p>Documents located in: <a href="https://grafana.com/docs/loki/latest/" target="_blank" rel="noopener">https://grafana.com/docs/loki/latest/</a></p>
<p>Configurations of loki k8s: <a href="/files/Loki-Log-System/loki-k8s.zip">loki-k8s.zip</a></p>
<h3 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h3><p><a href="https://grafana.com/docs/loki/latest/fundamentals/overview/#overview" target="_blank" rel="noopener">https://grafana.com/docs/loki/latest/fundamentals/overview/#overview</a></p>
<p>There are losts of way to install Loki, here show it by docker. the other ways please refer to: <a href="https://grafana.com/docs/loki/latest/installation/" target="_blank" rel="noopener">https://grafana.com/docs/loki/latest/installation/</a></p>
<h4 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h4><p>If you clients are distributed on individual machines, you can use docker:</p>
<p>Installing:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#loki</span></span><br><span class="line">mkdir -p /data/loki/data/ /works/conf/loki/</span><br><span class="line"><span class="comment">#Getting the loki id from the following command:</span></span><br><span class="line"><span class="comment">#docker exec loki id</span></span><br><span class="line"><span class="comment">#Like: uid=10001(loki) gid=10001(loki) groups=10001(loki)</span></span><br><span class="line">chown -R 10001.10001 /data/loki/data/ /works/conf/loki/</span><br><span class="line"><span class="comment">#Creating the container:</span></span><br><span class="line">docker run -d --name loki --restart=always \</span><br><span class="line">-v /etc/localtime:/etc/localtime:ro \</span><br><span class="line">-v /data/loki/data:/loki/data \</span><br><span class="line">-v /works/conf/loki:/mnt/config \</span><br><span class="line">-p 3100:3100 -p 7946:7946 -p 9096:9096 grafana/loki:2.8.0 \</span><br><span class="line">-config.file=/mnt/config/loki-config.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment">#grafana</span></span><br><span class="line"><span class="comment"># docker run -d --name grafana \</span></span><br><span class="line"><span class="comment"># -v /etc/localtime:/etc/localtime:ro \</span></span><br><span class="line"><span class="comment"># -e "GF_SMTP_ENABLED=true" \</span></span><br><span class="line"><span class="comment"># -e "GF_SMTP_HOST=smtp.example.com" \</span></span><br><span class="line"><span class="comment"># -e "GF_SMTP_USER=myuser" \</span></span><br><span class="line"><span class="comment"># -e "GF_SMTP_PASSWORD=mysecret" \</span></span><br><span class="line"><span class="comment"># -p 3000:3000 grafana/grafana:latest</span></span><br><span class="line">chown -R 10001.10001 /data/grafana/</span><br><span class="line">docker run -d --name grafana9 --restart=always \</span><br><span class="line">-v /etc/localtime:/etc/localtime:ro \</span><br><span class="line">-v /data/grafana/:/var/lib/grafana \</span><br><span class="line">-v /data/grafana/grafana.ini:/etc/grafana/grafana.ini \</span><br><span class="line">--user 10001:10001 \</span><br><span class="line">-p 3000:3000 grafana/grafana-oss:9.3.1</span><br><span class="line"></span><br><span class="line"><span class="comment">#promtail</span></span><br><span class="line">docker run -d --name promtail --restart=always \</span><br><span class="line">-v /etc/localtime:/etc/localtime:ro \</span><br><span class="line">-v /works/conf/promtail:/mnt/config \</span><br><span class="line">-v /works/<span class="built_in">log</span>:/works/<span class="built_in">log</span> \</span><br><span class="line">grafana/promtail:2.8.0 \</span><br><span class="line">-config.file=/mnt/config/promtail-config.yaml \</span><br><span class="line">-client.external-labels=hostname=<span class="variable">$&#123;HOSTNAME&#125;</span></span><br><span class="line"></span><br><span class="line">docker run -d --name promtail-monitor --restart=always \</span><br><span class="line">-v /etc/localtime:/etc/localtime:ro \</span><br><span class="line">-v /works/conf/promtail/biz:/mnt/config \</span><br><span class="line">grafana/promtail:2.8.0 \</span><br><span class="line">-config.file=/mnt/config/promtail-config.yaml \</span><br><span class="line">-client.external-labels=hostname=<span class="variable">$&#123;HOSTNAME&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#fluent-bit</span></span><br><span class="line">docker run  --name fluent-bit --restart=always --network host -d \</span><br><span class="line">-v /data/fluent-bit/:/fluent-bit/etc \</span><br><span class="line">-v /works/<span class="built_in">log</span>:/works/<span class="built_in">log</span> \</span><br><span class="line">fluent/fluent-bit:2.0.8</span><br><span class="line"></span><br><span class="line"><span class="comment">#kafka</span></span><br><span class="line">docker-compose up -d</span><br><span class="line"><span class="comment">#Test</span></span><br><span class="line">docker <span class="built_in">exec</span> -it kafka-kafka9094-1 sh</span><br><span class="line">运行消费者,进行消息的监听</span><br><span class="line">kafka-console-consumer.sh --bootstrap-server 192.168.102.82:9092 --topic account --from-beginning</span><br><span class="line"><span class="comment">#docker exec -it kafka_kafka9094_1 kafka-console-consumer.sh --bootstrap-server 192.168.101.82:9092 --topic dev --from-beginning</span></span><br><span class="line"><span class="comment">#docker exec -it kafka_kafka9094_1 kafka-topics.sh --create --bootstrap-server 192.168.101.82:9092 --replication-factor 1 --partitions 3 --topic sandbox</span></span><br><span class="line"></span><br><span class="line">docker <span class="built_in">exec</span> -it kafka-kafka9094-1 sh</span><br><span class="line">打开一个新的ssh窗口,同样进入kafka的容器中,执行下面这条命令生产消息</span><br><span class="line">kafka-console-producer.sh --broker-list 192.168.102.82:9092 --topic account</span><br><span class="line"></span><br><span class="line"><span class="comment">#alertmanager</span></span><br><span class="line">mkdir -p /data/alertmanager/</span><br><span class="line">chown -R 65534:65534 /data/alertmanager/</span><br><span class="line"></span><br><span class="line">docker run -d --name alertmanager --restart=always \</span><br><span class="line">-v /data/alertmanager:/etc/alertmanager \</span><br><span class="line">-p 9093:9093 prom/alertmanager:v0.24.0 \</span><br><span class="line">--config.file=/etc/alertmanager/alertmanager-config.yaml \</span><br><span class="line">--web.external-url=http://192.168.80.98:9093 \</span><br><span class="line">--cluster.advertise-address=0.0.0.0:9093 \</span><br><span class="line">--log.level=debug</span><br></pre></td></tr></table></figure>
<p>reload alertmanager: curl -XPOST <a href="http://am-test.zerofinance.net/-/reload" target="_blank" rel="noopener">http://am-test.zerofinance.net/-/reload</a></p>
<p>Cluster Installation:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Loki(multiple machines):</span></span><br><span class="line">mkdir -p /data/loki/data/ /works/conf/loki/</span><br><span class="line">curl -O -L <span class="string">"https://github.com/grafana/loki/releases/download/v2.8.0/loki-linux-amd64.zip"</span></span><br><span class="line"><span class="comment"># extract the binary</span></span><br><span class="line">unzip <span class="string">"loki-linux-amd64.zip"</span></span><br><span class="line"><span class="comment"># make sure it is executable</span></span><br><span class="line">chmod a+x <span class="string">"loki-linux-amd64"</span></span><br><span class="line">./loki-linux-amd64 -config.file=loki-config.yaml</span><br><span class="line"></span><br><span class="line">loki-config.yaml:</span><br><span class="line"></span><br><span class="line">auth_enabled: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">server:</span><br><span class="line">  log_level: info</span><br><span class="line">  http_listen_port: 3100</span><br><span class="line">  grpc_listen_port: 9096</span><br><span class="line">  grpc_server_max_recv_msg_size: 1572864000</span><br><span class="line">  grpc_server_max_send_msg_size: 1572864000</span><br><span class="line"></span><br><span class="line">memberlist:</span><br><span class="line">  join_members: [<span class="string">"192.168.101.82"</span>,<span class="string">"192.168.80.196"</span>]</span><br><span class="line">  dead_node_reclaim_time: 30s</span><br><span class="line">  gossip_to_dead_nodes_time: 15s</span><br><span class="line">  left_ingesters_timeout: 30s</span><br><span class="line">  bind_addr: [<span class="string">'0.0.0.0'</span>]</span><br><span class="line">  bind_port: 7946</span><br><span class="line">  gossip_interval: 2s</span><br><span class="line"></span><br><span class="line"><span class="comment">#https://grafana.com/blog/2021/02/16/the-essential-config-settings-you-should-use-so-you-wont-drop-logs-in-loki/</span></span><br><span class="line"><span class="comment">#https://mpolinowski.github.io/docs/DevOps/Provisioning/2021-04-07--loki-prometheus-grafana/2021-04-07/</span></span><br><span class="line">ingester:</span><br><span class="line">  lifecycler:</span><br><span class="line">    join_after: 10s</span><br><span class="line">    observe_period: 5s</span><br><span class="line">    ring:</span><br><span class="line">      replication_factor: 2</span><br><span class="line">      kvstore:</span><br><span class="line">        store: memberlist</span><br><span class="line">    <span class="comment"># Duration to sleep before exiting to ensure metrics are scraped</span></span><br><span class="line">    <span class="comment">#final_sleep: 0s</span></span><br><span class="line">  wal:</span><br><span class="line">    enabled: <span class="literal">true</span></span><br><span class="line">    dir: /loki/data/wal</span><br><span class="line">  <span class="comment"># All chunks will be flushed when they hit this age, default is 1h</span></span><br><span class="line">  max_chunk_age: 1h</span><br><span class="line">  <span class="comment"># Any chunk not receiving new logs in this time will be flushed</span></span><br><span class="line">  chunk_idle_period: 1h</span><br><span class="line">  <span class="comment"># Must be greater than index read cache TTL if using an index cache (Default index read cache TTL is 5m)</span></span><br><span class="line">  chunk_retain_period: 30s</span><br><span class="line">  chunk_encoding: snappy</span><br><span class="line">  <span class="comment"># Loki will attempt to build chunks up to 1.5MB, flushing first if chunk_idle_period or max_chunk_age is reached first</span></span><br><span class="line">  chunk_target_size: 1572864</span><br><span class="line"></span><br><span class="line">schema_config:</span><br><span class="line">  configs:</span><br><span class="line">    - from: 2023-04-01</span><br><span class="line">      object_store: aws</span><br><span class="line">      schema: v11</span><br><span class="line">      store: boltdb-shipper</span><br><span class="line">      index:</span><br><span class="line">        period: 24h</span><br><span class="line">        prefix: index_</span><br><span class="line"></span><br><span class="line">storage_config:</span><br><span class="line">  boltdb_shipper:</span><br><span class="line">    active_index_directory: /loki/data/boltdb-shipper-active</span><br><span class="line">    cache_location: /loki/data/boltdb-shipper-cache</span><br><span class="line">    <span class="comment"># Can be increased for faster performance over longer query periods, uses more disk space</span></span><br><span class="line">    cache_ttl: 24h</span><br><span class="line">    shared_store: s3</span><br><span class="line">  aws:</span><br><span class="line">    s3forcepathstyle: <span class="literal">false</span></span><br><span class="line">    bucketnames: loki-files</span><br><span class="line">    endpoint: https://oss-cn-hongkong.aliyuncs.com</span><br><span class="line">    access_key_id: LTA11111111111</span><br><span class="line">    secret_access_key: unseba111111111111111111</span><br><span class="line">    insecure: <span class="literal">true</span></span><br><span class="line">  index_queries_cache_config:</span><br><span class="line">    redis:</span><br><span class="line">      endpoint: r-111111111.redis.rds.aliyuncs.com:6379</span><br><span class="line">      password: 111111111</span><br><span class="line">      expiration: 1h</span><br><span class="line">    </span><br><span class="line">chunk_store_config:</span><br><span class="line">  chunk_cache_config:</span><br><span class="line">    redis:</span><br><span class="line">      endpoint: r-111111111.redis.rds.aliyuncs.com:6379</span><br><span class="line">      password: 111111111</span><br><span class="line">      expiration: 1h    </span><br><span class="line">  write_dedupe_cache_config:</span><br><span class="line">    redis:</span><br><span class="line">      endpoint: r-111111111.redis.rds.aliyuncs.com:6379</span><br><span class="line">      password: 111111111</span><br><span class="line">      expiration: 1h</span><br><span class="line"></span><br><span class="line">query_range:</span><br><span class="line">  results_cache:</span><br><span class="line">    cache:</span><br><span class="line">      redis:</span><br><span class="line">        endpoint: r-111111111.redis.rds.aliyuncs.com:6379</span><br><span class="line">        password: 111111111</span><br><span class="line">        expiration: 1h</span><br><span class="line">  cache_results: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">compactor:</span><br><span class="line">  working_directory: /loki/data/boltdb-shipper-compactor</span><br><span class="line">  shared_store: s3</span><br><span class="line"></span><br><span class="line">limits_config:</span><br><span class="line">  ingestion_rate_mb: 2</span><br><span class="line">  ingestion_burst_size_mb: 4</span><br><span class="line">  max_streams_per_user: 0</span><br><span class="line">  max_global_streams_per_user: 0</span><br><span class="line">  enforce_metric_name: <span class="literal">false</span></span><br><span class="line">  reject_old_samples: <span class="literal">true</span></span><br><span class="line">  reject_old_samples_max_age: 168h</span><br><span class="line"></span><br><span class="line">table_manager:</span><br><span class="line">  retention_deletes_enabled: <span class="literal">true</span></span><br><span class="line">  retention_period: 168h</span><br><span class="line"></span><br><span class="line"><span class="comment">#https://grafana.com/docs/loki/latest/configuration/</span></span><br><span class="line">ruler:</span><br><span class="line">  storage:</span><br><span class="line">    <span class="built_in">type</span>: s3</span><br><span class="line">    s3:</span><br><span class="line">      s3forcepathstyle: <span class="literal">false</span></span><br><span class="line">      bucketnames: loki-files</span><br><span class="line">      endpoint: https://oss-cn-hongkong.aliyuncs.com</span><br><span class="line">      access_key_id: LTA11111111111</span><br><span class="line">      secret_access_key: unseba111111111111111111</span><br><span class="line">      insecure: <span class="literal">true</span></span><br><span class="line">  <span class="comment">#rule_path: /loki/data/rules-temp</span></span><br><span class="line">  alertmanager_url: http://192.168.101.82:9093</span><br><span class="line">  <span class="comment"># How frequently to evaluate rules.</span></span><br><span class="line">  evaluation_interval: 5s</span><br><span class="line">  <span class="comment"># How frequently to poll for rule changes.</span></span><br><span class="line">  poll_interval: 5s</span><br><span class="line">  ring:</span><br><span class="line">    kvstore:</span><br><span class="line">      store: memberlist</span><br><span class="line">  enable_api: <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>Uninstalling:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#loki</span></span><br><span class="line">docker rm -vf loki</span><br><span class="line">/bin/rm -fr /data/loki/data/*</span><br><span class="line">mkdir -p /data/loki/data/</span><br><span class="line"><span class="comment">#docker exec loki id</span></span><br><span class="line"><span class="comment">#uid=10001(loki) gid=10001(loki) groups=10001(loki)</span></span><br><span class="line">chown -R 10001.10001 /data/loki/data/</span><br><span class="line"></span><br><span class="line"><span class="comment">#promtail</span></span><br><span class="line">docker rm -vf promtail</span><br><span class="line"></span><br><span class="line"><span class="comment">#grafana</span></span><br><span class="line"><span class="comment">#docker rm -vf grafana</span></span><br></pre></td></tr></table></figure>
<p>Configuration:</p>
<p>loki-config.yaml:</p>
<p>For local file:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">auth_enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">log_level:</span> <span class="string">error</span></span><br><span class="line">  <span class="attr">http_listen_port:</span> <span class="number">3100</span></span><br><span class="line">  <span class="attr">grpc_listen_port:</span> <span class="number">9096</span></span><br><span class="line">  <span class="attr">grpc_server_max_recv_msg_size:</span> <span class="number">1572864000</span></span><br><span class="line">  <span class="attr">grpc_server_max_send_msg_size:</span> <span class="number">1572864000</span></span><br><span class="line"></span><br><span class="line"><span class="attr">ingester:</span></span><br><span class="line">  <span class="attr">wal:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">dir:</span> <span class="string">/loki/data/wal</span></span><br><span class="line">    <span class="attr">replay_memory_ceiling:</span> <span class="string">10G</span></span><br><span class="line">  <span class="attr">lifecycler:</span></span><br><span class="line">    <span class="attr">address:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">    <span class="attr">ring:</span></span><br><span class="line">      <span class="attr">kvstore:</span></span><br><span class="line">        <span class="attr">store:</span> <span class="string">inmemory</span></span><br><span class="line">      <span class="attr">replication_factor:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">heartbeat_timeout:</span> <span class="string">10m</span></span><br><span class="line">    <span class="attr">final_sleep:</span> <span class="string">0s</span></span><br><span class="line">  <span class="attr">chunk_idle_period:</span> <span class="string">1h</span></span><br><span class="line">  <span class="attr">max_chunk_age:</span> <span class="string">2h</span></span><br><span class="line">  <span class="attr">chunk_retain_period:</span> <span class="string">30s</span></span><br><span class="line">  <span class="attr">chunk_target_size:</span> <span class="number">1572864</span></span><br><span class="line"></span><br><span class="line"><span class="attr">schema_config:</span></span><br><span class="line">  <span class="attr">configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">from:</span> <span class="number">2023</span><span class="number">-04</span><span class="number">-01</span></span><br><span class="line">      <span class="attr">store:</span> <span class="string">boltdb-shipper</span></span><br><span class="line">      <span class="attr">object_store:</span> <span class="string">filesystem</span></span><br><span class="line">      <span class="attr">schema:</span> <span class="string">v11</span></span><br><span class="line">      <span class="attr">index:</span></span><br><span class="line">        <span class="attr">prefix:</span> <span class="string">index_</span></span><br><span class="line">        <span class="attr">period:</span> <span class="string">24h</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">storage_config:</span></span><br><span class="line">  <span class="attr">boltdb_shipper:</span></span><br><span class="line">    <span class="attr">active_index_directory:</span> <span class="string">/loki/data/index</span></span><br><span class="line">    <span class="attr">cache_location:</span> <span class="string">/loki/data/boltdb-shipper-cache</span></span><br><span class="line">    <span class="attr">cache_ttl:</span> <span class="string">24h</span></span><br><span class="line">    <span class="attr">shared_store:</span> <span class="string">filesystem</span></span><br><span class="line">  <span class="attr">filesystem:</span></span><br><span class="line">    <span class="attr">directory:</span> <span class="string">/loki/data/chunks</span></span><br><span class="line"></span><br><span class="line"><span class="attr">compactor:</span></span><br><span class="line">  <span class="attr">working_directory:</span> <span class="string">/loki/data/boltdb-shipper-compactor</span></span><br><span class="line">  <span class="attr">shared_store:</span> <span class="string">filesystem</span></span><br><span class="line"></span><br><span class="line"><span class="attr">limits_config:</span></span><br><span class="line">  <span class="attr">ingestion_rate_mb:</span> <span class="number">50</span></span><br><span class="line">  <span class="attr">ingestion_burst_size_mb:</span> <span class="number">100</span></span><br><span class="line">  <span class="attr">max_streams_per_user:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">max_global_streams_per_user:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">enforce_metric_name:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">reject_old_samples:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">reject_old_samples_max_age:</span> <span class="string">168h</span></span><br><span class="line"></span><br><span class="line"><span class="attr">table_manager:</span></span><br><span class="line">  <span class="attr">retention_deletes_enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">retention_period:</span> <span class="string">168h</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#https://grafana.com/docs/loki/latest/configuration/</span></span><br><span class="line"><span class="attr">ruler:</span></span><br><span class="line">  <span class="attr">storage:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">local</span></span><br><span class="line">    <span class="attr">local:</span></span><br><span class="line">      <span class="attr">directory:</span> <span class="string">/mnt/config/rules</span></span><br><span class="line">  <span class="attr">rule_path:</span> <span class="string">/loki/data/rules-temp</span></span><br><span class="line">  <span class="attr">alertmanager_url:</span> <span class="string">http://192.168.101.82:9093</span></span><br><span class="line">  <span class="comment"># How frequently to evaluate rules.</span></span><br><span class="line">  <span class="attr">evaluation_interval:</span> <span class="string">5s</span></span><br><span class="line">  <span class="comment"># How frequently to poll for rule changes.</span></span><br><span class="line">  <span class="attr">poll_interval:</span> <span class="string">5s</span></span><br><span class="line">  <span class="attr">ring:</span></span><br><span class="line">    <span class="attr">kvstore:</span></span><br><span class="line">      <span class="attr">store:</span> <span class="string">inmemory</span></span><br><span class="line">  <span class="attr">enable_api:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>For Aliyun OSS:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">auth_enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">log_level:</span> <span class="string">error</span></span><br><span class="line">  <span class="attr">http_listen_port:</span> <span class="number">3100</span></span><br><span class="line">  <span class="attr">grpc_listen_port:</span> <span class="number">9096</span></span><br><span class="line">  <span class="attr">grpc_server_max_recv_msg_size:</span> <span class="number">1572864000</span></span><br><span class="line">  <span class="attr">grpc_server_max_send_msg_size:</span> <span class="number">1572864000</span></span><br><span class="line"></span><br><span class="line"><span class="attr">ingester:</span></span><br><span class="line">  <span class="attr">wal:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">dir:</span> <span class="string">/loki/data/wal</span></span><br><span class="line">    <span class="attr">replay_memory_ceiling:</span> <span class="string">10G</span></span><br><span class="line">  <span class="attr">lifecycler:</span></span><br><span class="line">    <span class="attr">address:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">    <span class="attr">ring:</span></span><br><span class="line">      <span class="attr">kvstore:</span></span><br><span class="line">        <span class="attr">store:</span> <span class="string">inmemory</span></span><br><span class="line">      <span class="attr">replication_factor:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">heartbeat_timeout:</span> <span class="string">10m</span></span><br><span class="line">    <span class="attr">final_sleep:</span> <span class="string">0s</span></span><br><span class="line">  <span class="comment"># chunk_idle_period: 1h</span></span><br><span class="line">  <span class="comment"># max_chunk_age: 2h</span></span><br><span class="line">  <span class="comment"># chunk_retain_period: 30s</span></span><br><span class="line">  <span class="comment"># chunk_target_size: 1572864</span></span><br><span class="line"></span><br><span class="line"><span class="attr">schema_config:</span></span><br><span class="line">  <span class="attr">configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">from:</span> <span class="number">2022</span><span class="number">-01</span><span class="number">-01</span></span><br><span class="line">      <span class="attr">index:</span></span><br><span class="line">        <span class="attr">period:</span> <span class="string">24h</span></span><br><span class="line">        <span class="attr">prefix:</span> <span class="string">index_</span></span><br><span class="line">      <span class="attr">object_store:</span> <span class="string">aws</span></span><br><span class="line">      <span class="attr">schema:</span> <span class="string">v11</span></span><br><span class="line">      <span class="attr">store:</span> <span class="string">boltdb-shipper</span></span><br><span class="line"></span><br><span class="line"><span class="attr">storage_config:</span></span><br><span class="line">  <span class="attr">boltdb_shipper:</span></span><br><span class="line">    <span class="attr">active_index_directory:</span> <span class="string">/loki/data/boltdb-shipper-active</span></span><br><span class="line">    <span class="attr">cache_location:</span> <span class="string">/loki/data/boltdb-shipper-cache</span></span><br><span class="line">    <span class="attr">cache_ttl:</span> <span class="string">24h</span></span><br><span class="line">    <span class="attr">shared_store:</span> <span class="string">s3</span></span><br><span class="line">  <span class="attr">aws:</span></span><br><span class="line">    <span class="attr">s3forcepathstyle:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">bucketnames:</span> <span class="string">loki-files</span></span><br><span class="line">    <span class="attr">endpoint:</span> <span class="string">https://oss-cn-shenzhen.aliyuncs.com</span></span><br><span class="line">    <span class="attr">access_key_id:</span> <span class="string">xxxx</span></span><br><span class="line">    <span class="attr">secret_access_key:</span> <span class="string">xxxx</span></span><br><span class="line">    <span class="attr">insecure:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">analytics:</span></span><br><span class="line">  <span class="attr">reporting_enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">compactor:</span></span><br><span class="line">  <span class="attr">working_directory:</span> <span class="string">/loki/data/boltdb-shipper-compactor</span></span><br><span class="line">  <span class="attr">shared_store:</span> <span class="string">s3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># table_manager:</span></span><br><span class="line"><span class="comment">#   retention_deletes_enabled: true</span></span><br><span class="line"><span class="comment">#   retention_period: 336h</span></span><br><span class="line"></span><br><span class="line"><span class="attr">limits_config:</span></span><br><span class="line">  <span class="attr">ingestion_rate_mb:</span> <span class="number">50</span></span><br><span class="line">  <span class="attr">ingestion_burst_size_mb:</span> <span class="number">100</span></span><br><span class="line">  <span class="attr">max_streams_per_user:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">max_global_streams_per_user:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">enforce_metric_name:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">reject_old_samples:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">reject_old_samples_max_age:</span> <span class="string">168h</span></span><br><span class="line"></span><br><span class="line"><span class="attr">ruler:</span></span><br><span class="line">  <span class="attr">storage:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">local</span></span><br><span class="line">    <span class="attr">local:</span></span><br><span class="line">      <span class="attr">directory:</span> <span class="string">/mnt/config/rules</span></span><br><span class="line">  <span class="attr">rule_path:</span> <span class="string">/loki/data/rules-temp</span></span><br><span class="line">  <span class="attr">alertmanager_url:</span> <span class="string">http://192.168.102.82:9093</span></span><br><span class="line">  <span class="attr">ring:</span></span><br><span class="line">    <span class="attr">kvstore:</span></span><br><span class="line">      <span class="attr">store:</span> <span class="string">inmemory</span></span><br><span class="line">  <span class="attr">enable_api:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>promtail-config.yaml:</p>
<p>For log files:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">http_listen_port:</span> <span class="number">9080</span></span><br><span class="line">  <span class="attr">grpc_listen_port:</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="attr">positions:</span></span><br><span class="line">  <span class="attr">filename:</span> <span class="string">/tmp/positions.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">clients:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">url:</span> <span class="string">http://192.168.80.196:3100/loki/api/v1/push</span></span><br><span class="line"></span><br><span class="line"><span class="attr">scrape_configs:</span></span><br><span class="line"><span class="comment"># - job_name: service_log</span></span><br><span class="line"><span class="comment">#   file_sd_configs:</span></span><br><span class="line"><span class="comment">#     - files:</span></span><br><span class="line"><span class="comment">#       - ./config/*.yaml #从config目录下加载配置文件</span></span><br><span class="line"><span class="comment">#       refresh_interval: 1m</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">company-job</span> </span><br><span class="line">  <span class="attr">pipeline_stages:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">match:</span></span><br><span class="line">      <span class="attr">selector:</span> <span class="string">'&#123;belongs="company", filename=~".*(?:error|tmlog).*"&#125;'</span></span><br><span class="line">      <span class="attr">action:</span> <span class="string">drop</span></span><br><span class="line">      <span class="attr">drop_counter_reason:</span> <span class="string">promtail_noisy_error</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">match:</span></span><br><span class="line">      <span class="attr">selector:</span> <span class="string">'&#123;belongs="company"&#125;'</span></span><br><span class="line">      <span class="attr">stages:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">regex:</span></span><br><span class="line">          <span class="attr">source:</span> <span class="string">filename</span></span><br><span class="line">          <span class="attr">expression:</span> <span class="string">"^/works/log/(?P&lt;org&gt;.+?)/(?P&lt;env&gt;.+?)/(?P&lt;app_name&gt;.+?)/.+\\.log$"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">labels:</span></span><br><span class="line">          <span class="attr">org:</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">          <span class="attr">app_name:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">match:</span></span><br><span class="line">      <span class="attr">selector:</span> <span class="string">'&#123;org=~".+"&#125;'</span></span><br><span class="line">      <span class="attr">stages:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">multiline:</span></span><br><span class="line">          <span class="attr">firstline:</span> <span class="string">'^\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125; \d&#123;1,2&#125;:\d&#123;2&#125;:\d&#123;2&#125;'</span></span><br><span class="line">          <span class="attr">max_lines:</span> <span class="number">500</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">regex:</span></span><br><span class="line">          <span class="attr">expression:</span> <span class="string">"^(?P&lt;time&gt;\\d&#123;4&#125;\\-\\d&#123;2&#125;\\-\\d&#123;2&#125; \\d&#123;1,2&#125;\\:\\d&#123;2&#125;\\:\\d&#123;2&#125;).*"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">timestamp:</span></span><br><span class="line">          <span class="attr">source:</span> <span class="string">time</span></span><br><span class="line">          <span class="attr">format:</span> <span class="string">'2006-01-02 15:04:05'</span></span><br><span class="line">          <span class="attr">location:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line">  <span class="attr">static_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">targets:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">localhost</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">belongs:</span> <span class="string">company</span></span><br><span class="line">      <span class="attr">__path__:</span> <span class="string">/works/log/**/*.log</span></span><br></pre></td></tr></table></figure>
<p>Recoverying local files automatically:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">...</span></span><br><span class="line"><span class="attr">scrape_configs:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">service_log</span></span><br><span class="line">  <span class="attr">file_sd_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">files:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./config/*.yaml</span> <span class="comment">#从config目录下加载配置文件</span></span><br><span class="line">      <span class="attr">refresh_interval:</span> <span class="string">1m</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">company-job</span> </span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure>
<p>config/pipeline_stages.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">targets:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">localhost</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">belongs:</span> <span class="string">company</span></span><br><span class="line">    <span class="attr">__path__:</span> <span class="string">/works/log/**/*.log</span></span><br><span class="line">    <span class="comment">#env: &#123;&#123;ENV&#125;&#125;</span></span><br><span class="line">    <span class="comment">#hostname: &#123;&#123;BINDIP&#125;&#125;</span></span><br><span class="line">    <span class="comment"># service_name: var-log-messages</span></span><br><span class="line">    <span class="comment"># log_type: var-log-messages</span></span><br></pre></td></tr></table></figure>
<p>For Kafka:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">http_listen_port:</span> <span class="number">9080</span></span><br><span class="line">  <span class="attr">grpc_listen_port:</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="attr">positions:</span></span><br><span class="line">  <span class="attr">filename:</span> <span class="string">/tmp/positions.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">clients:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">url:</span> <span class="string">http://192.168.101.82:3100/loki/api/v1/push</span></span><br><span class="line"></span><br><span class="line"><span class="attr">scrape_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">kafka</span></span><br><span class="line">    <span class="comment"># file_sd_configs:</span></span><br><span class="line">    <span class="comment">#   - files:</span></span><br><span class="line">    <span class="comment">#     - /mnt/config/config/*.yaml</span></span><br><span class="line">    <span class="comment">#     refresh_interval: 1m</span></span><br><span class="line">    <span class="attr">kafka:</span></span><br><span class="line">      <span class="attr">brokers:</span> </span><br><span class="line">      <span class="bullet">-</span> <span class="number">192.168</span><span class="number">.80</span><span class="number">.98</span><span class="string">:9092</span></span><br><span class="line">      <span class="attr">topics:</span> </span><br><span class="line">      <span class="bullet">-</span> <span class="string">dev</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">test</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">uat</span></span><br><span class="line">      <span class="attr">group_id:</span> <span class="string">promtail_davetest</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">job:</span> <span class="string">kafka</span></span><br><span class="line">    <span class="attr">relabel_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">        <span class="attr">source_labels:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">__meta_kafka_topic</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">topic</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">        <span class="attr">source_labels:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">__meta_kafka_partition</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">partition</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">        <span class="attr">source_labels:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">__meta_kafka_group_id</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">group</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">        <span class="attr">source_labels:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">__meta_kafka_message_key</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">message_key</span></span><br><span class="line">    <span class="attr">pipeline_stages:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">match:</span></span><br><span class="line">          <span class="attr">selector:</span> <span class="string">'&#123;job="kafka"&#125;'</span></span><br><span class="line">          <span class="attr">stages:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">json:</span></span><br><span class="line">              <span class="attr">expressions:</span></span><br><span class="line">                <span class="attr">log:</span> <span class="string">log</span></span><br><span class="line">                <span class="attr">filename:</span> <span class="string">filename</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">labels:</span></span><br><span class="line">              <span class="attr">filename:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">match:</span></span><br><span class="line">          <span class="attr">selector:</span> <span class="string">'&#123;job="kafka", filename=~".*(?:error|tmlog).*"&#125;'</span></span><br><span class="line">          <span class="attr">action:</span> <span class="string">drop</span></span><br><span class="line">          <span class="attr">drop_counter_reason:</span> <span class="string">promtail_noisy_error</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">match:</span></span><br><span class="line">          <span class="attr">selector:</span> <span class="string">'&#123;job="kafka"&#125;'</span></span><br><span class="line">          <span class="attr">stages:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">regex:</span></span><br><span class="line">              <span class="attr">source:</span> <span class="string">filename</span></span><br><span class="line">              <span class="attr">expression:</span> <span class="string">"^/works/log/(?P&lt;org&gt;.+?)/(?P&lt;env&gt;.+?)/(?P&lt;app_name&gt;.+?)/.+\\.log$"</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">labels:</span></span><br><span class="line">              <span class="attr">org:</span></span><br><span class="line">              <span class="attr">env:</span></span><br><span class="line">              <span class="attr">app_name:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">output:</span></span><br><span class="line">              <span class="attr">source:</span> <span class="string">log</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">match:</span></span><br><span class="line">          <span class="attr">selector:</span> <span class="string">'&#123;org=~".+"&#125;'</span></span><br><span class="line">          <span class="attr">stages:</span></span><br><span class="line">          <span class="comment">#- multiline:</span></span><br><span class="line">          <span class="comment">#  firstline: '^\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125; \d&#123;1,2&#125;:\d&#123;2&#125;:\d&#123;2&#125;'</span></span><br><span class="line">          <span class="comment">#  max_lines: 500</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">regex:</span></span><br><span class="line">              <span class="comment">#expression: "^(?P&lt;time&gt;\\d&#123;4&#125;\\-\\d&#123;2&#125;\\-\\d&#123;2&#125; \\d&#123;1,2&#125;\\:\\d&#123;2&#125;\\:\\d&#123;2&#125;).+?\\[bizKey=(?P&lt;biz_key&gt;.*?)\\,bizValue=(?P&lt;biz_value&gt;.*?)\\].*"</span></span><br><span class="line">              <span class="attr">expression:</span> <span class="string">"^(?P&lt;time&gt;\\d&#123;4&#125;\\-\\d&#123;2&#125;\\-\\d&#123;2&#125; \\d&#123;1,2&#125;\\:\\d&#123;2&#125;\\:\\d&#123;2&#125;).*"</span></span><br><span class="line">          <span class="comment">#- pack:</span></span><br><span class="line">          <span class="comment">#    labels:</span></span><br><span class="line">          <span class="comment">#      - time</span></span><br><span class="line">          <span class="comment">#      - biz_key</span></span><br><span class="line">          <span class="comment">#- labels:</span></span><br><span class="line">          <span class="comment">#    biz_key:</span></span><br><span class="line">          <span class="comment">#    biz_value:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">timestamp:</span></span><br><span class="line">              <span class="attr">source:</span> <span class="string">times</span></span><br><span class="line">              <span class="attr">format:</span> <span class="string">'2006-01-02 15:04:05'</span></span><br><span class="line">              <span class="attr">location:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">kakfka_payinfo</span></span><br><span class="line">    <span class="comment"># file_sd_configs:</span></span><br><span class="line">    <span class="comment">#   - files:</span></span><br><span class="line">    <span class="comment">#     - /mnt/config/config/*.yaml</span></span><br><span class="line">    <span class="comment">#     refresh_interval: 1m</span></span><br><span class="line">    <span class="attr">kafka:</span></span><br><span class="line">      <span class="attr">brokers:</span> </span><br><span class="line">      <span class="bullet">-</span> <span class="number">192.168</span><span class="number">.80</span><span class="number">.98</span><span class="string">:9092</span></span><br><span class="line">      <span class="attr">topics:</span> </span><br><span class="line">      <span class="bullet">-</span> <span class="string">dev</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">test</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">uat</span></span><br><span class="line">      <span class="attr">group_id:</span> <span class="string">promtail_payinfo_davetest</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">job:</span> <span class="string">kakfka_payinfo</span></span><br><span class="line">    <span class="attr">relabel_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">        <span class="attr">source_labels:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">__meta_kafka_topic</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">topic</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">        <span class="attr">source_labels:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">__meta_kafka_partition</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">partition</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">        <span class="attr">source_labels:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">__meta_kafka_group_id</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">group</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">        <span class="attr">source_labels:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">__meta_kafka_message_key</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">message_key</span></span><br><span class="line">    <span class="attr">pipeline_stages:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">match:</span></span><br><span class="line">          <span class="attr">selector:</span> <span class="string">'&#123;job="kakfka_payinfo"&#125; !~ ".*(PAYMENT_REFERENCE_LOG|CHECKOUT_PAYMENT_LOG).*"'</span></span><br><span class="line">          <span class="attr">action:</span> <span class="string">drop</span></span><br><span class="line">          <span class="attr">drop_counter_reason:</span> <span class="string">promtail_noisy_error</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">match:</span></span><br><span class="line">          <span class="attr">selector:</span> <span class="string">'&#123;job="kakfka_payinfo"&#125;'</span></span><br><span class="line">          <span class="attr">stages:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">json:</span></span><br><span class="line">              <span class="attr">expressions:</span></span><br><span class="line">                <span class="attr">log:</span> <span class="string">log</span></span><br><span class="line">                <span class="attr">filename:</span> <span class="string">filename</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">labels:</span></span><br><span class="line">              <span class="attr">filename:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">match:</span></span><br><span class="line">          <span class="attr">selector:</span> <span class="string">'&#123;job="kakfka_payinfo"&#125;'</span></span><br><span class="line">          <span class="attr">stages:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">regex:</span></span><br><span class="line">              <span class="attr">source:</span> <span class="string">filename</span></span><br><span class="line">              <span class="attr">expression:</span> <span class="string">"^/works/log/(?P&lt;org&gt;.+?)/(?P&lt;env&gt;.+?)/(?P&lt;app_name&gt;.+?)/.+\\.log$"</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">labels:</span></span><br><span class="line">              <span class="attr">org:</span></span><br><span class="line">              <span class="attr">env:</span></span><br><span class="line">              <span class="attr">app_name:</span></span><br><span class="line">              <span class="attr">payinfo:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">output:</span></span><br><span class="line">              <span class="attr">source:</span> <span class="string">log</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">match:</span></span><br><span class="line">          <span class="attr">selector:</span> <span class="string">'&#123;job="kakfka_payinfo", app_name="payment-server"&#125; |~ "PAYMENT_REFERENCE_LOG|CHECKOUT_PAYMENT_LOG"'</span></span><br><span class="line">          <span class="attr">stages:</span></span><br><span class="line">          <span class="comment">#- multiline:</span></span><br><span class="line">          <span class="comment">#    firstline: '^\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125; \d&#123;1,2&#125;:\d&#123;2&#125;:\d&#123;2&#125;'</span></span><br><span class="line">          <span class="comment">#  max_lines: 500</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">regex:</span></span><br><span class="line">              <span class="attr">expression:</span> <span class="string">"^(?P&lt;time&gt;\\d&#123;4&#125;\\-\\d&#123;2&#125;\\-\\d&#123;2&#125; \\d&#123;1,2&#125;\\:\\d&#123;2&#125;\\:\\d&#123;2&#125;).*"</span></span><br><span class="line">          <span class="comment"># - pack:</span></span><br><span class="line">          <span class="comment">#     labels:</span></span><br><span class="line">          <span class="comment">#       - time</span></span><br><span class="line">          <span class="comment"># - labels:</span></span><br><span class="line">          <span class="comment">#     time:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">timestamp:</span></span><br><span class="line">              <span class="attr">source:</span> <span class="string">times</span></span><br><span class="line">              <span class="attr">format:</span> <span class="string">'2006-01-02 15:04:05'</span></span><br><span class="line">              <span class="attr">location:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">kafka_monitor</span></span><br><span class="line">    <span class="comment"># file_sd_configs:</span></span><br><span class="line">    <span class="comment">#   - files:</span></span><br><span class="line">    <span class="comment">#     - /mnt/config/config/*.yaml</span></span><br><span class="line">    <span class="comment">#     refresh_interval: 1m</span></span><br><span class="line">    <span class="attr">kafka:</span></span><br><span class="line">      <span class="attr">brokers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="number">192.168</span><span class="number">.80</span><span class="number">.98</span><span class="string">:9092</span></span><br><span class="line">      <span class="attr">topics:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">dev</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">test</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">uat</span></span><br><span class="line">      <span class="attr">group_id:</span> <span class="string">promtail_monitor_davetest</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">job:</span> <span class="string">kafka_monitor</span></span><br><span class="line">    <span class="attr">relabel_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">        <span class="attr">source_labels:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">__meta_kafka_topic</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">topic</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">        <span class="attr">source_labels:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">__meta_kafka_partition</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">partition</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">        <span class="attr">source_labels:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">__meta_kafka_group_id</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">group</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">        <span class="attr">source_labels:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">__meta_kafka_message_key</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">message_key</span></span><br><span class="line">    <span class="attr">pipeline_stages:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">match:</span></span><br><span class="line">          <span class="attr">selector:</span> <span class="string">'&#123;job="kafka_monitor"&#125;'</span></span><br><span class="line">          <span class="attr">stages:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">json:</span></span><br><span class="line">                <span class="attr">expressions:</span></span><br><span class="line">                  <span class="attr">log:</span> <span class="string">log</span></span><br><span class="line">                  <span class="attr">filename:</span> <span class="string">filename</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">labels:</span></span><br><span class="line">                <span class="attr">filename:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">match:</span></span><br><span class="line">          <span class="attr">selector:</span> <span class="string">'&#123;job="kafka_monitor", filename=~".*(?:error|tmlog).*"&#125;'</span></span><br><span class="line">          <span class="attr">action:</span> <span class="string">drop</span></span><br><span class="line">          <span class="attr">drop_counter_reason:</span> <span class="string">promtail_noisy_error</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">match:</span></span><br><span class="line">          <span class="attr">selector:</span> <span class="string">'&#123;job="kafka_monitor"&#125;'</span></span><br><span class="line">          <span class="attr">stages:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">regex:</span></span><br><span class="line">                <span class="attr">source:</span> <span class="string">filename</span></span><br><span class="line">                <span class="attr">expression:</span> <span class="string">"^/works/log/(?P&lt;org&gt;.+?)/(?P&lt;env&gt;.+?)/(?P&lt;app_name&gt;.+?)/.+\\.log$"</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">labels:</span></span><br><span class="line">                <span class="attr">org:</span></span><br><span class="line">                <span class="attr">env:</span></span><br><span class="line">                <span class="attr">app_name:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">output:</span></span><br><span class="line">                <span class="attr">source:</span> <span class="string">log</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">match:</span></span><br><span class="line">          <span class="attr">selector:</span> <span class="string">'&#123;org=~".+"&#125;'</span></span><br><span class="line">          <span class="attr">stages:</span></span><br><span class="line">            <span class="comment">#- multiline:</span></span><br><span class="line">            <span class="comment">#  firstline: '^\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125; \d&#123;1,2&#125;:\d&#123;2&#125;:\d&#123;2&#125;'</span></span><br><span class="line">            <span class="comment">#  max_lines: 500</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">regex:</span></span><br><span class="line">                <span class="comment">#[bizGroup=default, bizKey=TRANSFER_MONEY_FAILED, bizDesc=交易异常-订单超时-转账, bizValue=&#123;"orderId":"orderNo1234567","time":"2023-04-07 12:40:37"&#125;]</span></span><br><span class="line">                <span class="attr">expression:</span> <span class="string">"^(?P&lt;time&gt;\\d&#123;4&#125;\\-\\d&#123;2&#125;\\-\\d&#123;2&#125; \\d&#123;1,2&#125;\\:\\d&#123;2&#125;\\:\\d&#123;2&#125;).+?\\[bizGroup=(?P&lt;biz_group&gt;.*?)\\,\\s*bizKey=(?P&lt;biz_key&gt;.*?)\\,\\s*bizDesc=(?P&lt;biz_desc&gt;.*?)\\,\\s*bizValue=(?P&lt;biz_value&gt;.*?)\\].*"</span></span><br><span class="line">            <span class="comment">#- pack:</span></span><br><span class="line">            <span class="comment">#    labels:</span></span><br><span class="line">            <span class="comment">#      - time</span></span><br><span class="line">            <span class="comment">#      - biz_key</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">labels:</span></span><br><span class="line">                <span class="attr">biz_group:</span></span><br><span class="line">                <span class="attr">biz_key:</span></span><br><span class="line">                <span class="attr">biz_desc:</span></span><br><span class="line">                <span class="attr">biz_value:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">timestamp:</span></span><br><span class="line">                <span class="attr">source:</span> <span class="string">times</span></span><br><span class="line">                <span class="attr">format:</span> <span class="string">'2006-01-02 15:04:05'</span></span><br><span class="line">                <span class="attr">location:</span> <span class="string">Asia/Shanghai</span></span><br></pre></td></tr></table></figure>
<p>/etc/grafana/grafana.ini</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string">domain</span> <span class="string">=</span> <span class="string">logs.company.net</span></span><br><span class="line"></span><br><span class="line"><span class="string">root_url</span> <span class="string">=</span> <span class="string">https://%(domain)s/</span></span><br><span class="line"></span><br><span class="line"><span class="string">[smtp]</span></span><br><span class="line"><span class="string">enabled</span> <span class="string">=</span> <span class="literal">true</span></span><br><span class="line"><span class="string">host</span> <span class="string">=</span> <span class="string">smtp.exmail.qq.com:465</span></span><br><span class="line"><span class="string">user</span> <span class="string">=</span> </span><br><span class="line"><span class="comment"># If the password contains # or ; you have to wrap it with triple quotes. Ex """</span></span><br><span class="line"><span class="string">password</span> <span class="string">=</span> </span><br><span class="line"><span class="string">;cert_file</span> <span class="string">=</span></span><br><span class="line"><span class="string">;;key_file</span> <span class="string">=</span></span><br><span class="line"><span class="string">;skip_verify</span> <span class="string">=</span> <span class="literal">true</span></span><br><span class="line"><span class="string">from_address</span> <span class="string">=</span> </span><br><span class="line"><span class="string">from_name</span> <span class="string">=</span> <span class="string">Grafana</span></span><br><span class="line"><span class="string">;#</span> <span class="string">EHLO</span> <span class="string">identity</span> <span class="string">in</span> <span class="string">SMTP</span> <span class="string">dialog</span> <span class="string">(defaults</span> <span class="string">to</span> <span class="string">instance_name)</span></span><br><span class="line"><span class="string">;;ehlo_identity</span> <span class="string">=</span> <span class="string">dashboard.example.com</span></span><br><span class="line"><span class="comment"># SMTP startTLS policy (defaults to 'OpportunisticStartTLS')</span></span><br><span class="line"><span class="string">startTLS_policy</span> <span class="string">=</span> <span class="string">StartTLS</span></span><br></pre></td></tr></table></figure>
<p>fluent-bit/fluent-bit.conf</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">[SERVICE]</span></span><br><span class="line">    <span class="comment">#Parsers_File parser.conf # 解析文件位置</span></span><br><span class="line">    <span class="string">Flush</span>        <span class="number">5</span>           <span class="comment"># 5秒写入一次ES</span></span><br><span class="line">    <span class="string">Daemon</span>       <span class="string">Off</span></span><br><span class="line">    <span class="string">Log_Level</span>    <span class="string">warn</span></span><br><span class="line">    <span class="string">parsers_file</span> <span class="string">parsers_multiline.conf</span></span><br><span class="line"></span><br><span class="line"><span class="string">[INPUT]</span></span><br><span class="line">    <span class="string">Name</span>             <span class="string">tail</span></span><br><span class="line">    <span class="string">Tag</span>              <span class="string">dev</span></span><br><span class="line">    <span class="string">path_key</span>         <span class="string">filename</span></span><br><span class="line">    <span class="comment">#read_from_head   true</span></span><br><span class="line">    <span class="string">multiline.parser</span> <span class="string">multiline-regex</span></span><br><span class="line">    <span class="string">Exclude_Path</span>     <span class="string">/works/log/*/dev/**/*-error.log</span></span><br><span class="line">    <span class="string">Path</span>             <span class="string">/works/log/*/dev/**/*.log</span></span><br><span class="line">    <span class="string">Buffer_Chunk_Size</span> <span class="string">4096KB</span></span><br><span class="line">    <span class="string">Buffer_Max_Size</span>   <span class="string">10240KB</span></span><br><span class="line"></span><br><span class="line"><span class="string">[INPUT]</span></span><br><span class="line">    <span class="string">Name</span>             <span class="string">tail</span></span><br><span class="line">    <span class="string">Tag</span>              <span class="string">test</span></span><br><span class="line">    <span class="string">path_key</span>         <span class="string">filename</span></span><br><span class="line">    <span class="comment">#read_from_head   true</span></span><br><span class="line">    <span class="string">multiline.parser</span> <span class="string">multiline-regex</span></span><br><span class="line">    <span class="string">Exclude_Path</span>     <span class="string">/works/log/*/test/**/*-error.log</span></span><br><span class="line">    <span class="string">Path</span>             <span class="string">/works/log/*/test/**/*.log</span></span><br><span class="line">    <span class="string">Buffer_Chunk_Size</span> <span class="string">4096KB</span></span><br><span class="line">    <span class="string">Buffer_Max_Size</span>   <span class="string">10240KB</span></span><br><span class="line"></span><br><span class="line"><span class="string">[INPUT]</span></span><br><span class="line">    <span class="string">Name</span>             <span class="string">tail</span></span><br><span class="line">    <span class="string">Tag</span>              <span class="string">selftest</span></span><br><span class="line">    <span class="string">path_key</span>         <span class="string">filename</span></span><br><span class="line">    <span class="comment">#read_from_head   true</span></span><br><span class="line">    <span class="string">multiline.parser</span> <span class="string">multiline-regex</span></span><br><span class="line">    <span class="string">Exclude_Path</span>     <span class="string">/works/log/*/selftest/**/*-error.log</span></span><br><span class="line">    <span class="string">Path</span>             <span class="string">/works/log/*/selftest/**/*.log</span></span><br><span class="line">    <span class="string">Buffer_Chunk_Size</span> <span class="string">4096KB</span></span><br><span class="line">    <span class="string">Buffer_Max_Size</span>   <span class="string">10240KB</span></span><br><span class="line"></span><br><span class="line"><span class="string">[INPUT]</span></span><br><span class="line">    <span class="string">Name</span>             <span class="string">tail</span></span><br><span class="line">    <span class="string">Tag</span>              <span class="string">sandbox</span></span><br><span class="line">    <span class="string">path_key</span>         <span class="string">filename</span></span><br><span class="line">    <span class="comment">#read_from_head   true</span></span><br><span class="line">    <span class="string">multiline.parser</span> <span class="string">multiline-regex</span></span><br><span class="line">    <span class="string">Exclude_Path</span>     <span class="string">/works/log/*/sandbox/**/*-error.log</span></span><br><span class="line">    <span class="string">Path</span>             <span class="string">/works/log/*/sandbox/**/*.log</span></span><br><span class="line">    <span class="string">Buffer_Chunk_Size</span> <span class="string">4096KB</span></span><br><span class="line">    <span class="string">Buffer_Max_Size</span>   <span class="string">10240KB</span></span><br><span class="line"></span><br><span class="line"><span class="string">[INPUT]</span></span><br><span class="line">    <span class="string">Name</span>             <span class="string">tail</span></span><br><span class="line">    <span class="string">Tag</span>              <span class="string">uat</span></span><br><span class="line">    <span class="string">path_key</span>         <span class="string">filename</span></span><br><span class="line">    <span class="comment">#read_from_head   true</span></span><br><span class="line">    <span class="string">multiline.parser</span> <span class="string">multiline-regex</span></span><br><span class="line">    <span class="string">Exclude_Path</span>     <span class="string">/works/log/*/uat/**/*-error.log</span></span><br><span class="line">    <span class="string">Path</span>             <span class="string">/works/log/*/uat/**/*.log</span></span><br><span class="line">    <span class="string">Buffer_Chunk_Size</span> <span class="string">4096KB</span></span><br><span class="line">    <span class="string">Buffer_Max_Size</span>   <span class="string">10240KB</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [FILTER]</span></span><br><span class="line"><span class="comment">#     name             parser</span></span><br><span class="line"><span class="comment">#     match            *</span></span><br><span class="line"><span class="comment">#     key_name         log</span></span><br><span class="line"><span class="comment">#     parser           named-capture-test</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [FILTER]</span></span><br><span class="line"><span class="comment">#     Name    grep</span></span><br><span class="line"><span class="comment">#     Match   configuration</span></span><br><span class="line"><span class="comment">#     #Exclude log level=INFO </span></span><br><span class="line"><span class="comment">#     Regex    log =WARN</span></span><br><span class="line"></span><br><span class="line"><span class="string">[OUTPUT]</span></span><br><span class="line">    <span class="string">Name</span>        <span class="string">kafka</span></span><br><span class="line">    <span class="string">Match</span>       <span class="string">dev</span></span><br><span class="line">    <span class="string">Brokers</span>     <span class="number">192.168</span><span class="number">.80</span><span class="number">.98</span><span class="string">:9092</span></span><br><span class="line">    <span class="string">Topics</span>      <span class="string">dev</span></span><br><span class="line"></span><br><span class="line"><span class="string">[OUTPUT]</span></span><br><span class="line">    <span class="string">Name</span>        <span class="string">kafka</span></span><br><span class="line">    <span class="string">Match</span>       <span class="string">test</span></span><br><span class="line">    <span class="string">Brokers</span>     <span class="number">192.168</span><span class="number">.80</span><span class="number">.98</span><span class="string">:9092</span></span><br><span class="line">    <span class="string">Topics</span>      <span class="string">test</span></span><br><span class="line"></span><br><span class="line"><span class="string">[OUTPUT]</span></span><br><span class="line">    <span class="string">Name</span>        <span class="string">kafka</span></span><br><span class="line">    <span class="string">Match</span>       <span class="string">selftest</span></span><br><span class="line">    <span class="string">Brokers</span>     <span class="number">192.168</span><span class="number">.80</span><span class="number">.98</span><span class="string">:9092</span></span><br><span class="line">    <span class="string">Topics</span>      <span class="string">selftest</span></span><br><span class="line"></span><br><span class="line"><span class="string">[OUTPUT]</span></span><br><span class="line">    <span class="string">Name</span>        <span class="string">kafka</span></span><br><span class="line">    <span class="string">Match</span>       <span class="string">sandbox</span></span><br><span class="line">    <span class="string">Brokers</span>     <span class="number">192.168</span><span class="number">.80</span><span class="number">.98</span><span class="string">:9092</span></span><br><span class="line">    <span class="string">Topics</span>      <span class="string">sandbox</span></span><br><span class="line"></span><br><span class="line"><span class="string">[OUTPUT]</span></span><br><span class="line">    <span class="string">Name</span>        <span class="string">kafka</span></span><br><span class="line">    <span class="string">Match</span>       <span class="string">uat</span></span><br><span class="line">    <span class="string">Brokers</span>     <span class="number">192.168</span><span class="number">.80</span><span class="number">.98</span><span class="string">:9092</span></span><br><span class="line">    <span class="string">Topics</span>      <span class="string">uat</span></span><br></pre></td></tr></table></figure>
<p>fluent-bit/parsers_multiline.conf(if need)</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">[MULTILINE_PARSER]</span></span><br><span class="line">    <span class="string">name</span>          <span class="string">multiline-regex</span></span><br><span class="line">    <span class="string">type</span>          <span class="string">regex</span></span><br><span class="line">    <span class="string">flush_timeout</span> <span class="number">3000</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># Regex rules for multiline parsing</span></span><br><span class="line">    <span class="comment"># ---------------------------------</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># configuration hints:</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#  - first state always has the name: start_state</span></span><br><span class="line">    <span class="comment">#  - every field in the rule must be inside double quotes</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># rules |   state name  | regex pattern                  | next state</span></span><br><span class="line">    <span class="comment"># ------|---------------|--------------------------------------------</span></span><br><span class="line">    <span class="string">rule</span>      <span class="string">"start_state"</span>   <span class="string">"/^\d&#123;4&#125;\-\d&#123;2&#125;\-\d&#123;2&#125; \d&#123;1,2&#125;\:\d&#123;2&#125;\:\d&#123;2&#125;.*/"</span>  <span class="string">"cont"</span></span><br><span class="line">    <span class="comment">#rule      "cont"          "/^([a-zA-Z]|\s)+.*/"                             "cont"</span></span><br><span class="line">    <span class="string">rule</span>      <span class="string">"cont"</span>          <span class="string">"/^(?!\d&#123;4&#125;\-\d&#123;2&#125;\-\d&#123;2&#125;).*/"</span>                    <span class="string">"cont"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#[PARSER]</span></span><br><span class="line"><span class="comment">#    Name named-capture-test</span></span><br><span class="line"><span class="comment">#    Format regex</span></span><br><span class="line"><span class="comment">#    Regex /^(?&lt;date&gt;\d&#123;4&#125;\-\d&#123;2&#125;\-\d&#123;2&#125; \d&#123;1,2&#125;\:\d&#123;2&#125;\:\d&#123;2&#125;)\.\d&#123;3&#125;\s+(?&lt;message&gt;.*)/m</span></span><br></pre></td></tr></table></figure>
<p>Kakfa docker-compose.yml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://segmentfault.com/a/1190000021746086</span></span><br><span class="line"><span class="comment">#https://github.com/wurstmeister/kafka-docker</span></span><br><span class="line"><span class="attr">version:</span> <span class="string">'2'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">zookeeper:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">wurstmeister/zookeeper</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/data</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">2182</span><span class="string">:2181</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">kafka9094:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">wurstmeister/kafka</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">9092</span><span class="string">:9092</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">KAFKA_BROKER_ID:</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">KAFKA_ADVERTISED_LISTENERS:</span> <span class="string">PLAINTEXT://192.168.80.98:9092</span></span><br><span class="line">      <span class="attr">KAFKA_CREATE_TOPICS:</span> <span class="string">"dev:3:1,test:3:1,selftest:3:1,uat:3:1,sandbox:3:1"</span>   <span class="comment">#kafka启动后初始化一个有3个partition(分区)1个副本名的topic</span></span><br><span class="line">      <span class="attr">KAFKA_ZOOKEEPER_CONNECT:</span> <span class="string">zookeeper:2181</span></span><br><span class="line">      <span class="attr">KAFKA_LISTENERS:</span> <span class="string">PLAINTEXT://0.0.0.0:9092</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./kafka-logs:/kafka</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">zookeeper</span></span><br></pre></td></tr></table></figure>
<p>alertmanager-config.yaml</p>
<p><a href="https://yunlzheng.gitbook.io/prometheus-book/parti-prometheus-ji-chu/alert/alert-manager-config" target="_blank" rel="noopener">https://yunlzheng.gitbook.io/prometheus-book/parti-prometheus-ji-chu/alert/alert-manager-config</a></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">global:</span></span><br><span class="line">  <span class="attr">smtp_smarthost:</span> <span class="string">'smtp.exmail.qq.com:25'</span></span><br><span class="line">  <span class="attr">smtp_from:</span> <span class="string">'xxx@xxx.com'</span></span><br><span class="line">  <span class="attr">smtp_auth_username:</span> <span class="string">'xxx@xxx.com'</span></span><br><span class="line">  <span class="attr">smtp_auth_password:</span> <span class="string">'xxx'</span></span><br><span class="line">  <span class="attr">smtp_require_tls:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment">#该参数定义了当Alertmanager持续多长时间未接收到告警后标记告警状态为resolved（已解决）。该参数的定义可能会影响到告警恢复通知的接收时间，读者可根据自己的实际场景进行定义，其默认值为5分钟</span></span><br><span class="line">  <span class="attr">resolve_timeout:</span> <span class="string">10m</span></span><br><span class="line"></span><br><span class="line"><span class="attr">templates:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">'/etc/alertmanager/config/*-resolved.tmpl'</span></span><br><span class="line"><span class="bullet">-</span> </span><br><span class="line"><span class="comment"># 路由分组</span></span><br><span class="line"><span class="comment">#https://blog.csdn.net/bluuusea/article/details/104619235</span></span><br><span class="line"><span class="comment">#https://github.com/prometheus/alertmanager/blob/main/doc/examples/simple.yml</span></span><br><span class="line"><span class="comment">#https://kebingzao.com/2022/11/29/prometheus-4-alertmanager/</span></span><br><span class="line"><span class="comment">#https://zhuanlan.zhihu.com/p/63270049</span></span><br><span class="line"><span class="comment">#https://blog.csdn.net/qq_37843943/article/details/120665690</span></span><br><span class="line"><span class="comment">#https://blog.51cto.com/u_14205795/4561323</span></span><br><span class="line"><span class="attr">route:</span></span><br><span class="line">  <span class="comment"># 该节点中的警报会按'env', 'alertname', 'biz_group', 'biz_key'做 Group，每个分组中最多每group_interval发送一条警报，同样的警报最多repeat_interval发送一次</span></span><br><span class="line">  <span class="comment"># 分组规则，如果满足group_by中包含的标签，则这些报警会合并为一个通知发给receiver</span></span><br><span class="line">  <span class="attr">group_by:</span> <span class="string">['env',</span> <span class="string">'alertname'</span><span class="string">,</span> <span class="string">'biz_group'</span><span class="string">,</span> <span class="string">'biz_key'</span><span class="string">]</span></span><br><span class="line">  <span class="comment"># 设置等待时间，在此等待时间内如果接收到多个报警，则会合并成一个通知发送给receiver</span></span><br><span class="line">  <span class="attr">group_wait:</span> <span class="string">30s</span></span><br><span class="line">  <span class="comment"># 收到相同的分组告警通知的时间间隔(上下两组发送告警的间隔时间)，如果满足，则再会查找是否已经满足repeat_interval，如果满足，则会再次发送</span></span><br><span class="line">  <span class="comment"># https://www.dianbanjiu.com/post/alertmanager-%E4%B8%AD%E4%B8%89%E4%B8%AA%E6%97%B6%E9%97%B4%E5%8F%82%E6%95%B0%E4%B8%8A%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/</span></span><br><span class="line">  <span class="comment"># 再次发送时间在(group_interval+repeat_interval)左右</span></span><br><span class="line">  <span class="attr">group_interval:</span> <span class="string">5m</span></span><br><span class="line">  <span class="comment"># 发送相同告警的时间间隔，如：4h，表示4小时内不会发送相同的报警</span></span><br><span class="line">  <span class="attr">repeat_interval:</span> <span class="string">4h</span></span><br><span class="line">  <span class="comment"># 顶级路由配置的接收者（匹配不到子级路由，会使用根路由发送报警）</span></span><br><span class="line">  <span class="attr">receiver:</span> <span class="string">'emailreceivers'</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 上面所有的属性都由所有子路由继承，并且可以在每个子路由上进行覆盖。</span></span><br><span class="line">  <span class="attr">routes:</span></span><br><span class="line">      <span class="comment">#用于系统默认BaseException的异常</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">receiver:</span> <span class="string">emailreceivers</span></span><br><span class="line">      <span class="attr">group_by:</span> <span class="string">['env',</span> <span class="string">'alertname'</span><span class="string">,</span> <span class="string">'biz_group'</span><span class="string">,</span> <span class="string">'biz_key'</span><span class="string">,</span> <span class="string">'biz_value'</span><span class="string">]</span></span><br><span class="line">      <span class="attr">group_wait:</span> <span class="string">10s</span></span><br><span class="line">      <span class="attr">group_interval:</span> <span class="string">1m</span></span><br><span class="line">      <span class="attr">repeat_interval:</span> <span class="string">3m</span></span><br><span class="line">      <span class="comment">#默认为false。false：配置到满足条件的子节点点后直接返回，true：匹配到子节点后还会继续遍历后续子节点</span></span><br><span class="line">      <span class="attr">continue:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">matchers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">biz_group="XPAY-SYSTEM-ERROR"</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">#用于业务告警</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">receiver:</span> <span class="string">alertmanager-webhook</span></span><br><span class="line">    <span class="comment">#- receiver: emailreceivers</span></span><br><span class="line">    <span class="comment">#- receiver: wecomreceivers</span></span><br><span class="line">      <span class="attr">group_by:</span> <span class="string">['env',</span> <span class="string">'alertname'</span><span class="string">,</span> <span class="string">'biz_group'</span><span class="string">,</span> <span class="string">'biz_key'</span><span class="string">,</span> <span class="string">'biz_value'</span><span class="string">]</span></span><br><span class="line">      <span class="attr">group_wait:</span> <span class="string">0s</span></span><br><span class="line">      <span class="attr">group_interval:</span> <span class="string">1m</span></span><br><span class="line">      <span class="attr">repeat_interval:</span> <span class="string">2m</span></span><br><span class="line">      <span class="comment">#默认为false。false：配置到满足条件的子节点点后直接返回，true：匹配到子节点后还会继续遍历后续子节点</span></span><br><span class="line">      <span class="attr">continue:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">matchers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">biz_group!~"XPAY-SYSTEM-ERROR"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#定义所有接收者</span></span><br><span class="line"><span class="attr">receivers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">'alertmanager-webhook'</span></span><br><span class="line">    <span class="attr">webhook_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">url:</span> <span class="string">'http://192.168.101.82:8088/alert'</span></span><br><span class="line">        <span class="attr">send_resolved:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">'emailreceivers'</span></span><br><span class="line">    <span class="attr">email_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">to:</span> <span class="string">'xxx@xxx.com'</span></span><br><span class="line">      <span class="attr">html:</span> <span class="string">'<span class="template-variable">&#123;&#123; template "email.to.html" . &#125;&#125;</span>'</span></span><br><span class="line">      <span class="attr">headers:</span> </span><br><span class="line">        <span class="comment">#subject: ' &#123;&#123; .CommonAnnotations.summary &#125;&#125; &#123;&#123; if eq .Status "firing" &#125;&#125; DOWN &#123;&#123; else if eq .Status "resolved" &#125;&#125; UP &#123;&#123;end&#125;&#125;'</span></span><br><span class="line">        <span class="attr">subject:</span> <span class="string">'[<span class="template-variable">&#123;&#123; .Status &#125;&#125;</span>]<span class="template-variable">&#123;&#123; .CommonAnnotations.summary &#125;&#125;</span>'</span></span><br><span class="line">        <span class="comment">#subject: '预警通知'</span></span><br><span class="line">      <span class="attr">send_resolved:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">'wecomreceivers'</span></span><br><span class="line">    <span class="attr">wechat_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">send_resolved:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">corp_id:</span> <span class="string">'xxx'</span></span><br><span class="line">      <span class="attr">to_user:</span> <span class="string">'SZ122'</span></span><br><span class="line">      <span class="comment">#to_party: 'SZ122 | SZ097'</span></span><br><span class="line">      <span class="attr">message:</span> <span class="string">'<span class="template-variable">&#123;&#123; template "wechat.default.message" . &#125;&#125;</span>'</span></span><br><span class="line">      <span class="attr">agent_id:</span> <span class="string">'xxx'</span></span><br><span class="line">      <span class="attr">api_secret:</span> <span class="string">'xxx'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 抑制器配置：抑制是指当某以此告警发出后，可以停止重复发送由此告警引发的其他告警的机制</span></span><br><span class="line"><span class="comment"># https://blog.csdn.net/qq_42883074/article/details/115544031</span></span><br><span class="line"><span class="comment">#当我们前面已经有一个告警了，那么后面的告警规则在触发的时候会先翻一下前面的已经触发的告警，去查看是否有severity: 'critical'的标签</span></span><br><span class="line"><span class="comment">#如果有了，那么去对比['alertname', 'biz_group', 'biz_key']标签是不是相同，如果是的话，</span></span><br><span class="line"><span class="comment">#那么去查看一下自己准备发的告警里标签是否存在severity: 'warning'，如果是，就不告警了</span></span><br><span class="line"><span class="attr">inhibit_rules:</span></span><br><span class="line">  <span class="comment"># 源标签警报触发时抑制含有目标标签的警报</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">source_match:</span></span><br><span class="line">      <span class="comment"># 此处的抑制匹配一定在最上面的route中配置不然，会提示找不key。</span></span><br><span class="line">      <span class="comment"># 前一个告警规则的标签</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">'critical'</span></span><br><span class="line">    <span class="attr">target_match:</span></span><br><span class="line">      <span class="comment"># 目标标签值正则匹配，可以是正则表达式如: ".*MySQL.*"</span></span><br><span class="line">      <span class="comment"># 后面触发告警规则的标签</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">'High'</span></span><br><span class="line">    <span class="comment"># 确保这个配置下的标签内容相同才会抑制，也就是说警报中必须有这三个标签值才会被抑制。</span></span><br><span class="line">    <span class="attr">equal:</span> <span class="string">['env',</span> <span class="string">'alertname'</span><span class="string">,</span> <span class="string">'biz_group'</span><span class="string">,</span> <span class="string">'biz_key'</span><span class="string">]</span></span><br></pre></td></tr></table></figure>
<p>loki/rules/fake/rules.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">groups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">系统日志</span></span><br><span class="line">    <span class="attr">rules:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">系统日志-系统统一错误日志</span></span><br><span class="line">        <span class="comment">#=: exactly equal</span></span><br><span class="line">        <span class="comment">#!=: not equal</span></span><br><span class="line">        <span class="comment">#=~: regex matches</span></span><br><span class="line">        <span class="comment">#!~: regex does not match</span></span><br><span class="line">        <span class="comment">#expr: sum by (env, app_name) (count_over_time(&#123;env=~"dev", app_name="account-server"&#125;|unpack|bizKey=~"\\w+"[1m]) &gt;=1)</span></span><br><span class="line">        <span class="comment">#必须大于loki-config.yaml中的"evaluation_interval: 3s"的值</span></span><br><span class="line">        <span class="attr">expr:</span> <span class="string">sum</span> <span class="string">by</span> <span class="string">(env,</span> <span class="string">biz_group,</span> <span class="string">biz_key,</span> <span class="string">biz_desc,</span> <span class="string">biz_value)</span> <span class="string">(count_over_time(&#123;biz_group="XPAY-SYSTEM-ERROR",biz_key=~".+",biz_desc=~".+",biz_value=~".+"&#125;[10s])</span> <span class="string">&gt;=1)</span></span><br><span class="line">        <span class="attr">for:</span> <span class="string">1s</span></span><br><span class="line">        <span class="attr">labels:</span></span><br><span class="line">          <span class="attr">severity:</span> <span class="string">High</span></span><br><span class="line">        <span class="attr">annotations:</span></span><br><span class="line">          <span class="attr">silenceResolved:</span> <span class="string">"true"</span></span><br><span class="line">          <span class="comment">#emails: "xxx@xxx.com"</span></span><br><span class="line">          <span class="comment">#emailTemplate: "email1"</span></span><br><span class="line">          <span class="comment">#smsPhones: "11111111111,22222222222"</span></span><br><span class="line">          <span class="comment">#ttsPhones: "11111111111,22222222222"</span></span><br><span class="line">          <span class="comment">#wecomUrl: "https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=111122223333"</span></span><br><span class="line">          <span class="comment">#wecomTemplate: "wecom1"</span></span><br><span class="line">          <span class="comment">#只要捕捉到异常后，直接邮件通知相关对象通知一次</span></span><br><span class="line">          <span class="attr">emails:</span> <span class="string">"xxx@xxx.com"</span></span><br><span class="line">          <span class="attr">emailTemplate:</span> <span class="string">"email1"</span></span><br><span class="line">          <span class="attr">summary:</span> <span class="string">"<span class="template-variable">&#123;&#123; $labels.biz_desc &#125;&#125;</span>"</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">"<span class="template-variable">&#123;&#123; $labels.biz_value &#125;&#125;</span>"</span></span><br><span class="line">          <span class="attr">count:</span> <span class="string">"<span class="template-variable">&#123;&#123; $value &#125;&#125;</span>"</span></span><br><span class="line">          </span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">支付</span></span><br><span class="line">    <span class="attr">rules:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">交易异常</span></span><br><span class="line">        <span class="attr">expr:</span> <span class="string">sum</span> <span class="string">by</span> <span class="string">(env,</span> <span class="string">biz_group,</span> <span class="string">biz_key,</span> <span class="string">biz_desc,</span> <span class="string">biz_value)</span> <span class="string">(count_over_time(&#123;biz_group="XPAY-PAYMENT",biz_key=~".+",biz_desc=~".+",biz_value=~".+"&#125;[5m])</span> <span class="string">&gt;=10)</span></span><br><span class="line">        <span class="attr">for:</span> <span class="string">1s</span></span><br><span class="line">        <span class="attr">labels:</span></span><br><span class="line">          <span class="attr">severity:</span> <span class="string">High</span></span><br><span class="line">        <span class="attr">annotations:</span></span><br><span class="line">          <span class="attr">silenceResolved:</span> <span class="string">"true"</span></span><br><span class="line">          <span class="comment">#在5min内出现10笔同类型的超时，则直接电话+企业微信通知相关对象按照0min，3min时间间隔通知二次</span></span><br><span class="line">          <span class="attr">ttsPhones:</span> <span class="string">"11111111111,22222222222"</span></span><br><span class="line">          <span class="attr">wecomUrl:</span> <span class="string">"https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=111122223333"</span></span><br><span class="line">          <span class="attr">wecomTemplate:</span> <span class="string">"wecom1"</span></span><br><span class="line">          <span class="attr">summary:</span> <span class="string">"<span class="template-variable">&#123;&#123; $labels.biz_desc &#125;&#125;</span>"</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">"<span class="template-variable">&#123;&#123; $labels.biz_value &#125;&#125;</span>"</span></span><br><span class="line">          <span class="attr">count:</span> <span class="string">"<span class="template-variable">&#123;&#123; $value &#125;&#125;</span>"</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">对账</span></span><br><span class="line">    <span class="attr">rules:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">外部对账失败</span></span><br><span class="line">        <span class="attr">expr:</span> <span class="string">sum</span> <span class="string">by</span> <span class="string">(env,</span> <span class="string">biz_group,</span> <span class="string">biz_key,</span> <span class="string">biz_desc,</span> <span class="string">biz_value)</span> <span class="string">(count_over_time(&#123;biz_group="XPAY-RECONCILICATION",biz_key=~".+",biz_desc=~".+",biz_value=~".+"&#125;[10s])</span> <span class="string">&gt;=1)</span></span><br><span class="line">        <span class="attr">for:</span> <span class="string">1s</span></span><br><span class="line">        <span class="attr">labels:</span></span><br><span class="line">          <span class="attr">severity:</span> <span class="string">High</span></span><br><span class="line">        <span class="attr">annotations:</span></span><br><span class="line">          <span class="attr">silenceResolved:</span> <span class="string">"true"</span></span><br><span class="line">          <span class="comment">#只要捕捉到异常后，直接企业微信通知相关对象通知一次</span></span><br><span class="line">          <span class="attr">wecomUrl:</span> <span class="string">"https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=111122223333"</span></span><br><span class="line">          <span class="attr">wecomTemplate:</span> <span class="string">"wecom1"</span></span><br><span class="line">          <span class="attr">summary:</span> <span class="string">"<span class="template-variable">&#123;&#123; $labels.biz_desc &#125;&#125;</span>"</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">"<span class="template-variable">&#123;&#123; $labels.biz_value &#125;&#125;</span>"</span></span><br><span class="line">          <span class="attr">count:</span> <span class="string">"<span class="template-variable">&#123;&#123; $value &#125;&#125;</span>"</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">内部对账失败</span></span><br><span class="line">        <span class="attr">expr:</span> <span class="string">sum</span> <span class="string">by</span> <span class="string">(env,</span> <span class="string">biz_group,</span> <span class="string">biz_key,</span> <span class="string">biz_desc,</span> <span class="string">biz_value)</span> <span class="string">(count_over_time(&#123;biz_group="XPAY-RECONCILICATION",biz_key=~".+",biz_desc=~".+",biz_value=~".+"&#125;[10s])</span> <span class="string">&gt;=1)</span></span><br><span class="line">        <span class="attr">for:</span> <span class="string">1s</span></span><br><span class="line">        <span class="attr">labels:</span></span><br><span class="line">          <span class="attr">severity:</span> <span class="string">High</span></span><br><span class="line">        <span class="attr">annotations:</span></span><br><span class="line">          <span class="attr">silenceResolved:</span> <span class="string">"true"</span></span><br><span class="line">          <span class="comment">#只要捕捉到异常后，直接企业微信通知相关对象通知一次</span></span><br><span class="line">          <span class="attr">wecomUrl:</span> <span class="string">"https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=111122223333"</span></span><br><span class="line">          <span class="attr">wecomTemplate:</span> <span class="string">"wecom1"</span></span><br><span class="line">          <span class="attr">summary:</span> <span class="string">"<span class="template-variable">&#123;&#123; $labels.biz_desc &#125;&#125;</span>"</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">"<span class="template-variable">&#123;&#123; $labels.biz_value &#125;&#125;</span>"</span></span><br><span class="line">          <span class="attr">count:</span> <span class="string">"<span class="template-variable">&#123;&#123; $value &#125;&#125;</span>"</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">结算</span></span><br><span class="line">    <span class="attr">rules:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">渠道结算失败</span></span><br><span class="line">        <span class="attr">expr:</span> <span class="string">sum</span> <span class="string">by</span> <span class="string">(env,</span> <span class="string">biz_group,</span> <span class="string">biz_key,</span> <span class="string">biz_desc,</span> <span class="string">biz_value)</span> <span class="string">(count_over_time(&#123;biz_group="XPAY-SETTLEMENT",biz_key=~".+",biz_desc=~".+",biz_value=~".+"&#125;[10s])</span> <span class="string">&gt;=1)</span></span><br><span class="line">        <span class="attr">for:</span> <span class="string">1s</span></span><br><span class="line">        <span class="attr">labels:</span></span><br><span class="line">          <span class="attr">severity:</span> <span class="string">High</span></span><br><span class="line">        <span class="attr">annotations:</span></span><br><span class="line">          <span class="attr">silenceResolved:</span> <span class="string">"true"</span></span><br><span class="line">          <span class="comment">#只要捕捉到异常后，直接企业微信通知相关对象通知一次</span></span><br><span class="line">          <span class="attr">wecomUrl:</span> <span class="string">"https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=111122223333"</span></span><br><span class="line">          <span class="attr">wecomTemplate:</span> <span class="string">"wecom1"</span></span><br><span class="line">          <span class="attr">summary:</span> <span class="string">"<span class="template-variable">&#123;&#123; $labels.biz_desc &#125;&#125;</span>"</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">"<span class="template-variable">&#123;&#123; $labels.biz_value &#125;&#125;</span>"</span></span><br><span class="line">          <span class="attr">count:</span> <span class="string">"<span class="template-variable">&#123;&#123; $value &#125;&#125;</span>"</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">商户结算失败</span></span><br><span class="line">        <span class="attr">expr:</span> <span class="string">sum</span> <span class="string">by</span> <span class="string">(env,</span> <span class="string">biz_group,</span> <span class="string">biz_key,</span> <span class="string">biz_desc,</span> <span class="string">biz_value)</span> <span class="string">(count_over_time(&#123;biz_group="XPAY-SETTLEMENT",biz_key=~".+",biz_desc=~".+",biz_value=~".+"&#125;[10s])</span> <span class="string">&gt;=1)</span></span><br><span class="line">        <span class="attr">for:</span> <span class="string">1s</span></span><br><span class="line">        <span class="attr">labels:</span></span><br><span class="line">          <span class="attr">severity:</span> <span class="string">High</span></span><br><span class="line">        <span class="attr">annotations:</span></span><br><span class="line">          <span class="attr">silenceResolved:</span> <span class="string">"true"</span></span><br><span class="line">          <span class="comment">#只要捕捉到异常后，直接企业微信通知相关对象通知一次</span></span><br><span class="line">          <span class="attr">wecomUrl:</span> <span class="string">"https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=111122223333"</span></span><br><span class="line">          <span class="attr">wecomTemplate:</span> <span class="string">"wecom1"</span></span><br><span class="line">          <span class="attr">summary:</span> <span class="string">"<span class="template-variable">&#123;&#123; $labels.biz_desc &#125;&#125;</span>"</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">"<span class="template-variable">&#123;&#123; $labels.biz_value &#125;&#125;</span>"</span></span><br><span class="line">          <span class="attr">count:</span> <span class="string">"<span class="template-variable">&#123;&#123; $value &#125;&#125;</span>"</span></span><br><span class="line">          </span><br><span class="line">      <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">服务商结算失败</span></span><br><span class="line">        <span class="attr">expr:</span> <span class="string">sum</span> <span class="string">by</span> <span class="string">(env,</span> <span class="string">biz_group,</span> <span class="string">biz_key,</span> <span class="string">biz_desc,</span> <span class="string">biz_value)</span> <span class="string">(count_over_time(&#123;biz_group="XPAY-SETTLEMENT",biz_key=~".+",biz_desc=~".+",biz_value=~".+"&#125;[10s])</span> <span class="string">&gt;=1)</span></span><br><span class="line">        <span class="attr">for:</span> <span class="string">1s</span></span><br><span class="line">        <span class="attr">labels:</span></span><br><span class="line">          <span class="attr">severity:</span> <span class="string">High</span></span><br><span class="line">        <span class="attr">annotations:</span></span><br><span class="line">          <span class="attr">silenceResolved:</span> <span class="string">"true"</span></span><br><span class="line">          <span class="comment">#只要捕捉到异常后，直接企业微信通知相关对象通知一次</span></span><br><span class="line">          <span class="attr">wecomUrl:</span> <span class="string">"https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=111122223333"</span></span><br><span class="line">          <span class="attr">wecomTemplate:</span> <span class="string">"wecom1"</span></span><br><span class="line">          <span class="attr">summary:</span> <span class="string">"<span class="template-variable">&#123;&#123; $labels.biz_desc &#125;&#125;</span>"</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">"<span class="template-variable">&#123;&#123; $labels.biz_value &#125;&#125;</span>"</span></span><br><span class="line">          <span class="attr">count:</span> <span class="string">"<span class="template-variable">&#123;&#123; $value &#125;&#125;</span>"</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">审批</span></span><br><span class="line">    <span class="attr">rules:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">审批失败</span></span><br><span class="line">        <span class="attr">expr:</span> <span class="string">sum</span> <span class="string">by</span> <span class="string">(env,</span> <span class="string">biz_group,</span> <span class="string">biz_key,</span> <span class="string">biz_desc,</span> <span class="string">biz_value)</span> <span class="string">(count_over_time(&#123;biz_group="XPAY-APPROVAL",biz_key=~".+",biz_desc=~".+",biz_value=~".+"&#125;[10s])</span> <span class="string">&gt;=1)</span></span><br><span class="line">        <span class="attr">for:</span> <span class="string">1s</span></span><br><span class="line">        <span class="attr">labels:</span></span><br><span class="line">          <span class="attr">severity:</span> <span class="string">High</span></span><br><span class="line">        <span class="attr">annotations:</span></span><br><span class="line">          <span class="attr">silenceResolved:</span> <span class="string">"true"</span></span><br><span class="line">          <span class="comment">#只要捕捉到异常后，直接企业微信通知相关对象通知一次</span></span><br><span class="line">          <span class="attr">wecomUrl:</span> <span class="string">"https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=111122223333"</span></span><br><span class="line">          <span class="attr">wecomTemplate:</span> <span class="string">"wecom1"</span></span><br><span class="line">          <span class="attr">summary:</span> <span class="string">"<span class="template-variable">&#123;&#123; $labels.biz_desc &#125;&#125;</span>"</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">"<span class="template-variable">&#123;&#123; $labels.biz_value &#125;&#125;</span>"</span></span><br><span class="line">          <span class="attr">count:</span> <span class="string">"<span class="template-variable">&#123;&#123; $value &#125;&#125;</span>"</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">业务阻断</span></span><br><span class="line">    <span class="attr">rules:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">业务阻断</span></span><br><span class="line">        <span class="attr">expr:</span> <span class="string">sum</span> <span class="string">by</span> <span class="string">(env,</span> <span class="string">biz_group,</span> <span class="string">biz_key,</span> <span class="string">biz_desc,</span> <span class="string">biz_value)</span> <span class="string">(count_over_time(&#123;biz_group="XPAY-BIZ-BLOCK",biz_key=~".+",biz_desc=~".+",biz_value=~".+"&#125;[10s])</span> <span class="string">&gt;=1)</span></span><br><span class="line">        <span class="attr">for:</span> <span class="string">1s</span></span><br><span class="line">        <span class="attr">labels:</span></span><br><span class="line">          <span class="attr">severity:</span> <span class="string">High</span></span><br><span class="line">        <span class="attr">annotations:</span></span><br><span class="line">          <span class="attr">silenceResolved:</span> <span class="string">"true"</span></span><br><span class="line">          <span class="comment">#只要捕捉到异常后，直接电话+企业微信通知相关对象</span></span><br><span class="line">          <span class="attr">wecomUrl:</span> <span class="string">"https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=111122223333"</span></span><br><span class="line">          <span class="attr">wecomTemplate:</span> <span class="string">"wecom1"</span></span><br><span class="line">          <span class="attr">summary:</span> <span class="string">"<span class="template-variable">&#123;&#123; $labels.biz_desc &#125;&#125;</span>"</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">"<span class="template-variable">&#123;&#123; $labels.biz_value &#125;&#125;</span>"</span></span><br><span class="line">          <span class="attr">count:</span> <span class="string">"<span class="template-variable">&#123;&#123; $value &#125;&#125;</span>"</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">会计</span></span><br><span class="line">    <span class="attr">rules:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">会计异常</span></span><br><span class="line">        <span class="attr">expr:</span> <span class="string">sum</span> <span class="string">by</span> <span class="string">(env,</span> <span class="string">biz_group,</span> <span class="string">biz_key,</span> <span class="string">biz_desc,</span> <span class="string">biz_value)</span> <span class="string">(count_over_time(&#123;biz_group="XPAY-ACCOUNTING",biz_key=~".+",biz_desc=~".+",biz_value=~".+"&#125;[10s])</span> <span class="string">&gt;=1)</span></span><br><span class="line">        <span class="attr">for:</span> <span class="string">1s</span></span><br><span class="line">        <span class="attr">labels:</span></span><br><span class="line">          <span class="attr">severity:</span> <span class="string">High</span></span><br><span class="line">        <span class="attr">annotations:</span></span><br><span class="line">          <span class="attr">silenceResolved:</span> <span class="string">"true"</span></span><br><span class="line">          <span class="comment">#只要捕捉到异常后，直接企业微信通知相关对象通知一次</span></span><br><span class="line">          <span class="attr">wecomUrl:</span> <span class="string">"https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=111122223333"</span></span><br><span class="line">          <span class="attr">wecomTemplate:</span> <span class="string">"wecom1"</span></span><br><span class="line">          <span class="attr">summary:</span> <span class="string">"<span class="template-variable">&#123;&#123; $labels.biz_desc &#125;&#125;</span>"</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">"<span class="template-variable">&#123;&#123; $labels.biz_value &#125;&#125;</span>"</span></span><br><span class="line">          <span class="attr">count:</span> <span class="string">"<span class="template-variable">&#123;&#123; $value &#125;&#125;</span>"</span></span><br></pre></td></tr></table></figure>
<p>config/WebCom-resolved.tmpl</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">&#123;&#123;</span> <span class="string">define</span> <span class="string">"wechat.default.message"</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">&#123;&#123;-</span> <span class="string">if</span> <span class="string">gt</span> <span class="string">(len</span> <span class="string">.Alerts.Firing)</span> <span class="number">0</span> <span class="string">-&#125;&#125;</span></span><br><span class="line"><span class="string">&#123;&#123;-</span> <span class="string">range</span> <span class="string">$index,</span> <span class="string">$alert</span> <span class="string">:=</span> <span class="string">.Alerts</span> <span class="string">-&#125;&#125;</span></span><br><span class="line"><span class="string">&#123;&#123;-</span> <span class="string">if</span> <span class="string">eq</span> <span class="string">$index</span> <span class="number">0</span> <span class="string">-&#125;&#125;</span></span><br><span class="line"><span class="string">**********[&#123;&#123;</span> <span class="string">$alert.Status</span> <span class="string">&#125;&#125;]告警通知**********</span></span><br><span class="line"><span class="string">模块名称:</span> <span class="string">&#123;&#123;</span> <span class="string">$alert.Labels.alertname</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">预警级别:</span> <span class="string">&#123;&#123;</span> <span class="string">$alert.Labels.severity</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">故障业务:</span> <span class="string">&#123;&#123;</span> <span class="string">$alert.Labels.biz_key</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">&#123;&#123;-</span> <span class="string">end</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">=====================</span></span><br><span class="line"><span class="string">预警名称:</span> <span class="string">&#123;&#123;</span> <span class="string">$alert.Annotations.summary</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">预警警详情:</span> <span class="string">&#123;&#123;</span> <span class="string">$alert.Annotations.description</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">错误次数:</span> <span class="string">&#123;&#123;</span> <span class="string">$alert.Annotations.count</span>  <span class="string">&#125;&#125;次</span></span><br><span class="line"><span class="string">故障时间:</span> <span class="string">&#123;&#123;</span> <span class="string">$alert.StartsAt.Local.Format</span> <span class="string">"2006-01-02 15:04:05"</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">&#123;&#123;-</span> <span class="string">end</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">&#123;&#123;-</span> <span class="string">end</span> <span class="string">&#125;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#123;&#123;-</span> <span class="string">if</span> <span class="string">gt</span> <span class="string">(len</span> <span class="string">.Alerts.Resolved)</span> <span class="number">0</span> <span class="string">-&#125;&#125;</span></span><br><span class="line"><span class="string">&#123;&#123;-</span> <span class="string">range</span> <span class="string">$index,</span> <span class="string">$alert</span> <span class="string">:=</span> <span class="string">.Alerts</span> <span class="string">-&#125;&#125;</span></span><br><span class="line"><span class="string">&#123;&#123;-</span> <span class="string">if</span> <span class="string">eq</span> <span class="string">$index</span> <span class="number">0</span> <span class="string">-&#125;&#125;</span></span><br><span class="line"><span class="string">**********恢复通知**********</span></span><br><span class="line"><span class="string">模块名称:</span> <span class="string">&#123;&#123;</span> <span class="string">$alert.Labels.alertname</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">预警级别:</span> <span class="string">&#123;&#123;</span> <span class="string">$alert.Labels.severity</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">故障业务:</span> <span class="string">&#123;&#123;</span> <span class="string">$alert.Labels.biz_key</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">&#123;&#123;-</span> <span class="string">end</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">=====================</span></span><br><span class="line"><span class="string">预警名称:</span> <span class="string">&#123;&#123;</span> <span class="string">$alert.Annotations.summary</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">预警警详情:</span> <span class="string">&#123;&#123;</span> <span class="string">$alert.Annotations.description</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">错误次数:</span> <span class="string">&#123;&#123;</span> <span class="string">$alert.Annotations.count</span>  <span class="string">&#125;&#125;次</span></span><br><span class="line"><span class="string">故障时间:</span> <span class="string">&#123;&#123;</span> <span class="string">$alert.StartsAt.Local.Format</span> <span class="string">"2006-01-02 15:04:05"</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">恢复时间:</span> <span class="string">&#123;&#123;</span> <span class="string">$alert.EndsAt.Local.Format</span> <span class="string">"2006-01-02 15:04:05"</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">&#123;&#123;-</span> <span class="string">end</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">&#123;&#123;-</span> <span class="string">end</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">&#123;&#123;-</span> <span class="string">end</span> <span class="string">&#125;&#125;</span></span><br></pre></td></tr></table></figure>
<p>config/WebCom.tmpl</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">&#123;&#123;</span> <span class="string">define</span> <span class="string">"wechat.default.message"</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">&#123;&#123;-</span> <span class="string">if</span> <span class="string">gt</span> <span class="string">(len</span> <span class="string">.Alerts.Firing)</span> <span class="number">0</span> <span class="string">-&#125;&#125;</span></span><br><span class="line"><span class="string">&#123;&#123;-</span> <span class="string">range</span> <span class="string">$index,</span> <span class="string">$alert</span> <span class="string">:=</span> <span class="string">.Alerts</span> <span class="string">-&#125;&#125;</span></span><br><span class="line"><span class="string">&#123;&#123;-</span> <span class="string">if</span> <span class="string">eq</span> <span class="string">$index</span> <span class="number">0</span> <span class="string">-&#125;&#125;</span></span><br><span class="line"><span class="string">**********[&#123;&#123;</span> <span class="string">$alert.Status</span> <span class="string">&#125;&#125;]告警通知**********</span></span><br><span class="line"><span class="string">模块名称:</span> <span class="string">&#123;&#123;</span> <span class="string">$alert.Labels.alertname</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">预警级别:</span> <span class="string">&#123;&#123;</span> <span class="string">$alert.Labels.severity</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">故障业务:</span> <span class="string">&#123;&#123;</span> <span class="string">$alert.Labels.biz_key</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">&#123;&#123;-</span> <span class="string">end</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">=====================</span></span><br><span class="line"><span class="string">预警名称:</span> <span class="string">&#123;&#123;</span> <span class="string">$alert.Annotations.summary</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">预警警详情:</span> <span class="string">&#123;&#123;</span> <span class="string">$alert.Annotations.description</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">错误次数:</span> <span class="string">&#123;&#123;</span> <span class="string">$alert.Annotations.count</span>  <span class="string">&#125;&#125;次</span></span><br><span class="line"><span class="string">故障时间:</span> <span class="string">&#123;&#123;</span> <span class="string">$alert.StartsAt.Local.Format</span> <span class="string">"2006-01-02 15:04:05"</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">&#123;&#123;-</span> <span class="string">end</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">&#123;&#123;-</span> <span class="string">end</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">&#123;&#123;-</span> <span class="string">end</span> <span class="string">&#125;&#125;</span></span><br></pre></td></tr></table></figure>
<p>config/Email-resolved.tmpl</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">&#123;&#123;</span> <span class="string">define</span> <span class="string">"email.to.html"</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">&#123;&#123;-</span> <span class="string">if</span> <span class="string">gt</span> <span class="string">(len</span> <span class="string">.Alerts.Firing)</span> <span class="number">0</span> <span class="string">-&#125;&#125;</span></span><br><span class="line"><span class="string">&#123;&#123;-</span> <span class="string">range</span> <span class="string">$index,</span> <span class="string">$alert</span> <span class="string">:=</span> <span class="string">.Alerts</span> <span class="string">-&#125;&#125;</span></span><br><span class="line"><span class="string">=========</span> <span class="string">ERROR</span> <span class="string">==========&lt;br&gt;</span></span><br><span class="line"><span class="string">模块名称:</span> <span class="string">&#123;&#123;</span> <span class="string">.Labels.alertname</span> <span class="string">&#125;&#125;&lt;br&gt;</span></span><br><span class="line"><span class="string">预警级别:</span> <span class="string">&#123;&#123;</span> <span class="string">.Labels.severity</span> <span class="string">&#125;&#125;&lt;br&gt;</span></span><br><span class="line"><span class="string">故障业务:</span> <span class="string">&#123;&#123;</span> <span class="string">.Labels.biz_key</span> <span class="string">&#125;&#125;&lt;br&gt;</span></span><br><span class="line"><span class="string">=====================&lt;br/&gt;</span></span><br><span class="line"><span class="string">预警名称:</span> <span class="string">&#123;&#123;</span> <span class="string">.Annotations.summary</span> <span class="string">&#125;&#125;&lt;br&gt;</span></span><br><span class="line"><span class="string">预警详情:</span> <span class="string">&#123;&#123;</span> <span class="string">.Annotations.description</span> <span class="string">&#125;&#125;&lt;br&gt;</span></span><br><span class="line"><span class="string">错误次数:</span> <span class="string">&#123;&#123;</span> <span class="string">.Annotations.count</span> <span class="string">&#125;&#125;次&lt;br&gt;</span></span><br><span class="line"><span class="string">故障时间:</span> <span class="string">&#123;&#123;</span> <span class="string">.StartsAt.Format</span> <span class="string">"2020-01-02 15:04:05"</span><span class="string">&#125;&#125;</span> <span class="string">&lt;br&gt;</span></span><br><span class="line"><span class="string">=========</span> <span class="string">END</span> <span class="string">==========&lt;br&gt;</span></span><br><span class="line"><span class="string">&#123;&#123;-</span> <span class="string">end</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">&#123;&#123;-</span> <span class="string">end</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">&#123;&#123;-</span> <span class="string">if</span> <span class="string">gt</span> <span class="string">(len</span> <span class="string">.Alerts.Resolved)</span> <span class="number">0</span> <span class="string">-&#125;&#125;</span></span><br><span class="line"><span class="string">&#123;&#123;-</span> <span class="string">range</span> <span class="string">$index,</span> <span class="string">$alert</span> <span class="string">:=</span> <span class="string">.Alerts</span> <span class="string">-&#125;&#125;</span></span><br><span class="line"><span class="string">=========</span> <span class="string">INFO</span> <span class="string">==========&lt;br&gt;</span></span><br><span class="line"><span class="string">模块名称:</span> <span class="string">&#123;&#123;</span> <span class="string">.Labels.alertname</span> <span class="string">&#125;&#125;&lt;br&gt;</span></span><br><span class="line"><span class="string">预警级别:</span> <span class="string">&#123;&#123;</span> <span class="string">.Labels.severity</span> <span class="string">&#125;&#125;&lt;br&gt;</span></span><br><span class="line"><span class="string">故障业务:</span> <span class="string">&#123;&#123;</span> <span class="string">.Labels.biz_key</span> <span class="string">&#125;&#125;&lt;br&gt;</span></span><br><span class="line"><span class="string">=====================&lt;br/&gt;</span></span><br><span class="line"><span class="string">预警名称:</span> <span class="string">&#123;&#123;</span> <span class="string">.Annotations.summary</span> <span class="string">&#125;&#125;&lt;br&gt;</span></span><br><span class="line"><span class="string">预警详情:</span> <span class="string">&#123;&#123;</span> <span class="string">.Annotations.description</span> <span class="string">&#125;&#125;&lt;br&gt;</span></span><br><span class="line"><span class="string">错误次数:</span> <span class="string">&#123;&#123;</span> <span class="string">.Annotations.count</span> <span class="string">&#125;&#125;次&lt;br&gt;</span></span><br><span class="line"><span class="string">故障时间:</span> <span class="string">&#123;&#123;</span> <span class="string">.StartsAt.Format</span> <span class="string">"2020-01-02 15:04:05"</span><span class="string">&#125;&#125;</span> <span class="string">&lt;br&gt;</span></span><br><span class="line"><span class="string">恢复时间：&#123;&#123;</span> <span class="string">.EndsAt.Format</span> <span class="string">"2006-01-02 15:04:05"</span> <span class="string">&#125;&#125;&lt;br&gt;</span></span><br><span class="line"><span class="string">=========</span> <span class="string">END</span> <span class="string">==========&lt;br&gt;</span></span><br><span class="line"><span class="string">&#123;&#123;-</span> <span class="string">end</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">&#123;&#123;-</span> <span class="string">end</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">&#123;&#123;-</span> <span class="string">end</span> <span class="string">&#125;&#125;</span></span><br></pre></td></tr></table></figure>
<p>config/Email.tmpl</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">&#123;&#123;</span> <span class="string">define</span> <span class="string">"email.to.html"</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">&#123;&#123;</span> <span class="string">range</span> <span class="string">.Alerts</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">模块名称:</span> <span class="string">&#123;&#123;</span> <span class="string">.Labels.alertname</span> <span class="string">&#125;&#125;&lt;br&gt;</span></span><br><span class="line"><span class="string">预警级别:</span> <span class="string">&#123;&#123;</span> <span class="string">.Labels.severity</span> <span class="string">&#125;&#125;&lt;br&gt;</span></span><br><span class="line"><span class="string">故障业务:</span> <span class="string">&#123;&#123;</span> <span class="string">.Labels.biz_key</span> <span class="string">&#125;&#125;&lt;br&gt;</span></span><br><span class="line"><span class="string">=====================&lt;br/&gt;</span></span><br><span class="line"><span class="string">预警名称:</span> <span class="string">&#123;&#123;</span> <span class="string">.Annotations.summary</span> <span class="string">&#125;&#125;&lt;br&gt;</span></span><br><span class="line"><span class="string">预警详情:</span> <span class="string">&#123;&#123;</span> <span class="string">.Annotations.description</span> <span class="string">&#125;&#125;&lt;br&gt;</span></span><br><span class="line"><span class="string">错误次数:</span> <span class="string">&#123;&#123;</span> <span class="string">.Annotations.count</span> <span class="string">&#125;&#125;次&lt;br&gt;</span></span><br><span class="line"><span class="string">故障时间:</span> <span class="string">&#123;&#123;</span> <span class="string">.StartsAt.Format</span> <span class="string">"2020-01-02 15:04:05"</span><span class="string">&#125;&#125;</span> <span class="string">&lt;br&gt;</span></span><br><span class="line"><span class="string">&#123;&#123;</span> <span class="string">end</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">&#123;&#123;</span> <span class="string">end</span> <span class="string">&#125;&#125;</span></span><br></pre></td></tr></table></figure>
<p>迁移grafana:</p>
<p><a href="https://www.jianshu.com/p/bc37e2fc15e7" target="_blank" rel="noopener">https://www.jianshu.com/p/bc37e2fc15e7</a></p>
<h4 id="Collecting-type"><a href="#Collecting-type" class="headerlink" title="Collecting type"></a>Collecting type</h4><p>There is 2 way to collect logs:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1: fluent bit---&gt;kafka---&gt;promtail---&gt;loki</span><br><span class="line">                      ---&gt;logstash---&gt;ES</span><br><span class="line">2: promtail---&gt;loki</span><br><span class="line">3: fluent bit---&gt;loki</span><br></pre></td></tr></table></figure>
<p>Recommended: fluent bit—&gt;kafka—&gt;promtail—&gt;loki</p>
<h4 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker-compose"></a>docker-compose</h4><p>Not recommend, just for local study.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#depend on Linux: https://grafana.com/docs/loki/latest/installation/docker/</span></span><br><span class="line"><span class="comment">#Install with Docker Compose</span></span><br><span class="line">wget https://raw.githubusercontent.com/grafana/loki/v2.7.0/production/docker-compose.yaml -O docker-compose.yaml</span><br><span class="line">docker-compose -f docker-compose.yaml up</span><br></pre></td></tr></table></figure>
<p>The modified docker-compose.yaml as follows:</p>
<p>docker-compose.yaml:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">loki:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">loki:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">grafana/loki:2.4.1</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/localtime:/etc/localtime:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">.:/mnt/config</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"3100:3100"</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">-config.file=/mnt/config/loki-config.yaml</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">loki</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">promtail:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">grafana/promtail:2.4.1</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/localtime:/etc/localtime:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">.:/mnt/config</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/mnt/d/works/log:/works/log</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">-config.file=/mnt/config/promtail-config.yaml</span> <span class="string">-client.external-labels=hostname=$&#123;HOSTNAME&#125;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">loki</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">grafana:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">grafana/grafana:latest</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/localtime:/etc/localtime:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/works/loki/docker/grafana.ini:/etc/grafana/grafana.ini</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">-config.file=/mnt/config/promtail-config.yaml</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"3000:3000"</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">loki</span></span><br></pre></td></tr></table></figure>
<p>Starting:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Starting:</span></span><br><span class="line">docker-compose -f docker-compose.yaml up</span><br><span class="line"></span><br><span class="line"><span class="comment">#Deleting:</span></span><br><span class="line">docker-compose -f docker-compose.yaml rm -vf</span><br></pre></td></tr></table></figure>
<p>When it’s started, you can check the status using the following url:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://localhost:3100/ready</span><br><span class="line">http://localhost:3100/metrics</span><br></pre></td></tr></table></figure>
<p>Grafana URL is: <a href="http://localhost:3000/" target="_blank" rel="noopener">http://localhost:3000/</a>, default account is admin/admin</p>
<h4 id="Grafana-Configuration"><a href="#Grafana-Configuration" class="headerlink" title="Grafana Configuration"></a>Grafana Configuration</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">env:</span><br><span class="line">  Query: label_values(env)</span><br><span class="line">system:</span><br><span class="line">  Query: label_values(&#123;belongs=<span class="string">"company"</span>, filename=~<span class="string">".*<span class="variable">$&#123;env&#125;</span>.*"</span>&#125;, filename)</span><br><span class="line">  Regex: /works\/<span class="built_in">log</span>\/.+?\/.+?\/(.+?)\/.*/</span><br><span class="line">hostname:</span><br><span class="line">  Query: label_values(&#123;belongs=<span class="string">"company"</span>, filename=~<span class="string">".*<span class="variable">$&#123;env&#125;</span>/<span class="variable">$&#123;system&#125;</span>.*"</span>&#125;, hostname)</span><br><span class="line">filename:</span><br><span class="line">  Query: label_values(&#123;belongs=<span class="string">"company"</span>, filename=~<span class="string">".*<span class="variable">$&#123;env&#125;</span>/<span class="variable">$&#123;system&#125;</span>.*"</span>, filename!~<span class="string">".*(?:error|tmlog).*"</span>&#125;, filename)</span><br><span class="line">  Regex: /.*\/(.+\.<span class="built_in">log</span>)/</span><br><span class="line">search:</span><br><span class="line">  Type: Text box</span><br><span class="line">Log browser:</span><br><span class="line">  &#123;env=<span class="string">"<span class="variable">$&#123;env&#125;</span>"</span>, app_name=<span class="string">"<span class="variable">$&#123;system&#125;</span>"</span>, hostname=~<span class="string">".*<span class="variable">$&#123;hostname&#125;</span>.*"</span>, filename=~<span class="string">".*<span class="variable">$&#123;filename&#125;</span>.*"</span>&#125;|~<span class="string">"(?i)<span class="variable">$search</span>"</span></span><br></pre></td></tr></table></figure>
<h2 id="promtail"><a href="#promtail" class="headerlink" title="promtail"></a>promtail</h2><p>Promtail is an agent which ships the contents of local logs to a private Grafana Loki instance or Grafana Cloud. It is usually deployed to every machine that has applications needed to be monitored.</p>
<p>More details: <a href="https://grafana.com/docs/loki/latest/clients/promtail/" target="_blank" rel="noopener">https://grafana.com/docs/loki/latest/clients/promtail/</a></p>
<h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><h3 id="Promtail-Config"><a href="#Promtail-Config" class="headerlink" title="Promtail Config"></a>Promtail Config</h3><p>All of the rule of collecting logs will be configured in the “promtail-config.yaml”</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">scrape_configs:</span><br><span class="line">- job_name: saas-tenant-management-system</span><br><span class="line">  pipeline_stages:</span><br><span class="line">  - match:</span><br><span class="line">      selector: &apos;&#123;app_name=&quot;saas-tenant-management-system&quot;&#125;&apos;</span><br><span class="line">      stages:</span><br><span class="line">      #https://grafana.com/docs/loki/latest/clients/promtail/stages/multiline/</span><br><span class="line">      #Working on collecting the multiline, like exception logs</span><br><span class="line">      - multiline:</span><br><span class="line">          firstline: &apos;^\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125; \d&#123;1,2&#125;:\d&#123;2&#125;:\d&#123;2&#125;&apos;</span><br><span class="line">          max_lines: 500</span><br><span class="line">      #https://grafana.com/docs/loki/latest/clients/promtail/stages/regex/</span><br><span class="line">      - regex:</span><br><span class="line">          expression: &quot;^(?P&lt;timestamp&gt;\\d&#123;4&#125;\\-\\d&#123;2&#125;\\-\\d&#123;2&#125; \\d&#123;1,2&#125;\\:\\d&#123;2&#125;\\:\\d&#123;2&#125;)\\.\\d+ .*$&quot;</span><br><span class="line">      #https://grafana.com/docs/loki/latest/fundamentals/labels/</span><br><span class="line">      #Working for the variables of searching.</span><br><span class="line">      #- labels:</span><br><span class="line">      #    time:</span><br><span class="line">      - timestamp:</span><br><span class="line">          format: RFC3339Nano</span><br><span class="line">          source: timestamp</span><br><span class="line">  static_configs:</span><br><span class="line">  - targets:</span><br><span class="line">      - localhost</span><br><span class="line">    labels:</span><br><span class="line">      app_name: saas-tenant-management-system</span><br><span class="line">      belongs: alphatimes</span><br><span class="line">      __path__: /works/log/alphatimes/**/saas-tenant-management-system/**/*.log</span><br><span class="line">......</span><br></pre></td></tr></table></figure>
<p>Notice:</p>
<p>If multline fields are configured, it won’t appear in the lables of seaching. it conflict witch regex stage. For example:</p>
<p>“loglevel” field configured in regex stage, if you the “loglevel” contain multiline, you wan to search by: “{loglevel=”ERROR”}”, it won’t display the multiline logs, just single log, althought “loglevel” contain multiline logs.</p>
<h3 id="Grafana-Config"><a href="#Grafana-Config" class="headerlink" title="Grafana Config"></a>Grafana Config</h3><p>Grafana 6.0 and more recent versions have built-in support for Grafana Loki. Use Grafana 6.3 or a more recent version to take advantage of LogQL functionality.</p>
<p>Log into your Grafana instance. If this is your first time running Grafana, the username and password are both defaulted to admin.</p>
<p>In Grafana, go to Configuration &gt; Data Sources via the cog icon on the left sidebar.<br>Click the big + Add data source button.<br>Choose Loki from the list.</p>
<p>The http URL field should be the address of your Loki server. For example, when running locally or with Docker using port mapping, the address is likely <a href="http://localhost:3100" target="_blank" rel="noopener">http://localhost:3100</a>. When running with docker-compose or Kubernetes, the address is likely <a href="http://loki:3100" target="_blank" rel="noopener">http://loki:3100</a>.</p>
<p>To see the logs, click Explore on the sidebar, select the Loki datasource in the top-left dropdown, and then choose a log stream using the Log labels button.</p>
<h4 id="Variables"><a href="#Variables" class="headerlink" title="Variables"></a>Variables</h4><p>Creating a new dashboard named “Loki”(just first time), entering “dashboards settings”(gear icon):</p>
<p><img src="/images/Loki-Log-System/01.png" alt="01.png"></p>
<p>Env:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Query: label_values(env)</span><br></pre></td></tr></table></figure></p>
<p><img src="/images/Loki-Log-System/02.png" alt="02.png"></p>
<p>System:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Query: label_values(&#123;belongs=&quot;company&quot;, filename=~&quot;.*$&#123;env&#125;.*&quot;&#125;, filename)</span><br><span class="line">Regex: /works\/log\/.+?\/.+?\/(.+?)\/.*/</span><br></pre></td></tr></table></figure></p>
<p><img src="/images/Loki-Log-System/03.png" alt="03.png"></p>
<p>Hostname:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Query: label_values(&#123;belongs=&quot;company&quot;, filename=~&quot;.*$&#123;env&#125;/$&#123;system&#125;.*&quot;&#125;, hostname)</span><br></pre></td></tr></table></figure></p>
<p><img src="/images/Loki-Log-System/04.png" alt="04.png"></p>
<p>Filename:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Query: label_values(&#123;belongs=&quot;company&quot;, filename=~&quot;.*$&#123;env&#125;/$&#123;system&#125;.*&quot;, filename!~&quot;.*(?:error|tmlog).*&quot;&#125;, filename)</span><br><span class="line">Regex: /.*\/(.+\.log)/</span><br></pre></td></tr></table></figure></p>
<p><img src="/images/Loki-Log-System/10.png" alt="10.png"></p>
<p>Search: </p>
<p><img src="/images/Loki-Log-System/05.png" alt="05.png"></p>
<h4 id="Log-Panel"><a href="#Log-Panel" class="headerlink" title="Log Panel"></a>Log Panel</h4><p><img src="/images/Loki-Log-System/06.png" alt="06.png"></p>
<p><img src="/images/Loki-Log-System/07.png" alt="07.png"></p>
<p>Log browser:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;env=&quot;$&#123;env&#125;&quot;, app_name=&quot;$&#123;system&#125;&quot;, hostname=~&quot;.*$&#123;hostname&#125;.*&quot;, filename=~&quot;.*$&#123;filename&#125;.*&quot;&#125;|~&quot;(?i)$search&quot;</span><br></pre></td></tr></table></figure></p>
<p><img src="/images/Loki-Log-System/08.png" alt="08.png"></p>
<p><img src="/images/Loki-Log-System/09.png" alt="09.png"></p>
<h2 id="Kubernetes"><a href="#Kubernetes" class="headerlink" title="Kubernetes"></a>Kubernetes</h2><p>Using helm to install loki on the k8s environment easyly, but recommend it by customed congratulation:</p>
<p>Notice: It’s weird the way of Kubernetes couldn’t collection the logs completely, finally I used the docker to deploy.</p>
<h3 id="Heml"><a href="#Heml" class="headerlink" title="Heml"></a>Heml</h3><p>Installing heml:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Linux:</span></span><br><span class="line"><span class="comment">#https://helm.sh/docs/intro/install/#from-script</span></span><br><span class="line">curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3</span><br><span class="line">chmod 700 get_helm.sh</span><br><span class="line">./get_helm.sh</span><br><span class="line"></span><br><span class="line"><span class="comment">#Windows:</span></span><br><span class="line"><span class="comment">#Members of the Helm community have contributed a Helm package build to Chocolatey. This package is generally up to date. run as administrator:</span></span><br><span class="line">choco install kubernetes-helm</span><br></pre></td></tr></table></figure>
<p>Pulling repositories:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://grafana.com/docs/loki/latest/installation/helm/</span></span><br><span class="line">helm repo add grafana https://grafana.github.io/helm-charts</span><br><span class="line">helm repo update</span><br><span class="line"><span class="built_in">cd</span> /works/loki</span><br><span class="line"></span><br><span class="line">kubectl create ns loki</span><br><span class="line"></span><br><span class="line"><span class="comment">#helm pull grafana/loki-stack</span></span><br><span class="line">helm pull grafana/grafana</span><br><span class="line">helm pull grafana/loki</span><br><span class="line"></span><br><span class="line">helm pull grafana/promtail</span><br><span class="line">tar zxvf promtail-3.11.0.tgz</span><br></pre></td></tr></table></figure>
<p>Configure:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Create PersistentVolume</span></span><br><span class="line">cat PersistentVolume.yaml </span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolume</span><br><span class="line">metadata:</span><br><span class="line">  name: loki-pv-volume</span><br><span class="line">  labels:</span><br><span class="line">    <span class="built_in">type</span>: <span class="built_in">local</span></span><br><span class="line">spec:</span><br><span class="line">  storageClassName: loki</span><br><span class="line">  capacity:</span><br><span class="line">    storage: 30Gi</span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteOnce</span><br><span class="line">  hostPath:</span><br><span class="line">    path: <span class="string">"/data/data/loki-data"</span></span><br><span class="line"></span><br><span class="line">kubectl create -f PersistentVolume.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment">#PersistentVolumeClaim.yaml</span></span><br><span class="line">cat PersistentVolumeClaim.yaml </span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolumeClaim</span><br><span class="line">metadata:</span><br><span class="line">  name: loki-pv-claim</span><br><span class="line">  namespace: loki</span><br><span class="line">spec:</span><br><span class="line">  storageClassName: loki</span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteOnce</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      storage: 30Gi</span><br><span class="line"></span><br><span class="line">kubectl create -f PersistentVolumeClaim.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment">#Notice: Since the persistence volume based on local system, make sure hostPath.path is shared with multiple machines that loki may be deployed on. or you can use nfs model of persistence volume.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Making sure k8s has privilege to access hostPath.path. refer to the following configuration:</span></span><br><span class="line">securityContext.fsGroup: 10001</span><br><span class="line">  runAsGroup: 10001</span><br><span class="line">  runAsNonRoot: <span class="literal">true</span></span><br><span class="line">  runAsUser: 10001</span><br><span class="line"></span><br><span class="line"><span class="comment">#chown hostPath.path:</span></span><br><span class="line">sudo chown -R 10001:10001 /data/data/loki-data/</span><br><span class="line"></span><br><span class="line"><span class="comment">#configure loki</span></span><br><span class="line">vim loki/values.yaml</span><br><span class="line"><span class="comment">#Enable persistence</span></span><br><span class="line">persistence:</span><br><span class="line">  enabled: <span class="literal">true</span></span><br><span class="line">  accessModes:</span><br><span class="line">  - ReadWriteOnce</span><br><span class="line">  size: 30Gi</span><br><span class="line">  annotations: &#123;&#125;</span><br><span class="line">  <span class="comment"># selector:</span></span><br><span class="line">  <span class="comment">#   matchLabels:</span></span><br><span class="line">  <span class="comment">#     app.kubernetes.io/name: loki</span></span><br><span class="line">  <span class="comment"># subPath: ""</span></span><br><span class="line">  existingClaim: loki-pv-claim</span><br><span class="line"></span><br><span class="line"><span class="comment">#configure promtail</span></span><br><span class="line">vim promtail/values.yaml</span><br><span class="line"></span><br><span class="line">extraArgs:</span><br><span class="line">  - -client.external-labels=hostname=$(HOSTNAME)</span><br><span class="line"></span><br><span class="line">config:</span><br><span class="line">  ...  </span><br><span class="line">  lokiAddress: http://loki:3100/loki/api/v1/push</span><br><span class="line"></span><br><span class="line">extraVolumes:</span><br><span class="line">  - name: journal</span><br><span class="line">    hostPath:</span><br><span class="line">      path: /var/<span class="built_in">log</span>/journal</span><br><span class="line">  - name: logs</span><br><span class="line">    hostPath:</span><br><span class="line">      path: /works/<span class="built_in">log</span></span><br><span class="line"></span><br><span class="line">extraVolumeMounts:</span><br><span class="line">  - name: journal</span><br><span class="line">    mountPath: /var/<span class="built_in">log</span>/journal</span><br><span class="line">    readOnly: <span class="literal">true</span></span><br><span class="line">  - name: logs</span><br><span class="line">    mountPath: /works/<span class="built_in">log</span></span><br><span class="line">    readOnly: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    extraScrapeConfigs: |</span><br><span class="line">      - job_name: company-job </span><br><span class="line">        pipeline_stages:</span><br><span class="line">        - match:</span><br><span class="line">            selector: <span class="string">'&#123;belongs="company", filename=~".*(?:error|tmlog).*"&#125;'</span></span><br><span class="line">            action: drop</span><br><span class="line">            drop_counter_reason: promtail_noisy_error</span><br><span class="line">        - match:</span><br><span class="line">            selector: <span class="string">'&#123;belongs="company"&#125;'</span></span><br><span class="line">            stages:</span><br><span class="line">            - regex:</span><br><span class="line">                <span class="built_in">source</span>: filename</span><br><span class="line">                expression: <span class="string">"^/works/log/(?P&lt;org&gt;.+?)/(?P&lt;env&gt;.+?)/(?P&lt;app_name&gt;.+?)/.+\\.log$"</span></span><br><span class="line">            - labels:</span><br><span class="line">                org:</span><br><span class="line">                env:</span><br><span class="line">                app_name:</span><br><span class="line">        - match:</span><br><span class="line">            selector: <span class="string">'&#123;org=~".+"&#125;'</span></span><br><span class="line">            stages:</span><br><span class="line">            - multiline:</span><br><span class="line">                firstline: <span class="string">'^\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125; \d&#123;1,2&#125;:\d&#123;2&#125;:\d&#123;2&#125;'</span></span><br><span class="line">                max_lines: 500</span><br><span class="line">            - regex:</span><br><span class="line">                expression: <span class="string">"^(?P&lt;time&gt;\\d&#123;4&#125;\\-\\d&#123;2&#125;\\-\\d&#123;2&#125; \\d&#123;1,2&#125;\\:\\d&#123;2&#125;\\:\\d&#123;2&#125;).*"</span></span><br><span class="line">            - timestamp:</span><br><span class="line">                <span class="built_in">source</span>: time</span><br><span class="line">                format: <span class="string">'2006-01-02 15:04:05'</span></span><br><span class="line">                location: Asia/Shanghai</span><br><span class="line">        static_configs:</span><br><span class="line">        - targets:</span><br><span class="line">            - localhost</span><br><span class="line">          labels:</span><br><span class="line">            belongs: company</span><br><span class="line">            __path__: /works/<span class="built_in">log</span>/**/*.<span class="built_in">log</span></span><br></pre></td></tr></table></figure>
<h3 id="Installation-1"><a href="#Installation-1" class="headerlink" title="Installation"></a>Installation</h3><p>Installing the revlant components:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /works/loki/</span><br><span class="line">helm upgrade --install loki-grafana grafana/ -n loki</span><br><span class="line">helm upgrade --install loki loki/ -n loki</span><br><span class="line"><span class="comment">#helm upgrade --install promtail promtail/ --set "loki.serviceName=loki" -n loki</span></span><br><span class="line"><span class="comment">#If deploying a individual machine, don't need "--set" parameter</span></span><br><span class="line"><span class="comment">#kubectl get nodes --show-labels</span></span><br><span class="line"><span class="comment">#helm upgrade --install promtail promtail/ -n loki --set nodeSelector."kubernetes\.io/hostname"=192.168.80.201</span></span><br><span class="line"><span class="comment">#helm upgrade --install promtail promtail/ -n loki --set nodeSelector."kubernetes\.io/hostname"=k8s-master-cluster</span></span><br><span class="line">helm upgrade --install promtail promtail/ -n loki</span><br><span class="line"></span><br><span class="line"><span class="comment">#Waiting all of the pods are ready:</span></span><br><span class="line">kubectl get pods -n loki -w</span><br><span class="line"></span><br><span class="line"><span class="comment">#grafana</span></span><br><span class="line"><span class="comment">#Getting the grafana password using this:</span></span><br><span class="line">kubectl get secret --namespace loki loki-grafana -o jsonpath=<span class="string">"&#123;.data.admin-password&#125;"</span> | base64 --decode ; <span class="built_in">echo</span></span><br><span class="line"><span class="comment">#Exposed 3000 port outsize so that you can access it on your browser:</span></span><br><span class="line">kubectl port-forward --namespace loki service/loki-grafana 3000:80 --address 0.0.0.0</span><br><span class="line">URL: http://192.168.80.98:3000/</span><br><span class="line">Datasource: http://loki:3100/</span><br><span class="line"></span><br><span class="line"><span class="comment">#Configure grafana</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Loki Kubernetes Logs</span></span><br><span class="line">k8s logs dashboard:</span><br><span class="line">https://grafana.com/grafana/dashboards/15141</span><br><span class="line"></span><br><span class="line"><span class="comment">#company Logs</span></span><br><span class="line">env:</span><br><span class="line">  Query: label_values(env)</span><br><span class="line">system:</span><br><span class="line">  Query: label_values(&#123;belongs=<span class="string">"company"</span>, filename=~<span class="string">".*<span class="variable">$&#123;env&#125;</span>.*"</span>&#125;, filename)</span><br><span class="line">  Regex: /works\/<span class="built_in">log</span>\/.+?\/.+?\/(.+?)\/.*/</span><br><span class="line">hostname:</span><br><span class="line">  Query: label_values(&#123;belongs=<span class="string">"company"</span>, filename=~<span class="string">".*<span class="variable">$&#123;env&#125;</span>/<span class="variable">$&#123;system&#125;</span>.*"</span>&#125;, hostname)</span><br><span class="line">filename:</span><br><span class="line">  Query: label_values(&#123;belongs=<span class="string">"company"</span>, filename=~<span class="string">".*<span class="variable">$&#123;env&#125;</span>/<span class="variable">$&#123;system&#125;</span>.*"</span>, filename!~<span class="string">".*(?:error|tmlog).*"</span>&#125;, filename)</span><br><span class="line">  Regex: /.*\/(.+\.<span class="built_in">log</span>)/</span><br><span class="line">search:</span><br><span class="line">  Type: Text box</span><br><span class="line">Log browser:</span><br><span class="line">  &#123;env=<span class="string">"<span class="variable">$&#123;env&#125;</span>"</span>, app_name=<span class="string">"<span class="variable">$&#123;system&#125;</span>"</span>, hostname=~<span class="string">".*<span class="variable">$&#123;hostname&#125;</span>.*"</span>, filename=~<span class="string">".*<span class="variable">$&#123;filename&#125;</span>.*"</span>&#125;|~<span class="string">"(?i)<span class="variable">$search</span>"</span></span><br></pre></td></tr></table></figure>
<h3 id="Uninstallation"><a href="#Uninstallation" class="headerlink" title="Uninstallation"></a>Uninstallation</h3><p>Uninstalling the revlant components:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">helm uninstall loki  -n loki</span><br><span class="line"><span class="comment">#kubectl -n loki delete pvc storage-loki-0</span></span><br><span class="line"><span class="comment">#rm -fr /data/data/loki-data/loki/</span></span><br><span class="line">helm uninstall promtail  -n loki</span><br><span class="line">helm uninstall loki-grafana  -n loki</span><br><span class="line"><span class="comment">#kubectl -n loki get pvc</span></span><br><span class="line">kubectl -n loki delete pvc loki-pv-claim</span><br><span class="line"><span class="comment">#kubectl -n loki get pv</span></span><br><span class="line">kubectl delete pv loki-pv-volume</span><br></pre></td></tr></table></figure>
<h2 id="Optimize"><a href="#Optimize" class="headerlink" title="Optimize"></a>Optimize</h2><p><a href="https://grafana.com/blog/2021/02/16/the-essential-config-settings-you-should-use-so-you-wont-drop-logs-in-loki/" target="_blank" rel="noopener">https://grafana.com/blog/2021/02/16/the-essential-config-settings-you-should-use-so-you-wont-drop-logs-in-loki/</a></p>
<h2 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h2><p>error: code = ResourceExhausted desc = trying to send message larger than max</p>
<ul>
<li><a href="https://blog.csdn.net/qq_41980563/article/details/122186703" target="_blank" rel="noopener">https://blog.csdn.net/qq_41980563/article/details/122186703</a></li>
</ul>
<p>429 Too Many Requests Ingestion rate limit exceeded</p>
<ul>
<li><a href="https://www.codeleading.com/article/71834625328/" target="_blank" rel="noopener">https://www.codeleading.com/article/71834625328/</a></li>
</ul>
<p>Maximum active stream limit exceeded</p>
<ul>
<li><a href="https://izsk.me/2021/03/18/Loki-Prombles/" target="_blank" rel="noopener">https://izsk.me/2021/03/18/Loki-Prombles/</a></li>
<li><a href="https://www.bboy.app/2020/07/08/%E4%BD%BF%E7%94%A8loki%E8%BF%9B%E8%A1%8C%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86/" target="_blank" rel="noopener">https://www.bboy.app/2020/07/08/%E4%BD%BF%E7%94%A8loki%E8%BF%9B%E8%A1%8C%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86/</a></li>
</ul>
<p>Loki: Bad Request. 400. invalid query, through</p>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/457985915" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/457985915</a></li>
<li><a href="https://blog.csdn.net/u010948569/article/details/108387324" target="_blank" rel="noopener">https://blog.csdn.net/u010948569/article/details/108387324</a></li>
</ul>
<p>insane quantity of files in chunks directory</p>
<ul>
<li><a href="https://github.com/grafana/loki/issues/1258" target="_blank" rel="noopener">https://github.com/grafana/loki/issues/1258</a></li>
</ul>
<p>Searching data slowly</p>
<p>This reason may occur by some inappropriate configured labels, using the following command to diagnose:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">logcli series --analyze-labels &apos;&#123;app_name=&quot;hkcash-server&quot;&#125;&apos;</span><br></pre></td></tr></table></figure>
<p>You can  this article to see how to avoid this issue:</p>
<p><a href="https://grafana.com/docs/loki/latest/best-practices/" target="_blank" rel="noopener">https://grafana.com/docs/loki/latest/best-practices/</a></p>
<h2 id="Alarmmanager"><a href="#Alarmmanager" class="headerlink" title="Alarmmanager"></a>Alarmmanager</h2><p><a href="https://www.bilibili.com/read/cv17329220" target="_blank" rel="noopener">https://www.bilibili.com/read/cv17329220</a></p>
<h2 id="Configuration-backup"><a href="#Configuration-backup" class="headerlink" title="Configuration backup"></a>Configuration backup</h2><p>Loki Config: <a href="/files/Loki-Log-System/Loki.zip">loki.zip</a></p>
<p>AlertManager Config: <a href="/files/Loki-Log-System/AlertManager.zip">AlertManager.zip</a></p>
<p>Grafana Config: <a href="/files/Loki-Log-System/grafana.tgz">grafana.tgz</a></p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul>
<li><a href="https://grafana.com/docs/loki/latest/getting-started/get-logs-into-loki/" target="_blank" rel="noopener">https://grafana.com/docs/loki/latest/getting-started/get-logs-into-loki/</a></li>
<li><a href="https://grafana.com/docs/loki/latest/fundamentals/labels/" target="_blank" rel="noopener">https://grafana.com/docs/loki/latest/fundamentals/labels/</a></li>
<li><a href="https://grafana.com/docs/loki/latest/logql/log_queries/" target="_blank" rel="noopener">https://grafana.com/docs/loki/latest/logql/log_queries/</a></li>
<li><a href="https://grafana.com/docs/loki/latest/clients/promtail/stages/multiline/" target="_blank" rel="noopener">https://grafana.com/docs/loki/latest/clients/promtail/stages/multiline/</a></li>
<li><a href="https://grafana.com/docs/loki/latest/clients/promtail/stages/regex/" target="_blank" rel="noopener">https://grafana.com/docs/loki/latest/clients/promtail/stages/regex/</a></li>
<li><a href="https://github.com/google/re2/wiki/Syntax" target="_blank" rel="noopener">https://github.com/google/re2/wiki/Syntax</a></li>
<li><a href="https://grafana.com/docs/grafana/latest/variables/" target="_blank" rel="noopener">https://grafana.com/docs/grafana/latest/variables/</a></li>
<li><a href="https://grafana.com/docs/grafana/latest/datasources/loki/" target="_blank" rel="noopener">https://grafana.com/docs/grafana/latest/datasources/loki/</a></li>
<li><a href="https://www.jianshu.com/p/474a5034a501" target="_blank" rel="noopener">https://www.jianshu.com/p/474a5034a501</a></li>
<li><a href="https://www.jianshu.com/p/259a1d656745" target="_blank" rel="noopener">https://www.jianshu.com/p/259a1d656745</a></li>
<li><a href="https://www.jianshu.com/p/672173b609f7" target="_blank" rel="noopener">https://www.jianshu.com/p/672173b609f7</a></li>
<li><a href="https://www.cnblogs.com/ssgeek/p/11584870.html" target="_blank" rel="noopener">https://www.cnblogs.com/ssgeek/p/11584870.html</a></li>
<li><a href="https://grafana.com/docs/loki/latest/installation/helm/" target="_blank" rel="noopener">https://grafana.com/docs/loki/latest/installation/helm/</a></li>
<li><a href="https://blog.csdn.net/weixin_49366475/article/details/114384817" target="_blank" rel="noopener">https://blog.csdn.net/weixin_49366475/article/details/114384817</a></li>
<li><a href="https://blog.luxifan.com/blog/post/lucifer/1.%E5%88%9D%E8%AF%86Loki-%E4%B8%80" target="_blank" rel="noopener">https://blog.luxifan.com/blog/post/lucifer/1.%E5%88%9D%E8%AF%86Loki-%E4%B8%80</a></li>
<li><a href="https://blog.csdn.net/bluuusea/article/details/104619235" target="_blank" rel="noopener">https://blog.csdn.net/bluuusea/article/details/104619235</a></li>
<li><a href="https://blog.51cto.com/u_14205795/4561323" target="_blank" rel="noopener">https://blog.51cto.com/u_14205795/4561323</a></li>
<li><a href="https://www.cnblogs.com/punchlinux/p/17035742.html" target="_blank" rel="noopener">https://www.cnblogs.com/punchlinux/p/17035742.html</a></li>
<li><a href="https://kebingzao.com/2022/11/29/prometheus-4-alertmanager/" target="_blank" rel="noopener">https://kebingzao.com/2022/11/29/prometheus-4-alertmanager/</a></li>
<li><a href="https://blog.csdn.net/wang7531838/article/details/107809870" target="_blank" rel="noopener">https://blog.csdn.net/wang7531838/article/details/107809870</a></li>
<li><a href="https://blog.51cto.com/u_12965094/2690336" target="_blank" rel="noopener">https://blog.51cto.com/u_12965094/2690336</a></li>
<li><a href="https://blog.csdn.net/qq_42883074/article/details/115544031" target="_blank" rel="noopener">https://blog.csdn.net/qq_42883074/article/details/115544031</a></li>
<li><a href="https://blog.csdn.net/bluuusea/article/details/104619235" target="_blank" rel="noopener">https://blog.csdn.net/bluuusea/article/details/104619235</a></li>
<li><a href="http://www.mydlq.club/article/126/" target="_blank" rel="noopener">http://www.mydlq.club/article/126/</a></li>
<li><a href="https://www.orchome.com/10106" target="_blank" rel="noopener">https://www.orchome.com/10106</a></li>
<li><a href="https://blog.51cto.com/u_14320361/2461666" target="_blank" rel="noopener">https://blog.51cto.com/u_14320361/2461666</a></li>
<li><a href="https://chenzhonzhou.github.io/2020/07/17/alertmanager-de-gao-jing-mo-ban/" target="_blank" rel="noopener">https://chenzhonzhou.github.io/2020/07/17/alertmanager-de-gao-jing-mo-ban/</a></li>
<li><a href="https://blog.csdn.net/weixin_44911287/article/details/124149964" target="_blank" rel="noopener">https://blog.csdn.net/weixin_44911287/article/details/124149964</a></li>
<li><a href="https://blog.csdn.net/easylife206/article/details/127581630" target="_blank" rel="noopener">https://blog.csdn.net/easylife206/article/details/127581630</a></li>
</ul>
<p>kubectl create ns zero-loki<br>kubectl -n zero-loki create configmap –from-file configmap/loki-config-cluster.yaml loki-config<br>kubectl -n zero-loki create configmap –from-file configmap/rules.yaml loki-rules</p>
<p>kubectl -n zero-loki describe configmap loki-config<br>kubectl -n zero-loki describe configmap loki-rules</p>
<p>kubectl -n zero-loki apply -f zero-loki.yml</p>
<p>kubectl -n zero-loki get po,svc -owide</p>
<p>#kubectl -n zero-loki logs -f loki-cluster-57777d6d6-vkbc5</p>
<p>#kubectl -n zero-loki describe po loki-cluster-57777d6d6-8tfgd</p>
<blockquote>
<p>kubectl.exe -n zero-loki exec -it kafka-0 bash<br>kafka-topics.sh –create –zookeeper “zookeeper-headless:2181” –replication-factor 2 –partitions 3 –topic uat<br>kafka-console-producer.sh –broker-list “192.168.80.99:9192,192.168.80.99:9292,192.168.80.99:9392” –topic uat<br>kafka-console-consumer.sh –bootstrap-server “192.168.80.99:9192,192.168.80.99:9292,192.168.80.99:9392” –topic uat –from-beginning<br>kafka-topics.sh –list –zookeeper “zookeeper-headless:2181”</p>
</blockquote>
<p>kafka-run-class.sh kafka.tools.GetOffsetShell –broker-list “192.168.80.99:9192,192.168.80.99:9292,192.168.80.99:9392” –topic uat</p>
<p>kubectl -n xpay-logs run -ti –rm centos-test –image=centos:7 –overrides=’{“spec”: { “nodeSelector”: {“xpay-env”: “logs”}}}’</p>
]]></content>
      <categories>
        <category>Log</category>
      </categories>
      <tags>
        <tag>Log</tag>
      </tags>
  </entry>
  <entry>
    <title>hadoop Ecosystem</title>
    <url>/2023/08/hadoop-Ecosystem.html</url>
    <content><![CDATA[<p>Manage tool: Ambari+Bigtop<br>HDFS/YARN/MapReduce2/Tez/Hive/HBase/ZooKeeper/Spark/Zeppelin/Flink</p>
<p>Flink-cdc/datax/seatunnel/dolphinscheduler</p>
<a id="more"></a>
<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>Recommend: <a href="https://github.com/heibaiying/BigData-Notes" target="_blank" rel="noopener">heibaiying/BigData-Notes: 大数据入门指南 :star: (github.com)</a></p>
<h2 id="Bigtop"><a href="#Bigtop" class="headerlink" title="Bigtop"></a>Bigtop</h2><p>Bigtop is an Apache Foundation project for Infrastructure Engineers and Data Scientists looking for comprehensive packaging, testing, and configuration of the leading open source big data components.** Bigtop supports a wide range of components/projects, including, but not limited to, Hadoop, HBase and Spark.</p>
<p>There are 2 ways to install bigtop:</p>
<h3 id="build-package-from-source"><a href="#build-package-from-source" class="headerlink" title="build package from source"></a>build package from source</h3><p>***Not recommend, it’s very complicate. especially in China mainland.</p>
<p>Prerequisite:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Jdk</span></span><br><span class="line">nvm install v12.22.1</span><br><span class="line"></span><br><span class="line">cat /etc/profile.d/java.sh </span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/Developer/jdk1.8.0_371</span><br><span class="line"><span class="built_in">export</span> M2_HOME=/Developer/apache-maven-3.6.3</span><br><span class="line"><span class="built_in">export</span> _JAVA_OPTIONS=<span class="string">"-Xms4g -Xmx4g -Djava.awt.headless=true"</span></span><br><span class="line"><span class="built_in">export</span> PATH=/root/.nvm/versions/node/v12.22.1/bin:<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$M2_HOME</span>/bin:<span class="variable">$PATH</span></span><br><span class="line"></span><br><span class="line">. /etc/profile</span><br></pre></td></tr></table></figure>
<p>Building:</p>
<p><strong><em>Notice: Need a non-root to compile.</em></strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo su - hadoop</span><br><span class="line">wget https://dlcdn.apache.org/bigtop/bigtop-3.2.0/bigtop-3.2.0-project.tar.gz (use the suggested mirror from above)</span><br><span class="line">tar xfvz bigtop-3.2.0-project.tar.gz</span><br><span class="line">cd bigtop-3.2.0</span><br><span class="line">#only for rpm packages</span><br><span class="line">./gradlew bigtop-groovy-rpm bigtop-jsvc-rpm bigtop-select-rpm bigtop-utils-rpm \</span><br><span class="line">flink-rpm hadoop-rpm hbase-rpm hive-rpm kafka-rpm solr-rpm spark-rpm \</span><br><span class="line">tez-rpm zeppelin-rpm zookeeper-rpm -Dbuildwithdeps=true -PparentDir=/usr/bigtop -PpkgSuffix | tee -a log.txt</span><br><span class="line">#it&apos;ll clean all of packages located inbuild/, be careful!</span><br><span class="line">#./gradlew allclean</span><br></pre></td></tr></table></figure>
<p>Troubleshooting:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#lacking some of jars</span><br><span class="line">wget https://www.zhangjc.com/images/20210817/pentaho-aggdesigner-algorithm-5.1.5-jhyde.jar</span><br><span class="line">mvn install:install-file -Dfile=./pentaho-aggdesigner-algorithm-5.1.5-jhyde.jar -DgroupId=org.pentaho -DartifactId=pentaho-aggdesigner-algorithm -Dversion=5.1.5-jhyde -Dpackaging=jar</span><br><span class="line"></span><br><span class="line">wget https://packages.confluent.io/maven/io/confluent/kafka-schema-registry-client/6.2.2/kafka-schema-registry-client-6.2.2.jar</span><br><span class="line">mvn install:install-file -Dfile=./kafka-schema-registry-client-6.2.2.jar -DgroupId=io.confluent -DartifactId=kafka-schema-registry-client -Dversion=6.2.2 -Dpackaging=jar</span><br><span class="line">mvn install:install-file -Dfile=./kafka-clients-2.8.1.jar -DgroupId=org.apache.kafka -DartifactId=kafka-clients -Dversion=2.8.1 -Dpackaging=jar</span><br><span class="line"></span><br><span class="line">wget https://packages.confluent.io/maven/io/confluent/kafka-avro-serializer/6.2.2/kafka-avro-serializer-6.2.2.jar</span><br><span class="line">mvn install:install-file -Dfile=./kafka-avro-serializer-6.2.2.jar -DgroupId=io.confluent -DartifactId=kafka-avro-serializer -Dversion=6.2.2 -Dpackaging=jar</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cd dl/</span><br><span class="line">tar zxf flink-1.15.3.tar.gz</span><br><span class="line">rm -fr flink-1.15.3/flink-formats/flink-avro-confluent-registry/src/test/</span><br><span class="line">rm -fr flink-1.15.3/flink-end-to-end-tests/flink-end-to-end-tests-common-kafka/src/test</span><br><span class="line">rm -fr flink-1.15.3.tar.gz</span><br><span class="line">tar -zcf flink-1.15.3.tar.gz flink-1.15.3</span><br><span class="line">rm -fr flink-1.15.3</span><br><span class="line">rm -fr /Developer/bigtop-3.2.0/build/flink/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">tar zxf hadoop-3.3.4.tar.gz</span><br><span class="line">vim hadoop-3.3.4-src/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-catalog/hadoop-yarn-applications-catalog-webapp/pom.xm</span><br><span class="line">&lt;nodejs.version&gt;v14.0.0&lt;/nodejs.version&gt;</span><br><span class="line">rm -fr hadoop-3.3.4.tar.gz &amp;&amp; tar -zcf hadoop-3.3.4.tar.gz hadoop-3.3.4-src &amp;&amp; rm -fr hadoop-3.3.4-src</span><br><span class="line">rm -fr /Developer/bigtop-3.2.0/build/hadoop/</span><br></pre></td></tr></table></figure>
<h3 id="bigtop-Repositories"><a href="#bigtop-Repositories" class="headerlink" title="bigtop Repositories"></a>bigtop Repositories</h3><p>It’s a easy way to install, including ambari packages:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Clone to local repository:</span></span><br><span class="line">wget https://dlcdn.apache.org/bigtop/bigtop-3.2.1/repos/centos-7/bigtop.repo -O /etc/yum.repos.d/bigtop.repo</span><br><span class="line">reposync --gpgcheck -1 --repoid=bigtop --download_path=/data/bigtop</span><br><span class="line"><span class="built_in">cd</span> /data/bigtop/bigtop</span><br><span class="line">yum install createrepo</span><br><span class="line">createrepo .</span><br><span class="line"></span><br><span class="line">tree ./</span><br><span class="line">.</span><br><span class="line">├── bigtop</span><br><span class="line">│   ├── alluxio</span><br><span class="line">│   │   └── x86_64</span><br><span class="line">│   │       └── alluxio-2.8.0-2.el7.x86_64.rpm</span><br><span class="line">│   ├── ambari</span><br><span class="line">│   │   ├── noarch</span><br><span class="line">│   │   │   ├── ambari-agent-2.7.5.0-1.el7.noarch.rpm</span><br><span class="line">│   │   │   └── ambari-server-2.7.5.0-1.el7.noarch.rpm</span><br><span class="line">│   │   └── x86_64</span><br><span class="line">│   │       ├── ambari-metrics-collector-2.7.5.0-0.x86_64.rpm</span><br><span class="line">│   │       ├── ambari-metrics-grafana-2.7.5.0-0.x86_64.rpm</span><br><span class="line">│   │       ├── ambari-metrics-hadoop-sink-2.7.5.0-0.x86_64.rpm</span><br><span class="line">│   │       └── ambari-metrics-monitor-2.7.5.0-0.x86_64.rpm</span><br><span class="line">│   ├── bigtop-ambari-mpack</span><br><span class="line">│   │   └── noarch</span><br><span class="line">│   │       └── bigtop-ambari-mpack-2.7.5.0-1.el7.noarch.rpm</span><br><span class="line">│   ├── bigtop-groovy</span><br><span class="line">│   │   └── noarch</span><br><span class="line">│   │       └── bigtop-groovy-2.5.4-1.el7.noarch.rpm</span><br><span class="line">│   ├── bigtop-jsvc</span><br><span class="line">│   │   └── x86_64</span><br><span class="line">│   │       ├── bigtop-jsvc-1.2.4-1.el7.x86_64.rpm</span><br><span class="line">│   │       └── bigtop-jsvc-debuginfo-1.2.4-1.el7.x86_64.rpm</span><br><span class="line">│   ├── bigtop-utils</span><br><span class="line">│   │   └── noarch</span><br><span class="line">│   │       └── bigtop-utils-3.2.1-1.el7.noarch.rpm</span><br><span class="line">│   ├── flink</span><br><span class="line">│   │   └── noarch</span><br><span class="line">│   │       ├── flink-1.15.3-1.el7.noarch.rpm</span><br><span class="line">│   │       ├── flink-jobmanager-1.15.3-1.el7.noarch.rpm</span><br><span class="line">│   │       └── flink-taskmanager-1.15.3-1.el7.noarch.rpm</span><br><span class="line">│   ├── gpdb</span><br><span class="line">│   │   └── x86_64</span><br><span class="line">│   │       └── gpdb-5.28.5-1.el7.x86_64.rpm</span><br><span class="line">│   ├── hadoop</span><br><span class="line">│   │   └── x86_64</span><br><span class="line">│   │       ├── hadoop-3.3.5-1.el7.x86_64.rpm</span><br><span class="line">│   │       ├── hadoop-client-3.3.5-1.el7.x86_64.rpm</span><br><span class="line">│   │       ├── hadoop-conf-pseudo-3.3.5-1.el7.x86_64.rpm</span><br><span class="line">│   │       ├── hadoop-debuginfo-3.3.5-1.el7.x86_64.rpm</span><br><span class="line">│   │       ├── hadoop-doc-3.3.5-1.el7.x86_64.rpm</span><br><span class="line">│   │       ├── hadoop-hdfs-3.3.5-1.el7.x86_64.rpm</span><br><span class="line">│   │       ├── hadoop-hdfs-datanode-3.3.5-1.el7.x86_64.rpm</span><br><span class="line">│   │       ├── hadoop-hdfs-dfsrouter-3.3.5-1.el7.x86_64.rpm</span><br><span class="line">│   │       ├── hadoop-hdfs-fuse-3.3.5-1.el7.x86_64.rpm</span><br><span class="line">│   │       ├── hadoop-hdfs-journalnode-3.3.5-1.el7.x86_64.rpm</span><br><span class="line">│   │       ├── hadoop-hdfs-namenode-3.3.5-1.el7.x86_64.rpm</span><br><span class="line">│   │       ├── hadoop-hdfs-secondarynamenode-3.3.5-1.el7.x86_64.rpm</span><br><span class="line">│   │       ├── hadoop-hdfs-zkfc-3.3.5-1.el7.x86_64.rpm</span><br><span class="line">│   │       ├── hadoop-httpfs-3.3.5-1.el7.x86_64.rpm</span><br><span class="line">│   │       ├── hadoop-kms-3.3.5-1.el7.x86_64.rpm</span><br><span class="line">│   │       ├── hadoop-libhdfs-3.3.5-1.el7.x86_64.rpm</span><br><span class="line">│   │       ├── hadoop-libhdfs-devel-3.3.5-1.el7.x86_64.rpm</span><br><span class="line">│   │       ├── hadoop-libhdfspp-3.3.5-1.el7.x86_64.rpm</span><br><span class="line">│   │       ├── hadoop-libhdfspp-devel-3.3.5-1.el7.x86_64.rpm</span><br><span class="line">│   │       ├── hadoop-mapreduce-3.3.5-1.el7.x86_64.rpm</span><br><span class="line">│   │       ├── hadoop-mapreduce-historyserver-3.3.5-1.el7.x86_64.rpm</span><br><span class="line">│   │       ├── hadoop-yarn-3.3.5-1.el7.x86_64.rpm</span><br><span class="line">│   │       ├── hadoop-yarn-nodemanager-3.3.5-1.el7.x86_64.rpm</span><br><span class="line">│   │       ├── hadoop-yarn-proxyserver-3.3.5-1.el7.x86_64.rpm</span><br><span class="line">│   │       ├── hadoop-yarn-resourcemanager-3.3.5-1.el7.x86_64.rpm</span><br><span class="line">│   │       ├── hadoop-yarn-router-3.3.5-1.el7.x86_64.rpm</span><br><span class="line">│   │       └── hadoop-yarn-timelineserver-3.3.5-1.el7.x86_64.rpm</span><br><span class="line">│   ├── hbase</span><br><span class="line">│   │   ├── noarch</span><br><span class="line">│   │   │   └── hbase-doc-2.4.13-2.el7.noarch.rpm</span><br><span class="line">│   │   └── x86_64</span><br><span class="line">│   │       ├── hbase-2.4.13-2.el7.x86_64.rpm</span><br><span class="line">│   │       ├── hbase-master-2.4.13-2.el7.x86_64.rpm</span><br><span class="line">│   │       ├── hbase-regionserver-2.4.13-2.el7.x86_64.rpm</span><br><span class="line">│   │       ├── hbase-rest-2.4.13-2.el7.x86_64.rpm</span><br><span class="line">│   │       ├── hbase-thrift2-2.4.13-2.el7.x86_64.rpm</span><br><span class="line">│   │       └── hbase-thrift-2.4.13-2.el7.x86_64.rpm</span><br><span class="line">│   ├── hive</span><br><span class="line">│   │   └── noarch</span><br><span class="line">│   │       ├── hive-3.1.3-1.el7.noarch.rpm</span><br><span class="line">│   │       ├── hive-hbase-3.1.3-1.el7.noarch.rpm</span><br><span class="line">│   │       ├── hive-hcatalog-3.1.3-1.el7.noarch.rpm</span><br><span class="line">│   │       ├── hive-hcatalog-server-3.1.3-1.el7.noarch.rpm</span><br><span class="line">│   │       ├── hive-jdbc-3.1.3-1.el7.noarch.rpm</span><br><span class="line">│   │       ├── hive-metastore-3.1.3-1.el7.noarch.rpm</span><br><span class="line">│   │       ├── hive-server2-3.1.3-1.el7.noarch.rpm</span><br><span class="line">│   │       ├── hive-webhcat-3.1.3-1.el7.noarch.rpm</span><br><span class="line">│   │       └── hive-webhcat-server-3.1.3-1.el7.noarch.rpm</span><br><span class="line">│   ├── kafka</span><br><span class="line">│   │   └── noarch</span><br><span class="line">│   │       ├── kafka-2.8.1-2.el7.noarch.rpm</span><br><span class="line">│   │       └── kafka-server-2.8.1-2.el7.noarch.rpm</span><br><span class="line">│   ├── livy</span><br><span class="line">│   │   └── noarch</span><br><span class="line">│   │       └── livy-0.7.1-1.el7.noarch.rpm</span><br><span class="line">│   ├── oozie</span><br><span class="line">│   │   └── noarch</span><br><span class="line">│   │       ├── oozie-5.2.1-2.el7.noarch.rpm</span><br><span class="line">│   │       └── oozie-client-5.2.1-2.el7.noarch.rpm</span><br><span class="line">│   ├── phoenix</span><br><span class="line">│   │   └── noarch</span><br><span class="line">│   │       └── phoenix-5.1.2-1.el7.noarch.rpm</span><br><span class="line">│   ├── solr</span><br><span class="line">│   │   └── noarch</span><br><span class="line">│   │       ├── solr-8.11.2-1.el7.noarch.rpm</span><br><span class="line">│   │       ├── solr-doc-8.11.2-1.el7.noarch.rpm</span><br><span class="line">│   │       └── solr-server-8.11.2-1.el7.noarch.rpm</span><br><span class="line">│   ├── spark</span><br><span class="line">│   │   └── noarch</span><br><span class="line">│   │       ├── spark-3.2.3-1.el7.noarch.rpm</span><br><span class="line">│   │       ├── spark-core-3.2.3-1.el7.noarch.rpm</span><br><span class="line">│   │       ├── spark-datanucleus-3.2.3-1.el7.noarch.rpm</span><br><span class="line">│   │       ├── spark-external-3.2.3-1.el7.noarch.rpm</span><br><span class="line">│   │       ├── spark-history-server-3.2.3-1.el7.noarch.rpm</span><br><span class="line">│   │       ├── spark-master-3.2.3-1.el7.noarch.rpm</span><br><span class="line">│   │       ├── spark-python-3.2.3-1.el7.noarch.rpm</span><br><span class="line">│   │       ├── spark-sparkr-3.2.3-1.el7.noarch.rpm</span><br><span class="line">│   │       ├── spark-thriftserver-3.2.3-1.el7.noarch.rpm</span><br><span class="line">│   │       ├── spark-worker-3.2.3-1.el7.noarch.rpm</span><br><span class="line">│   │       └── spark-yarn-shuffle-3.2.3-1.el7.noarch.rpm</span><br><span class="line">│   ├── tez</span><br><span class="line">│   │   └── noarch</span><br><span class="line">│   │       └── tez-0.10.1-1.el7.noarch.rpm</span><br><span class="line">│   ├── ycsb</span><br><span class="line">│   │   └── noarch</span><br><span class="line">│   │       └── ycsb-0.17.0-2.el7.noarch.rpm</span><br><span class="line">│   ├── zeppelin</span><br><span class="line">│   │   └── x86_64</span><br><span class="line">│   │       └── zeppelin-0.10.1-1.el7.x86_64.rpm</span><br><span class="line">│   └── zookeeper</span><br><span class="line">│       └── x86_64</span><br><span class="line">│           ├── zookeeper-3.5.9-2.el7.x86_64.rpm</span><br><span class="line">│           ├── zookeeper-debuginfo-3.5.9-2.el7.x86_64.rpm</span><br><span class="line">│           ├── zookeeper-native-3.5.9-2.el7.x86_64.rpm</span><br><span class="line">│           ├── zookeeper-rest-3.5.9-2.el7.x86_64.rpm</span><br><span class="line">│           └── zookeeper-server-3.5.9-2.el7.x86_64.rpm</span><br></pre></td></tr></table></figure>
<h2 id="Ambari"><a href="#Ambari" class="headerlink" title="Ambari"></a>Ambari</h2><p>The Apache Ambari project is aimed at making Hadoop management simpler by developing software for provisioning, managing, and monitoring Apache Hadoop clusters. Ambari provides an intuitive, easy-to-use Hadoop management web UI backed by its RESTful APIs.</p>
<p><strong><em>Notice: Bigtop repository has included all of ambari packages, you don’t need to build. just need to build the latest version that bigtop not included.</em></strong></p>
<p>For installation, please follow this instructions: <a href="https://cwiki.apache.org/confluence/display/AMBARI/Installation+Guide+for+Ambari+2.8.0" target="_blank" rel="noopener">Installation Guide for Ambari 2.8.0 - Apache Ambari - Apache Software Foundation</a></p>
<h3 id="Build-package-from-source"><a href="#Build-package-from-source" class="headerlink" title="Build  package from source"></a>Build  package from source</h3><p>Prerequisite:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Jdk</span></span><br><span class="line">nvm install v12.22.1</span><br><span class="line"></span><br><span class="line">cat /etc/profile.d/java.sh </span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/Developer/jdk1.8.0_371</span><br><span class="line"><span class="built_in">export</span> M2_HOME=/Developer/apache-maven-3.6.3</span><br><span class="line"><span class="built_in">export</span> _JAVA_OPTIONS=<span class="string">"-Xms4g -Xmx4g -Djava.awt.headless=true"</span></span><br><span class="line"><span class="built_in">export</span> PATH=/root/.nvm/versions/node/v12.22.1/bin:<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$M2_HOME</span>/bin:<span class="variable">$PATH</span></span><br><span class="line"></span><br><span class="line">. /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment">#OS environment:</span></span><br><span class="line"><span class="comment">#swap&gt;=6G:</span></span><br><span class="line">dd <span class="keyword">if</span>=/dev/zero of=/myswap.swp bs=1k count=4194304 <span class="comment">#The vm has been included 2g memory. </span></span><br><span class="line">mkswap /myswap.swp</span><br><span class="line">swapon /myswap.swp</span><br><span class="line">free -m</span><br><span class="line">chmod +x /etc/rc.local</span><br><span class="line">chmod +x /etc/rc.d/rc.local</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"swapon /myswap.swp"</span> &gt;&gt; /etc/rc.local</span><br><span class="line"></span><br><span class="line">groupadd hadoop</span><br><span class="line">useradd -m -g hadoop hadoop</span><br><span class="line">passwd hadoop</span><br><span class="line">chmod +w /etc/sudoers</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"hadoop ALL=(ALL)NOPASSWD: ALL"</span> &gt;&gt; /etc/sudoers</span><br><span class="line">chmod -w /etc/sudoers</span><br></pre></td></tr></table></figure>
<p>Build package from source</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#https://cwiki.apache.org/confluence/display/AMBARI/Installation+Guide+for+Ambari+2.8.0</span><br><span class="line">Centos 7.9:</span><br><span class="line">yum install -y git python-devel rpm-build gcc-c++</span><br><span class="line"></span><br><span class="line">wget https://pypi.python.org/packages/2.7/s/setuptools/setuptools-0.6c11-py2.7.egg#md5=fe1f997bc722265116870bc7919059ea</span><br><span class="line">sh setuptools-0.6c11-py2.7.egg</span><br><span class="line"></span><br><span class="line">wget https://dlcdn.apache.org/ambari/ambari-2.8.0/apache-ambari-2.8.0-src.tar.gz (use the suggested mirror from above)</span><br><span class="line">tar xfvz apache-ambari-2.8.0-src.tar.gz</span><br><span class="line">cd apache-ambari-2.8.0-src</span><br><span class="line">mvn clean install rpm:rpm -DskipTests -Drat.skip=true</span><br></pre></td></tr></table></figure>
<p>Build your yum repository:</p>
<p>See: <a href="#Bigtop">bigtop Section</a></p>
<h3 id="Installing-Ambari"><a href="#Installing-Ambari" class="headerlink" title="Installing Ambari"></a>Installing Ambari</h3><p>Performence:</p>
<table>
<thead>
<tr>
<th>IP地址</th>
<th>Role</th>
</tr>
</thead>
<tbody>
<tr>
<td>192.168.80.225</td>
<td>NameNode     ResourceManager     HBase Master     MySQL     Zeppelin Server     Grafana     flume     ds-master ds-api   ds-alert     Ambari Server     Ambari Agant</td>
</tr>
<tr>
<td>192.168.80.226</td>
<td>SNameNode     HBase Master     JobHistory Server     Flink History Server     Spark History Server     Spark Thrift Server     Hive Metastore     HiveServer2     WebHCat Server     Datax-webui     flume     Ambari Agant</td>
</tr>
<tr>
<td>192.168.80.227</td>
<td>DataNode     NodeManager     Zookeeper     JournalNode     RegionServer     ds-worker     Datax worknode     Ambari Agant</td>
</tr>
<tr>
<td>192.168.80.228</td>
<td>DataNode     NodeManager     Zookeeper     JournalNode     RegionServer     ds-worker     Datax worknode     Ambari Agant</td>
</tr>
<tr>
<td>192.168.80.229</td>
<td>DataNode     NodeManager     Zookeeper     JournalNode     RegionServer     ds-worker     Datax worknode     Ambari Metrics Collectors     Ambari Agant</td>
</tr>
</tbody>
</table>
<p>HA:</p>
<table>
<thead>
<tr>
<th>IP地址</th>
<th>Role</th>
</tr>
</thead>
<tbody>
<tr>
<td>192.168.80.225</td>
<td>NameNode     ResourceManager(Single)     JobHistory Server(Single)     HBase Master     Flink History Server     Spark History Server     Hive Metastore     HiveServer2     WebHCat Server(Single)     Zeppelin Server(Single)     MySQL(Single)     Grafana(Single)     flume     ds-master      ds-api      ds-alert     Ambari Metrics Collectors     Ambari Server     Ambari Agant</td>
</tr>
<tr>
<td>192.168.80.226</td>
<td>SNameNode     HBase Master     Flink History Server     Spark History Server     Hive Metastore     HiveServer2     ds-master     Ambari Metrics Collectors     flume     Ambari Agant</td>
</tr>
<tr>
<td>192.168.80.227</td>
<td>DataNode     NodeManager     Zookeeper     JournalNode     Kafka Broker     Spark Thrift Server     RegionServer     ds-worker     Datax worknode     Ambari Agant</td>
</tr>
<tr>
<td>192.168.80.228</td>
<td>DataNode     NodeManager     Zookeeper     JournalNode     Kafka Broker     Spark Thrift Server     RegionServer     ds-worker     Datax worknode     Ambari Agant</td>
</tr>
<tr>
<td>192.168.80.229</td>
<td>DataNode     NodeManager     Zookeeper     JournalNode     Kafka Broker     Spark Thrift Server     RegionServer     ds-worker     Datax worknode     Ambari Agant</td>
</tr>
</tbody>
</table>
<h4 id="Vagrant-Docker"><a href="#Vagrant-Docker" class="headerlink" title="Vagrant Docker"></a>Vagrant Docker</h4><h5 id="Dockerfile-centos"><a href="#Dockerfile-centos" class="headerlink" title="Dockerfile.centos"></a>Dockerfile.centos</h5><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">cd /works/tools/vagrant</span><br><span class="line"></span><br><span class="line">cat Dockerfile.centos </span><br><span class="line"><span class="comment">#version: 1.0.0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">FROM</span> centos:<span class="number">7</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> WORK_SHELL /startup</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /works</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> script.sh docker-entrypoint.sh <span class="variable">$WORK_SHELL</span>/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> chmod +x <span class="variable">$WORK_SHELL</span>/*.sh</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> <span class="variable">$WORK_SHELL</span>/script.sh</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="bash"> [<span class="string">"/startup/docker-entrypoint.sh"</span>]</span></span><br><span class="line"><span class="comment">#CMD ["bash", "-c" ,"$WORK_SHELL/init.sh"]</span></span><br></pre></td></tr></table></figure>
<h5 id="docker-entrypoint-sh"><a href="#docker-entrypoint-sh" class="headerlink" title="docker-entrypoint.sh"></a>docker-entrypoint.sh</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat docker-entrypoint.sh </span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># run the command given as arguments from CMD</span></span><br><span class="line"><span class="built_in">exec</span> <span class="string">"<span class="variable">$@</span>"</span></span><br></pre></td></tr></table></figure>
<h5 id="script-sh"><a href="#script-sh" class="headerlink" title="script.sh"></a>script.sh</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat script.sh </span><br><span class="line"><span class="comment">#!/bin/bash -x</span></span><br><span class="line"><span class="comment">#http://www.360doc.com/content/14/1125/19/7044580_428024359.shtml</span></span><br><span class="line"><span class="comment">#http://blog.csdn.net/54powerman/article/details/50684844</span></span><br><span class="line"><span class="comment">#http://c.biancheng.net/cpp/view/2739.html</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"scripting......"</span></span><br><span class="line"></span><br><span class="line">yum -y install net-tools iproute iproute-doc wget sudo</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">'s;SELINUX=.*;SELINUX=disabled;'</span> /etc/selinux/config</span><br><span class="line">setenforce 0</span><br><span class="line">getenforce</span><br><span class="line"></span><br><span class="line"><span class="comment">#LANG="en_US.UTF-8"</span></span><br><span class="line"><span class="comment">#sed -i 's;LANG=.*;LANG="zh_CN.UTF-8";' /etc/locale.conf</span></span><br><span class="line"></span><br><span class="line">cat /etc/NetworkManager/NetworkManager.conf|grep <span class="string">"dns=none"</span> &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"dns=none"</span> &gt;&gt; /etc/NetworkManager/NetworkManager.conf</span><br><span class="line">    systemctl restart NetworkManager.service</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">disable</span> iptables</span><br><span class="line">systemctl stop iptables</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br><span class="line">systemctl stop firewalld</span><br><span class="line"></span><br><span class="line"><span class="comment">#ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span></span><br><span class="line">timedatectl <span class="built_in">set</span>-timezone Asia/Shanghai</span><br><span class="line"></span><br><span class="line"><span class="comment">#logined limit</span></span><br><span class="line">cat /etc/security/limits.conf|grep <span class="string">"^root"</span> &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">                cat &gt;&gt; /etc/security/limits.conf  &lt;&lt; EOF</span><br><span class="line">root            -    nofile             100000</span><br><span class="line">root            -    nproc              100000</span><br><span class="line">*               -    nofile             100000</span><br><span class="line">*               -    nproc              100000</span><br><span class="line">EOF</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#systemd service limit</span></span><br><span class="line">cat /etc/systemd/system.conf|egrep <span class="string">'^DefaultLimitNOFILE'</span> &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">                cat &gt;&gt; /etc/systemd/system.conf &lt;&lt; EOF</span><br><span class="line">DefaultLimitCORE=infinity</span><br><span class="line">DefaultLimitNOFILE=100000</span><br><span class="line">DefaultLimitNPROC=100000</span><br><span class="line">EOF</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">#user service limit</span></span><br><span class="line">cat /etc/systemd/user.conf|egrep <span class="string">'^DefaultLimitNOFILE'</span> &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">                cat &gt;&gt; /etc/systemd/system.conf &lt;&lt; EOF</span><br><span class="line">DefaultLimitCORE=infinity</span><br><span class="line">DefaultLimitNOFILE=100000</span><br><span class="line">DefaultLimitNPROC=100000</span><br><span class="line">EOF</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">cat /etc/sysctl.conf|grep <span class="string">"net.ipv4.ip_local_port_range"</span> &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">cat &gt;&gt; /etc/sysctl.conf  &lt;&lt; EOF</span><br><span class="line">net.ipv4.tcp_fin_timeout = 30</span><br><span class="line">net.ipv4.tcp_keepalive_time = 300</span><br><span class="line">net.ipv4.tcp_tw_reuse = 1</span><br><span class="line">net.ipv4.tcp_tw_recycle = 1</span><br><span class="line">net.ipv4.ip_local_port_range = 1024 65535</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line"><span class="comment">#k8s</span></span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">EOF</span><br><span class="line">sysctl -p</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">su - root -c <span class="string">"ulimit -a"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#echo "192.168.10.6   k8s-master</span></span><br><span class="line"><span class="comment">#192.168.10.7   k8s-node1</span></span><br><span class="line"><span class="comment">#192.168.10.8   k8s-node2" &gt;&gt; /etc/hosts</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#tee /etc/resolv.conf &lt;&lt; EOF</span></span><br><span class="line"><span class="comment">#search myk8s.com</span></span><br><span class="line"><span class="comment">#nameserver 114.114.114.114</span></span><br><span class="line"><span class="comment">#nameserver 8.8.8.8</span></span><br><span class="line"><span class="comment">#EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#yum -y install gcc kernel-devel</span></span><br><span class="line">mv -f /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br><span class="line"><span class="comment"># wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.163.com/.help/CentOS7-Base-163.repo</span></span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">wget -O /etc/yum.repos.d/epel-7.repo http://mirrors.aliyun.com/repo/epel-7.repo</span><br><span class="line"></span><br><span class="line">yum -y install epel-release</span><br><span class="line"></span><br><span class="line">sudo mv /etc/yum.repos.d/epel.repo /etc/yum.repos.d/epel.repo.backup</span><br><span class="line">sudo mv /etc/yum.repos.d/epel-testing.repo /etc/yum.repos.d/epel-testing.repo.backup</span><br><span class="line"></span><br><span class="line">cat &gt; /etc/yum.repos.d/epel.repo  &lt;&lt; EOF</span><br><span class="line">[epel]</span><br><span class="line">name=Extra Packages <span class="keyword">for</span> Enterprise Linux 7 - \<span class="variable">$basearch</span></span><br><span class="line">baseurl=https://mirrors.tuna.tsinghua.edu.cn/epel/7/\<span class="variable">$basearch</span></span><br><span class="line"><span class="comment">#mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-7&amp;arch=\$basearch</span></span><br><span class="line">failovermethod=priority</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7</span><br><span class="line">[epel-debuginfo]</span><br><span class="line">name=Extra Packages <span class="keyword">for</span> Enterprise Linux 7 - \<span class="variable">$basearch</span> - Debug</span><br><span class="line">baseurl=https://mirrors.tuna.tsinghua.edu.cn/epel/7/\<span class="variable">$basearch</span>/debug</span><br><span class="line"><span class="comment">#mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-debug-7&amp;arch=\$basearch</span></span><br><span class="line">failovermethod=priority</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7</span><br><span class="line">gpgcheck=1</span><br><span class="line">[epel-source]</span><br><span class="line">name=Extra Packages <span class="keyword">for</span> Enterprise Linux 7 - \<span class="variable">$basearch</span> - Source</span><br><span class="line">baseurl=https://mirrors.tuna.tsinghua.edu.cn/epel/7/SRPMS</span><br><span class="line"><span class="comment">#mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-source-7&amp;arch=\$basearch</span></span><br><span class="line">failovermethod=priority</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7</span><br><span class="line">gpgcheck=1</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">yum clean all</span><br><span class="line">yum makecache</span><br><span class="line"></span><br><span class="line"><span class="comment">#yum -y install createrepo rpm-sign rng-tools yum-utils </span></span><br><span class="line">yum -y install htop <span class="built_in">bind</span>-utils bridge-utils ntpdate setuptool iptables system-config-securitylevel-tui system-config-network-tui \</span><br><span class="line"> ntsysv net-tools lrzsz telnet lsof vim dos2unix unix2dos zip unzip \</span><br><span class="line"> lsof openssl openssh-server openssh-clients expect</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">'s;#PasswordAuthentication yes;PasswordAuthentication yes;g'</span> /etc/ssh/sshd_config</span><br><span class="line">sed -i <span class="string">'s;#PermitRootLogin yes;PermitRootLogin yes;g'</span> /etc/ssh/sshd_config</span><br><span class="line"><span class="comment">#systemctl enable sshd</span></span><br><span class="line"><span class="comment">#systemctl restart sshd</span></span><br></pre></td></tr></table></figure>
<h5 id="buildImages-sh"><a href="#buildImages-sh" class="headerlink" title="buildImages.sh"></a>buildImages.sh</h5><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">cat buildImages.sh </span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">DOCKER_BUILDKIT=<span class="number">0</span> docker build -t <span class="string">"registry.zerofinance.net/library/centos:7"</span> . -f Dockerfile.centos</span><br></pre></td></tr></table></figure>
<h5 id="Push-image"><a href="#Push-image" class="headerlink" title="Push image"></a>Push image</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker login registry.zerofinance.net</span><br><span class="line">admin</span><br><span class="line">********</span><br><span class="line"></span><br><span class="line">docker push registry.zerofinance.net/library/centos:7</span><br></pre></td></tr></table></figure>
<h5 id="Vagrantfile"><a href="#Vagrantfile" class="headerlink" title="Vagrantfile"></a>Vagrantfile</h5><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">cat Vagrantfile</span><br><span class="line"><span class="comment"># -*- mode: ruby -*-</span></span><br><span class="line"><span class="comment"># vi: set ft=ruby :</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># All Vagrant configuration is done below. The "2" in Vagrant.configure</span></span><br><span class="line"><span class="comment"># configures the configuration version (we support older styles for</span></span><br><span class="line"><span class="comment"># backwards compatibility). Please don't change it unless you know what</span></span><br><span class="line"><span class="comment"># you're doing.</span></span><br><span class="line">Vagrant.configure(<span class="string">"2"</span>) <span class="keyword">do</span> <span class="params">|config|</span></span><br><span class="line">  config.vm.hostname = <span class="string">"namenode01-test.zerofinance.net"</span></span><br><span class="line">  config.vm.network <span class="string">"public_network"</span>, <span class="symbol">ip:</span> <span class="string">"192.168.80.225"</span>, <span class="symbol">netmask:</span> <span class="string">"255.255.255.0"</span>, <span class="symbol">gateway:</span> <span class="string">"192.168.80.254"</span>, <span class="symbol">bridge:</span> <span class="string">"em1"</span></span><br><span class="line">  config.vm.provider <span class="string">"docker"</span> <span class="keyword">do</span> <span class="params">|d|</span></span><br><span class="line">    d.image = <span class="string">"registry.zerofinance.net/library/centos:7"</span></span><br><span class="line">    d.create_args = [<span class="string">"--hostname=namenode01-test.zerofinance.net"</span>, <span class="string">"--cpus=12"</span>, <span class="string">"--cpu-shares=12000"</span>, <span class="string">"-m=30g"</span>, <span class="string">"--memory-reservation=1g"</span>, <span class="string">"-v"</span>, <span class="string">"/etc/hosts:/etc/hosts"</span>, <span class="string">"-v"</span>, <span class="string">"/data:/data"</span>, <span class="string">"-v"</span>, <span class="string">"/sys/fs/cgroup:/sys/fs/cgroup"</span>]</span><br><span class="line">    d.privileged = <span class="literal">true</span></span><br><span class="line">    d.cmd = [<span class="string">"/usr/sbin/init"</span>]</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  config.vm.provision <span class="string">"shell"</span>, <span class="symbol">run:</span> <span class="string">"always"</span>, <span class="symbol">inline:</span> &lt;&lt;-SHELL</span><br><span class="line">    <span class="comment">#yum -y install net-tools &gt; /dev/null</span></span><br><span class="line">    route del default gw <span class="number">172.17</span>.<span class="number">0</span>.<span class="number">1</span></span><br><span class="line">    route add default gw <span class="number">192.168</span>.<span class="number">80.254</span></span><br><span class="line">    chmod +x /etc/rc.local</span><br><span class="line">    chmod +x /etc/rc.d/rc.local</span><br><span class="line">    echo <span class="string">"route del default gw 172.17.0.1</span></span><br><span class="line"><span class="string">    route add default gw 192.168.80.254"</span> &gt;&gt; <span class="regexp">/etc/rc</span>.local</span><br><span class="line">  SHELL</span><br><span class="line"></span><br><span class="line">  <span class="comment">#config.vm.provision "shell",</span></span><br><span class="line">  <span class="comment">#  run: "always",</span></span><br><span class="line">  <span class="comment">#  inline: "route del default gw 172.17.0.1"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#config.vm.provision "shell" do |s|</span></span><br><span class="line">  <span class="comment">#  s.path = "script.sh"</span></span><br><span class="line">  <span class="comment">#  #s.args = ["--bip=10.1.10.1/24"]</span></span><br><span class="line">  <span class="comment">#end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h5 id="Vagrant-start"><a href="#Vagrant-start" class="headerlink" title="Vagrant start"></a>Vagrant start</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vagrant up</span><br><span class="line"><span class="comment">#When it's done, you need to change root passwd</span></span><br><span class="line"><span class="comment">#https://developer.hashicorp.com/vagrant/docs/providers/docker/commands</span></span><br><span class="line">vagrant docker-exec -it -- /bin/bash</span><br><span class="line"><span class="comment">#Change password:</span></span><br><span class="line">passwd</span><br><span class="line"></span><br><span class="line"><span class="comment">#If multiple nodes in Vagrantfile:</span></span><br><span class="line"><span class="comment">#node1 can be shown with command: vagrant status</span></span><br><span class="line"><span class="comment">#vagrant docker-exec node1 -it -- /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Or using nature docker command </span></span><br><span class="line">docker <span class="built_in">exec</span> -it &lt;ContainerId&gt; /bin/bash</span><br><span class="line"></span><br><span class="line"><span class="comment">#shutdown</span></span><br><span class="line">vagrant halt</span><br><span class="line"></span><br><span class="line"><span class="comment">#start</span></span><br><span class="line">vagrant up</span><br><span class="line"></span><br><span class="line"><span class="comment">#restart</span></span><br><span class="line">vagrant restart</span><br><span class="line"></span><br><span class="line"><span class="comment">#More usuage can be found: https://blog.gcalls.cn/2022/04/A-Guide-to-Vagrant.html</span></span><br></pre></td></tr></table></figure>
<h4 id="Initiation"><a href="#Initiation" class="headerlink" title="Initiation"></a>Initiation</h4><h5 id="SSH-Without-Password"><a href="#SSH-Without-Password" class="headerlink" title="SSH Without Password"></a>SSH Without Password</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Working all machines:</span></span><br><span class="line">groupadd hadoop</span><br><span class="line">useradd -m -g hadoop hadoop</span><br><span class="line">passwd hadoop</span><br><span class="line">chmod +w /etc/sudoers</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"hadoop ALL=(ALL)NOPASSWD: ALL"</span> &gt;&gt; /etc/sudoers</span><br><span class="line">chmod -w /etc/sudoers</span><br><span class="line">mkdir -p ~/.ssh/</span><br><span class="line"></span><br><span class="line"><span class="comment">#Working on 192.168.80.225</span></span><br><span class="line">sudo su - hadoop</span><br><span class="line">ssh-keygen -t rsa</span><br><span class="line"><span class="comment">#Writing to ~/.ssh/authorized_keys：</span></span><br><span class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub hadoop@192.168.80.225</span><br><span class="line"><span class="comment">#cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</span></span><br><span class="line">sudo chmod 700 ~/.ssh</span><br><span class="line">sudo chmod 600 ~/.ssh/authorized_keys</span><br><span class="line"></span><br><span class="line"><span class="comment">#All machine can ssh without password: </span></span><br><span class="line">scp ~/.ssh/* hadoop@192.168.80.84:~/.ssh/</span><br><span class="line">scp ~/.ssh/* hadoop@192.168.80.85:~/.ssh/</span><br><span class="line"></span><br><span class="line"><span class="comment">#Just need 80.225 can ssh without password:</span></span><br><span class="line"><span class="comment">#scp ~/.ssh/authorized_keys hadoop@192.168.80.226:~/.ssh/</span></span><br><span class="line"><span class="comment">#scp ~/.ssh/authorized_keys hadoop@192.168.80.227:~/.ssh/</span></span><br><span class="line"><span class="comment">#scp ~/.ssh/authorized_keys hadoop@192.168.80.228:~/.ssh/</span></span><br><span class="line"><span class="comment">#scp ~/.ssh/authorized_keys hadoop@192.168.80.229:~/.ssh/</span></span><br></pre></td></tr></table></figure>
<h5 id="Optional-Docker-CentOS"><a href="#Optional-Docker-CentOS" class="headerlink" title="Optional: Docker CentOS"></a>Optional: Docker CentOS</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#If your centos is installed on docker:</span></span><br><span class="line"><span class="comment">#For example: 192.168.80.225, vice versa:</span></span><br><span class="line">route del default gw 172.17.0.1</span><br><span class="line">route add default gw 192.168.80.254</span><br><span class="line">chmod +x /etc/rc.local</span><br><span class="line">chmod +x /etc/rc.d/rc.local</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"ifconfig eth0 down</span></span><br><span class="line"><span class="string">route del default gw 172.17.0.1</span></span><br><span class="line"><span class="string">route add default gw 192.168.80.254"</span> &gt;&gt; /etc/rc.local</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"192.168.80.225   localhost localhost.localdomain localhost4 localhost4.localdomain4</span></span><br><span class="line"><span class="string">#::1         localhost localhost.localdomain localhost6 localhost6.localdomain6</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">192.168.80.225 namenode01-test.zerofinance.net namenode01-test</span></span><br><span class="line"><span class="string">192.168.80.226 namenode02-test.zerofinance.net namenode02-test</span></span><br><span class="line"><span class="string">192.168.80.227 datanode01-test.zerofinance.net datanode01-test</span></span><br><span class="line"><span class="string">192.168.80.228 datanode02-test.zerofinance.net datanode02-test</span></span><br><span class="line"><span class="string">192.168.80.229 datanode03-test.zerofinance.net datanode03-test"</span> &gt;&gt; /etc/hosts</span><br></pre></td></tr></table></figure>
<h5 id="NTP"><a href="#NTP" class="headerlink" title="NTP"></a>NTP</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://www.cnblogs.com/Sungeek/p/10197345.html</span></span><br><span class="line"><span class="comment">#Working on all:</span></span><br><span class="line">sudo yum -y install ntp</span><br><span class="line">sudo timedatectl <span class="built_in">set</span>-timezone Asia/Shanghai</span><br><span class="line"></span><br><span class="line">192.168.80.225：</span><br><span class="line">vim /etc/ntp.conf</span><br><span class="line">restrict 0.0.0.0 mask 0.0.0.0 nomodify notrap</span><br><span class="line">server 127.127.1.0</span><br><span class="line">fudge  127.127.1.0 stratum 10</span><br><span class="line"></span><br><span class="line"><span class="comment">#server 0.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="comment">#server 1.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="comment">#server 2.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="comment">#server 3.centos.pool.ntp.org iburst</span></span><br><span class="line">server 0.cn.pool.ntp.org iburst</span><br><span class="line">server 1.cn.pool.ntp.org iburst</span><br><span class="line">server 2.cn.pool.ntp.org iburst</span><br><span class="line">server 3.cn.pool.ntp.org iburst</span><br><span class="line"></span><br><span class="line"><span class="comment">#start</span></span><br><span class="line">systemctl <span class="built_in">enable</span> ntpd</span><br><span class="line">systemctl start ntpd</span><br><span class="line"></span><br><span class="line"><span class="comment">#check</span></span><br><span class="line">ntpq -p</span><br><span class="line"></span><br><span class="line"><span class="comment">#NTP Client Config on：192.168.80.&#123;226,227,228,229&#125;</span></span><br><span class="line">vim /etc/ntp.conf</span><br><span class="line"></span><br><span class="line">restrict 192.168.80.225 nomodify notrap noquery</span><br><span class="line"></span><br><span class="line"><span class="comment">#server 0.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="comment">#server 1.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="comment">#server 2.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="comment">#server 3.centos.pool.ntp.org iburst</span></span><br><span class="line">server 192.168.80.225</span><br><span class="line"></span><br><span class="line"><span class="comment">#start</span></span><br><span class="line">systemctl start ntpd</span><br><span class="line">systemctl <span class="built_in">enable</span> ntpd</span><br><span class="line"></span><br><span class="line"><span class="comment">#check</span></span><br><span class="line">ntpdate -u 192.168.80.225</span><br><span class="line">sudo ntpstat</span><br></pre></td></tr></table></figure>
<h5 id="Environment-variables"><a href="#Environment-variables" class="headerlink" title="Environment variables"></a>Environment variables</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat /etc/profile.d/my_env.sh </span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/works/app/jdk/jdk1.8.0_371</span><br><span class="line"><span class="built_in">export</span> HADOOP_HOME=/usr/bigtop/current/hadoop-client</span><br><span class="line"><span class="built_in">export</span> HADOOP_CONF_DIR=/usr/bigtop/current/hadoop-client/etc/hadoop/</span><br><span class="line"><span class="built_in">export</span> HADOOP_CLASSPATH=`hadoop classpath`</span><br><span class="line"><span class="built_in">export</span> SPARK_HOME=/usr/bigtop/current/spark-client</span><br><span class="line"><span class="built_in">export</span> HIVE_HOME=/usr/bigtop/current/hive-client</span><br><span class="line"><span class="built_in">export</span> FLINK_HOME=/usr/bigtop/current/flink-client</span><br><span class="line"><span class="built_in">export</span> ZOOKEEPER_HOME=/usr/bigtop/current/zookeeper-client</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$HADOOP_HOME</span>/bin:<span class="variable">$SPARK_HOME</span>/bin:<span class="variable">$HIVE_HOME</span>/bin:<span class="variable">$FLINK_HOME</span>/bin:<span class="variable">$ZOOKEEPER_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>
<h5 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h5><h6 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#install on 80.225</span></span><br><span class="line"><span class="comment">#https://blog.csdn.net/weixin_43967842/article/details/124515431</span></span><br><span class="line"><span class="comment">#https://docs.cloudera.com/HDPDocuments/Ambari-latest/administering-ambari/content/amb_using_ambari_with_mysql_or_mariadb.html</span></span><br><span class="line">wget https://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm</span><br><span class="line">yum -y install ./mysql57-community-release-el7-10.noarch.rpm</span><br><span class="line">vim /etc/yum.repos.d/mysql-community.repo</span><br><span class="line">[mysql57-community]</span><br><span class="line">...</span><br><span class="line">gpgcheck=0</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">yum -y install mysql-community-server</span><br><span class="line"></span><br><span class="line">vim /etc/my.cnf</span><br><span class="line">max_connections=2000</span><br><span class="line"></span><br><span class="line">character-set-server=utf8</span><br><span class="line">collation-server=utf8_general_ci</span><br><span class="line">lower_case_table_names=1</span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">enable</span> mysqld</span><br><span class="line">systemctl start mysqld</span><br><span class="line"></span><br><span class="line"><span class="comment">#temporary password：</span></span><br><span class="line">grep <span class="string">'temporary password'</span> /var/<span class="built_in">log</span>/mysqld.log</span><br><span class="line"></span><br><span class="line">mysql -uroot -p</span><br><span class="line"><span class="built_in">set</span> global validate_password_policy=0;</span><br><span class="line">alter user <span class="string">'root'</span>@<span class="string">'localhost'</span> identified by <span class="string">'Aa123456'</span>;</span><br><span class="line">CREATE USER <span class="string">'ambari'</span>@<span class="string">'%'</span> IDENTIFIED BY <span class="string">'Aa123456'</span>;</span><br><span class="line">GRANT ALL PRIVILEGES ON ambari.* TO <span class="string">'ambari'</span>@<span class="string">'%'</span>;</span><br><span class="line">FLUSH PRIVILEGES;</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure>
<h6 id="Ambari-Server"><a href="#Ambari-Server" class="headerlink" title="Ambari Server"></a>Ambari Server</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#192.168.80.225 With Root:</span></span><br><span class="line"><span class="comment">#https://cloud.tencent.com/works/app/jdk/article/1375511</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /vagrant</span><br><span class="line">sudo yum install ./ambari-server-2.8.0.0-0.x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment">#Troubleshooting</span></span><br><span class="line">/usr/sbin/ambari-server: line 34: buildNumber: unbound variable</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">'s;$&#123;buildNumber&#125;;$&#123;VERSION&#125;;g'</span> /usr/sbin/ambari-server</span><br><span class="line">sed -i <span class="string">'s;$&#123;buildNumber&#125;;$&#123;VERSION&#125;;g'</span> /etc/rc.d/init.d/ambari-server</span><br><span class="line"></span><br><span class="line">ambari-server setup --jdbc-db=mysql --jdbc-driver=/vagrant/mysql-connector-j-8.0.31.jar</span><br><span class="line"></span><br><span class="line"><span class="comment">#Init MySQL</span></span><br><span class="line">&gt; mysql -u ambari -p</span><br><span class="line">CREATE DATABASE ambari;</span><br><span class="line">USE ambari;</span><br><span class="line">SOURCE /var/lib/ambari-server/resources/Ambari-DDL-MySQL-CREATE.sql;</span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">&gt; mysql -uroot -p</span><br><span class="line">CREATE DATABASE hive;</span><br><span class="line">CREATE USER <span class="string">'hive'</span>@<span class="string">'%'</span> IDENTIFIED BY <span class="string">'Aa123456'</span>;</span><br><span class="line">GRANT ALL PRIVILEGES ON hive.* TO <span class="string">'hive'</span>@<span class="string">'%'</span>;</span><br><span class="line">FLUSH PRIVILEGES;</span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">&gt; ambari-server setup</span><br><span class="line">Using python  /usr/bin/python</span><br><span class="line">Setup ambari-server</span><br><span class="line">Checking SELinux...</span><br><span class="line">WARNING: Could not run /usr/sbin/sestatus: OK</span><br><span class="line">Customize user account <span class="keyword">for</span> ambari-server daemon [y/n] (n)? y</span><br><span class="line">Enter user account <span class="keyword">for</span> ambari-server daemon (root):hadoop</span><br><span class="line">Adjusting ambari-server permissions and ownership...</span><br><span class="line">Checking firewall status...</span><br><span class="line">Checking JDK...</span><br><span class="line">[1] Oracle JDK 1.8 + Java Cryptography Extension (JCE) Policy Files 8</span><br><span class="line">[2] Custom JDK</span><br><span class="line">==============================================================================</span><br><span class="line">Enter choice (1): 2</span><br><span class="line">WARNING: JDK must be installed on all hosts and JAVA_HOME must be valid on all hosts.</span><br><span class="line">WARNING: JCE Policy files are required <span class="keyword">for</span> configuring Kerberos security. If you plan to use Kerberos,please make sure JCE Unlimited Strength Jurisdiction Policy Files are valid on all hosts.</span><br><span class="line">Path to JAVA_HOME: /works/app/jdk/jdk1.8.0_371</span><br><span class="line">Validating JDK on Ambari Server...done.</span><br><span class="line">Check JDK version <span class="keyword">for</span> Ambari Server...</span><br><span class="line">JDK version found: 8</span><br><span class="line">Minimum JDK version is 8 <span class="keyword">for</span> Ambari. Skipping to setup different JDK <span class="keyword">for</span> Ambari Server.</span><br><span class="line">Checking GPL software agreement...</span><br><span class="line">GPL License <span class="keyword">for</span> LZO: https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html</span><br><span class="line">Enable Ambari Server to download and install GPL Licensed LZO packages [y/n] (n)? y</span><br><span class="line">Completing setup...</span><br><span class="line">Configuring database...</span><br><span class="line">Enter advanced database configuration [y/n] (n)? y</span><br><span class="line">Configuring database...</span><br><span class="line">==============================================================================</span><br><span class="line">Choose one of the following options:</span><br><span class="line">[1] - PostgreSQL (Embedded)</span><br><span class="line">[2] - Oracle</span><br><span class="line">[3] - MySQL / MariaDB</span><br><span class="line">[4] - PostgreSQL</span><br><span class="line">[5] - Microsoft SQL Server (Tech Preview)</span><br><span class="line">[6] - SQL Anywhere</span><br><span class="line">[7] - BDB</span><br><span class="line">==============================================================================</span><br><span class="line">Enter choice (1): 3</span><br><span class="line">Hostname (localhost): namenode01-test.zerofinance.net</span><br><span class="line">Port (3306): </span><br><span class="line">Database name (ambari): </span><br><span class="line">Username (ambari): </span><br><span class="line">Enter Database Password (bigdata): </span><br><span class="line">Re-enter password: </span><br><span class="line">Configuring ambari database...</span><br><span class="line">Enter full path to custom jdbc driver: /var/lib/ambari-server/resources/mysql-connector-java.jar</span><br><span class="line">Copying /var/lib/ambari-server/resources/mysql-connector-java.jar to /usr/share/java</span><br><span class="line">Configuring remote database connection properties...</span><br><span class="line">WARNING: Before starting Ambari Server, you must run the following DDL directly from the database shell to create the schema: /var/lib/ambari-server/resources/Ambari-DDL-MySQL-CREATE.sql</span><br><span class="line">Proceed with configuring remote database connection properties [y/n] (y)? y</span><br><span class="line">Extracting system views...</span><br><span class="line">ambari-admin-2.8.0.0.0.jar</span><br><span class="line"></span><br><span class="line">Ambari repo file doesn<span class="string">'t contain latest json url, skipping repoinfos modification</span></span><br><span class="line"><span class="string">Adjusting ambari-server permissions and ownership...</span></span><br><span class="line"><span class="string">Ambari Server '</span>setup<span class="string">' completed successfully.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#Troubleshooting</span></span><br><span class="line"><span class="string">rm -fr /usr/share/java &amp;&amp; mkdir -p /usr/share/java</span></span><br><span class="line"><span class="string">cp -a /vagrant/mysql-connector-j-8.0.31.jar /usr/share/java/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#Start</span></span><br><span class="line"><span class="string">systemctl enable ambari-server</span></span><br><span class="line"><span class="string">systemctl start ambari-server</span></span><br></pre></td></tr></table></figure>
<h6 id="Ambari-Agent"><a href="#Ambari-Agent" class="headerlink" title="Ambari Agent"></a>Ambari Agent</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#Install ambari angent on all machines:</span><br><span class="line">cd /vagrant/</span><br><span class="line">yum install ./ambari-agent-2.8.0.0-0.x86_64.rpm</span><br><span class="line"></span><br><span class="line">sed -i &apos;s;$&#123;buildNumber&#125;;$&#123;VERSION&#125;;g&apos; /var/lib/ambari-agent/bin/ambari-agent</span><br><span class="line">systemctl enable ambari-agent.service</span><br><span class="line">systemctl start ambari-agent.service</span><br></pre></td></tr></table></figure>
<h6 id="bigtop-repo"><a href="#bigtop-repo" class="headerlink" title="bigtop repo"></a>bigtop repo</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#bigtop repo(192.168.80.225): </span><br><span class="line">cd /vagrant/bigdatarepo</span><br><span class="line">yum install createrepo</span><br><span class="line">createrepo .</span><br><span class="line">nohup python -m SimpleHTTPServer &amp;</span><br><span class="line">http://192.168.80.225:8000/</span><br></pre></td></tr></table></figure>
<h6 id="Install-Hadoop-Ecosystem"><a href="#Install-Hadoop-Ecosystem" class="headerlink" title="Install Hadoop Ecosystem"></a>Install Hadoop Ecosystem</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">web portal:</span><br><span class="line">http://192.168.80.225:8080/</span><br><span class="line">admin/admin</span><br><span class="line"></span><br><span class="line"><span class="comment">#input machine informations:</span></span><br><span class="line">namenode01-test.zerofinance.net</span><br><span class="line">namenode02-test.zerofinance.net</span><br><span class="line">datanode01-test.zerofinance.net</span><br><span class="line">datanode02-test.zerofinance.net</span><br><span class="line">datanode03-test.zerofinance.net</span><br><span class="line"></span><br><span class="line"><span class="comment">#Using .ssh-key to setup</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Notice:</span></span><br><span class="line">Cluster Name : dwh</span><br><span class="line"><span class="comment">#Chose the hdfs account as "hadoop" not "hdfs"</span></span><br><span class="line"></span><br><span class="line">Repositories:</span><br><span class="line">http://192.168.80.225:8000/</span><br></pre></td></tr></table></figure>
<h6 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1.hive went wrong by:</span><br><span class="line">Sys DB and Information Schema not created yet</span><br><span class="line"></span><br><span class="line"><span class="comment">#Login on specific machine：</span></span><br><span class="line"><span class="built_in">cd</span> /etc/hive/</span><br><span class="line">touch /etc/hive/sys.db.created</span><br><span class="line"><span class="comment">#restart ambari-server</span></span><br><span class="line">sudo systemctl restart ambari-server</span><br><span class="line"></span><br><span class="line"><span class="comment">#Add new component, an error was caucse:</span></span><br><span class="line">ambari 500 status code received on POST method <span class="keyword">for</span> API:</span><br><span class="line"><span class="comment">#https://www.jianshu.com/p/3b54ba251c9e</span></span><br><span class="line">chown -R hadoop:hadoop /var/run/ambari-server</span><br><span class="line"></span><br><span class="line"><span class="comment">#Cannot create /var/run/ambari-server/stack-recommendations:</span></span><br><span class="line">chown -R hadoop:hadoop /var/run/ambari-server</span><br><span class="line"></span><br><span class="line"><span class="comment">#Web Portal：</span></span><br><span class="line">HDFS---&gt;CONFIGS: </span><br><span class="line">search <span class="keyword">for</span> hive, changed hadoop.proxyuser.hive.hosts to *</span><br><span class="line"></span><br><span class="line"><span class="comment">#mkdir: Permission denied: user=root, access=WRITE, inode="/":hdfs:hdfs:drwxr-xr-x</span></span><br><span class="line">https://blog.csdn.net/gdkyxy2013/article/details/105254907</span><br><span class="line"></span><br><span class="line"><span class="comment">#zeppelin cannot ran flink 1.15.3：</span></span><br><span class="line"><span class="built_in">cd</span> /usr/bigtop/current/flink-client/lib</span><br><span class="line">mv flink-dist-1.15.3.jar flink-dist_2.12-1.15.3.jar</span><br><span class="line"><span class="comment">#zeppelin does not support with flink 1.15.3, see: </span></span><br><span class="line"><span class="comment">#https://github.com/apache/zeppelin/blob/v0.10.1/flink/flink-shims/src/main/java/org/apache/zeppelin/flink/FlinkShims.java</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#zeppelin open job function:</span></span><br><span class="line">Ambari---&gt;Zeppelin---&gt;Custom zeppelin-site:</span><br><span class="line">zeppelin.jobmanager.enable: <span class="literal">true</span></span><br><span class="line"><span class="comment">#reboot zeppelin.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Get version error by command: flink -v</span></span><br><span class="line"><span class="comment">#Version: &lt;unknown&gt;, Commit ID: DeadD0d0</span></span><br><span class="line"><span class="comment">#Downloading flink-1.15.3-bin-scala_2.12.tgz from official web site, extract flink-dist-1.15.3.jar from lib, then:</span></span><br><span class="line">cp -a flink-dist-1.15.3.jar /usr/bigtop/current/flink-client/lib/flink-dist_2.12-1.15.3.jar</span><br><span class="line"></span><br><span class="line"><span class="comment">#Troubleshooting ambari metric</span></span><br><span class="line"><span class="comment">#https://cwiki.apache.org/confluence/display/AMBARI/Cleaning+up+Ambari+Metrics+System+Data</span></span><br><span class="line"><span class="comment">#https://www.jianshu.com/p/3fa7a23818a1</span></span><br><span class="line"><span class="comment">#https://xieshaohu.wordpress.com/2021/06/15/ambari-metrics%E5%90%AF%E5%8A%A8%E5%90%8E%E8%87%AA%E5%8A%A8%E5%81%9C%E6%AD%A2/</span></span><br><span class="line"></span><br><span class="line">CONFIG:</span><br><span class="line">hbase.tmp.dir---&gt;/var/lib/ambari-metrics-collector/hbase-tmp</span><br><span class="line"></span><br><span class="line">zkCli.sh</span><br><span class="line">deleteall /ams-hbase-unsecure /ambari-metrics-cluster</span><br><span class="line"></span><br><span class="line">sudo -u hadoop hadoop fs -mv /user/ams/hbase /user/ams/hbase.bak</span><br><span class="line">sudo -u hadoop hadoop fs -mkdir /user/ams/hbase</span><br><span class="line">rm -fr /var/lib/ambari-metrics-collector/*</span><br><span class="line">rm -fr  /vagrant/var/</span><br><span class="line"><span class="comment">#restart Ambari Metrics on web ui.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Ambari Metrics Grafana password creation failed. PUT request status: 401 Unauthorized</span></span><br><span class="line">ambari-metrics-monitor status</span><br><span class="line">ambari-metrics-collector status</span><br><span class="line">mv /var/lib/ambari-metrics-grafana/grafana.db /tmp/</span><br><span class="line">or:</span><br><span class="line"><span class="comment">#https://blog.csdn.net/qq_37865420/article/details/104040970</span></span><br><span class="line"><span class="comment">#https://cloud.tencent.com/developer/ask/sof/114883574</span></span><br><span class="line">sqlite3 /var/lib/ambari-metrics-grafana/grafana.db</span><br><span class="line"></span><br><span class="line">sqlite&gt; update user <span class="built_in">set</span> password = <span class="string">'59acf18b94d7eb0694c61e60ce44c110c7a683ac6a8f09580d626f90f4a242000746579358d77dd9e570e83fa24faa88a8a6'</span>, salt = <span class="string">'F3FAxVm33R'</span> <span class="built_in">where</span> login = <span class="string">'admin'</span>;</span><br><span class="line"></span><br><span class="line">sqlite&gt; .<span class="built_in">exit</span></span><br></pre></td></tr></table></figure>
<h2 id="dolphinscheduler"><a href="#dolphinscheduler" class="headerlink" title="dolphinscheduler"></a>dolphinscheduler</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://dolphinscheduler.apache.org/zh-cn/docs/3.1.8/guide/installation/pseudo-cluster</span></span><br><span class="line"><span class="comment">#Must install with hadoop account:</span></span><br><span class="line">sudo su - hadoop</span><br><span class="line"><span class="comment">#docker env: need to shutdown eth0 or cannot register the actual ip to zokeeper: </span></span><br><span class="line">ifconfig eth0 down</span><br><span class="line"></span><br><span class="line"><span class="comment">#https://blog.csdn.net/Keyuchen_01/article/details/128653687</span></span><br><span class="line">mysql -uroot -p</span><br><span class="line"><span class="built_in">set</span> global validate_password_policy=0;</span><br><span class="line">CREATE DATABASE dolphinscheduler DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;</span><br><span class="line">CREATE USER <span class="string">'ds'</span>@<span class="string">'%'</span> IDENTIFIED BY <span class="string">'Aa123456'</span>;</span><br><span class="line">GRANT ALL PRIVILEGES ON dolphinscheduler.* TO <span class="string">'ds'</span>@<span class="string">'%'</span>;</span><br><span class="line">FLUSH PRIVILEGES;</span><br><span class="line"></span><br><span class="line"><span class="comment">#mkdir lib</span></span><br><span class="line"><span class="comment">#cp mysql-connector-j-8.0.31.jar ./apache-dolphinscheduler-3.1.2-bin/lib/</span></span><br><span class="line">cp mysql-connector-j-8.0.31.jar ./apache-dolphinscheduler-3.1.2-bin/api-server/libs/</span><br><span class="line">cp mysql-connector-j-8.0.31.jar ./apache-dolphinscheduler-3.1.2-bin/alert-server/libs/</span><br><span class="line">cp mysql-connector-j-8.0.31.jar ./apache-dolphinscheduler-3.1.2-bin/master-server/libs/</span><br><span class="line">cp mysql-connector-j-8.0.31.jar ./apache-dolphinscheduler-3.1.2-bin/worker-server/libs/</span><br><span class="line">cp mysql-connector-j-8.0.31.jar ./apache-dolphinscheduler-3.1.2-bin/tools/libs/</span><br><span class="line"></span><br><span class="line">vim bin/env/install_env.sh</span><br><span class="line">ips=<span class="variable">$&#123;ips:-"namenode01-test.zerofinance.net,namenode02-test.zerofinance.net,datanode01-test.zerofinance.net,datanode02-test.zerofinance.net,datanode03-test.zerofinance.net"&#125;</span></span><br><span class="line">masters=<span class="variable">$&#123;masters:-"namenode01-test.zerofinance.net,namenode02-test.zerofinance.net"&#125;</span></span><br><span class="line">workers=<span class="variable">$&#123;workers:-"datanode01-test.zerofinance.net:default,datanode02-test.zerofinance.net:default,datanode03-test.zerofinance.net:default"&#125;</span></span><br><span class="line">alertServer=<span class="variable">$&#123;alertServer:-"namenode01-test.zerofinance.net"&#125;</span></span><br><span class="line">apiServers=<span class="variable">$&#123;apiServers:-"namenode01-test.zerofinance.net"&#125;</span></span><br><span class="line">deployUser=<span class="variable">$&#123;deployUser:-"hadoop"&#125;</span></span><br><span class="line">installPath=<span class="variable">$&#123;installPath:-"/works/app/dolphinscheduler"&#125;</span></span><br><span class="line"></span><br><span class="line">vim bin/env/dolphinscheduler_env.sh</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=<span class="variable">$&#123;JAVA_HOME:-/works/app/jdk/jdk1.8.0_371&#125;</span></span><br><span class="line"><span class="built_in">export</span> DATABASE=<span class="variable">$&#123;DATABASE:-mysql&#125;</span></span><br><span class="line"><span class="built_in">export</span> SPRING_PROFILES_ACTIVE=<span class="variable">$&#123;DATABASE&#125;</span></span><br><span class="line"><span class="built_in">export</span> SPRING_DATASOURCE_URL=jdbc:mysql://192.168.80.225:3306/dolphinscheduler?useUnicode=<span class="literal">true</span>&amp;characterEncoding=UTF-8&amp;useSSL=<span class="literal">false</span></span><br><span class="line"><span class="built_in">export</span> SPRING_DATASOURCE_USERNAME=ds</span><br><span class="line"><span class="built_in">export</span> SPRING_DATASOURCE_PASSWORD=Aa123456</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> REGISTRY_ZOOKEEPER_CONNECT_STRING=$&#123;REGISTRY_ZOOKEEPER_CONNECT_STRING:-datanode01-test.zerofinance.net:2181,datanode02-test.zerofinance.net:2181,datanode03-test.zerofinanc</span><br><span class="line">e.net:2181&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> HADOOP_HOME=<span class="variable">$&#123;HADOOP_HOME:-/usr/bigtop/current/hadoop-client&#125;</span></span><br><span class="line"><span class="built_in">export</span> HADOOP_CONF_DIR=<span class="variable">$&#123;HADOOP_CONF_DIR:-/usr/bigtop/current/hadoop-client/etc/hadoop/&#125;</span></span><br><span class="line"><span class="built_in">export</span> SPARK_HOME1=<span class="variable">$&#123;SPARK_HOME1:-/usr/bigtop/current/spark-client&#125;</span></span><br><span class="line"><span class="comment">#export SPARK_HOME2=$&#123;SPARK_HOME2:-/opt/soft/spark2&#125;</span></span><br><span class="line"><span class="built_in">export</span> PYTHON_HOME=<span class="variable">$&#123;PYTHON_HOME:-/usr&#125;</span></span><br><span class="line"><span class="built_in">export</span> HIVE_HOME=<span class="variable">$&#123;HIVE_HOME:-/usr/bigtop/current/hive-client&#125;</span></span><br><span class="line"><span class="built_in">export</span> FLINK_HOME=<span class="variable">$&#123;FLINK_HOME:-/usr/bigtop/current/flink-client&#125;</span></span><br><span class="line"><span class="built_in">export</span> DATAX_HOME=<span class="variable">$&#123;DATAX_HOME:-/opt/soft/datax&#125;</span></span><br><span class="line"><span class="built_in">export</span> SEATUNNEL_HOME=<span class="variable">$&#123;SEATUNNEL_HOME:-/opt/soft/seatunnel&#125;</span></span><br><span class="line"><span class="built_in">export</span> CHUNJUN_HOME=<span class="variable">$&#123;CHUNJUN_HOME:-/opt/soft/chunjun&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /vagrant/apache-dolphinscheduler-3.1.2-bin</span><br><span class="line">bash tools/bin/upgrade-schema.sh</span><br><span class="line">sh bin/install.sh</span><br><span class="line"></span><br><span class="line">Web Portal:</span><br><span class="line">http://namenode01-test.zerofinance.net:12345/dolphinscheduler/ui</span><br></pre></td></tr></table></figure>
<p>Summary</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Components:                  </span><br><span class="line">  HDFS/YARN/MapReduce2/Tez/Hive/Hbase/ZooKeeper/Spark/Zeppelin/Flink/Datax/Dolphinscheduler/Flume</span><br><span class="line">Compoments path:        </span><br><span class="line">  /usr/bigtop/current/&#123;hadoop-client,spark-client,hive-client,flink-client&#125;</span><br><span class="line">Vagrant root folder:      </span><br><span class="line">  /works/tools/vagrant</span><br><span class="line"></span><br><span class="line">Ambari UI:                       </span><br><span class="line">  http://namenode01-test.zerofinance.net:8080/                      </span><br><span class="line">  admin/admin</span><br><span class="line">Dolphinescheduler UI:   </span><br><span class="line">  http://namenode01-test.zerofinance.net:12345/dolphinscheduler/ui                 </span><br><span class="line">  admin/dolphinscheduler123</span><br><span class="line">Kafka Brokers:                </span><br><span class="line">  192.168.65.107:9092,192.168.65.108:9092,192.168.66.110:9092</span><br><span class="line">Kafka UI:                          </span><br><span class="line">  https://kafka-ui-test.zerofinance.net/     admin/admin</span><br></pre></td></tr></table></figure>
<p><strong><em>Notice: dolphinscheduler 3.1.2 seems having a bug by working with Flink-Stream, the error as follows. I have no idea to resolve it:</em></strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[ERROR] 2023-09-22 09:47:30.455 +0000 - Task execute failed, due to meet an exception</span><br><span class="line">java.lang.RuntimeException: The jar for the task is required.</span><br><span class="line">	at org.apache.dolphinscheduler.plugin.task.api.AbstractYarnTask.getResourceNameOfMainJar(AbstractYarnTask.java:133)</span><br><span class="line">	at org.apache.dolphinscheduler.plugin.task.flink.FlinkStreamTask.setMainJarName(FlinkStreamTask.java:86)</span><br><span class="line">	at org.apache.dolphinscheduler.plugin.task.flink.FlinkStreamTask.init(FlinkStreamTask.java:61)</span><br><span class="line">	at org.apache.dolphinscheduler.server.worker.runner.WorkerTaskExecuteRunnable.beforeExecute(WorkerTaskExecuteRunnable.java:231)</span><br><span class="line">	at org.apache.dolphinscheduler.server.worker.runner.WorkerTaskExecuteRunnable.run(WorkerTaskExecuteRunnable.java:170)</span><br><span class="line">	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)</span><br><span class="line">	at com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask.runInterruptibly(TrustedListenableFutureTask.java:131)</span><br><span class="line">	at com.google.common.util.concurrent.InterruptibleTask.run(InterruptibleTask.java:74)</span><br><span class="line">	at com.google.common.util.concurrent.TrustedListenableFutureTask.run(TrustedListenableFutureTask.java:82)</span><br><span class="line">	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)</span><br><span class="line">	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)</span><br><span class="line">	at java.lang.Thread.run(Thread.java:750)</span><br><span class="line">[ERROR] 2023-09-22 09:47:30.456 +0000 - can not get appId, taskInstanceId:573</span><br></pre></td></tr></table></figure>
<h2 id="Hadoop"><a href="#Hadoop" class="headerlink" title="Hadoop"></a>Hadoop</h2><p>The Apache™ Hadoop® project develops open-source software for reliable, scalable, distributed computing.</p>
<p>The Apache Hadoop software library is a framework that allows for the distributed processing of large data sets across clusters of computers using simple programming models. It is designed to scale up from single servers to thousands of machines, each offering local computation and storage. Rather than rely on hardware to deliver high-availability, the library itself is designed to detect and handle failures at the application layer, so delivering a highly-available service on top of a cluster of computers, each of which may be prone to failures.</p>
<p>Introduction: <a href="https://github.com/heibaiying/BigData-Notes/blob/master/notes/Hadoop-HDFS.md" target="_blank" rel="noopener">BigData-Notes/notes/Hadoop-HDFS.md at master · heibaiying/BigData-Notes (github.com)</a></p>
<p>Shell: <a href="https://github.com/heibaiying/BigData-Notes/blob/master/notes/HDFS常用Shell命令.md" target="_blank" rel="noopener">BigData-Notes/notes/HDFS常用Shell命令.md at master · heibaiying/BigData-Notes (github.com)</a></p>
<p>​           <a href="https://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-common/FileSystemShell.html" target="_blank" rel="noopener">FileSystemShell</a></p>
<p>HDFS: <a href="https://github.com/heibaiying/BigData-Notes/blob/master/notes/Hadoop-HDFS.md" target="_blank" rel="noopener">BigData-Notes/notes/Hadoop-HDFS.md at master · heibaiying/BigData-Notes (github.com)</a></p>
<p>MapReduce2: <a href="https://github.com/heibaiying/BigData-Notes/blob/master/notes/Hadoop-MapReduce.md" target="_blank" rel="noopener">BigData-Notes/notes/Hadoop-MapReduce.md at master · heibaiying/BigData-Notes (github.com)</a></p>
<p>YARN: <a href="https://github.com/heibaiying/BigData-Notes/blob/master/notes/Hadoop-YARN.md" target="_blank" rel="noopener">BigData-Notes/notes/Hadoop-YARN.md at master · heibaiying/BigData-Notes (github.com)</a></p>
<p>JavaAPI: <a href="https://github.com/heibaiying/BigData-Notes/blob/master/notes/HDFS-Java-API.md" target="_blank" rel="noopener">BigData-Notes/notes/HDFS-Java-API.md at master · heibaiying/BigData-Notes (github.com)</a></p>
<h3 id="Windows-Client"><a href="#Windows-Client" class="headerlink" title="Windows Client"></a>Windows Client</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://gitcode.net/mirrors/cdarlint/winutils</span><br><span class="line">cp -a winutils/hadoop-3.3.5 /Developer/</span><br><span class="line"><span class="comment">#Set variable in environment:</span></span><br><span class="line"><span class="built_in">set</span> HADOOP_HOME=D:\Developer\hadoop-3.3.5</span><br><span class="line">Add PATH as: %HADOOP_HOME%\bin</span><br></pre></td></tr></table></figure>
<h3 id="Configuation"><a href="#Configuation" class="headerlink" title="Configuation"></a>Configuation</h3><p>Put core-site.xml and hdfs-site.xml to resources folder of your java project:</p>
<h4 id="core-site-xml"><a href="#core-site-xml" class="headerlink" title="core-site.xml"></a>core-site.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>  <span class="attr">xmlns:xi</span>=<span class="string">"http://www.w3.org/2001/XInclude"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.defaultFS<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://mycluster<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="hdfs-site-xml"><a href="#hdfs-site-xml" class="headerlink" title="hdfs-site.xml"></a>hdfs-site.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">xmlns:xi</span>=<span class="string">"http://www.w3.org/2001/XInclude"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.nameservices<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>mycluster<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.internal.nameservices<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>mycluster<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.ha.namenodes.mycluster<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>nn1,nn2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.http-address.mycluster.nn1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>namenode01-test.zerofinance.net:50070<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.http-address.mycluster.nn2<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>namenode02-test.zerofinance.net:50070<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.https-address.mycluster.nn1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>namenode01-test.zerofinance.net:50470<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.https-address.mycluster.nn2<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>namenode02-test.zerofinance.net:50470<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.rpc-address.mycluster.nn1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>namenode01-test.zerofinance.net:8020<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.rpc-address.mycluster.nn2<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>namenode02-test.zerofinance.net:8020<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.client.failover.proxy.provider.mycluster<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="Hive"><a href="#Hive" class="headerlink" title="Hive"></a>Hive</h2><p>The Apache Hive ™ is a distributed, fault-tolerant data warehouse system that enables analytics at a massive scale and facilitates reading, writing, and managing petabytes of data residing in distributed storage using SQL.</p>
<p><a href="https://cwiki.apache.org/confluence/display/Hive/GettingStarted" target="_blank" rel="noopener">GettingStarted</a></p>
<h3 id="internal-table"><a href="#internal-table" class="headerlink" title="internal table"></a>internal table</h3><p>If table has beed deleted, all data will be delete accordingly, including meta data and file data.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DML</span><br><span class="line">#LOAD DATA [LOCAL] INPATH &apos;filepath&apos; [OVERWRITE] INTO TABLE tablename [PARTITION (partcol1=val1, partcol2=val2 ...)]</span><br><span class="line">#filepath can be:</span><br><span class="line">#a relative path, such as project/data1</span><br><span class="line">#an absolute path, such as /user/hive/project/data1</span><br><span class="line">#a full URI with scheme and (optionally) an authority, such as hdfs://namenode:9000/user/hive/project/data1</span><br><span class="line">The keyword &apos;OVERWRITE&apos; signifies that existing data in the table is deleted. If the &apos;OVERWRITE&apos; keyword is omitted, data files are appended to existing data sets.</span><br><span class="line"></span><br><span class="line">#default as internal table: </span><br><span class="line">CREATE TABLE pokes (foo INT, bar STRING) ROW FORMAT DELIMITED FIELDS TERMINATED BY &apos; &apos; STORED AS TEXTFILE;</span><br><span class="line"></span><br><span class="line">sudo -u hive hadoop fs -put -f /tmp/kv1.txt /user/hive/demo/</span><br><span class="line">LOAD DATA INPATH &apos;./demo/kv1.txt&apos; OVERWRITE INTO TABLE pokes;</span><br><span class="line">#When it&apos;s done, the file located in hdfs will be deleted.</span><br><span class="line">select * from pokes;</span><br></pre></td></tr></table></figure>
<h3 id="external-table"><a href="#external-table" class="headerlink" title="external table"></a>external table</h3><p>If table has beed deleted, just meta data will be deleted. once you create table again, the data will be restored, no need load again.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#sudo -u hdfs hadoop fs -chown -R hive:hive /works/test/</span><br><span class="line">#sudo -u hive hadoop fs -cp  /user/hive/demo/kv1.txt /works/test/</span><br><span class="line">sudo -u hive hadoop fs -put -f /tmp/kv1.txt /works/demo/</span><br><span class="line">create external table mytest ( id int, myfields string ) ROW FORMAT DELIMITED FIELDS TERMINATED BY &apos; &apos; STORED AS TEXTFILE location &apos;/works/test/&apos;;</span><br><span class="line">LOAD DATA INPATH &apos;/works/demo/kv1.txt&apos; OVERWRITE INTO TABLE mytest;</span><br><span class="line">describe formatted mytest;</span><br></pre></td></tr></table></figure>
<h3 id="Partition"><a href="#Partition" class="headerlink" title="Partition"></a>Partition</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE TABLE invites (foo INT, bar STRING) PARTITIONED BY (ds STRING) ROW FORMAT DELIMITED FIELDS TERMINATED BY &apos; &apos; STORED AS TEXTFILE;</span><br><span class="line">#sudo -u hive hadoop fs -put -f /tmp/kv1.txt /user/hive/demo/</span><br><span class="line">LOAD DATA INPATH &apos;./demo/kv1.txt&apos; OVERWRITE INTO TABLE invites PARTITION (ds=&apos;2008-08-15&apos;);</span><br><span class="line">select * from invites;</span><br><span class="line">SELECT a.foo FROM invites a WHERE a.ds=&apos;2008-08-15&apos;;</span><br></pre></td></tr></table></figure>
<h3 id="Insert-Directory"><a href="#Insert-Directory" class="headerlink" title="Insert Directory"></a>Insert Directory</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#selects all rows from partition ds=2008-08-15 of the invites table into an HDFS directory. The result data is in files (depending on the number of mappers) in that directory.</span><br><span class="line">NOTE: partition columns if any are selected by the use of *. They can also be specified in the projection clauses.</span><br><span class="line"></span><br><span class="line">INSERT OVERWRITE DIRECTORY &apos;/tmp/hdfs_out&apos; SELECT a.* FROM invites a WHERE a.ds=&apos;2008-08-15&apos;;</span><br><span class="line">#local dirctory located on the same node of hiveserver2.</span><br><span class="line">INSERT OVERWRITE LOCAL DIRECTORY &apos;/tmp/local_out&apos; SELECT a.* FROM pokes a;</span><br></pre></td></tr></table></figure>
<h3 id="Insert-Table"><a href="#Insert-Table" class="headerlink" title="Insert Table"></a>Insert Table</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE TABLE events (foo INT, bar STRING) ROW FORMAT DELIMITED FIELDS TERMINATED BY &apos; &apos; STORED AS TEXTFILE;</span><br><span class="line">INSERT OVERWRITE TABLE events SELECT a.* FROM pokes a;</span><br><span class="line">FROM invites a INSERT OVERWRITE TABLE events SELECT a.bar, count(*) WHERE a.foo &gt; 0 GROUP BY a.bar;</span><br><span class="line">INSERT OVERWRITE TABLE events SELECT a.bar, count(*) FROM invites a WHERE a.foo &gt; 0 GROUP BY a.bar;</span><br></pre></td></tr></table></figure>
<h3 id="Date-Type"><a href="#Date-Type" class="headerlink" title="Date Type"></a>Date Type</h3><p><a href="https://hadoopdoc.com/hive/hive-data-type" target="_blank" rel="noopener">Hive 数据类型 | Hive 教程 (hadoopdoc.com)</a></p>
<p>A complex demo for data type.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> students(</span><br><span class="line"> <span class="keyword">name</span>     <span class="keyword">STRING</span>,   <span class="comment">-- 姓名</span></span><br><span class="line"> age       <span class="built_in">INT</span>,      <span class="comment">-- 年龄</span></span><br><span class="line"> subject   <span class="built_in">ARRAY</span>&lt;<span class="keyword">STRING</span>&gt;,   <span class="comment">--学科</span></span><br><span class="line"> score     <span class="keyword">MAP</span>&lt;<span class="keyword">STRING</span>,<span class="built_in">FLOAT</span>&gt;,  <span class="comment">--各个学科考试成绩</span></span><br><span class="line"> address   <span class="keyword">STRUCT</span>&lt;houseNumber:<span class="built_in">int</span>, street:<span class="keyword">STRING</span>, city:<span class="keyword">STRING</span>, province:<span class="keyword">STRING</span>&gt;  <span class="comment">--家庭居住地址</span></span><br><span class="line">) <span class="keyword">ROW</span> <span class="keyword">FORMAT</span> <span class="keyword">DELIMITED</span> <span class="keyword">FIELDS</span> <span class="keyword">TERMINATED</span> <span class="keyword">BY</span> <span class="string">"\t"</span> </span><br><span class="line"><span class="keyword">STORED</span> <span class="keyword">AS</span> TEXTFILE;</span><br></pre></td></tr></table></figure>
<h4 id="STRUCT"><a href="#STRUCT" class="headerlink" title="STRUCT"></a>STRUCT</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE TABLE IF NOT EXISTS person_1 (id int,info struct&lt;name:string,country:string&gt;)  </span><br><span class="line">ROW FORMAT DELIMITED FIELDS TERMINATED BY &apos;,&apos; </span><br><span class="line">COLLECTION ITEMS TERMINATED BY &apos;:&apos; </span><br><span class="line">STORED AS TEXTFILE;</span><br><span class="line"></span><br><span class="line">//创建一个文本文件test_struct.txt</span><br><span class="line">1,&apos;dd&apos;:&apos;jp&apos;</span><br><span class="line">2,&apos;ee&apos;:&apos;cn&apos;</span><br><span class="line">3,&apos;gg&apos;:&apos;jp&apos;</span><br><span class="line">4,&apos;ff&apos;:&apos;cn&apos;</span><br><span class="line">5,&apos;tt&apos;:&apos;jp&apos;</span><br><span class="line"></span><br><span class="line">sudo -u hive hadoop fs -put /works/test/test_struct.txt /user/hive/demo/</span><br><span class="line">LOAD DATA INPATH &apos;./demo/test_struct.txt&apos; OVERWRITE INTO TABLE person_1;</span><br><span class="line"></span><br><span class="line">select * from person_1;</span><br><span class="line">+--------------+-----------------------------------+</span><br><span class="line">| person_1.id  |           person_1.info           |</span><br><span class="line">+--------------+-----------------------------------+</span><br><span class="line">| 1            | &#123;&quot;name&quot;:&quot;&apos;dd&apos;&quot;,&quot;country&quot;:&quot;&apos;jp&apos;&quot;&#125;  |</span><br><span class="line">| 2            | &#123;&quot;name&quot;:&quot;&apos;ee&apos;&quot;,&quot;country&quot;:&quot;&apos;cn&apos;&quot;&#125;  |</span><br><span class="line">| 3            | &#123;&quot;name&quot;:&quot;&apos;gg&apos;&quot;,&quot;country&quot;:&quot;&apos;jp&apos;&quot;&#125;  |</span><br><span class="line">| 4            | &#123;&quot;name&quot;:&quot;&apos;ff&apos;&quot;,&quot;country&quot;:&quot;&apos;cn&apos;&quot;&#125;  |</span><br><span class="line">| 5            | &#123;&quot;name&quot;:&quot;&apos;tt&apos;&quot;,&quot;country&quot;:&quot;&apos;jp&apos;&quot;&#125;  |</span><br><span class="line">+--------------+------------------------</span><br><span class="line"></span><br><span class="line">select id,info.name,info.country from person_1 where info.name=&apos;\&apos;dd\&apos;&apos;;</span><br><span class="line">+-----+-------+----------+</span><br><span class="line">| id  | name  | country  |</span><br><span class="line">+-----+-------+----------+</span><br><span class="line">| 1   | &apos;dd&apos;  | &apos;jp&apos;     |</span><br><span class="line">+-----+-------+----------+</span><br><span class="line">1 row selected (0.316 seconds)</span><br></pre></td></tr></table></figure>
<h4 id="ARRAY"><a href="#ARRAY" class="headerlink" title="ARRAY"></a>ARRAY</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE TABLE IF NOT EXISTS array_1 (id int,name array&lt;STRING&gt;)</span><br><span class="line">ROW FORMAT DELIMITED FIELDS TERMINATED BY &apos;,&apos; </span><br><span class="line">COLLECTION ITEMS TERMINATED BY &apos;:&apos; </span><br><span class="line">STORED AS TEXTFILE;</span><br><span class="line">//导入数据</span><br><span class="line">sudo -u hive hadoop fs -put /works/test/test_struct.txt /user/hive/demo/test_array.txt</span><br><span class="line">LOAD DATA INPATH &apos;./demo/test_array.txt&apos; OVERWRITE INTO TABLE array_1;</span><br><span class="line">//查询数据</span><br><span class="line">hive&gt; select * from array_1;</span><br><span class="line">OK</span><br><span class="line">1   [&quot;dd&quot;,&quot;jp&quot;]</span><br><span class="line">2   [&quot;ee&quot;,&quot;cn&quot;]</span><br><span class="line">3   [&quot;gg&quot;,&quot;jp&quot;]</span><br><span class="line">4   [&quot;ff&quot;,&quot;cn&quot;]</span><br><span class="line">5   [&quot;tt&quot;,&quot;jp&quot;]</span><br><span class="line">Time taken: 0.041 seconds, Fetched: 5 row(s)</span><br><span class="line">hive&gt; select id,name[0],name[1] from array_1 where name[1]=&apos;\&apos;cn\&apos;&apos;;</span><br><span class="line">+-----+-------+-------+</span><br><span class="line">| id  |  _c1  |  _c2  |</span><br><span class="line">+-----+-------+-------+</span><br><span class="line">| 2   | &apos;ee&apos;  | &apos;cn&apos;  |</span><br><span class="line">| 4   | &apos;ff&apos;  | &apos;cn&apos;  |</span><br><span class="line">+-----+-------+-------+</span><br><span class="line">2 rows selected (0.317 seconds)</span><br></pre></td></tr></table></figure>
<h4 id="MAP"><a href="#MAP" class="headerlink" title="MAP"></a>MAP</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE TABLE IF NOT EXISTS map_1 (id int,name map&lt;STRING,STRING&gt;)</span><br><span class="line">ROW FORMAT DELIMITED FIELDS TERMINATED BY &apos;|&apos; </span><br><span class="line">COLLECTION ITEMS TERMINATED BY &apos;,&apos; </span><br><span class="line">MAP KEYS TERMINATED BY &apos;:&apos;</span><br><span class="line">STORED AS TEXTFILE;</span><br><span class="line"></span><br><span class="line">cat test_map.txt    </span><br><span class="line">1|&apos;name&apos;:&apos;jp&apos;,&apos;country&apos;:&apos;cn&apos;</span><br><span class="line">2|&apos;name&apos;:&apos;jp&apos;,&apos;country&apos;:&apos;cn&apos;</span><br><span class="line"></span><br><span class="line">sudo -u hive hadoop fs -put /works/test/test_map.txt /user/hive/demo/test_map.txt</span><br><span class="line">//加载数据</span><br><span class="line">LOAD DATA INPATH &apos;./demo/test_map.txt&apos; OVERWRITE INTO TABLE map_1;</span><br><span class="line"></span><br><span class="line">//查询数据</span><br><span class="line">hive&gt; select * from map_1;</span><br><span class="line">+-----------+---------------------------------------+</span><br><span class="line">| map_1.id  |              map_1.name               |</span><br><span class="line">+-----------+---------------------------------------+</span><br><span class="line">| 1         | &#123;&quot;&apos;name&apos;&quot;:&quot;&apos;jp&apos;&quot;,&quot;&apos;country&apos;&quot;:&quot;&apos;cn&apos;&quot;&#125;  |</span><br><span class="line">| 2         | &#123;&quot;&apos;name&apos;&quot;:&quot;&apos;jp&apos;&quot;,&quot;&apos;country&apos;&quot;:&quot;&apos;cn&apos;&quot;&#125;  |</span><br><span class="line">+-----------+-----------------------------------</span><br><span class="line">hive&gt; select id,name[&quot;&apos;name&apos;&quot;],name[&quot;&apos;country&apos;&quot;] from map_1;</span><br><span class="line">+-----+-------+-------+</span><br><span class="line">| id  |  _c1  |  _c2  |</span><br><span class="line">+-----+-------+-------+</span><br><span class="line">| 1   | &apos;jp&apos;  | &apos;cn&apos;  |</span><br><span class="line">| 2   | &apos;jp&apos;  | &apos;cn&apos;  |</span><br><span class="line">+-----+-------+-------+</span><br><span class="line">hive&gt; select * from map_1 where name[&quot;&apos;country&apos;&quot;]=&apos;\&apos;cn\&apos;&apos;;</span><br><span class="line">+-----------+---------------------------------------+</span><br><span class="line">| map_1.id  |              map_1.name               |</span><br><span class="line">+-----------+---------------------------------------+</span><br><span class="line">| 1         | &#123;&quot;&apos;name&apos;&quot;:&quot;&apos;jp&apos;&quot;,&quot;&apos;country&apos;&quot;:&quot;&apos;cn&apos;&quot;&#125;  |</span><br><span class="line">| 2         | &#123;&quot;&apos;name&apos;&quot;:&quot;&apos;jp&apos;&quot;,&quot;&apos;country&apos;&quot;:&quot;&apos;cn&apos;&quot;&#125;  |</span><br><span class="line">+-----------+---------------------------------------+</span><br><span class="line">2 rows selected (0.287 seconds)</span><br><span class="line"></span><br><span class="line">hive&gt; insert into map_1(id,name)values(1, str_to_map(&quot;name:jp1,country:cn1&quot;)),(2, str_to_map(&quot;name:jp2,country:cn2&quot;));</span><br><span class="line">No rows affected (11.664 seconds)</span><br><span class="line">hive&gt; select * from map_1;</span><br><span class="line">+-----------+---------------------------------------+</span><br><span class="line">| map_1.id  |              map_1.name               |</span><br><span class="line">+-----------+---------------------------------------+</span><br><span class="line">| 1         | &#123;&quot;name&quot;:&quot;jp1&quot;,&quot;country&quot;:&quot;cn1&quot;&#125;        |</span><br><span class="line">| 2         | &#123;&quot;name&quot;:&quot;jp2&quot;,&quot;country&quot;:&quot;cn2&quot;&#125;        |</span><br><span class="line">+-----------+---------------------------------------+</span><br><span class="line">4 rows selected (0.482 seconds)</span><br></pre></td></tr></table></figure>
<p>UINON</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//创建DUAL表，插入一条记录，用于生成数据</span><br><span class="line">create table dual(d string);</span><br><span class="line">insert into dual values(&apos;X&apos;);</span><br><span class="line">//创建UNION表</span><br><span class="line">CREATE TABLE IF NOT EXISTS uniontype_1 </span><br><span class="line">(</span><br><span class="line">id int,</span><br><span class="line">info map&lt;STRING,array&lt;int&gt;&gt;</span><br><span class="line">)</span><br><span class="line">ROW FORMAT DELIMITED FIELDS TERMINATED BY &apos;,&apos; </span><br><span class="line">COLLECTION ITEMS TERMINATED BY &apos;-&apos;</span><br><span class="line">MAP KEYS TERMINATED BY &apos;:&apos;</span><br><span class="line">STORED AS TEXTFILE;</span><br><span class="line"></span><br><span class="line">//Insert</span><br><span class="line">insert overwrite table uniontype_1</span><br><span class="line">select 1 as id,map(&apos;english&apos;,array(99,21,33)) as info from dual</span><br><span class="line">union all</span><br><span class="line">select 2 as id,map(&apos;english&apos;,array(44,33,76)) as info from dual</span><br><span class="line">union all</span><br><span class="line">select 3 as id,map(&apos;english&apos;,array(76,88,66)) as info from dual;</span><br><span class="line"></span><br><span class="line">select * from uniontype_1;</span><br><span class="line">+-----------------+-------------------------+</span><br><span class="line">| uniontype_1.id  |    uniontype_1.info     |</span><br><span class="line">+-----------------+-------------------------+</span><br><span class="line">| 1               | &#123;&quot;english&quot;:[99,21,33]&#125;  |</span><br><span class="line">| 2               | &#123;&quot;english&quot;:[44,33,76]&#125;  |</span><br><span class="line">| 3               | &#123;&quot;english&quot;:[76,88,66]&#125;  |</span><br><span class="line">+-----------------+-------------------------+</span><br><span class="line">3 rows selected (0.432 seconds)</span><br><span class="line"></span><br><span class="line">select * from uniontype_1 where info[&apos;english&apos;][2]&gt;30;</span><br><span class="line">+-----------------+-------------------------+</span><br><span class="line">| uniontype_1.id  |    uniontype_1.info     |</span><br><span class="line">+-----------------+-------------------------+</span><br><span class="line">| 1               | &#123;&quot;english&quot;:[99,21,33]&#125;  |</span><br><span class="line">| 2               | &#123;&quot;english&quot;:[44,33,76]&#125;  |</span><br><span class="line">| 3               | &#123;&quot;english&quot;:[76,88,66]&#125;  |</span><br><span class="line">+-----------------+-------------------------+</span><br></pre></td></tr></table></figure>
<h2 id="ES"><a href="#ES" class="headerlink" title="ES"></a>ES</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull registry.zerofinance.net/library/elasticsearch:7.6.2</span><br><span class="line">docker pull registry.zerofinance.net/library/kibana:7.6.2</span><br><span class="line"></span><br><span class="line">mkdir -p /works/data/esdata-dev</span><br><span class="line">chmod -R 777 /works/data/esdata-dev</span><br><span class="line"></span><br><span class="line"><span class="comment">#https://www.cnblogs.com/baoshu/p/16128127.html</span></span><br><span class="line">docker network create es-network</span><br><span class="line"></span><br><span class="line">docker run -d --name elastic-dev  --restart always --<span class="built_in">log</span>-driver json-file --<span class="built_in">log</span>-opt max-size=200m --<span class="built_in">log</span>-opt max-file=3 --net es-network -p 9200:9200 -p 9300:9300 -v /works/data/esdata-dev:/usr/share/elasticsearch/data -e <span class="string">"discovery.type=single-node"</span> --<span class="built_in">ulimit</span> nofile=65535:65535 registry.zerofinance.net/library/elasticsearch:7.6.2</span><br><span class="line"></span><br><span class="line">curl http://192.168.63.102:9200/_cat</span><br><span class="line"></span><br><span class="line">docker run -d --name kibana-dev --net es-network -p 5601:5601 -e <span class="string">"ELASTICSEARCH_HOSTS=http://192.168.63.102:9200"</span>  registry.zerofinance.net/library/kibana:7.6.2</span><br><span class="line"></span><br><span class="line">http://192.168.63.102:5601/app/kibana<span class="comment">#/dev_tools/console</span></span><br></pre></td></tr></table></figure>
<h2 id="Flink"><a href="#Flink" class="headerlink" title="Flink"></a>Flink</h2><p><a href="https://github.com/heibaiying/BigData-Notes/blob/master/notes/Flink核心概念综述.md" target="_blank" rel="noopener">BigData-Notes/notes/Flink核心概念综述.md at master · heibaiying/BigData-Notes (github.com)</a></p>
<h3 id="Flink-SQL"><a href="#Flink-SQL" class="headerlink" title="Flink SQL"></a>Flink SQL</h3><p><a href="https://yangyichao-mango.github.io/2021/11/15/wechat-blog/01_大数据/01_数据仓库/01_实时数仓/02_数据内容建设/03_one-engine/01_计算引擎/01_flink/01_flink-sql/20_史上最全干货！FlinkSQL成神之路（全文6万字、110个知识点、160张图）/" target="_blank" rel="noopener">史上最全干货！Flink SQL 成神之路（全文 18 万字、138 个案例、42 张图） | antigeneral’s blog (yangyichao-mango.github.io)</a></p>
<h3 id="Deployment-Modes"><a href="#Deployment-Modes" class="headerlink" title="Deployment Modes"></a>Deployment Modes</h3><p>See this Overview to understand: <a href="https://nightlies.apache.org/flink/flink-docs-release-1.17/docs/deployment/overview/#deployment-modes" target="_blank" rel="noopener">deployment-modes</a></p>
<h4 id="Standalone"><a href="#Standalone" class="headerlink" title="Standalone"></a>Standalone</h4><p><a href="https://nightlies.apache.org/flink/flink-docs-release-1.17/docs/deployment/resource-providers/standalone/overview/" target="_blank" rel="noopener">https://nightlies.apache.org/flink/flink-docs-release-1.17/docs/deployment/resource-providers/standalone/overview/</a></p>
<h5 id="Session-Mode"><a href="#Session-Mode" class="headerlink" title="Session Mode"></a>Session Mode</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># we assume to be in the root directory of the unzipped Flink distribution</span><br><span class="line"></span><br><span class="line"># (1) Start Cluster</span><br><span class="line">$ ./bin/start-cluster.sh</span><br><span class="line"></span><br><span class="line"># (2) You can now access the Flink Web Interface on http://localhost:8081</span><br><span class="line"></span><br><span class="line"># (3) Submit example job</span><br><span class="line">$ ./bin/flink run ./examples/streaming/TopSpeedWindowing.jar</span><br><span class="line"></span><br><span class="line"># (4) Stop the cluster again</span><br><span class="line">$ ./bin/stop-cluster.sh</span><br></pre></td></tr></table></figure>
<p>In step <code>(1)</code>, we’ve started 2 processes: A JVM for the JobManager, and a JVM for the TaskManager. The JobManager is serving the web interface accessible at <a href="http://localhost:8081/" target="_blank" rel="noopener">localhost:8081</a>. In step <code>(3)</code>, we are starting a Flink Client (a short-lived JVM process) that submits an application to the JobManager.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#Troubleshooting: 8081 can be visited only for localhost</span><br><span class="line">cat /etc/hosts</span><br><span class="line">192.168.80.225   localhost</span><br></pre></td></tr></table></figure>
<h5 id="Application-Mode"><a href="#Application-Mode" class="headerlink" title="Application Mode"></a>Application Mode</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">To start a Flink JobManager with an embedded application, we use the bin/standalone-job.sh script. We demonstrate this mode by locally starting the TopSpeedWindowing.jar example, running on a single TaskManager.</span><br><span class="line"></span><br><span class="line">The application jar file needs to be available <span class="keyword">in</span> the classpath. The easiest approach to achieve that is putting the jar into the lib/ folder:</span><br><span class="line"></span><br><span class="line">$ cp ./examples/streaming/TopSpeedWindowing.jar lib/</span><br><span class="line">Then, we can launch the JobManager:</span><br><span class="line"></span><br><span class="line">$ ./bin/standalone-job.sh start --job-classname org.apache.flink.streaming.examples.windowing.TopSpeedWindowing</span><br><span class="line">The web interface is now available at localhost:8081. However, the application won’t be able to start, because there are no TaskManagers running yet:</span><br><span class="line"></span><br><span class="line">$ ./bin/taskmanager.sh start</span><br><span class="line">Note: You can start multiple TaskManagers, <span class="keyword">if</span> your application needs more resources.</span><br><span class="line"></span><br><span class="line">Stopping the services is also supported via the scripts. Call them multiple <span class="built_in">times</span> <span class="keyword">if</span> you want to stop multiple instances, or use stop-all:</span><br><span class="line"></span><br><span class="line">$ ./bin/taskmanager.sh stop</span><br><span class="line">$ ./bin/standalone-job.sh stop</span><br></pre></td></tr></table></figure>
<h4 id="YARN"><a href="#YARN" class="headerlink" title="YARN"></a>YARN</h4><p><a href="https://nightlies.apache.org/flink/flink-docs-release-1.17/docs/deployment/resource-providers/yarn/" target="_blank" rel="noopener">https://nightlies.apache.org/flink/flink-docs-release-1.17/docs/deployment/resource-providers/yarn/</a></p>
<h5 id="Session-Mode-1"><a href="#Session-Mode-1" class="headerlink" title="Session Mode"></a>Session Mode</h5><p><a href="https://nightlies.apache.org/flink/flink-docs-release-1.17/docs/deployment/resource-providers/yarn/#starting-a-flink-session-on-yarn" target="_blank" rel="noopener">starting-a-flink-session-on-yarn</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> HADOOP_CLASSPATH=`hadoop classpath`</span><br><span class="line"><span class="comment"># we assume to be in the root directory of </span></span><br><span class="line"><span class="comment"># the unzipped Flink distribution</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># (0) export HADOOP_CLASSPATH</span></span><br><span class="line"><span class="built_in">export</span> HADOOP_CLASSPATH=`hadoop classpath`</span><br><span class="line"></span><br><span class="line"><span class="comment"># (1) Start YARN Session</span></span><br><span class="line">./bin/yarn-session.sh --detached</span><br><span class="line"></span><br><span class="line"><span class="comment"># (2) You can now access the Flink Web Interface through the</span></span><br><span class="line"><span class="comment"># URL printed in the last lines of the command output, or through</span></span><br><span class="line"><span class="comment"># the YARN ResourceManager web UI.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># (3) Submit example job</span></span><br><span class="line">./bin/flink run ./examples/streaming/TopSpeedWindowing.jar</span><br><span class="line"></span><br><span class="line"><span class="comment"># (4) Stop YARN session (replace the application id based </span></span><br><span class="line"><span class="comment"># on the output of the yarn-session.sh command)</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"stop"</span> | ./bin/yarn-session.sh -id application_XXXXX_XXX</span><br></pre></td></tr></table></figure>
<p>Congratulations! You have successfully run a Flink application by deploying Flink on YARN.</p>
<p>We describe deployment with the Session Mode in the <a href="https://nightlies.apache.org/flink/flink-docs-release-1.17/docs/deployment/resource-providers/yarn/#getting-started" target="_blank" rel="noopener">Getting Started</a> guide at the top of the page.</p>
<p>The Session Mode has two operation modes:</p>
<ul>
<li><strong>attached mode</strong> (default): The <code>yarn-session.sh</code> client submits the Flink cluster to YARN, but the client keeps running, tracking the state of the cluster. If the cluster fails, the client will show the error. If the client gets terminated, it will signal the cluster to shut down as well.</li>
<li><strong>detached mode</strong> (<code>-d</code> or <code>--detached</code>): The <code>yarn-session.sh</code> client submits the Flink cluster to YARN, then the client returns. Another invocation of the client, or YARN tools is needed to stop the Flink cluster.</li>
</ul>
<p>The session mode will create a hidden YARN properties file in <code>/tmp/.yarn-properties-&lt;username&gt;</code>, which will be picked up for cluster discovery by the command line interface when submitting a job.</p>
<p>You can also <strong>manually specify the target YARN cluster</strong> in the command line interface when submitting a Flink job. Here’s an example:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./bin/flink run -t yarn-session \</span><br><span class="line">  -Dyarn.application.id=application_XXXX_YY \</span><br><span class="line">  ./examples/streaming/TopSpeedWindowing.jar</span><br></pre></td></tr></table></figure>
<p>You can <strong>re-attach to a YARN session</strong> using the following command:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">./bin/yarn-session.sh -id application_XXXX_YY</span><br></pre></td></tr></table></figure>
<p>Besides passing <a href="https://nightlies.apache.org/flink/flink-docs-release-1.17/docs/deployment/config/" target="_blank" rel="noopener">configuration</a> via the <code>conf/flink-conf.yaml</code> file, you can also pass any configuration at submission time to the <code>./bin/yarn-session.sh</code> client using <code>-Dkey=value</code> arguments.</p>
<p>The YARN session client also has a few “shortcut arguments” for commonly used settings. They can be listed with <code>./bin/yarn-session.sh -h</code>.</p>
<h5 id="Application-Mode-1"><a href="#Application-Mode-1" class="headerlink" title="Application Mode"></a>Application Mode</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Application Mode will launch a Flink cluster on YARN, <span class="built_in">where</span> the main() method of the application jar gets executed on the JobManager <span class="keyword">in</span> YARN. The cluster will shut down as soon as the application has finished. You can manually stop the cluster using yarn application -<span class="built_in">kill</span> &lt;ApplicationId&gt; or by cancelling the Flink job.</span><br><span class="line"></span><br><span class="line">./bin/flink run-application -t yarn-application ./examples/streaming/TopSpeedWindowing.jar</span><br><span class="line"></span><br><span class="line">Once an Application Mode cluster is deployed, you can interact with it <span class="keyword">for</span> operations like cancelling or taking a savepoint.</span><br><span class="line"></span><br><span class="line"><span class="comment"># List running job on the cluster</span></span><br><span class="line">./bin/flink list -t yarn-application -Dyarn.application.id=application_XXXX_YY</span><br><span class="line"></span><br><span class="line"><span class="comment"># Cancel running job</span></span><br><span class="line">./bin/flink cancel -t yarn-application -Dyarn.application.id=application_XXXX_YY &lt;jobId&gt;</span><br><span class="line"></span><br><span class="line">Note that cancelling your job on an Application Cluster will stop the cluster.</span><br><span class="line"></span><br><span class="line">To unlock the full potential of the application mode, consider using it with the yarn.provided.lib.dirs configuration option and pre-upload your application jar to a location accessible by all nodes <span class="keyword">in</span> your cluster. In this <span class="keyword">case</span>, the <span class="built_in">command</span> could look like:</span><br><span class="line"></span><br><span class="line">./bin/flink run-application -t yarn-application \</span><br><span class="line">	-Dyarn.provided.lib.dirs=<span class="string">"hdfs://myhdfs/my-remote-flink-dist-dir"</span> \</span><br><span class="line">	hdfs://myhdfs/jars/my-application.jar</span><br><span class="line">	</span><br><span class="line">The above will allow the job submission to be extra lightweight as the needed Flink jars and the application jar are going to be picked up by the specified remote locations rather than be shipped to the cluster by the client.</span><br></pre></td></tr></table></figure>
<h4 id="Native-kubernetes"><a href="#Native-kubernetes" class="headerlink" title="Native_kubernetes"></a>Native_kubernetes</h4><p><a href="https://nightlies.apache.org/flink/flink-docs-release-1.17/docs/deployment/filesystems/oss/" target="_blank" rel="noopener">https://nightlies.apache.org/flink/flink-docs-release-1.17/docs/deployment/filesystems/oss/</a></p>
<p><a href="https://nightlies.apache.org/flink/flink-docs-release-1.17/docs/deployment/resource-providers/native_kubernetes/" target="_blank" rel="noopener">https://nightlies.apache.org/flink/flink-docs-release-1.17/docs/deployment/resource-providers/native_kubernetes/</a></p>
<p><a href="https://nightlies.apache.org/flink/flink-docs-release-1.17/docs/deployment/ha/overview/" target="_blank" rel="noopener">https://nightlies.apache.org/flink/flink-docs-release-1.17/docs/deployment/ha/overview/</a></p>
<p><a href="https://nightlies.apache.org/flink/flink-docs-release-1.17/docs/deployment/ha/kubernetes_ha/" target="_blank" rel="noopener">https://nightlies.apache.org/flink/flink-docs-release-1.17/docs/deployment/ha/kubernetes_ha/</a></p>
<p><a href="https://nightlies.apache.org/flink/flink-docs-release-1.17/docs/deployment/config/#kubernetes" target="_blank" rel="noopener">https://nightlies.apache.org/flink/flink-docs-release-1.17/docs/deployment/config/#kubernetes</a></p>
<h5 id="K8s-On-Session"><a href="#K8s-On-Session" class="headerlink" title="K8s On Session"></a>K8s On Session</h5><p>Creating service account:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#https://blog.csdn.net/yy8623977/article/details/124989262</span><br><span class="line"></span><br><span class="line">#创建namespace、service账号和给账号授权</span><br><span class="line">kubectl create ns flink-test</span><br><span class="line">kubectl create serviceaccount flink-test -n flink-test</span><br><span class="line">kubectl create clusterrolebinding flink-role-bind --clusterrole=edit --serviceaccount=flink-test:flink-test</span><br><span class="line"></span><br><span class="line">#Resolved: configmaps is forbidden: User &quot;system:serviceaccount:flink-test:default&quot;</span><br><span class="line">#https://blog.csdn.net/wangmiaoyan/article/details/103254006</span><br><span class="line">kubectl create clusterrolebinding flink-test:flink-test --clusterrole=cluster-admin --user=system:serviceaccount:flink-test:default</span><br></pre></td></tr></table></figure>
<p>Building required jars into docker image(Or mount a folder from NAS).</p>
<p>Dockerfile:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">FROM apache/flink:1.17.2-scala_2.12</span><br><span class="line"></span><br><span class="line">USER root</span><br><span class="line"># Pod的时区默认是UTC，时间会比我们的少八小时。修改时区为Asia/Shanghai</span><br><span class="line">#RUN rm -f /etc/localtime &amp;&amp; ln -sv /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; echo &quot;Asia/Shanghai&quot; &gt; /etc/timezone</span><br><span class="line">RUN cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line"></span><br><span class="line">#解决不能写日志到dev下的问题</span><br><span class="line">RUN groupmod -g 1001 flink</span><br><span class="line">RUN usermod -u 1001 flink</span><br><span class="line">RUN chown -R 1001:1001 $FLINK_HOME/</span><br><span class="line"></span><br><span class="line">USER flink</span><br><span class="line">RUN mkdir -p $FLINK_HOME/usrlib</span><br><span class="line"></span><br><span class="line"># Copying libs</span><br><span class="line">COPY ./lib-1.17/* $FLINK_HOME/lib/</span><br></pre></td></tr></table></figure>
<p>ll ./lib-1.17/</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-rw-r--r--  1 root  root    266420 Jun 15  2023 flink-connector-jdbc-3.1.1-1.17.jar</span><br><span class="line">-rw-r--r--  1 root  root  25743957 Nov 10 16:32 flink-oss-fs-hadoop-1.17.2.jar</span><br><span class="line">-rw-r--r--  1 root  root  28440546 Apr 13  2023 flink-sql-connector-elasticsearch7-3.0.1-1.17.jar</span><br><span class="line">-rw-r--r--  1 root  root   5566107 Oct 26 04:26 flink-sql-connector-kafka-3.0.1-1.17.jar</span><br><span class="line">-rw-r--r--  1 root  root  23715175 Jan 19 12:07 flink-sql-connector-mysql-cdc-3.0.1.jar</span><br><span class="line">-rw-r--r--  1 root  root   2515447 Jan 18 15:01 mysql-connector-j-8.0.31.jar</span><br></pre></td></tr></table></figure>
<p>Build and push to registry:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker build -t registry.zerofinance.net/library/flink:1.17.2 .</span><br><span class="line">docker push registry.zerofinance.net/library/flink:1.17.2</span><br></pre></td></tr></table></figure>
<p>Starting flink job manager:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#For 1.15.x 1.16.x</span></span><br><span class="line">bin/kubernetes-session.sh \</span><br><span class="line"> -Dkubernetes.namespace=flink-test \</span><br><span class="line"> -Dkubernetes.jobmanager.service-account=flink-test \</span><br><span class="line"> -Dkubernetes.cluster-id=flink-cluster \</span><br><span class="line"> -Dakka.ask.timeout=100s \</span><br><span class="line"> -Dfs.oss.endpoint=https://oss-cn-hongkong.aliyuncs.com \</span><br><span class="line"> -Dfs.oss.accessKeyId=xxx \</span><br><span class="line"> -Dfs.oss.accessKeySecret=yyy \</span><br><span class="line"> -Dkubernetes.container.image=registry.zerofinance.net/library/flink:1.17.2 \</span><br><span class="line"> -Dkubernetes.container.image.pull-policy=Always \</span><br><span class="line"> -Dhigh-availability=org.apache.flink.kubernetes.highavailability.KubernetesHaServicesFactory \</span><br><span class="line"> -Dhigh-availability.storageDir=oss://flink-ha-test/recovery \</span><br><span class="line"> -Dstate.backend=rocksdb \</span><br><span class="line"> -Dstate.backend.incremental=<span class="literal">true</span> \</span><br><span class="line"> -Dstate.checkpoints.dir=oss://flink-ha-test/flink-checkpoints \</span><br><span class="line"> -Dstate.savepoints.dir=oss://flink-ha-test/flink-savepoints \</span><br><span class="line"> -Dkubernetes.container.image.pull-secrets=zzz \</span><br><span class="line"> -Dkubernetes.jobmanager.replicas=2 \</span><br><span class="line"> -Dkubernetes.jobmanager.cpu=0.2 \</span><br><span class="line"> -Djobmanager.memory.process.size=1024m \</span><br><span class="line"> -Dresourcemanager.taskmanager-timeout=3600000 \</span><br><span class="line"> -Dkubernetes.taskmanager.node-selector=flink-env:<span class="built_in">test</span> \</span><br><span class="line"> -Dkubernetes.taskmanager.tolerations=flink-env:<span class="built_in">test</span>,operator:Exists,effect:NoSchedule \</span><br><span class="line"> -Dkubernetes.taskmanager.cpu=0.2 \</span><br><span class="line"> -Dtaskmanager.memory.process.size=4096m \</span><br><span class="line"> -Denv.java.opts.jobmanager=-Duser.timezone=GMT+08 \</span><br><span class="line"> -Denv.java.opts.taskmanager=-Duser.timezone=GMT+08 \</span><br><span class="line"> -Dtaskmanager.numberOfTaskSlots=4</span><br><span class="line"></span><br><span class="line"><span class="comment">#For 1.17.x</span></span><br><span class="line">bin/kubernetes-session.sh \</span><br><span class="line"> -Dkubernetes.namespace=flink-test \</span><br><span class="line"> -Dkubernetes.jobmanager.service-account=flink-test \</span><br><span class="line"> -Dkubernetes.cluster-id=flink-test \</span><br><span class="line">-Dkubernetes.rest-service.exposed.type=NodePort \</span><br><span class="line"> -Dakka.ask.timeout=100s \</span><br><span class="line"> -Dfs.oss.endpoint=https://oss-cn-hongkong.aliyuncs.com \</span><br><span class="line"> -Dfs.oss.accessKeyId=xxx \</span><br><span class="line"> -Dfs.oss.accessKeySecret=yyy \</span><br><span class="line"> -Dkubernetes.container.image.ref=registry.zerofinance.net/library/flink:1.17.2 \</span><br><span class="line"> -Dkubernetes.container.image.pull-policy=Always \</span><br><span class="line"> -Dhigh-availability.type=kubernetes \</span><br><span class="line"> -Dhigh-availability.storageDir=oss://flink-cluster-test/recovery \</span><br><span class="line"> -Dstate.backend=rocksdb \</span><br><span class="line"> -Dstate.backend.incremental=<span class="literal">true</span> \</span><br><span class="line"> -Dstate.checkpoints.dir=oss://flink-cluster-test/flink-checkpoints \</span><br><span class="line"> -Dstate.savepoints.dir=oss://flink-cluster-test/flink-savepoints \</span><br><span class="line"> -Dkubernetes.container.image.pull-secrets=zzz \</span><br><span class="line"> -Dkubernetes.jobmanager.replicas=2 \</span><br><span class="line"> -Dkubernetes.jobmanager.cpu.amount=0.2 \</span><br><span class="line"> -Djobmanager.memory.process.size=1024m \</span><br><span class="line"> -Dresourcemanager.taskmanager-timeout=3600000 \</span><br><span class="line"> -Dkubernetes.taskmanager.node-selector=flink-env:<span class="built_in">test</span> \</span><br><span class="line"> -Dkubernetes.taskmanager.tolerations=flink-env:<span class="built_in">test</span>,operator:Exists,effect:NoSchedule \</span><br><span class="line"> -Dkubernetes.taskmanager.cpu.amount=0.2 \</span><br><span class="line"> -Dtaskmanager.memory.process.size=1024m \</span><br><span class="line"> -Denv.java.opts.jobmanager=-Duser.timezone=GMT+08 \</span><br><span class="line"> -Denv.java.opts.taskmanager=-Duser.timezone=GMT+08 \</span><br><span class="line"> -Dtaskmanager.numberOfTaskSlots=2</span><br></pre></td></tr></table></figure>
<p>Enable cluster-rest ingress:</p>
<p>flink-cluster-rest-ingress.yml:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">flink-cluster-rest-ingress</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">flink-test</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">tls:</span> <span class="string">[]</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">flink-rest-test.zerofinance.net</span></span><br><span class="line">      <span class="attr">http:</span></span><br><span class="line">        <span class="attr">paths:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">              <span class="attr">serviceName:</span> <span class="string">flink-cluster-rest</span></span><br><span class="line">              <span class="attr">servicePort:</span> <span class="number">8081</span></span><br></pre></td></tr></table></figure>
<p>Submits a new job:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bin/flink run -m flink-rest-test.zerofinance.net examples/batch/WordCount.jar</span><br></pre></td></tr></table></figure>
<p>Or:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bin/flink run \</span><br><span class="line"> -e kubernetes-session \</span><br><span class="line"> -Dkubernetes.namespace=flink-test \</span><br><span class="line"> -Dkubernetes.rest-service.exposed.type=NodePort \</span><br><span class="line"> -Dkubernetes.cluster-id=flink-cluster \</span><br><span class="line"> examples/batch/WordCount.jar</span><br></pre></td></tr></table></figure>
<p>Destroy a existing cluster:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kubectl -n flink-test delete deploy flink-cluster</span><br></pre></td></tr></table></figure>
<h5 id="K8s-On-Application"><a href="#K8s-On-Application" class="headerlink" title="K8s On Application"></a>K8s On Application</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Starting:</span></span><br><span class="line"><span class="comment">#For 1.15.x 1.16.x</span></span><br><span class="line">bin/flink run-application \</span><br><span class="line"> --target kubernetes-application \</span><br><span class="line"> -Dkubernetes.namespace=flink-test \</span><br><span class="line"> -Dkubernetes.jobmanager.service-account=flink \</span><br><span class="line"> -Dkubernetes.rest-service.exposed.type=NodePort \</span><br><span class="line"> -Dkubernetes.cluster-id=flink-application-cluster \</span><br><span class="line"> -Dkubernetes.container.image=registry.zerofinance.net/library/flink:1.17.2 \</span><br><span class="line"> -Dkubernetes.container.image.pull-policy=Always \</span><br><span class="line"> -Dfs.oss.endpoint=https://oss-cn-hongkong.aliyuncs.com \</span><br><span class="line"> -Dfs.oss.accessKeyId=xxx \</span><br><span class="line"> -Dfs.oss.accessKeySecret=yyy \</span><br><span class="line"> -Dhigh-availability=org.apache.flink.kubernetes.highavailability.KubernetesHaServicesFactory \</span><br><span class="line"> -Dhigh-availability.storageDir=oss://flink-ha-test/native-recovery \</span><br><span class="line"> -Dstate.backend=rocksdb \</span><br><span class="line"> -Dstate.backend.incremental=<span class="literal">true</span> \</span><br><span class="line"> -Dstate.checkpoints.dir=oss://flink-ha-test/flink-application-checkpoints \</span><br><span class="line"> -Dstate.savepoints.dir=oss://flink-ha-test/flink-application-savepoints \</span><br><span class="line"> -Dkubernetes.container.image.pull-secrets=zzz \</span><br><span class="line"> -Dkubernetes.jobmanager.replicas=1 \</span><br><span class="line"> -Denv.java.opts.jobmanager=-Duser.timezone=GMT+08 \</span><br><span class="line"> -Dkubernetes.jobmanager.cpu=0.2 \</span><br><span class="line"> -Djobmanager.memory.process.size=1024m \</span><br><span class="line"> -Dresourcemanager.taskmanager-timeout=3600000 \</span><br><span class="line"> -Denv.java.opts.taskmanager=-Duser.timezone=GMT+08 \</span><br><span class="line"> -Dkubernetes.taskmanager.node-selector=flink-env:<span class="built_in">test</span> \</span><br><span class="line"> -Dkubernetes.taskmanager.cpu=0.2 \</span><br><span class="line"> -Dtaskmanager.memory.process.size=4096m \</span><br><span class="line"> -Dtaskmanager.numberOfTaskSlots=4 \</span><br><span class="line"> <span class="built_in">local</span>:///opt/flink/examples/streaming/TopSpeedWindowing.jar \</span><br><span class="line"> --output /opt/flink/<span class="built_in">log</span>/topSpeedWindowing-output</span><br><span class="line"></span><br><span class="line"><span class="comment">#For 1.17.x</span></span><br><span class="line">bin/flink run-application \</span><br><span class="line"> --target kubernetes-application \</span><br><span class="line"> -Dkubernetes.namespace=flink-test \</span><br><span class="line"> -Dkubernetes.jobmanager.service-account=flink \</span><br><span class="line"> -Dkubernetes.rest-service.exposed.type=NodePort \</span><br><span class="line"> -Dkubernetes.cluster-id=flink-application-cluster \</span><br><span class="line"> -Dkubernetes.container.image.ref=registry.zerofinance.net/library/flink:1.17.2 \</span><br><span class="line"> -Dkubernetes.container.image.pull-policy=Always \</span><br><span class="line"> -Dfs.oss.endpoint=https://oss-cn-hongkong.aliyuncs.com \</span><br><span class="line"> -Dfs.oss.accessKeyId=xxx \</span><br><span class="line"> -Dfs.oss.accessKeySecret=yyy \</span><br><span class="line"> -Dhigh-availability.type=kubernetes \</span><br><span class="line"> -Dhigh-availability.storageDir=oss://flink-ha-test/native-recovery \</span><br><span class="line"> -Dstate.backend=rocksdb \</span><br><span class="line"> -Dstate.backend.incremental=<span class="literal">true</span> \</span><br><span class="line"> -Dstate.checkpoints.dir=oss://flink-ha-test/flink-application-checkpoints \</span><br><span class="line"> -Dstate.savepoints.dir=oss://flink-ha-test/flink-application-savepoints \</span><br><span class="line"> -Dkubernetes.container.image.pull-secrets=zzz \</span><br><span class="line"> -Dkubernetes.jobmanager.replicas=1 \</span><br><span class="line"> -Denv.java.opts.jobmanager=-Duser.timezone=GMT+08 \</span><br><span class="line"> -Dkubernetes.jobmanager.cpu.amount=0.2 \</span><br><span class="line"> -Djobmanager.memory.process.size=1024m \</span><br><span class="line"> -Dresourcemanager.taskmanager-timeout=3600000 \</span><br><span class="line"> -Denv.java.opts.taskmanager=-Duser.timezone=GMT+08 \</span><br><span class="line"> -Dkubernetes.taskmanager.node-selector=flink-env:<span class="built_in">test</span> \</span><br><span class="line"> -Dkubernetes.taskmanager.cpu.amount=0.2 \</span><br><span class="line"> -Dtaskmanager.memory.process.size=4096m \</span><br><span class="line"> -Dtaskmanager.numberOfTaskSlots=4 \</span><br><span class="line"> <span class="built_in">local</span>:///opt/flink/examples/streaming/TopSpeedWindowing.jar \</span><br><span class="line"> --output /opt/flink/<span class="built_in">log</span>/topSpeedWindowing-output</span><br><span class="line"> </span><br><span class="line"><span class="comment">#list running jobs:</span></span><br><span class="line">bin/flink list \</span><br><span class="line"> --target kubernetes-application \</span><br><span class="line"> -Dkubernetes.namespace=flink-test \</span><br><span class="line"> -Dkubernetes.jobmanager.service-account=flink \</span><br><span class="line"> -Dkubernetes.cluster-id=flink-application-cluster</span><br><span class="line"></span><br><span class="line"><span class="comment">#Delete job:</span></span><br><span class="line">bin/flink cancel \</span><br><span class="line"> --target kubernetes-application \</span><br><span class="line"> -Dkubernetes.namespace=flink-test \</span><br><span class="line"> -Dkubernetes.jobmanager.service-account=flink \</span><br><span class="line"> -Dkubernetes.cluster-id=flink-application-cluster \</span><br><span class="line"> 5d7a3c36c7d40ceeb8b83fd8a563ded5</span><br></pre></td></tr></table></figure>
<h4 id="Sql-Client"><a href="#Sql-Client" class="headerlink" title="Sql Client"></a>Sql Client</h4><p><a href="https://www.jianshu.com/p/266449b9a0f4" target="_blank" rel="noopener">Flink 使用之 SQL Client - 简书 (jianshu.com)</a></p>
<h5 id="Standalone-1"><a href="#Standalone-1" class="headerlink" title="Standalone"></a>Standalone</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">start-cluster.sh</span><br><span class="line"></span><br><span class="line">sql-client.sh embedded</span><br><span class="line"></span><br><span class="line">#https://nightlies.apache.org/flink/flink-docs-release-1.17/docs/dev/table/sqlclient/</span><br><span class="line">#Submit sql via sql-client.sh</span><br><span class="line">./flink-1.17.2/bin/sql-client.sh -f ./test.sql</span><br></pre></td></tr></table></figure>
<h5 id="On-yarn-Session"><a href="#On-yarn-Session" class="headerlink" title="On yarn Session"></a>On yarn Session</h5><p><a href="https://blog.csdn.net/lsr40/article/details/113398830" target="_blank" rel="noopener">SQL-Client On Yarn Session</a></p>
<p><a href="https://docs.cloudera.com/csa/1.2.0/sql-client/topics/csa-sql-client-session-config.html" target="_blank" rel="noopener">Configuring SQL Client for session mode | CDP Private Cloud (cloudera.com)</a></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Start a yarn session</span></span><br><span class="line"><span class="comment">#提交yarn session和启动sql client需要使用同一个系统用户，否则会找不到yarn session对应的application id。</span></span><br><span class="line">sudo su - hadoop</span><br><span class="line"><span class="comment">#yarn-session.sh -d</span></span><br><span class="line">yarn-session.sh -jm 2048MB -tm 2048MB -nm flink-sql-test -d</span><br><span class="line"></span><br><span class="line">cat /works/demo.csv </span><br><span class="line">1,a,11</span><br><span class="line">2,b,22</span><br><span class="line">3,c,33</span><br><span class="line">4,d,44</span><br><span class="line"></span><br><span class="line">sudo -u hdfs hadoop fs -put /works/demo.csv /works/test/demo.csv</span><br><span class="line"></span><br><span class="line">sql-client.sh embedded -s yarn-session</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在专门的界面展示，使用分页table格式。可按照界面下方说明，使用快捷键前后翻页和退出到SQL命令行</span></span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">sql</span>-client.execution.result-<span class="keyword">mode</span> = <span class="keyword">table</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># changelog格式展示，可展示数据增(I)删(D)改(U)</span></span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">sql</span>-client.execution.result-<span class="keyword">mode</span> = changelog;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 接近传统数据库的展示方式，不使用专门界面</span></span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">sql</span>-client.execution.result-<span class="keyword">mode</span> = tableau;</span><br><span class="line"></span><br><span class="line">Flink SQL&gt; CREATE TABLE MyTable(</span><br><span class="line">  a INT,</span><br><span class="line">  b STRING,</span><br><span class="line">  c STRING</span><br><span class="line">) <span class="keyword">WITH</span> (</span><br><span class="line">  <span class="string">'connector'</span> = <span class="string">'filesystem'</span>,</span><br><span class="line">  <span class="string">'path'</span> = <span class="string">'hdfs:///works/test/demo.csv'</span>,</span><br><span class="line">  <span class="string">'format'</span> = <span class="string">'csv'</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">Flink SQL&gt; select * from MyTable;</span><br><span class="line"></span><br><span class="line"><span class="comment">#Kill an existing yarn-session</span></span><br><span class="line">yarn application -list</span><br><span class="line">echo "<span class="keyword">stop</span><span class="string">" | yarn-session.sh -id &lt;application_id&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#kafka Connector:</span></span><br><span class="line"><span class="string">wget https://repo1.maven.org/maven2/org/apache/flink/flink-sql-connector-kafka/1.15.3/flink-sql-connector-kafka-1.15.3.jar</span></span><br><span class="line"><span class="string">wget https://repo1.maven.org/maven2/org/apache/flink/flink-connector-jdbc/1.15.3/flink-connector-jdbc-1.15.3.jar</span></span><br><span class="line"><span class="string">scp flink-sql-connector-kafka-1.15.3.jar flink-connector-jdbc-1.15.3.jar mysql-connector-j-8.0.31.jar root@192.168.80.226:/usr/bigtop/current/flink-client/lib/</span></span><br><span class="line"><span class="string">scp flink-sql-connector-kafka-1.15.3.jar flink-connector-jdbc-1.15.3.jar mysql-connector-j-8.0.31.jar root@192.168.80.227:/usr/bigtop/current/flink-client/lib/</span></span><br><span class="line"><span class="string">scp flink-sql-connector-kafka-1.15.3.jar flink-connector-jdbc-1.15.3.jar mysql-connector-j-8.0.31.jar root@192.168.80.228:/usr/bigtop/current/flink-client/lib/</span></span><br><span class="line"><span class="string">scp flink-sql-connector-kafka-1.15.3.jar flink-connector-jdbc-1.15.3.jar mysql-connector-j-8.0.31.jar root@192.168.80.229:/usr/bigtop/current/flink-client/lib/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Hive Connector:</span></span><br><span class="line"><span class="string">wget https://repo1.maven.org/maven2/org/antlr/antlr-runtime/3.5.2/antlr-runtime-3.5.2.jar</span></span><br><span class="line"><span class="string">wget https://repo1.maven.org/maven2/org/apache/flink/flink-connector-hive_2.12/1.15.3/flink-connector-hive_2.12-1.15.3.jar</span></span><br><span class="line"><span class="string">wget https://repo1.maven.org/maven2/org/apache/hive/hive-exec/2.3.4/hive-exec-2.3.4.jar</span></span><br><span class="line"><span class="string">scp antlr-runtime-3.5.2.jar flink-connector-hive_2.12-1.15.3.jar hive-exec-2.3.4.jar root@192.168.80.226:/usr/bigtop/current/flink-client/lib/</span></span><br><span class="line"><span class="string">scp antlr-runtime-3.5.2.jar flink-connector-hive_2.12-1.15.3.jar hive-exec-2.3.4.jar root@192.168.80.227:/usr/bigtop/current/flink-client/lib/</span></span><br><span class="line"><span class="string">scp antlr-runtime-3.5.2.jar flink-connector-hive_2.12-1.15.3.jar hive-exec-2.3.4.jar root@192.168.80.228:/usr/bigtop/current/flink-client/lib/</span></span><br><span class="line"><span class="string">scp antlr-runtime-3.5.2.jar flink-connector-hive_2.12-1.15.3.jar hive-exec-2.3.4.jar root@192.168.80.229:/usr/bigtop/current/flink-client/lib/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">scp /usr/bigtop/current/flink-client/conf/flink-conf.yaml root@192.168.80.226:/usr/bigtop/current/flink-client/conf/</span></span><br><span class="line"><span class="string">scp /usr/bigtop/current/flink-client/conf/flink-conf.yaml root@192.168.80.227:/usr/bigtop/current/flink-client/conf/</span></span><br><span class="line"><span class="string">scp /usr/bigtop/current/flink-client/conf/flink-conf.yaml root@192.168.80.228:/usr/bigtop/current/flink-client/conf/</span></span><br><span class="line"><span class="string">scp /usr/bigtop/current/flink-client/conf/flink-conf.yaml root@192.168.80.229:/usr/bigtop/current/flink-client/conf/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#java.lang.ClassNotFoundException: org.apache.flink.connector.jdbc.table.JdbcRowDataInputFormat</span></span><br><span class="line"><span class="string">#Has to reboot flink-cluster</span></span><br><span class="line"><span class="string">stop-cluster.sh</span></span><br><span class="line"><span class="string">start-cluster.sh</span></span><br></pre></td></tr></table></figure>
<h5 id="Connectors"><a href="#Connectors" class="headerlink" title="Connectors"></a>Connectors</h5><p>Flink doesn’t include  any connector depended libraries, you need to download them manually.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#kafka Connector:</span></span><br><span class="line">wget https://repo1.maven.org/maven2/org/apache/flink/flink-sql-connector-kafka/1.15.3/flink-sql-connector-kafka-1.15.3.jar</span><br><span class="line">wget https://repo1.maven.org/maven2/org/apache/flink/flink-connector-jdbc/1.15.3/flink-connector-jdbc-1.15.3.jar</span><br><span class="line">scp flink-sql-connector-kafka-1.15.3.jar flink-connector-jdbc-1.15.3.jar mysql-connector-j-8.0.31.jar root@192.168.80.226:/usr/bigtop/current/flink-client/lib/</span><br><span class="line">scp flink-sql-connector-kafka-1.15.3.jar flink-connector-jdbc-1.15.3.jar mysql-connector-j-8.0.31.jar root@192.168.80.227:/usr/bigtop/current/flink-client/lib/</span><br><span class="line">scp flink-sql-connector-kafka-1.15.3.jar flink-connector-jdbc-1.15.3.jar mysql-connector-j-8.0.31.jar root@192.168.80.228:/usr/bigtop/current/flink-client/lib/</span><br><span class="line">scp flink-sql-connector-kafka-1.15.3.jar flink-connector-jdbc-1.15.3.jar mysql-connector-j-8.0.31.jar root@192.168.80.229:/usr/bigtop/current/flink-client/lib/</span><br><span class="line"></span><br><span class="line"><span class="comment">#Hive Connector:</span></span><br><span class="line">wget https://repo1.maven.org/maven2/org/antlr/antlr-runtime/3.5.2/antlr-runtime-3.5.2.jar</span><br><span class="line">wget https://repo1.maven.org/maven2/org/apache/flink/flink-connector-hive_2.12/1.15.3/flink-connector-hive_2.12-1.15.3.jar</span><br><span class="line">wget https://repo1.maven.org/maven2/org/apache/hive/hive-exec/2.3.4/hive-exec-2.3.4.jar</span><br><span class="line">scp antlr-runtime-3.5.2.jar flink-connector-hive_2.12-1.15.3.jar hive-exec-2.3.4.jar root@192.168.80.226:/usr/bigtop/current/flink-client/lib/</span><br><span class="line">scp antlr-runtime-3.5.2.jar flink-connector-hive_2.12-1.15.3.jar hive-exec-2.3.4.jar root@192.168.80.227:/usr/bigtop/current/flink-client/lib/</span><br><span class="line">scp antlr-runtime-3.5.2.jar flink-connector-hive_2.12-1.15.3.jar hive-exec-2.3.4.jar root@192.168.80.228:/usr/bigtop/current/flink-client/lib/</span><br><span class="line">scp antlr-runtime-3.5.2.jar flink-connector-hive_2.12-1.15.3.jar hive-exec-2.3.4.jar root@192.168.80.229:/usr/bigtop/current/flink-client/lib/</span><br><span class="line"></span><br><span class="line"><span class="comment">#For hdfs Connector:</span></span><br><span class="line">wget https://repo1.maven.org/maven2/org/apache/flink/flink-table-planner_2.12/1.15.3/flink-table-planner_2.12-1.15.3.jar</span><br><span class="line">scp flink-table-planner_2.12-1.15.3.jar root@192.168.80.226:/usr/bigtop/current/flink-client/lib/</span><br><span class="line">scp flink-table-planner_2.12-1.15.3.jar root@192.168.80.227:/usr/bigtop/current/flink-client/lib/</span><br><span class="line">scp flink-table-planner_2.12-1.15.3.jar root@192.168.80.228:/usr/bigtop/current/flink-client/lib/</span><br><span class="line">scp flink-table-planner_2.12-1.15.3.jar root@192.168.80.229:/usr/bigtop/current/flink-client/lib/</span><br><span class="line"></span><br><span class="line"><span class="comment">#delete flink-table-planner-loader-1.15.3.jar from each machines:</span></span><br><span class="line">rm flink-table-planner-loader-1.15.3.jar</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#Need to reboot flink cluster or flink on yarn.</span></span><br><span class="line"><span class="comment">#Kill an existing yarn-session</span></span><br><span class="line">yarn application -list</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"stop"</span> | yarn-session.sh -id &lt;application_id&gt;</span><br><span class="line">yarn-session.sh -jm 2048MB -tm 2048MB -nm flink-sql-test -d</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#Copying them to all libs of machine:</span></span><br><span class="line">scp /usr/bigtop/current/flink-client/conf/flink-conf.yaml root@192.168.80.226:/usr/bigtop/current/flink-client/conf/</span><br><span class="line">scp /usr/bigtop/current/flink-client/conf/flink-conf.yaml root@192.168.80.227:/usr/bigtop/current/flink-client/conf/</span><br><span class="line">scp /usr/bigtop/current/flink-client/conf/flink-conf.yaml root@192.168.80.228:/usr/bigtop/current/flink-client/conf/</span><br><span class="line">scp /usr/bigtop/current/flink-client/conf/flink-conf.yaml root@192.168.80.229:/usr/bigtop/current/flink-client/conf/</span><br></pre></td></tr></table></figure>
<h5 id="Restore-job"><a href="#Restore-job" class="headerlink" title="Restore job"></a>Restore job</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://mp.weixin.qq.com/s/srUyvNr7KX1PSOaG1d8qdQ?poc_token=HGNqmWWjWqONGGyPVzyzKzDhIsyauXyJ8kOW8Bfl</span></span><br><span class="line"><span class="comment">#https://mp.weixin.qq.com/s/o8mL0UkH4j_h5mjyayn0XQ</span></span><br><span class="line"></span><br><span class="line">vim flink/conf/flink-conf.yaml</span><br><span class="line">state.savepoints.dir: file:///works/app/flink/flink-1.15.3/flink-savepoints</span><br><span class="line"><span class="comment">#Restart cluster</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Starting from the latest savepoints when restart the job:</span></span><br><span class="line">curl -X</span><br><span class="line">POST http://jobmanager-host:port/<span class="built_in">jobs</span>/jobId/savepoints</span><br><span class="line">curl -X PATCH  http://jobmanager-host:port/<span class="built_in">jobs</span>/jobId</span><br><span class="line"></span><br><span class="line">Dinky:</span><br><span class="line">经验证Dinky平台支持Savepoint机制。任务重启后仅消费最新的数据。</span><br><span class="line">前置条件：修改Flink家目录下 flink/conf/flink-conf.yaml 文件，指定savepoint目录位置</span><br><span class="line">操作步骤：</span><br><span class="line">        任务配置</span><br><span class="line">                开启右边 SavePoint 策略，选择 “最近一次”</span><br><span class="line">                </span><br><span class="line">        SavePoint 停止 FlinkSQL 作业</span><br><span class="line">                点击 Dinky 的运维中心菜单，在任务列表里点击上面运行的这个任务进入任务详情页面，在页面右上角点击三个点的省略号按钮，弹出框中点击 “SavePoint停止”</span><br><span class="line"></span><br><span class="line">        重启作业</span><br><span class="line">                在 Dinky 的运维中心，任务列表，任务详情页面，重启任务</span><br></pre></td></tr></table></figure>
<h5 id="Optimize"><a href="#Optimize" class="headerlink" title="Optimize"></a>Optimize</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SET parallelism.default=1;</span><br><span class="line">SET execution.runtime-mode = streaming;</span><br><span class="line">SET table.local-time-zone =Asia/Shanghai;</span><br><span class="line"> -- 10分钟</span><br><span class="line">SET execution.checkpointing.interval = 10m;</span><br><span class="line"> -- 失败容忍度</span><br><span class="line">SET execution.checkpointing.tolerable-failed-checkpoints = 50;</span><br><span class="line"> -- 超时时间</span><br><span class="line">SET execution.checkpointing.timeout =10000;</span><br><span class="line"> -- 一次语义</span><br><span class="line">SET execution.checkpointing.mode = EXACTLY_ONCE;</span><br><span class="line"> -- 固定频次</span><br><span class="line">SET restart-strategy= fixed-delay;</span><br><span class="line"> -- 尝试5次</span><br><span class="line">SET restart-strategy.fixed-delay.attempts = 5;</span><br><span class="line"> -- 重启延时50s</span><br><span class="line">SET restart-strategy.fixed-delay.delay = 50s;</span><br><span class="line"></span><br><span class="line">-- 调优参数</span><br><span class="line">SET table.exec.mini-batch.enabled = true</span><br><span class="line">SET table.exec.mini-batch.allow-latency = 2s</span><br><span class="line">SET table.exec.mini-batch.size = 5000</span><br><span class="line">SET table.optimizer.distinct-agg.split.enabled = true</span><br></pre></td></tr></table></figure>
<h3 id="StreamPark"><a href="#StreamPark" class="headerlink" title="StreamPark"></a>StreamPark</h3><p>Recommend.</p>
<p><a href="https://streampark.apache.org/" target="_blank" rel="noopener">Apache StreamPark (incubating) | Apache StreamPark (incubating)</a></p>
<h4 id="Installation-1"><a href="#Installation-1" class="headerlink" title="Installation"></a>Installation</h4><h5 id="Standalone-2"><a href="#Standalone-2" class="headerlink" title="Standalone"></a>Standalone</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://streampark.apache.org/docs/user-guide/deployment</span></span><br><span class="line">tar zxvf apache-streampark_2.12-2.1.2-incubating-bin.tar.gz </span><br><span class="line">mv apache-streampark_2.12-2.1.2-incubating-bin apache-streampark_2.12</span><br><span class="line"><span class="built_in">cd</span> apache-streampark_2.12/</span><br><span class="line"><span class="built_in">cd</span> apache-streampark_2.12/script/schema/</span><br><span class="line"></span><br><span class="line">mysql -uroot -h127.0.0.1 -p</span><br><span class="line">CREATE USER <span class="string">'streampark'</span>@<span class="string">'%'</span> IDENTIFIED BY <span class="string">'Aa123456'</span>;</span><br><span class="line">GRANT ALL PRIVILEGES ON streampark.* TO <span class="string">'streampark'</span>@<span class="string">'%'</span>;</span><br><span class="line"><span class="built_in">exit</span>;</span><br><span class="line"></span><br><span class="line">mysql -uroot -h127.0.0.1 -p &lt; mysql-schema.sql </span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> apache-streampark_2.12/script/data/</span><br><span class="line">mysql -uroot -h127.0.0.1 -p &lt; mysql-data.sql </span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> apache-streampark_2.12/conf/</span><br><span class="line"></span><br><span class="line">vim application.yml </span><br><span class="line">spring:</span><br><span class="line">  profiles.active: mysql</span><br><span class="line">  </span><br><span class="line">vim application-mysql.yml</span><br><span class="line">spring:</span><br><span class="line">  datasource:</span><br><span class="line">    username: root</span><br><span class="line">    password: xxxx</span><br><span class="line">    driver-class-name: com.mysql.cj.jdbc.Driver</span><br><span class="line">    url: jdbc:mysql://localhost:3306/streampark?useSSL=<span class="literal">false</span>&amp;useUnicode=<span class="literal">true</span>&amp;characterEncoding=UTF-8&amp;allowPublicKeyRetrieval=<span class="literal">false</span>&amp;useJDBCCompliantTimezoneShift=<span class="literal">true</span>&amp;useLegacyDatetimeCode=<span class="literal">false</span>&amp;serverTimezone=GMT%2B8</span><br><span class="line">mysql -uroot -h127.0.0.1 -p </span><br><span class="line"></span><br><span class="line">streampark:</span><br><span class="line">  <span class="comment"># HADOOP_USER_NAME If it is on yarn mode ( yarn-prejob | yarn-application | yarn-session), you need to configure hadoop-user-name</span></span><br><span class="line">  hadoop-user-name: hdfs</span><br><span class="line">  <span class="comment"># Local workspace, used to store project source code, build directory, etc.</span></span><br><span class="line">  workspace:</span><br><span class="line">    <span class="built_in">local</span>: /data/streampark_workspace</span><br><span class="line"></span><br><span class="line"><span class="comment">#Starting</span></span><br><span class="line">cp -a /works/app/flink/lib-1.17/mysql-connector-j-8.0.31.jar /works/app/flink/apache-streampark_2.12/lib/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> apache-streampark_2.12/bin</span><br><span class="line">bash startup.sh</span><br></pre></td></tr></table></figure>
<p>Noticed: In order to launch kubernetes flink environment, you must have config file of kubectl(~/.kube/config) installed.</p>
<h5 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h5><p><img src="/images/2023-08-25-hadoop-Ecosystem/image-20240126170051565.png" alt="image-20240126170051565"></p>
<p>Dockerfile</p>
<p><a href="https://raw.githubusercontent.com/apache/incubator-streampark/v2.1.2/deploy/docker/Dockerfile" target="_blank" rel="noopener">raw.githubusercontent.com/apache/incubator-streampark/v2.1.2/deploy/docker/Dockerfile</a></p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> alpine:<span class="number">3.16</span> as deps-stage</span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> mkdir -p ~/.kube ~/.m2 /works/app/flink/ /data/streampark_workspace</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> apache-streampark_2.12.tar.gz /</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> tar xf apache-streampark_2.12.tar.gz &amp;&amp; mv apache-streampark_2.12 streampark </span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> rm -rf /apache-streampark_2.12.tar.gz</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">FROM</span> docker:dind</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /streampark</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> --from=deps-stage /streampark /streampark</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> NODE_VERSION=<span class="number">16.1</span>.<span class="number">0</span></span><br><span class="line"><span class="keyword">ENV</span> NPM_VERSION=<span class="number">7.11</span>.<span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> apk add openjdk8 \</span></span><br><span class="line"><span class="bash">    &amp;&amp; apk add maven \</span></span><br><span class="line"><span class="bash">    &amp;&amp; apk add wget \</span></span><br><span class="line"><span class="bash">    &amp;&amp; apk add vim \</span></span><br><span class="line"><span class="bash">    &amp;&amp; apk add bash \</span></span><br><span class="line"><span class="bash">    &amp;&amp; apk add curl</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> JAVA_HOME=/usr/lib/jvm/java-<span class="number">1.8</span>-openjdk</span><br><span class="line"><span class="keyword">ENV</span> MAVEN_HOME=/usr/share/java/maven-<span class="number">3</span></span><br><span class="line"><span class="keyword">ENV</span> PATH $JAVA_HOME/bin:$PATH</span><br><span class="line"><span class="keyword">ENV</span> PATH $MAVEN_HOME/bin:$PATH</span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> wget <span class="string">"https://nodejs.org/dist/v<span class="variable">$NODE_VERSION</span>/node-v<span class="variable">$NODE_VERSION</span>-linux-x64.tar.gz"</span> \</span></span><br><span class="line"><span class="bash">    &amp;&amp; tar zxvf <span class="string">"node-v<span class="variable">$NODE_VERSION</span>-linux-x64.tar.gz"</span> -C /usr/<span class="built_in">local</span> --strip-components=1 \</span></span><br><span class="line"><span class="bash">    &amp;&amp; rm <span class="string">"node-v<span class="variable">$NODE_VERSION</span>-linux-x64.tar.gz"</span> \</span></span><br><span class="line"><span class="bash">    &amp;&amp; ln -s /usr/<span class="built_in">local</span>/bin/node /usr/<span class="built_in">local</span>/bin/nodejs \</span></span><br><span class="line"><span class="bash">    &amp;&amp; curl -LO https://dl.k8s.io/release/v1.23.0/bin/linux/amd64/kubectl \</span></span><br><span class="line"><span class="bash">    &amp;&amp; install -o root -g root -m 0755 kubectl /usr/<span class="built_in">local</span>/bin/kubectl</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure>
<p>Building</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">DOCKER_BUILDKIT=0 docker build -t <span class="string">"registry.zerofinance.net/flink/streampark:2.1.2"</span> .</span><br></pre></td></tr></table></figure>
<p>Creating docker</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name <span class="string">"streampark"</span> \</span><br><span class="line">--privileged=<span class="literal">true</span> \</span><br><span class="line">-v /works/app/flink/streampark/config:/root/.kube/config:ro \</span><br><span class="line">-v /works/app/flink/streampark/settings.xml:/Developer/apache-maven-3.5.4/conf/settings.xml:ro \</span><br><span class="line">-v /works/app/flink/streampark/flink-1.17.2:/works/app/flink/flink-1.17.2 \</span><br><span class="line">-v /works/app/flink/streampark/application.yml:/streampark/conf/application.yml \</span><br><span class="line">-v /works/app/flink/streampark/application-mysql.yml:/streampark/conf/application-mysql.yml \</span><br><span class="line">-p 10000:10000 \</span><br><span class="line">registry.zerofinance.net/flink/streampark:2.1.2</span><br></pre></td></tr></table></figure>
<p>Start streampark instance</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it streampark bash</span><br><span class="line">/streampark/bin/startup.sh</span><br></pre></td></tr></table></figure>
<h5 id="K8s"><a href="#K8s" class="headerlink" title="K8s"></a>K8s</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app: streampark</span><br><span class="line">  name: streampark</span><br><span class="line">  namespace: flink-test</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: streampark</span><br><span class="line">  strategy:</span><br><span class="line">    rollingUpdate:</span><br><span class="line">      maxSurge: 1</span><br><span class="line">      maxUnavailable: 1</span><br><span class="line">    type: RollingUpdate</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: streampark</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - image: registry.zerofinance.net/flink/streampark:2.1.2</span><br><span class="line">        name: streampark</span><br><span class="line">        imagePullPolicy: Always</span><br><span class="line">        command: [&quot;/bin/sh&quot;, &quot;-c&quot;, &quot;wget -P lib https://repo1.maven.org/maven2/com/mysql/mysql-connector-j/8.0.31/mysql-connector-j-8.0.31.jar &amp;&amp; bash bin/streampark.sh start_docker &quot;]</span><br><span class="line">        securityContext:</span><br><span class="line">          privileged: true</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 10000</span><br><span class="line">          name: streampark</span><br><span class="line">          protocol: TCP</span><br><span class="line">        resources:</span><br><span class="line">          limits:</span><br><span class="line">            cpu: &quot;1&quot;</span><br><span class="line">            memory: 1024Mi</span><br><span class="line">          requests:</span><br><span class="line">            cpu: 500m</span><br><span class="line">            memory: 500Mi</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: flink</span><br><span class="line">          mountPath: /works/app/flink/flink-1.17.2</span><br><span class="line">        - name: maven-setting</span><br><span class="line">          mountPath: /root/.m2/settings.xml</span><br><span class="line">        - name: k8s-config</span><br><span class="line">          mountPath: /root/.kube/config</span><br><span class="line">        - name: application</span><br><span class="line">          mountPath: /streampark/conf/application.yml</span><br><span class="line">        - name: application-mysql</span><br><span class="line">          mountPath: /streampark/conf/application-mysql.yml</span><br><span class="line">        - name: workspace</span><br><span class="line">          mountPath: /data/streampark_workspace</span><br><span class="line">        - name: docker</span><br><span class="line">          mountPath: /var/run/docker.sock</span><br><span class="line">      restartPolicy: Always</span><br><span class="line">      volumes:</span><br><span class="line">      - name: flink</span><br><span class="line">        hostPath:</span><br><span class="line">          path: /data/data/streampark_flink/flink-1.17.2</span><br><span class="line">      - name: maven-setting</span><br><span class="line">        hostPath:</span><br><span class="line">          path: /data/data/streampark_flink/settings.xml</span><br><span class="line">      - name: k8s-config</span><br><span class="line">        hostPath:</span><br><span class="line">          path: /data/data/streampark_flink/kube/config</span><br><span class="line">      - name: application</span><br><span class="line">        hostPath:</span><br><span class="line">          path: /data/data/streampark_flink/application.yml</span><br><span class="line">      - name: application-mysql</span><br><span class="line">        hostPath:</span><br><span class="line">          path: /data/data/streampark_flink/application-mysql.yml</span><br><span class="line">      - name: workspace</span><br><span class="line">        hostPath:</span><br><span class="line">          path: /data/data/streampark_flink/workspace</span><br><span class="line">      - name: docker</span><br><span class="line">        hostPath:</span><br><span class="line">          path: /var/run/docker.sock</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: streampark</span><br><span class="line">  namespace: flink-test</span><br><span class="line">  labels:</span><br><span class="line">    app: streampark</span><br><span class="line">spec:</span><br><span class="line">  externalTrafficPolicy: Local</span><br><span class="line">  type: NodePort</span><br><span class="line">  ports:</span><br><span class="line">  - name: streampark</span><br><span class="line">    port: 10000</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 10000</span><br><span class="line">  selector:</span><br><span class="line">    app: streampark</span><br><span class="line">  sessionAffinity: None</span><br></pre></td></tr></table></figure>
<h4 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h4><h5 id="System-Setting"><a href="#System-Setting" class="headerlink" title="System Setting"></a>System Setting</h5><p><img src="/images/2023-08-25-hadoop-Ecosystem/image-20240126135203700.png" alt="image-20240126135203700"></p>
<p>First, you need creating a registry project named “flink” from menu: “Project Quotas”.</p>
<p><img src="/images/2023-08-25-hadoop-Ecosystem/image-20240126135223713.png" alt="image-20240126135223713"></p>
<p><img src="/images/2023-08-25-hadoop-Ecosystem/image-20240126135244714.png" alt="image-20240126135244714"></p>
<h5 id="Flink-Cluster"><a href="#Flink-Cluster" class="headerlink" title="Flink Cluster"></a>Flink Cluster</h5><p><img src="/images/2023-08-25-hadoop-Ecosystem/image-20240126135334426.png" alt="image-20240126135334426"></p>
<p><img src="/images/2023-08-25-hadoop-Ecosystem/image-20240126135423779.png" alt="image-20240126135423779"></p>
<h5 id="Flink-Home"><a href="#Flink-Home" class="headerlink" title="Flink Home"></a>Flink Home</h5><p><img src="/images/2023-08-25-hadoop-Ecosystem/image-20240126135020759.png" alt="image-20240126135020759"></p>
<h4 id="Application"><a href="#Application" class="headerlink" title="Application"></a>Application</h4><h5 id="application-sql-Job"><a href="#application-sql-Job" class="headerlink" title="application sql Job"></a>application sql Job</h5><p>(Recommend)</p>
<p><img src="/images/2023-08-25-hadoop-Ecosystem/image-20240126135601938.png" alt="image-20240126135601938"></p>
<p><img src="/images/2023-08-25-hadoop-Ecosystem/image-20240126135618321.png" alt="image-20240126135618321"></p>
<p><img src="/images/2023-08-25-hadoop-Ecosystem/image-20240126135722313.png" alt="image-20240126135722313"></p>
<p><img src="/images/2023-08-25-hadoop-Ecosystem/image-20240126170432588.png" alt="image-20240126170432588"></p>
<h5 id="session-sql-job"><a href="#session-sql-job" class="headerlink" title="session sql job"></a>session sql job</h5><p>You have to start the session instance from “Settings—&gt;Flink Cluster”</p>
<p><img src="/images/2023-08-25-hadoop-Ecosystem/image-20240126140249679.png" alt="image-20240126140249679"></p>
<p><img src="/images/2023-08-25-hadoop-Ecosystem/image-20240126140316800.png" alt="image-20240126140316800"></p>
<h5 id="application-jar-job"><a href="#application-jar-job" class="headerlink" title="application jar job"></a>application jar job</h5><p>Create Project first:</p>
<p><img src="/images/2023-08-25-hadoop-Ecosystem/image-20240126140615094.png" alt="image-20240126140615094"></p>
<p>Create a new jar job:</p>
<p><img src="/images/2023-08-25-hadoop-Ecosystem/image-20240126140704271.png" alt="image-20240126140704271"></p>
<p><img src="/images/2023-08-25-hadoop-Ecosystem/image-20240126140727419.png" alt="image-20240126140727419"></p>
<p><img src="/images/2023-08-25-hadoop-Ecosystem/image-20240126140814011.png" alt="image-20240126140814011"></p>
<h4 id="Pod-template"><a href="#Pod-template" class="headerlink" title="Pod template"></a>Pod template</h4><h5 id="Pod-Template"><a href="#Pod-Template" class="headerlink" title="Pod Template"></a>Pod Template</h5><p>In order to collect logs to Loki:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">taskmanager-pod-template</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">    <span class="comment"># Do not change the main container name</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">flink-main-container</span></span><br><span class="line">      <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">flink-logs</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/opt/flink/log</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">flink-logs</span></span><br><span class="line">      <span class="attr">hostPath:</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/works/log/hkloan/dev/la-loan-account</span></span><br></pre></td></tr></table></figure>
<h5 id="Dynamic-Properties"><a href="#Dynamic-Properties" class="headerlink" title="Dynamic Properties"></a>Dynamic Properties</h5><p>You can simplify “Dynamic Properties”:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">-Dakka.ask.timeout=100s</span></span><br><span class="line"><span class="string">-Dfs.oss.endpoint=https://oss-cn-hongkong.aliyuncs.com</span></span><br><span class="line"><span class="string">-Dfs.oss.accessKeyId=xxx</span></span><br><span class="line"><span class="string">-Dfs.oss.accessKeySecret=yyy</span></span><br><span class="line"><span class="string">-Dkubernetes.container.image.pull-policy=IfNotPresent</span></span><br><span class="line"><span class="string">-Dhigh-availability.type=kubernetes</span></span><br><span class="line"><span class="string">-Dhigh-availability.storageDir=oss://flink-cluster-uat/recovery-application</span></span><br><span class="line"><span class="string">-Dstate.backend=rocksdb</span></span><br><span class="line"><span class="string">-Dstate.backend.incremental=true</span></span><br><span class="line"><span class="string">-Dstate.checkpoints.dir=oss://flink-cluster-uat/flink-application-checkpoints</span></span><br><span class="line"><span class="string">-Dstate.savepoints.dir=oss://flink-cluster-uat/flink-application-savepoints</span></span><br><span class="line"><span class="string">-Dkubernetes.container.image.pull-secrets=zzz</span></span><br><span class="line"><span class="string">-Dkubernetes.jobmanager.replicas=1</span></span><br><span class="line"><span class="string">-Dkubernetes.jobmanager.cpu.amount=0.5</span></span><br><span class="line"><span class="string">-Dresourcemanager.taskmanager-timeout=3600000</span></span><br><span class="line"><span class="string">-Dkubernetes.taskmanager.node-selector=flink-env:test</span></span><br><span class="line"><span class="string">-Dkubernetes.taskmanager.tolerations=flink-env:test,operator:Exists,effect:NoSchedule</span></span><br><span class="line"><span class="string">-Dkubernetes.taskmanager.cpu.amount=1</span></span><br><span class="line"><span class="string">-Denv.java.opts.jobmanager="-Duser.timezone=GMT+08"</span></span><br><span class="line"><span class="string">-Denv.java.opts.taskmanager="-Duser.timezone=GMT+08"</span></span><br></pre></td></tr></table></figure>
<h5 id="Clean-all-Jobs"><a href="#Clean-all-Jobs" class="headerlink" title="Clean all Jobs"></a>Clean all Jobs</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">k -n flink-dev delete deploy myql2es-deploy-demo</span><br><span class="line">k -n flink-dev delete cm myql2es-deploy-demo-cluster-config-map</span><br></pre></td></tr></table></figure>
<h4 id="UDF"><a href="#UDF" class="headerlink" title="UDF"></a>UDF</h4><p>Create a project first:</p>
<p><img src="/images/2023-08-25-hadoop-Ecosystem/image-20240126142114186.png" alt="image-20240126142114186"></p>
<p><img src="/images/2023-08-25-hadoop-Ecosystem/image-20240126142047951.png" alt="image-20240126142047951"></p>
<p>Adding dependency pom in a job:</p>
<p><img src="/images/2023-08-25-hadoop-Ecosystem/image-20240126142210706.png" alt="image-20240126142210706"></p>
<p><img src="/images/2023-08-25-hadoop-Ecosystem/image-20240126142018520.png" alt="image-20240126142018520"></p>
<h3 id="Dinky"><a href="#Dinky" class="headerlink" title="Dinky"></a>Dinky</h3><p>A alternative Flink stream platform, like StreamPark. But I recommend using StreamPark strongly.</p>
<p><a href="http://www.dlink.top/docs/0.7/get_started/docker_deploy" target="_blank" rel="noopener">http://www.dlink.top/docs/0.7/get_started/docker_deploy</a></p>
<p><a href="http://www.dlink.top/docs/0.7/deploy_guide/build" target="_blank" rel="noopener">http://www.dlink.top/docs/0.7/deploy_guide/build</a></p>
<p>Prerequisite: <a href="/files/2023-08-25-hadoop-Ecosystem/dinky.sql">dinky.sql</a> </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p</span><br><span class="line">CREATE USER &apos;dinky&apos;@&apos;%&apos; IDENTIFIED BY &apos;Aa123456&apos;;</span><br><span class="line">GRANT ALL PRIVILEGES ON dinky.* TO &apos;dinky&apos;@&apos;%&apos;;</span><br><span class="line"></span><br><span class="line">mysql -udinky -h127.0.0.1 -p</span><br><span class="line">create database dinky;</span><br><span class="line">use dinky;</span><br><span class="line">source /works/app/flink/dinky-mysql.sql;</span><br></pre></td></tr></table></figure>
<h4 id="Linux-Install"><a href="#Linux-Install" class="headerlink" title="Linux Install"></a>Linux Install</h4><p>For 1.0.0 version:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#http://www.dinky.org.cn/docs/next/deploy_guide/normal_deploy</span></span><br><span class="line">wget https://github.com/DataLinkDC/dinky/releases/download/v1.0.0-rc4/dinky-release-1.17-1.0.0-rc4.tar.gz</span><br><span class="line">tar zxvf dinky-release-1.17-1.0.0-rc4.tar.gz </span><br><span class="line"><span class="built_in">cd</span> dinky-release-1.17-1.0.0-rc4/</span><br><span class="line"></span><br><span class="line"><span class="comment">#Download sql file to local:</span></span><br><span class="line"><span class="built_in">cd</span> sql</span><br><span class="line">sz dinky-mysql.sql </span><br><span class="line"></span><br><span class="line"><span class="comment">#Edit application files</span></span><br><span class="line"><span class="built_in">cd</span> /works/app/dinky/dinky-release-1.17-1.0.0-rc4/</span><br><span class="line"><span class="built_in">cd</span> config/</span><br><span class="line">vim application.yml </span><br><span class="line">vim application-mysql.yml </span><br><span class="line"></span><br><span class="line"><span class="comment">#copy jdbc driver:</span></span><br><span class="line">cp -a /works/app/flink/lib-1.17/mysql-connector-j-8.0.31.jar /works/app/dinky/dinky-release-1.17-1.0.0-rc4/lib/</span><br><span class="line"><span class="comment">#Copy Flink dependency lib jars:</span></span><br><span class="line">cp -a /works/app/flink/flink-1.17.2/lib/flink-*.jar /works/app/dinky/dinky-release-1.17-1.0.0-rc4/extends/flink1.17/</span><br><span class="line"><span class="comment">#Copy Extra dependency lib jars:</span></span><br><span class="line">cp -a /works/app/flink/lib-1.17/* /works/app/dinky/dinky-release-1.17-1.0.0-rc4/extends/flink1.17/</span><br><span class="line">rm /works/app/dinky/dinky-release-1.17-1.0.0-rc4/extends/flink1.17/flink-table-planner-loader-1.17.2.jar</span><br><span class="line">cp -a /works/app/flink/flink-1.17.2/opt/flink-table-planner_2.12-1.17.2.jar /works/app/dinky/dinky-release-1.17-1.0.0-rc4/extends/flink1.17/</span><br><span class="line"><span class="comment">#Mysql jdbc driver:</span></span><br><span class="line">cp -a /works/app/dinky/flink-1.17.2-lib/mysql-connector-j-8.0.31.jar /works/app/dinky/dinky-release-1.17-1.0.0-rc4/extends/flink1.17/</span><br><span class="line"><span class="comment">#Hadoop dependency lib jars:</span></span><br><span class="line"><span class="built_in">cd</span> /works/app/dinky/dinky-release-1.17-1.0.0-rc4/extends/flink1.17/</span><br><span class="line">wget https://repository.cloudera.com/artifactory/cloudera-repos/org/apache/flink/flink-shaded-hadoop-3-uber/3.1.1.7.2.9.0-173-9.0/flink-shaded-hadoop-3-uber-3.1.1.7.2.9.0-173-9.0.jar</span><br><span class="line"></span><br><span class="line"><span class="comment">#整库同步jar:</span></span><br><span class="line">cp -a /works/app/dinky/dinky-release-1.17-1.0.0-rc4/lib/dinky-client-base-1.0.0-rc4.jar /works/app/flink/flink-1.17.2/lib/</span><br><span class="line">cp -a /works/app/dinky/dinky-release-1.17-1.0.0-rc4/lib/dinky-common-1.0.0-rc4.jar /works/app/flink/flink-1.17.2/lib/</span><br><span class="line">cp -a /works/app/dinky/dinky-release-1.17-1.0.0-rc4/extends/flink1.17/dinky/dinky-client-1.17-1.0.0-rc4.jar /works/app/flink/flink-1.17.2/lib/</span><br><span class="line"><span class="comment">#Need flink-cdc-common jar:</span></span><br><span class="line">wget https://repo1.maven.org/maven2/com/ververica/flink-cdc-common/3.0.1/flink-cdc-common-3.0.1.jar -P /works/app/flink/flink-1.17.2/lib/</span><br><span class="line">wget https://repo1.maven.org/maven2/com/ververica/flink-cdc-common/3.0.1/flink-cdc-common-3.0.1.jar -P /works/app/dinky/dinky-release-1.17-1.0.0-rc4/extends/flink1.17/</span><br><span class="line"></span><br><span class="line"><span class="comment">#https://blog.csdn.net/lisi1129/article/details/101453563</span></span><br><span class="line"><span class="comment">#在conf/flink-conf.yaml 添加如下内容并重启 flink.</span></span><br><span class="line">classloader.resolve-order: parent-first</span><br><span class="line"></span><br><span class="line"><span class="comment">#Start</span></span><br><span class="line">sh auto.sh start 1.17</span><br><span class="line"><span class="comment">#Stop</span></span><br><span class="line">sh auto.sh stop</span><br></pre></td></tr></table></figure>
<h4 id="Docker-1"><a href="#Docker-1" class="headerlink" title="Docker"></a>Docker</h4><p>For 1.0.0 version:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FROM openjdk:8u342-oracle as build-stage</span><br><span class="line"></span><br><span class="line">ARG DINKY_VERSION</span><br><span class="line">ENV DINKY_VERSION=<span class="variable">$&#123;DINKY_VERSION&#125;</span></span><br><span class="line"></span><br><span class="line">ARG FLINK_BIG_VERSION</span><br><span class="line">ENV FLINK_BIG_VERSION <span class="variable">$&#123;FLINK_BIG_VERSION&#125;</span></span><br><span class="line"></span><br><span class="line">ADD ./build/dinky-release-<span class="variable">$&#123;DINKY_VERSION&#125;</span>.tar.gz  /opt/</span><br><span class="line"></span><br><span class="line">USER root</span><br><span class="line">RUN mv /opt/dinky-release-<span class="variable">$&#123;DINKY_VERSION&#125;</span> /opt/dinky/</span><br><span class="line">RUN mkdir /opt/dinky/conf</span><br><span class="line"></span><br><span class="line">COPY ./flink<span class="variable">$&#123;FLINK_BIG_VERSION&#125;</span>-lib/*.jar /opt/dinky/extends/flink<span class="variable">$&#123;FLINK_BIG_VERSION&#125;</span>/</span><br><span class="line"><span class="comment">##不复制的话dinky applicaition下显示不了日志</span></span><br><span class="line">COPY ./flink<span class="variable">$&#123;FLINK_BIG_VERSION&#125;</span>-conf/* /opt/dinky/conf/</span><br><span class="line"></span><br><span class="line">ADD ./build/flink-python-1.17.2.jar /opt/dinky/lib/</span><br><span class="line">COPY ./flink<span class="variable">$&#123;FLINK_BIG_VERSION&#125;</span>-lib/mysql-connector-j-8.0.31.jar /opt/dinky/lib/</span><br><span class="line"></span><br><span class="line">RUN mkdir -p /opt/dinky/run &amp;&amp; mkdir -p /opt/dinky/logs &amp;&amp;  touch /opt/dinky/logs/dinky.log</span><br><span class="line">RUN chmod -R 777 /opt/dinky/</span><br><span class="line"></span><br><span class="line">FROM openjdk:8u342-oracle as production-stage</span><br><span class="line">RUN cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line">RUN <span class="built_in">export</span> LANG=zh_CN.UTF-8</span><br><span class="line"></span><br><span class="line">COPY --from=build-stage /opt/dinky/ /opt/dinky/</span><br><span class="line">RUN microdnf install procps -y</span><br><span class="line"></span><br><span class="line">WORKDIR /opt/dinky/</span><br><span class="line"></span><br><span class="line">EXPOSE 8888</span><br><span class="line"></span><br><span class="line">CMD touch /opt/dinky/logs/dinky.log &amp;&amp; ./auto.sh restart <span class="variable">$&#123;FLINK_BIG_VERSION&#125;</span> &amp;&amp; tail -f /opt/dinky/logs/dinky.log</span><br></pre></td></tr></table></figure>
<p>All jars  in flink1.17-lib:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ll build/</span><br><span class="line">总用量 208880</span><br><span class="line">-rw-rw-r-- 1 dev dev 180884317 1月  29 15:11 dinky-release-1.17-1.0.0-rc4.tar.gz</span><br><span class="line">-rw-r--r-- 1 dev dev  32998809 11月 13 12:47 flink-python-1.17.2.jar</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ll flink1.17-lib/</span><br><span class="line">总用量 322180</span><br><span class="line">-rw-rw-r-- 1 dev dev    251405 1月  19 11:57 flink-cdc-common-3.0.1.jar</span><br><span class="line">-rw-r--r-- 1 dev dev    196491 11月 13 12:27 flink-cep-1.17.2.jar</span><br><span class="line">-rw-r--r-- 1 dev dev    542629 11月 13 12:33 flink-connector-files-1.17.2.jar</span><br><span class="line">-rw-r--r-- 1 dev dev    266420 6月  15 2023 flink-connector-jdbc-3.1.1-1.17.jar</span><br><span class="line">-rw-r--r-- 1 dev dev    102470 11月 13 12:40 flink-csv-1.17.2.jar</span><br><span class="line">-rw-r--r-- 1 dev dev 121809282 11月 13 12:57 flink-dist-1.17.2.jar</span><br><span class="line">-rw-r--r-- 1 dev dev    180246 11月 13 12:40 flink-json-1.17.2.jar</span><br><span class="line">-rw-r--r-- 1 dev dev  25743957 11月 10 16:32 flink-oss-fs-hadoop-1.17.2.jar</span><br><span class="line">-rw-r--r-- 1 dev dev  21043317 11月 13 12:54 flink-scala_2.12-1.17.2.jar</span><br><span class="line">-rw-rw-r-- 1 dev dev  59604787 8月  11 2023 flink-shaded-hadoop-3-uber-3.1.1.7.2.9.0-173-9.0.jar</span><br><span class="line">-rw-r--r-- 1 dev dev  28440546 4月  13 2023 flink-sql-connector-elasticsearch7-3.0.1-1.17.jar</span><br><span class="line">-rw-rw-r-- 1 dev dev   5566107 10月 26 04:26 flink-sql-connector-kafka-3.0.1-1.17.jar</span><br><span class="line">-rw-r--r-- 1 dev dev  23715175 2月  20 16:47 flink-sql-connector-mysql-cdc-3.0.1.jar</span><br><span class="line">-rw-r--r-- 1 dev dev  15407408 11月 13 12:55 flink-table-api-java-uber-1.17.2.jar</span><br><span class="line">-rw-r--r-- 1 dev dev  21333608 2月  22 16:19 flink-table-planner_2.12-1.17.2.jar</span><br><span class="line">-rw-r--r-- 1 dev dev   3146303 11月 13 12:27 flink-table-runtime-1.17.2.jar</span><br><span class="line">-rw-r--r-- 1 dev dev   2515447 2月  20 13:40 mysql-connector-j-8.0.31.jar</span><br></pre></td></tr></table></figure>
<p>Build and push to registry:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker build --build-arg FLINK_BIG_VERSION=1.17 --build-arg DINKY_VERSION=1.17-1.0.0-rc4 -t &quot;registry.zerofinance.net/flink/dinky-flink:1.17-1.0.0-rc4&quot; .</span><br><span class="line">docker push registry.zerofinance.net/flink/dinky-flink:1.17-1.0.0-rc4</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#Run</span><br><span class="line">docker run \</span><br><span class="line">-d \</span><br><span class="line">--restart=always \</span><br><span class="line">-p 8888:8888 \</span><br><span class="line">-e FLINK_BIG_VERSION=1.17 \</span><br><span class="line">-e DB_ACTIVE=mysql \</span><br><span class="line">-e MYSQL_ADDR=rm-xxxxxx.mysql.rds.aliyuncs.com:3306 \</span><br><span class="line">-e MYSQL_DATABASE=dinky_test \</span><br><span class="line">-e MYSQL_USERNAME=dinky_test \</span><br><span class="line">-e MYSQL_PASSWORD=xxxxxx \</span><br><span class="line">--name dinky-server \</span><br><span class="line">registry.zerofinance.net/flink/dinky-flink:1.17-1.0.0-rc4</span><br></pre></td></tr></table></figure>
<p>flink-dinky-template.yml:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">flink-dinky</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">flink-dinky-test</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">flink-test</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">flink-dinky</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">flink-dinky</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">imagePullSecrets:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">registry-private-secret</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">registry.zerofinance.net/flink/dinky-flink:1.17-1.0.0-rc4</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">flink-dinky</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">FLINK_BIG_VERSION</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">"1.17"</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">DB_ACTIVE</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">mysql</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_ADDR</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">rm-xxx.mysql.rds.aliyuncs.com:3306</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_DATABASE</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">dinky_test</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_USERNAME</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">dinky_test</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_PASSWORD</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">xxx</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">dinky-port</span></span><br><span class="line">          <span class="attr">containerPort:</span> <span class="number">8888</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">limits:</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">"1024Mi"</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">"1000m"</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">500m</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">500Mi</span></span><br><span class="line">        <span class="attr">livenessProbe:</span></span><br><span class="line">          <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">8888</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">30</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="comment">#successThreshold: 1</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">5</span></span><br><span class="line">        <span class="attr">readinessProbe:</span></span><br><span class="line">          <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">8888</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">30</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="comment">#successThreshold: 1</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">5</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kube-config</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/root/.kube</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kube-config</span></span><br><span class="line">        <span class="attr">hostPath:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">/data/data/kube-config</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">flink-dinky-test</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">flink-test</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">flink-dinky</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">8888</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8888</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="comment">#nodePort: 32323</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">flink-dinky</span></span><br><span class="line">  <span class="comment">#type:  NodePort </span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">flink-dinky-ingress</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">flink-test</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">tls:</span> <span class="string">[]</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">flink-dinky-test.zerofinance.net</span></span><br><span class="line">      <span class="attr">http:</span></span><br><span class="line">        <span class="attr">paths:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">              <span class="attr">serviceName:</span> <span class="string">flink-dinky-test</span></span><br><span class="line">              <span class="attr">servicePort:</span> <span class="number">8888</span></span><br></pre></td></tr></table></figure>
<h4 id="On-Application"><a href="#On-Application" class="headerlink" title="On Application"></a>On Application</h4><p>Must build your own image:</p>
<p>DinkyFlinkDockerfile(1.0.0):</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 用来构建dinky环境</span></span><br><span class="line">ARG FLINK_VERSION=1.17.2</span><br><span class="line">ARG FLINK_BIG_VERSION=1.17</span><br><span class="line"></span><br><span class="line"><span class="comment">#FROM flink:$&#123;FLINK_VERSION&#125;</span></span><br><span class="line">FROM registry.zerofinance.net/library/flink:<span class="variable">$&#123;FLINK_VERSION&#125;</span></span><br><span class="line"></span><br><span class="line">ARG FLINK_VERSION</span><br><span class="line">ARG FLINK_BIG_VERSION</span><br><span class="line">ENV PYTHON_HOME /opt/miniconda3</span><br><span class="line"></span><br><span class="line">USER root</span><br><span class="line">RUN wget <span class="string">"https://s3.jcloud.sjtu.edu.cn/899a892efef34b1b944a19981040f55b-oss01/anaconda/miniconda/Miniconda3-py38_4.9.2-Linux-x86_64.sh"</span> -O <span class="string">"miniconda.sh"</span> &amp;&amp; chmod +x miniconda.sh</span><br><span class="line">RUN ./miniconda.sh -b -p <span class="variable">$PYTHON_HOME</span> &amp;&amp; chown -R flink <span class="variable">$PYTHON_HOME</span> &amp;&amp; ls <span class="variable">$PYTHON_HOME</span></span><br><span class="line"></span><br><span class="line">USER flink</span><br><span class="line"></span><br><span class="line">ENV PATH <span class="variable">$PYTHON_HOME</span>/bin:<span class="variable">$PATH</span></span><br><span class="line">RUN pip install <span class="string">"apache-flink==<span class="variable">$&#123;FLINK_VERSION&#125;</span>"</span> -i http://pypi.douban.com/simple/ --trusted-host pypi.douban.com</span><br><span class="line"></span><br><span class="line"><span class="comment">#RUN cp /opt/flink/opt/flink-python_* /opt/flink/lib/</span></span><br><span class="line">RUN cp /opt/flink/opt/flink-python-* /opt/flink/lib/</span><br><span class="line"></span><br><span class="line"><span class="comment">#RUN wget -O dinky-app-$&#123;FLINK_BIG_VERSION&#125;.jar - $&#123;DINKY_HTTP&#125;/downloadAppJar/$&#123;FLINK_BIG_VERSION&#125; | mv dinky-app-$&#123;FLINK_BIG_VERSION&#125;.jar</span></span><br><span class="line">COPY ./dinky-lib/* /opt/flink/lib/</span><br><span class="line"><span class="comment">#Replace flink-table-planner-loader as flink-table-planner(Already included in dinky-lib folder, so need to delete)</span></span><br><span class="line">RUN rm -fr /opt/flink/lib/flink-table-planner-loader-1.17.2.jar</span><br></pre></td></tr></table></figure>
<p>All jars in dinky-lib:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ll dinky-lib/</span><br><span class="line">总用量 49444</span><br><span class="line">-rwxrwxr-x 1 dev dev 28586238 1月  29 14:43 dinky-app-1.17-1.0.0-rc4-jar-with-dependencies.jar</span><br><span class="line">-rwxrwxr-x 1 dev dev    94360 1月  29 14:42 dinky-client-1.17-1.0.0-rc4.jar</span><br><span class="line">-rwxrwxr-x 1 dev dev    78413 1月  29 14:44 dinky-client-base-1.0.0-rc4.jar</span><br><span class="line">-rwxrwxr-x 1 dev dev   269936 1月  29 14:44 dinky-common-1.0.0-rc4.jar</span><br><span class="line">-rw-rw-r-- 1 dev dev   251405 1月  19 11:57 flink-cdc-common-3.0.1.jar</span><br><span class="line">-rw-r--r-- 1 dev dev 21333608 2月  22 16:19 flink-table-planner_2.12-1.17.2.jar</span><br></pre></td></tr></table></figure>
<p>Build and push to registry:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker build -t registry.zerofinance.net/flink/dinky-flink-application:1.17.2-1.0.0-rc4 . -f DinkyFlinkDockerfile</span><br><span class="line">docker push registry.zerofinance.net/flink/dinky-flink-application:1.17.2-1.0.0-rc4</span><br></pre></td></tr></table></figure>
<p>“提交FlinkSQL的jar文件路径”为打包到镜像registry.zerofinance.net/flink/dinky-flink-application:1.17.2-1.0.0-rc4中的路径，而不是dinky中的路径。</p>
<p><img src="/images/2023-08-25-hadoop-Ecosystem/image-20240222165123099.png" alt="image-20240222165123099"></p>
<p><img src="/images/2023-08-25-hadoop-Ecosystem/image-20240222165153627.png" alt="image-20240222165153627"></p>
<p><img src="/images/2023-08-25-hadoop-Ecosystem/image-20240222165214472.png" alt="image-20240222165214472"></p>
<p><img src="/images/2023-08-25-hadoop-Ecosystem/image-20240222165256791.png" alt="image-20240222165256791"></p>
<h4 id="DataSource"><a href="#DataSource" class="headerlink" title="DataSource"></a>DataSource</h4><p><img src="/images/2023-08-25-hadoop-Ecosystem/image-20231229175659553.png" alt="image-20231229175659553"></p>
<p><img src="/images/2023-08-25-hadoop-Ecosystem/image-20231229175620829.png" alt="image-20231229175620829"></p>
<p><img src="/images/2023-08-25-hadoop-Ecosystem/image-20231229175739306.png" alt="image-20231229175739306"></p>
<h3 id="User-defined-Functions"><a href="#User-defined-Functions" class="headerlink" title="User-defined Functions"></a>User-defined Functions</h3><p><a href="https://nightlies.apache.org/flink/flink-docs-release-1.17/docs/dev/table/functions/udfs/" target="_blank" rel="noopener">User-defined Functions | Apache Flink</a></p>
<p>User-defined functions (UDFs) are extension points to call frequently used logic or custom logic that cannot be expressed otherwise in queries.</p>
<p>User-defined functions can be implemented in a JVM language (such as Java or Scala) or Python. An implementer can use arbitrary third party libraries within a UDF. This page will focus on JVM-based languages, please refer to the PyFlink documentation for details on writing <a href="https://nightlies.apache.org/flink/flink-docs-release-1.17/docs/dev/python/table/udfs/python_udfs/" target="_blank" rel="noopener">general</a> and <a href="https://nightlies.apache.org/flink/flink-docs-release-1.17/docs/dev/python/table/udfs/vectorized_python_udfs/" target="_blank" rel="noopener">vectorized</a> UDFs in Python.</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">#https://yangyichao-mango.github.io/2021/11/15/wechat-blog/01_%E5%A4%A7%E6%95%B0%E6%8D%AE/01_%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/01_%E5%AE%9E%E6%97%B6%E6%95%B0%E4%BB%93/02_%E6%95%B0%E6%8D%AE%E5%86%85%E5%AE%B9%E5%BB%BA%E8%AE%BE/03_one-engine/01_%E8%AE%A1%E7%AE%97%E5%BC%95%E6%93%8E/01_flink/01_flink-sql/20_%E5%8F%B2%E4%B8%8A%E6%9C%80%E5%85%A8%E5%B9%B2%E8%B4%A7%EF%BC%81FlinkSQL%E6%88%90%E7%A5%9E%E4%B9%8B%E8%B7%AF%EF%BC%88%E5%85%A8%E6%96%876%E4%B8%87%E5%AD%97%E3%80%81110%E4%B8%AA%E7%9F%A5%E8%AF%86%E7%82%B9%E3%80%81160%E5%BC%A0%E5%9B%BE%EF%BC%89/</span><br><span class="line">#https://www.cnblogs.com/wxm2270/p/17275442.html</span><br><span class="line">#https://juejin.cn/post/7103196993232568328</span><br><span class="line">#https://nightlies.apache.org/flink/flink-docs-release-1.17/docs/dev/table/functions/udfs/</span><br><span class="line"></span><br><span class="line">#第一步，自定义数据类型</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1. 基础类型，Flink 可以通过反射类型信息自动把数据类型获取到</span></span><br><span class="line">    <span class="comment">// 关于 SQL 类型和 Java 类型之间的映射见：https://nightlies.apache.org/flink/flink-docs-release-1.13/docs/dev/table/types/#data-type-extraction</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2. 复杂类型，用户可以通过 @DataTypeHint("DECIMAL(10, 2)") 注解标注此字段的数据类型</span></span><br><span class="line">    <span class="keyword">public</span> <span class="meta">@DataTypeHint</span>(<span class="string">"DECIMAL(10, 2)"</span>) BigDecimal totalBalance;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#第二步，在 UDF 中使用此数据类型</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserScalarFunction</span> <span class="keyword">extends</span> <span class="title">ScalarFunction</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1. 自定义数据类型作为输出参数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">eval</span><span class="params">(<span class="keyword">long</span> i)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span> &amp;&amp; i &lt;= <span class="number">5</span>) &#123;</span><br><span class="line">            User u = <span class="keyword">new</span> User();</span><br><span class="line">            u.age = (<span class="keyword">int</span>) i;</span><br><span class="line">            u.name = <span class="string">"name1"</span>;</span><br><span class="line">            u.totalBalance = <span class="keyword">new</span> BigDecimal(<span class="number">1.1</span>d);</span><br><span class="line">            <span class="keyword">return</span> u;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            User u = <span class="keyword">new</span> User();</span><br><span class="line">            u.age = (<span class="keyword">int</span>) i;</span><br><span class="line">            u.name = <span class="string">"name2"</span>;</span><br><span class="line">            u.totalBalance = <span class="keyword">new</span> BigDecimal(<span class="number">2.2</span>d);</span><br><span class="line">            <span class="keyword">return</span> u;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 2. 自定义数据类型作为输入参数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">eval</span><span class="params">(User i)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (i.age &gt; <span class="number">0</span> &amp;&amp; i.age &lt;= <span class="number">5</span>) &#123;</span><br><span class="line">            User u = <span class="keyword">new</span> User();</span><br><span class="line">            u.age = <span class="number">1</span>;</span><br><span class="line">            u.name = <span class="string">"name1"</span>;</span><br><span class="line">            u.totalBalance = <span class="keyword">new</span> BigDecimal(<span class="number">1.1</span>d);</span><br><span class="line">            <span class="keyword">return</span> u.name;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            User u = <span class="keyword">new</span> User();</span><br><span class="line">            u.age = <span class="number">2</span>;</span><br><span class="line">            u.name = <span class="string">"name2"</span>;</span><br><span class="line">            u.totalBalance = <span class="keyword">new</span> BigDecimal(<span class="number">2.2</span>d);</span><br><span class="line">            <span class="keyword">return</span> u.name;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">#Upload the packaged jar to /usr/bigtop/current/flink-client/lib/ of all machines and restart yarn-session instance.</span><br><span class="line"></span><br><span class="line">#第三步，在 Flink SQL 中使用</span><br><span class="line">-- <span class="number">1</span>. 创建 UDF</span><br><span class="line">CREATE FUNCTION user_scalar_func AS <span class="string">'flink.examples.sql._12_data_type._02_user_defined.UserScalarFunction'</span>;</span><br><span class="line"></span><br><span class="line">-- <span class="number">2</span>. 创建数据源表</span><br><span class="line"><span class="function">CREATE TABLE <span class="title">source_table</span> <span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">    user_id BIGINT NOT NULL COMMENT <span class="string">'用户 id'</span></span></span></span><br><span class="line"><span class="function"><span class="params">)</span> <span class="title">WITH</span> <span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="string">'connector'</span> = <span class="string">'datagen'</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="string">'rows-per-second'</span> = <span class="string">'1'</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="string">'fields.user_id.min'</span> = <span class="string">'1'</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="string">'fields.user_id.max'</span> = <span class="string">'10'</span></span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br><span class="line"></span><br><span class="line">-- <span class="number">3</span>. 创建数据汇表</span><br><span class="line"><span class="function">CREATE TABLE <span class="title">sink_table</span> <span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">    result_row_1 ROW&lt;age INT, name STRING, totalBalance DECIMAL(<span class="number">10</span>, <span class="number">2</span>)</span>&gt;,</span></span><br><span class="line"><span class="function">    result_row_2 STRING</span></span><br><span class="line"><span class="function">) <span class="title">WITH</span> <span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="string">'connector'</span> = <span class="string">'print'</span></span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br><span class="line"></span><br><span class="line">-- <span class="number">4</span>. SQL 查询语句</span><br><span class="line">INSERT INTO sink_table</span><br><span class="line">select</span><br><span class="line">    -- <span class="number">4</span>.a. 用户自定义类型作为输出</span><br><span class="line">    user_scalar_func(user_id) as result_row_1,</span><br><span class="line">    -- <span class="number">4</span>.b. 用户自定义类型作为输出及输入</span><br><span class="line">    user_scalar_func(user_scalar_func(user_id)) as result_row_2</span><br><span class="line">from source_table;</span><br><span class="line"></span><br><span class="line">-- <span class="number">5</span>. 查询结果</span><br><span class="line">+I[+I[<span class="number">9</span>, name2, <span class="number">2.20</span>], name2]</span><br><span class="line">+I[+I[<span class="number">1</span>, name1, <span class="number">1.10</span>], name1]</span><br><span class="line">+I[+I[<span class="number">5</span>, name1, <span class="number">1.10</span>], name1]</span><br></pre></td></tr></table></figure>
<h3 id="Hive-Catalog"><a href="#Hive-Catalog" class="headerlink" title="Hive Catalog"></a>Hive Catalog</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://nightlies.apache.org/flink/flink-docs-release-1.17/zh/docs/connectors/table/hive/hive_catalog/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">CATALOG</span> myhive <span class="keyword">WITH</span> (</span><br><span class="line">  <span class="string">'type'</span> = <span class="string">'hive'</span>,</span><br><span class="line">  <span class="string">'hive-conf-dir'</span> = <span class="string">'/usr/bigtop/current/hive-client/conf'</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">show</span> catalogs;</span><br><span class="line"><span class="keyword">use</span> <span class="keyword">catalog</span> myhive;</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">databases</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> mykafka (</span><br><span class="line">    <span class="keyword">id</span> <span class="keyword">STRING</span>,</span><br><span class="line">    use_rname <span class="keyword">STRING</span>,</span><br><span class="line">    age <span class="built_in">integer</span>,</span><br><span class="line">    gender <span class="keyword">STRING</span>,</span><br><span class="line">    goods_no <span class="keyword">STRING</span>,</span><br><span class="line">    goods_price <span class="built_in">Float</span>,</span><br><span class="line">    store_id <span class="built_in">integer</span>,</span><br><span class="line">    shopping_type <span class="keyword">STRING</span>,</span><br><span class="line">    tel <span class="keyword">STRING</span>,</span><br><span class="line">    email <span class="keyword">STRING</span>,</span><br><span class="line">    shopping_date <span class="built_in">Date</span></span><br><span class="line">) <span class="keyword">with</span> (</span><br><span class="line">    <span class="string">'connector'</span> = <span class="string">'kafka'</span>,</span><br><span class="line">    <span class="string">'properties.bootstrap.servers'</span> = <span class="string">'datanode01-test.zerofinance.net:9092,datanode01-test.zerofinance.net:9092,datanode01-test.zerofinance.net:9092'</span>,</span><br><span class="line">    <span class="string">'topic'</span> = <span class="string">'fludesc'</span>,</span><br><span class="line">    <span class="string">'scan.startup.mode'</span> = <span class="string">'earliest-offset'</span>,</span><br><span class="line">    <span class="string">'format'</span> = <span class="string">'csv'</span>,</span><br><span class="line">    <span class="string">'csv.ignore-parse-errors'</span> = <span class="string">'true'</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">DESCRIBE</span> mykafka;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> mykafka;</span><br></pre></td></tr></table></figure>
<h3 id="Flink-Streaming-Platform-Web"><a href="#Flink-Streaming-Platform-Web" class="headerlink" title="Flink Streaming Platform Web"></a>Flink Streaming Platform Web</h3><p><a href="https://github.com/zhp8341/flink-streaming-platform-web" target="_blank" rel="noopener">flink-streaming-platform-web</a></p>
<p>Prerequisite:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#https://github.com/zhp8341/flink-streaming-platform-web/blob/master/docs/deploy.md</span><br><span class="line">#https://www.cnblogs.com/data-magnifier/p/16943527.html</span><br><span class="line">sudo su - hadoop</span><br><span class="line"></span><br><span class="line">mkdir /usr/bigtop/3.2.0/usr/lib/</span><br><span class="line">cd /usr/bigtop/3.2.0/usr/lib/</span><br><span class="line">wget https://github.com/zhp8341/flink-streaming-platform-web/releases/download/tagV20230610(flink1.16.2)/flink-streaming-platform-web.tar.gz</span><br><span class="line">tar zxf flink-streaming-platform-web.tar.gz</span><br><span class="line">cd /usr/bigtop/current/</span><br><span class="line">ln -s /usr/bigtop/3.2.0/usr/lib/flink-streaming-platform-web flink-streaming-platform-web</span><br><span class="line"></span><br><span class="line">cd /usr/bigtop/current/flink-streaming-platform-web</span><br><span class="line">wget https://github.com/zhp8341/flink-streaming-platform-web/blob/master/docs/sql/flink_web.sql</span><br><span class="line"></span><br><span class="line">mysql -uroot -h127.0.0.1 -p</span><br><span class="line">&gt; source /usr/bigtop/current/flink-streaming-platform-web/flink_web.sql;</span><br><span class="line">&gt; exit;</span><br></pre></td></tr></table></figure>
<p>config/application.properties:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">####jdbc信息</span><br><span class="line">server.port=9084</span><br><span class="line">spring.datasource.url=jdbc:mysql://192.168.63.102:3306/flink_web?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false</span><br><span class="line">spring.datasource.username=flink_web</span><br><span class="line">spring.datasource.password=Aa123456</span><br></pre></td></tr></table></figure>
<p>Build docker image:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">FROM  centos:7</span><br><span class="line"></span><br><span class="line">RUN ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line">RUN echo &apos;Asia/Shanghai&apos; &gt;/etc/timezone</span><br><span class="line"></span><br><span class="line">RUN yum -y install kde-l10n-Chinese &amp;&amp; yum -y reinstall glibc-common </span><br><span class="line">RUN localedef -c -f UTF-8 -i zh_CN zh_CN.utf8 </span><br><span class="line">ENV LC_ALL zh_CN.utf8</span><br><span class="line">RUN export LANG=zh_CN.UTF-8</span><br><span class="line"></span><br><span class="line">RUN  yum install java-1.8.0-openjdk* -y</span><br><span class="line"></span><br><span class="line">RUN  mkdir  /data/</span><br><span class="line">RUN  mkdir  /data/projects</span><br><span class="line">RUN  mkdir  /data/projects/flink-1.15.3</span><br><span class="line">WORKDIR /data/projects/</span><br><span class="line"></span><br><span class="line">ADD  flink-streaming-platform-web.tar.gz  /data/projects/</span><br><span class="line">#ADD flink-1.15.3-bin-scala_2.12.tgz /data/projects/</span><br><span class="line">COPY flink-1.15.3 /data/projects/flink-1.15.3</span><br><span class="line"></span><br><span class="line">ENTRYPOINT [&quot;sh&quot;, &quot;-c&quot;, &quot;java -jar flink-streaming-platform-web/lib/flink-streaming-web-1.5.0.RELEASE.jar --spring.profiles.active=prod --spring.config.additional-location=flink-streaming-platform-web/conf/application.properties&quot;]</span><br><span class="line"></span><br><span class="line">EXPOSE  9084 5007 8081</span><br></pre></td></tr></table></figure>
<p>build and push to registry:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker build -t registry.zerofinance.net/library/flink-streaming-platform-web:1.16.2 . -f Dockerfile.web</span><br><span class="line">docker push registry.zerofinance.net/library/flink-streaming-platform-web:1.16.2</span><br></pre></td></tr></table></figure>
<p>Starting a new instance:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name flink-streaming-platform-web --restart=always \</span><br><span class="line">-p 9084:9084 \</span><br><span class="line">-v /works/app/flink/flink-streaming-platform-web/conf:/data/projects/flink-streaming-platform-web/conf \</span><br><span class="line">registry.zerofinance.net/library/flink-streaming-platform-web:1.16.2</span><br><span class="line"></span><br><span class="line">http://192.168.64.102:32061</span><br><span class="line"></span><br><span class="line"><span class="comment">#/data/projects/flink-1.15.3/bin/flink run -d -m 192.168.63.102:8081 -c com.flink.streaming.core.JobApplication /data/projects/flink-streaming-platform-web/lib/flink-streaming-core-1.5.0.RELEASE.jar -sql /data/projects/flink-streaming-platform-web/sql/job_sql_6.sql -type 0</span></span><br></pre></td></tr></table></figure>
<p>On K8s:</p>
<p>flink-streaming-platform-web.yml:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: application-properties</span><br><span class="line">data:</span><br><span class="line">  application.properties: |</span><br><span class="line">    server.port=9084</span><br><span class="line">    spring.datasource.url=jdbc:mysql://192.168.63.102:3306/flink_fspw?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false</span><br><span class="line">    spring.datasource.username=flink_fspw</span><br><span class="line">    spring.datasource.password=Aa123456</span><br><span class="line">---</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: flink-streaming-platform-web</span><br><span class="line">  namespace: flink-test</span><br><span class="line">  labels:</span><br><span class="line">    app: flink-streaming-platform-web</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: flink-streaming-platform-web</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: flink-streaming-platform-web</span><br><span class="line">    spec:</span><br><span class="line">      imagePullSecrets:</span><br><span class="line">      - name: registry-private-secret</span><br><span class="line">      containers:</span><br><span class="line">      - name: flink-streaming-platform-web</span><br><span class="line">        image: registry.zerofinance.net/library/flink-streaming-platform-web:1.16.2</span><br><span class="line">        imagePullPolicy: Always</span><br><span class="line">        ports:</span><br><span class="line">        - name: fspw-9084</span><br><span class="line">          containerPort: 9084</span><br><span class="line">          protocol: TCP</span><br><span class="line">        - name: fspw-5007</span><br><span class="line">          containerPort: 5007</span><br><span class="line">          protocol: TCP</span><br><span class="line">        - name: fspw-8081</span><br><span class="line">          containerPort: 8081</span><br><span class="line">          protocol: TCP</span><br><span class="line">        resources:</span><br><span class="line">          limits:</span><br><span class="line">            memory: &quot;1024Mi&quot;</span><br><span class="line">            cpu: &quot;1000m&quot;</span><br><span class="line">          requests:</span><br><span class="line">            cpu: 500m</span><br><span class="line">            memory: 500Mi</span><br><span class="line">        livenessProbe:</span><br><span class="line">          failureThreshold: 3</span><br><span class="line">          httpGet:</span><br><span class="line">            path: /static/ui/index.html</span><br><span class="line">            port: 9084</span><br><span class="line">          initialDelaySeconds: 30</span><br><span class="line">          periodSeconds: 10</span><br><span class="line">          #successThreshold: 1</span><br><span class="line">          timeoutSeconds: 5</span><br><span class="line">        readinessProbe:</span><br><span class="line">          failureThreshold: 3</span><br><span class="line">          httpGet:</span><br><span class="line">            path: /static/ui/index.html</span><br><span class="line">            port: 9084</span><br><span class="line">          initialDelaySeconds: 30</span><br><span class="line">          periodSeconds: 10</span><br><span class="line">          #successThreshold: 1</span><br><span class="line">          timeoutSeconds: 5</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: application-properties-volume</span><br><span class="line">          mountPath: /data/projects/flink-streaming-platform-web/conf/</span><br><span class="line">      volumes:</span><br><span class="line">      - name: application-properties-volume</span><br><span class="line">        configMap:</span><br><span class="line">          name: application-properties</span><br><span class="line">          items:</span><br><span class="line">          - key: application.properties</span><br><span class="line">            path: application.properties</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: flink-streaming-platform-web</span><br><span class="line">  namespace: flink-test</span><br><span class="line">  labels:</span><br><span class="line">    app: flink-streaming-platform-web</span><br><span class="line">spec:</span><br><span class="line">  #type: NodePort</span><br><span class="line">  ports:</span><br><span class="line">  - name: kafka</span><br><span class="line">    port: 9084</span><br><span class="line">    targetPort: 9084</span><br><span class="line">    #nodePort: 30900</span><br><span class="line">  selector:</span><br><span class="line">    app: flink-streaming-platform-web</span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: flink-streaming-platform-web</span><br><span class="line">  namespace: flink-test</span><br><span class="line">spec:</span><br><span class="line">  tls: []</span><br><span class="line">  rules:</span><br><span class="line">    - host: fspw-test.zerofinance.net</span><br><span class="line">      http:</span><br><span class="line">        paths:</span><br><span class="line">          - backend:</span><br><span class="line">              serviceName: flink-streaming-platform-web</span><br><span class="line">              servicePort: 9084</span><br></pre></td></tr></table></figure>
<p>Or:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim conf/application.properties</span><br><span class="line"><span class="comment">####jdbc信息</span></span><br><span class="line">server.port=9084</span><br><span class="line">spring.datasource.url=jdbc:mysql://192.168.80.225:3306/flink_web?serverTimezone=UTC&amp;useUnicode=<span class="literal">true</span>&amp;characterEncoding=utf-8&amp;useSSL=<span class="literal">false</span></span><br><span class="line">spring.datasource.username=root</span><br><span class="line">spring.datasource.password=xxxxxx</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> bin</span><br><span class="line">./deploy.sh start</span><br><span class="line"></span><br><span class="line"><span class="comment">#http://192.168.80.226:9084/</span></span><br><span class="line">admin/123456</span><br></pre></td></tr></table></figure>
<h4 id="Settings"><a href="#Settings" class="headerlink" title="Settings"></a>Settings</h4><p><img src="/images/2023-08-25-hadoop-Ecosystem/image-20230914181613864.png" alt="image-20230914181613864"></p>
<h4 id="Job"><a href="#Job" class="headerlink" title="Job"></a>Job</h4><p><img src="/images/2023-08-25-hadoop-Ecosystem/image-20230914181838644.png" alt="image-20230914181838644"></p>
<h3 id="Flink-SQL-CDC"><a href="#Flink-SQL-CDC" class="headerlink" title="Flink SQL CDC"></a>Flink SQL CDC</h3><p><a href="http://www.dreamwu.com/post-1594.html" target="_blank" rel="noopener">基于 Flink SQL CDC的实时数据同步方案 (dreamwu.com)</a></p>
<p><a href="https://gitee.com/zhuhuipei/flink-streaming-platform-web/blob/master/docs/sql_demo/demo_6.md" target="_blank" rel="noopener">docs/sql_demo/demo_6.md · 朱慧培/flink-streaming-platform-web - Gitee.com</a></p>
<p><a href="https://ververica.github.io/flink-cdc-connectors/release-2.4/content/about.html" target="_blank" rel="noopener">Overview — CDC Connectors for Apache Flink® documentation (ververica.github.io)</a></p>
<p>Enable mysql bin-log function:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#temporary password：</span><br><span class="line">grep &apos;temporary password&apos; /var/log/mysqld.log</span><br><span class="line"></span><br><span class="line">mysql -uroot -p</span><br><span class="line">set global validate_password_policy=0;</span><br><span class="line">alter user &apos;root&apos;@&apos;localhost&apos; identified by &apos;Aa123456&apos;;</span><br><span class="line">CREATE USER &apos;flink_web&apos;@&apos;%&apos; IDENTIFIED BY &apos;Aa123456&apos;;</span><br><span class="line">GRANT ALL PRIVILEGES ON flink_web.* TO &apos;flink_web&apos;@&apos;%&apos;;</span><br><span class="line"></span><br><span class="line">CREATE USER &apos;demo_db&apos;@&apos;%&apos; IDENTIFIED BY &apos;Aa123456&apos;;</span><br><span class="line">GRANT ALL PRIVILEGES ON demo_db.* TO &apos;demo_db&apos;@&apos;%&apos;;</span><br><span class="line">GRANT SELECT, REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO demo_db@&apos;%&apos;;</span><br><span class="line">FLUSH PRIVILEGES;</span><br><span class="line"></span><br><span class="line">mysql-cdc:</span><br><span class="line">#https://support.huaweicloud.com/trouble-rds/rds_12_0040.html</span><br><span class="line">Access denied; you need (at least one of) the SUPER, REPLICATION CLIENT privilege(s) for this operation</span><br><span class="line">GRANT SELECT, REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO demo_db@&apos;%&apos;;</span><br><span class="line">FLUSH PRIVILEGES;</span><br><span class="line"></span><br><span class="line">#https://blog.csdn.net/wochunyang/article/details/132210928?spm=1001.2014.3001.5501</span><br><span class="line">Cannot read the binlog filename and position via &apos;SHOW MASTER STATUS&apos;. Make sure your server is correctly configured</span><br><span class="line"></span><br><span class="line">vim /etc/my.cnf</span><br><span class="line">server_id = 1</span><br><span class="line">binlog_format = ROW</span><br><span class="line">log-bin = mysql_log_bin</span><br><span class="line"></span><br><span class="line">systemctl restart mysqld</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; sudo su - hadoop</span><br><span class="line"></span><br><span class="line">&gt; mysql -uroot -h127.0.0.1 -p</span><br><span class="line">-- MySQL</span><br><span class="line">CREATE DATABASE mydb;</span><br><span class="line">USE mydb;</span><br><span class="line">CREATE TABLE products (</span><br><span class="line">  id INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,</span><br><span class="line">  name VARCHAR(255) NOT NULL,</span><br><span class="line">  description VARCHAR(512)</span><br><span class="line">);</span><br><span class="line">ALTER TABLE products AUTO_INCREMENT = 101;</span><br><span class="line"></span><br><span class="line">INSERT INTO products</span><br><span class="line">VALUES (default,<span class="string">"scooter"</span>,<span class="string">"Small 2-wheel scooter"</span>),</span><br><span class="line">       (default,<span class="string">"car battery"</span>,<span class="string">"12V car battery"</span>),</span><br><span class="line">       (default,<span class="string">"12-pack drill bits"</span>,<span class="string">"12-pack of drill bits with sizes ranging from #40 to #3"</span>),</span><br><span class="line">       (default,<span class="string">"hammer"</span>,<span class="string">"12oz carpenter's hammer"</span>),</span><br><span class="line">       (default,<span class="string">"hammer"</span>,<span class="string">"14oz carpenter's hammer"</span>),</span><br><span class="line">       (default,<span class="string">"hammer"</span>,<span class="string">"16oz carpenter's hammer"</span>),</span><br><span class="line">       (default,<span class="string">"rocks"</span>,<span class="string">"box of assorted rocks"</span>),</span><br><span class="line">       (default,<span class="string">"jacket"</span>,<span class="string">"water resistent black wind breaker"</span>),</span><br><span class="line">       (default,<span class="string">"spare tire"</span>,<span class="string">"24 inch spare tire"</span>);</span><br><span class="line"></span><br><span class="line">CREATE TABLE orders (</span><br><span class="line">  order_id INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,</span><br><span class="line">  order_date DATETIME NOT NULL,</span><br><span class="line">  customer_name VARCHAR(255) NOT NULL,</span><br><span class="line">  price DECIMAL(10, 5) NOT NULL,</span><br><span class="line">  product_id INTEGER NOT NULL,</span><br><span class="line">  order_status BOOLEAN NOT NULL -- Whether order has been placed</span><br><span class="line">) AUTO_INCREMENT = 10001;</span><br><span class="line"></span><br><span class="line">INSERT INTO orders</span><br><span class="line">VALUES (default, <span class="string">'2020-07-30 10:08:22'</span>, <span class="string">'Jark'</span>, 50.50, 102, <span class="literal">false</span>),</span><br><span class="line">       (default, <span class="string">'2020-07-30 10:11:09'</span>, <span class="string">'Sally'</span>, 15.00, 105, <span class="literal">false</span>),</span><br><span class="line">       (default, <span class="string">'2020-07-30 12:00:30'</span>, <span class="string">'Edward'</span>, 25.25, 106, <span class="literal">false</span>);</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"></span><br><span class="line">&gt; yarn-session.sh -jm 2048MB -tm 2048MB -nm flink-sql-test -d</span><br><span class="line"></span><br><span class="line">&gt; sql-client.sh embedded -s yarn-session</span><br><span class="line">Flink SQL&gt; SET sql-client.execution.result-mode = tableau;</span><br><span class="line"></span><br><span class="line">-- checkpoint every 3000 milliseconds                       </span><br><span class="line">Flink SQL&gt; SET <span class="string">'execution.checkpointing.interval'</span> = <span class="string">'3s'</span>;  </span><br><span class="line"></span><br><span class="line"><span class="comment">#Create in flinksql</span></span><br><span class="line">-- Flink SQL</span><br><span class="line"><span class="comment">#Mysql source</span></span><br><span class="line">Flink SQL&gt; CREATE TABLE products (</span><br><span class="line">    id INT,</span><br><span class="line">    name STRING,</span><br><span class="line">    description STRING,</span><br><span class="line">    PRIMARY KEY (id) NOT ENFORCED</span><br><span class="line">  ) WITH (</span><br><span class="line">    <span class="string">'connector'</span> = <span class="string">'mysql-cdc'</span>,</span><br><span class="line">    <span class="string">'hostname'</span> = <span class="string">'192.168.80.225'</span>,</span><br><span class="line">    <span class="string">'port'</span> = <span class="string">'3306'</span>,</span><br><span class="line">    <span class="string">'username'</span> = <span class="string">'root'</span>,</span><br><span class="line">    <span class="string">'password'</span> = <span class="string">'Aa123#@!'</span>,</span><br><span class="line">    <span class="string">'database-name'</span> = <span class="string">'mydb'</span>,</span><br><span class="line">    <span class="string">'table-name'</span> = <span class="string">'products'</span></span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">Flink SQL&gt; CREATE TABLE orders (</span><br><span class="line">   order_id INT,</span><br><span class="line">   order_date TIMESTAMP(0),</span><br><span class="line">   customer_name STRING,</span><br><span class="line">   price DECIMAL(10, 5),</span><br><span class="line">   product_id INT,</span><br><span class="line">   order_status BOOLEAN,</span><br><span class="line">   PRIMARY KEY (order_id) NOT ENFORCED</span><br><span class="line"> ) WITH (</span><br><span class="line">   <span class="string">'connector'</span> = <span class="string">'mysql-cdc'</span>,</span><br><span class="line">   <span class="string">'hostname'</span> = <span class="string">'192.168.80.225'</span>,</span><br><span class="line">   <span class="string">'port'</span> = <span class="string">'3306'</span>,</span><br><span class="line">   <span class="string">'username'</span> = <span class="string">'root'</span>,</span><br><span class="line">   <span class="string">'password'</span> = <span class="string">'Aa123#@!'</span>,</span><br><span class="line">   <span class="string">'database-name'</span> = <span class="string">'mydb'</span>,</span><br><span class="line">   <span class="string">'table-name'</span> = <span class="string">'orders'</span></span><br><span class="line"> );</span><br><span class="line"></span><br><span class="line"><span class="comment">#Kafka sink</span></span><br><span class="line">CREATE TABLE enriched_orders(</span><br><span class="line">   order_id INT,</span><br><span class="line">   order_date TIMESTAMP(0),</span><br><span class="line">   customer_name STRING,</span><br><span class="line">   price DECIMAL(10, 5),</span><br><span class="line">   product_id INT,</span><br><span class="line">   order_status BOOLEAN,</span><br><span class="line">   product_name STRING,</span><br><span class="line">   product_description STRING,</span><br><span class="line">   PRIMARY KEY (order_id) NOT ENFORCED</span><br><span class="line">) WITH (</span><br><span class="line"> <span class="string">'connector'</span> = <span class="string">'upsert-kafka'</span>,</span><br><span class="line"> <span class="string">'topic'</span> = <span class="string">'fludesc'</span>,</span><br><span class="line"> <span class="string">'properties.bootstrap.servers'</span> = <span class="string">'datanode01-test.zerofinance.net:9092,datanode01-test.zerofinance.net:9092,datanode01-test.zerofinance.net:9092'</span>,</span><br><span class="line"> <span class="string">'key.format'</span> = <span class="string">'csv'</span>,</span><br><span class="line"> <span class="string">'value.format'</span> = <span class="string">'csv'</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">#Sink</span></span><br><span class="line">INSERT INTO enriched_orders</span><br><span class="line"> SELECT o.*, p.name, p.description</span><br><span class="line"> FROM orders AS o</span><br><span class="line"> LEFT JOIN products AS p ON o.product_id = p.id;</span><br><span class="line"></span><br><span class="line"><span class="comment">#Monitoring the changed data streams</span></span><br><span class="line">kafka-console-consumer.sh --topic fludesc --bootstrap-server datanode01-test.zerofinance.net:9092,datanode01-test.zerofinance.net:9092,datanode01-test.zerofinance.net:9092 --from-beginning</span><br></pre></td></tr></table></figure>
<p>The connector named kafka doesn’t support flink-sql-cdc, using ‘upset-kafka’ instead.  </p>
<p>The error as blow:</p>
<p><img src="/images/2023-08-25-hadoop-Ecosystem/image-20230915163923171.png" alt="image-20230915163923171"></p>
<h4 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h4><h5 id="kafka-to-mysql-Demo"><a href="#kafka-to-mysql-Demo" class="headerlink" title="kafka to mysql  Demo"></a>kafka to mysql  Demo</h5><p>This demo illustrate how to sink data from Kafka to MySQL:</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://www.jianshu.com/p/266449b9a0f4</span></span><br><span class="line"></span><br><span class="line">mysql -uroot -p</span><br><span class="line"><span class="comment">#Create table in mysql</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> demo_db <span class="built_in">character</span> <span class="keyword">set</span> utf8mb4;</span><br><span class="line"><span class="keyword">use</span> demo_db;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> fludesc (</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">varchar</span>(<span class="number">32</span>),</span><br><span class="line">    use_rname <span class="built_in">varchar</span>(<span class="number">32</span>),</span><br><span class="line">    age <span class="built_in">int</span>,</span><br><span class="line">    gender <span class="built_in">varchar</span>(<span class="number">32</span>),</span><br><span class="line">    goods_no <span class="built_in">varchar</span>(<span class="number">32</span>),</span><br><span class="line">    goods_price <span class="built_in">Float</span>,</span><br><span class="line">    store_id <span class="built_in">int</span>,</span><br><span class="line">    shopping_type <span class="built_in">varchar</span>(<span class="number">32</span>),</span><br><span class="line">    tel <span class="built_in">varchar</span>(<span class="number">32</span>),</span><br><span class="line">    email <span class="built_in">varchar</span>(<span class="number">32</span>),</span><br><span class="line">    shopping_date <span class="built_in">date</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">&gt; sudo su - hadoop</span><br><span class="line">&gt; yarn-session.sh -jm 2048MB -tm 2048MB -nm flink-sql-test -d</span><br><span class="line"></span><br><span class="line">&gt; sql-client.sh embedded -s yarn-session</span><br><span class="line">&gt; SET sql-client.execution.result-mode = tableau;</span><br><span class="line"></span><br><span class="line"><span class="comment">#Create in flinksql</span></span><br><span class="line">Flink SQL&gt; create table kafka_source (</span><br><span class="line">    id STRING,</span><br><span class="line">    use_rname STRING,</span><br><span class="line">    age integer,</span><br><span class="line">    gender STRING,</span><br><span class="line">    goods_no STRING,</span><br><span class="line">    goods_price Float,</span><br><span class="line">    store_id integer,</span><br><span class="line">    shopping_type STRING,</span><br><span class="line">    tel STRING,</span><br><span class="line">    email STRING,</span><br><span class="line">    shopping_date Date</span><br><span class="line">) <span class="keyword">with</span> (</span><br><span class="line">    <span class="string">'connector'</span> = <span class="string">'kafka'</span>,</span><br><span class="line">    <span class="string">'properties.bootstrap.servers'</span> = <span class="string">'datanode01-test.zerofinance.net:9092,datanode01-test.zerofinance.net:9092,datanode01-test.zerofinance.net:9092'</span>,</span><br><span class="line">    <span class="string">'topic'</span> = <span class="string">'fludesc'</span>,</span><br><span class="line">    <span class="string">'properties.group.id'</span> = <span class="string">'testGroup'</span>,</span><br><span class="line">    <span class="string">'scan.startup.mode'</span> = <span class="string">'earliest-offset'</span>,</span><br><span class="line">    <span class="string">'format'</span> = <span class="string">'csv'</span>,</span><br><span class="line">    <span class="string">'csv.ignore-parse-errors'</span> = <span class="string">'true'</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">Flink SQL&gt; CREATE TABLE mysql_sink (</span><br><span class="line">    id STRING,</span><br><span class="line">    use_rname STRING,</span><br><span class="line">    age integer,</span><br><span class="line">    gender STRING,</span><br><span class="line">    goods_no STRING,</span><br><span class="line">    goods_price Float,</span><br><span class="line">    store_id integer,</span><br><span class="line">    shopping_type STRING,</span><br><span class="line">    tel STRING,</span><br><span class="line">    email STRING,</span><br><span class="line">    shopping_date Date</span><br><span class="line">) <span class="keyword">WITH</span> (</span><br><span class="line">   <span class="string">'connector'</span> = <span class="string">'jdbc'</span>,</span><br><span class="line">   <span class="string">'url'</span> = <span class="string">'jdbc:mysql://192.168.80.225:3306/demo_db'</span>,</span><br><span class="line">   <span class="string">'table-name'</span> = <span class="string">'fludesc'</span>,</span><br><span class="line">   <span class="string">'username'</span> = <span class="string">'root'</span>,</span><br><span class="line">   <span class="string">'password'</span> = <span class="string">'Aa123#@!'</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">Flink SQL&gt; insert into mysql_sink select * from kafka_source;</span><br><span class="line"></span><br><span class="line"><span class="comment">#Mock data from kafka:</span></span><br><span class="line">kafka-console-producer.sh <span class="comment">--broker-list datanode01-test.zerofinance.net:9092,datanode01-test.zerofinance.net:9092,datanode01-test.zerofinance.net:9092 --topic fludesc</span></span><br><span class="line">&gt;511653962048,Zomfq,53,woman,532120,534.61,313020,cart,15926130785,UyxghCpKMD@huawei.com,2019-08-03</span><br><span class="line">&gt;751653962048,Qvtil,27,man,532120,655.7,313023,cart,13257423096,cJfbNhRYow@163.com,2019-08-05</span><br><span class="line">&gt;121653962048,Spdwh,35,woman,480071,97.35,313018,cart,18825789463,LkVYmpcWXC@qq.com,2019-08-05</span><br><span class="line">&gt;871653962048,Fdhpc,18,man,650012,439.40,313012,cart,15059872140,sfzuPWvNEe@qq.com,2019-08-06</span><br><span class="line">&gt;841653962048,Iqoyh,51,woman,152121,705.6,313012,buy,13646513897,jISbcYdxZO@126.com,2019-08-04</span><br><span class="line">&gt;761653962048,Xgzhy,29,woman,480071,329.60,313013,cart,15069315824,NtTDRlAdeZ@qq.com,2019-08-04</span><br><span class="line"></span><br><span class="line"><span class="comment">#kafka-console-consumer.sh --topic fludesc --bootstrap-server datanode01-test.zerofinance.net:9092,datanode01-test.zerofinance.net:9092,datanode01-test.zerofinance.net:9092 --from-beginning</span></span><br></pre></td></tr></table></figure>
<h5 id="kafka-to-hdfs-Demo"><a href="#kafka-to-hdfs-Demo" class="headerlink" title="kafka to hdfs Demo"></a>kafka to hdfs Demo</h5><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">&gt; sudo su - hadoop</span><br><span class="line">&gt; yarn-session.sh -jm 2048MB -tm 2048MB -nm flink-sql-test -d</span><br><span class="line"></span><br><span class="line">&gt; sql-client.sh embedded -s yarn-session</span><br><span class="line">&gt; SET sql-client.execution.result-mode = tableau;</span><br><span class="line"></span><br><span class="line"><span class="comment">#Create in flinksql</span></span><br><span class="line">Flink SQL&gt; create table kafka_source (</span><br><span class="line">    id STRING,</span><br><span class="line">    use_rname STRING,</span><br><span class="line">    age integer,</span><br><span class="line">    gender STRING,</span><br><span class="line">    goods_no STRING,</span><br><span class="line">    goods_price Float,</span><br><span class="line">    store_id integer,</span><br><span class="line">    shopping_type STRING,</span><br><span class="line">    tel STRING,</span><br><span class="line">    email STRING,</span><br><span class="line">    shopping_date Date</span><br><span class="line">) <span class="keyword">with</span> (</span><br><span class="line">    <span class="string">'connector'</span> = <span class="string">'kafka'</span>,</span><br><span class="line">    <span class="string">'properties.bootstrap.servers'</span> = <span class="string">'datanode01-test.zerofinance.net:9092,datanode01-test.zerofinance.net:9092,datanode01-test.zerofinance.net:9092'</span>,</span><br><span class="line">    <span class="string">'topic'</span> = <span class="string">'fludesc'</span>,</span><br><span class="line">    <span class="string">'properties.group.id'</span> = <span class="string">'testGroup'</span>,</span><br><span class="line">    <span class="string">'scan.startup.mode'</span> = <span class="string">'earliest-offset'</span>,</span><br><span class="line">    <span class="string">'format'</span> = <span class="string">'csv'</span>,</span><br><span class="line">    <span class="string">'csv.ignore-parse-errors'</span> = <span class="string">'true'</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> hadoop_sink (</span><br><span class="line">    <span class="keyword">id</span> <span class="keyword">STRING</span>,</span><br><span class="line">    use_rname <span class="keyword">STRING</span>,</span><br><span class="line">    age <span class="built_in">integer</span>,</span><br><span class="line">    gender <span class="keyword">STRING</span>,</span><br><span class="line">    goods_no <span class="keyword">STRING</span>,</span><br><span class="line">    goods_price <span class="built_in">Float</span>,</span><br><span class="line">    store_id <span class="built_in">integer</span>,</span><br><span class="line">    shopping_type <span class="keyword">STRING</span>,</span><br><span class="line">    tel <span class="keyword">STRING</span>,</span><br><span class="line">    email <span class="keyword">STRING</span>,</span><br><span class="line">    shopping_date <span class="built_in">Date</span></span><br><span class="line">) PARTITIONED <span class="keyword">BY</span> (<span class="keyword">id</span>) <span class="keyword">WITH</span> (</span><br><span class="line">  <span class="string">'connector'</span> = <span class="string">'filesystem'</span>,</span><br><span class="line">  <span class="string">'path'</span> = <span class="string">'hdfs:///works/test/hadoop_sink'</span>,</span><br><span class="line">  <span class="string">'format'</span> = <span class="string">'csv'</span>,</span><br><span class="line">  <span class="string">'partition.default-name'</span> = <span class="string">'9999'</span>,</span><br><span class="line">  <span class="string">'sink.shuffle-by-partition.enable'</span> = <span class="string">'false'</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> hadoop_sink <span class="keyword">select</span> * <span class="keyword">from</span> kafka_source;</span><br></pre></td></tr></table></figure>
<h5 id="Mysql-to-hdfs-Demo"><a href="#Mysql-to-hdfs-Demo" class="headerlink" title="Mysql to hdfs Demo"></a>Mysql to hdfs Demo</h5><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">&gt; sudo su - hadoop</span><br><span class="line">&gt; yarn-session.sh -jm 2048MB -tm 2048MB -nm flink-sql-test -d</span><br><span class="line"></span><br><span class="line">&gt; sql-client.sh embedded -s yarn-session</span><br><span class="line">&gt; SET sql-client.execution.result-mode = tableau;</span><br><span class="line"></span><br><span class="line"><span class="comment">#Create in flinksql</span></span><br><span class="line">Flink SQL&gt; CREATE TABLE mysql_source (</span><br><span class="line">    id STRING,</span><br><span class="line">    use_rname STRING,</span><br><span class="line">    age integer,</span><br><span class="line">    gender STRING,</span><br><span class="line">    goods_no STRING,</span><br><span class="line">    goods_price Float,</span><br><span class="line">    store_id integer,</span><br><span class="line">    shopping_type STRING,</span><br><span class="line">    tel STRING,</span><br><span class="line">    email STRING,</span><br><span class="line">    shopping_date Date</span><br><span class="line">) <span class="keyword">WITH</span> (</span><br><span class="line">   <span class="string">'connector'</span> = <span class="string">'jdbc'</span>,</span><br><span class="line">   <span class="string">'url'</span> = <span class="string">'jdbc:mysql://192.168.80.225:3306/demo_db'</span>,</span><br><span class="line">   <span class="string">'table-name'</span> = <span class="string">'fludesc'</span>,</span><br><span class="line">   <span class="string">'username'</span> = <span class="string">'root'</span>,</span><br><span class="line">   <span class="string">'password'</span> = <span class="string">'Aa123#@!'</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> hadoop_sink (</span><br><span class="line">    <span class="keyword">id</span> <span class="keyword">STRING</span>,</span><br><span class="line">    use_rname <span class="keyword">STRING</span>,</span><br><span class="line">    age <span class="built_in">integer</span>,</span><br><span class="line">    gender <span class="keyword">STRING</span>,</span><br><span class="line">    goods_no <span class="keyword">STRING</span>,</span><br><span class="line">    goods_price <span class="built_in">Float</span>,</span><br><span class="line">    store_id <span class="built_in">integer</span>,</span><br><span class="line">    shopping_type <span class="keyword">STRING</span>,</span><br><span class="line">    tel <span class="keyword">STRING</span>,</span><br><span class="line">    email <span class="keyword">STRING</span>,</span><br><span class="line">    shopping_date <span class="built_in">Date</span></span><br><span class="line">) PARTITIONED <span class="keyword">BY</span> (<span class="keyword">id</span>) <span class="keyword">WITH</span> (</span><br><span class="line">  <span class="string">'connector'</span> = <span class="string">'filesystem'</span>,</span><br><span class="line">  <span class="string">'path'</span> = <span class="string">'hdfs:///works/test/hadoop_sink'</span>,</span><br><span class="line">  <span class="string">'format'</span> = <span class="string">'csv'</span>,</span><br><span class="line">  <span class="string">'partition.default-name'</span> = <span class="string">'9999'</span>,</span><br><span class="line">  <span class="string">'sink.shuffle-by-partition.enable'</span> = <span class="string">'false'</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> hadoop_sink <span class="keyword">select</span> * <span class="keyword">from</span> mysql_source;</span><br></pre></td></tr></table></figure>
<h5 id="Mysql-to-ES-Demo"><a href="#Mysql-to-ES-Demo" class="headerlink" title="Mysql to ES Demo"></a>Mysql to ES Demo</h5><p>ONE TO ONE:</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">&gt; sudo su - hadoop</span><br><span class="line">&gt; yarn-session.sh -jm 2048MB -tm 2048MB -nm flink-sql-test -d</span><br><span class="line"></span><br><span class="line">&gt; sql-client.sh embedded -s yarn-session</span><br><span class="line">&gt; SET sql-client.execution.result-mode = tableau;</span><br><span class="line"></span><br><span class="line"><span class="comment">#Create in flinksql</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> products (</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">INT</span>,</span><br><span class="line">    <span class="keyword">name</span> <span class="keyword">STRING</span>,</span><br><span class="line">    description <span class="keyword">STRING</span>,</span><br><span class="line">    PRIMARY <span class="keyword">KEY</span> (<span class="keyword">id</span>) <span class="keyword">NOT</span> <span class="keyword">ENFORCED</span></span><br><span class="line">  ) <span class="keyword">WITH</span> (</span><br><span class="line">    <span class="string">'connector'</span> = <span class="string">'mysql-cdc'</span>,</span><br><span class="line">    <span class="string">'hostname'</span> = <span class="string">'192.168.63.102'</span>,</span><br><span class="line">    <span class="string">'port'</span> = <span class="string">'3306'</span>,</span><br><span class="line">    <span class="string">'username'</span> = <span class="string">'demo_db'</span>,</span><br><span class="line">    <span class="string">'password'</span> = <span class="string">'Aa123456'</span>,</span><br><span class="line">    <span class="string">'database-name'</span> = <span class="string">'demo_db'</span>,</span><br><span class="line">    <span class="string">'table-name'</span> = <span class="string">'products'</span></span><br><span class="line">  );</span><br><span class="line">  </span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> orders (</span><br><span class="line">   order_id <span class="built_in">INT</span>,</span><br><span class="line">   order_date <span class="built_in">TIMESTAMP</span>(<span class="number">0</span>),</span><br><span class="line">   customer_name <span class="keyword">STRING</span>,</span><br><span class="line">   price <span class="built_in">DECIMAL</span>(<span class="number">10</span>, <span class="number">5</span>),</span><br><span class="line">   product_id <span class="built_in">INT</span>,</span><br><span class="line">   order_status <span class="built_in">BOOLEAN</span>,</span><br><span class="line">   PRIMARY <span class="keyword">KEY</span> (order_id) <span class="keyword">NOT</span> <span class="keyword">ENFORCED</span></span><br><span class="line"> ) <span class="keyword">WITH</span> (</span><br><span class="line">   <span class="string">'connector'</span> = <span class="string">'mysql-cdc'</span>,</span><br><span class="line">   <span class="string">'hostname'</span> = <span class="string">'192.168.63.102'</span>,</span><br><span class="line">   <span class="string">'port'</span> = <span class="string">'3306'</span>,</span><br><span class="line">   <span class="string">'username'</span> = <span class="string">'demo_db'</span>,</span><br><span class="line">   <span class="string">'password'</span> = <span class="string">'Aa123456'</span>,</span><br><span class="line">   <span class="string">'database-name'</span> = <span class="string">'demo_db'</span>,</span><br><span class="line">   <span class="string">'table-name'</span> = <span class="string">'orders'</span></span><br><span class="line"> );</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> enriched_orders (</span><br><span class="line">   order_id <span class="built_in">INT</span>,</span><br><span class="line">   order_date <span class="built_in">TIMESTAMP</span>(<span class="number">0</span>),</span><br><span class="line">   customer_name <span class="keyword">STRING</span>,</span><br><span class="line">   price <span class="built_in">DECIMAL</span>(<span class="number">10</span>, <span class="number">5</span>),</span><br><span class="line">   product_id <span class="built_in">INT</span>,</span><br><span class="line">   order_status <span class="built_in">BOOLEAN</span>,</span><br><span class="line">   product_name <span class="keyword">STRING</span>,</span><br><span class="line">   product_description <span class="keyword">STRING</span>,</span><br><span class="line">   PRIMARY <span class="keyword">KEY</span> (order_id) <span class="keyword">NOT</span> <span class="keyword">ENFORCED</span></span><br><span class="line"> ) <span class="keyword">WITH</span> (</span><br><span class="line">     <span class="string">'connector'</span> = <span class="string">'elasticsearch-7'</span>,</span><br><span class="line">     <span class="string">'hosts'</span> = <span class="string">'http://192.168.63.102:9200'</span>,</span><br><span class="line">     <span class="string">'index'</span> = <span class="string">'enriched_orders_1'</span></span><br><span class="line"> );</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> enriched_orders</span><br><span class="line"> <span class="keyword">SELECT</span> o.*, p.name, p.description</span><br><span class="line"> <span class="keyword">FROM</span> orders <span class="keyword">AS</span> o</span><br><span class="line"> <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> products <span class="keyword">AS</span> p <span class="keyword">ON</span> o.product_id = p.id;</span><br></pre></td></tr></table></figure>
<p>ONE TO MANY</p>
<p>UDF:</p>
<p>#<a href="https://www.decodable.co/blog/array-aggregation-with-flink-sql-data-streaming" target="_blank" rel="noopener">https://www.decodable.co/blog/array-aggregation-with-flink-sql-data-streaming</a></p>
<p>#<a href="https://github.com/decodableco/examples/blob/main/flink-learn/3-array-agg/src/main/java/co/decodable/demos/arrayagg/ArrayAggr.java" target="_blank" rel="noopener">https://github.com/decodableco/examples/blob/main/flink-learn/3-array-agg/src/main/java/co/decodable/demos/arrayagg/ArrayAggr.java</a></p>
<p>ArrayAccumulator:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zerofinance.function;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Objects;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.flink.table.api.dataview.ListView;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * https://github.com/decodableco/examples/blob/main/flink-learn/3-array-agg/src/main/java/co/decodable/demos/arrayagg/ArrayAccumulator.java</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &lt;T&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayAccumulator</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ListView&lt;T&gt; values = <span class="keyword">new</span> ListView&lt;T&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Objects.hash(values);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object obj)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span> == obj)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (obj == <span class="keyword">null</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (getClass() != obj.getClass())</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        ArrayAccumulator&lt;?&gt; other = (ArrayAccumulator&lt;?&gt;) obj;</span><br><span class="line">        <span class="keyword">return</span> Objects.equals(values, other.values);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>ArrayAggr:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zerofinance.function;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Array;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Optional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.flink.table.api.DataTypes;</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.table.api.dataview.ListView;</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.table.catalog.DataTypeFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.table.functions.AggregateFunction;</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.table.types.DataType;</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.table.types.inference.InputTypeStrategies;</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.table.types.inference.TypeInference;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * https://github.com/decodableco/examples/blob/main/flink-learn/3-array-agg/src/main/java/co/decodable/demos/arrayagg/ArrayAggr.java</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &lt;T&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">public class ArrayAggr &lt;T&gt; extends AggregateFunction&lt;T[], ArrayAccumulator&lt;T&gt;&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">6560271654419701770L</span>;</span><br><span class="line">    <span class="keyword">private</span> DataType elementType;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ArrayAccumulator&lt;T&gt; <span class="title">createAccumulator</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ArrayAccumulator&lt;T&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> T[] getValue(ArrayAccumulator&lt;T&gt; acc) &#123;</span><br><span class="line">        <span class="keyword">if</span> (acc.values.getList().isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            List&lt;T&gt; values = <span class="keyword">new</span> ArrayList&lt;T&gt;(acc.values.getList());</span><br><span class="line">            <span class="keyword">return</span> values.toArray((T[]) Array.newInstance(elementType.getConversionClass(), values.size()));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">accumulate</span><span class="params">(ArrayAccumulator&lt;T&gt; acc, T o)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (o != <span class="keyword">null</span>) &#123;</span><br><span class="line">            acc.values.add(o);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">retract</span><span class="params">(ArrayAccumulator&lt;T&gt; acc, T o)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (o != <span class="keyword">null</span>) &#123;</span><br><span class="line">            acc.values.remove(o);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">resetAccumulator</span><span class="params">(ArrayAccumulator&lt;T&gt; acc)</span> </span>&#123;</span><br><span class="line">        acc.values.clear();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> TypeInference <span class="title">getTypeInference</span><span class="params">(DataTypeFactory typeFactory)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> TypeInference.newBuilder()</span><br><span class="line">                .inputTypeStrategy(InputTypeStrategies.sequence(InputTypeStrategies.ANY))</span><br><span class="line">                .accumulatorTypeStrategy(ctx -&gt; &#123;</span><br><span class="line">                    <span class="keyword">return</span> Optional.of(</span><br><span class="line">                            DataTypes.STRUCTURED(</span><br><span class="line">                                    ArrayAccumulator<span class="class">.<span class="keyword">class</span>,</span></span><br><span class="line">                                    DataTypes.FIELD("values",ListView.newListViewDataType(ctx.getArgumentDataTypes().get(0)))//,</span><br><span class="line">                            ));</span><br><span class="line">                &#125;)</span><br><span class="line">                .outputTypeStrategy(ctx -&gt; &#123;</span><br><span class="line">                    <span class="keyword">this</span>.elementType = ctx.getArgumentDataTypes().get(<span class="number">0</span>);</span><br><span class="line">                    <span class="keyword">return</span> Optional.of(DataTypes.ARRAY(elementType));</span><br><span class="line">                &#125;).build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> ARRAY_AGGR <span class="keyword">AS</span> <span class="string">'com.zerofinance.function.ArrayAggr'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> products (</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">INT</span>,</span><br><span class="line">    <span class="keyword">name</span> <span class="keyword">STRING</span>,</span><br><span class="line">    description <span class="keyword">STRING</span>,</span><br><span class="line">    PRIMARY <span class="keyword">KEY</span> (<span class="keyword">id</span>) <span class="keyword">NOT</span> <span class="keyword">ENFORCED</span></span><br><span class="line">  ) <span class="keyword">WITH</span> (</span><br><span class="line">    <span class="string">'connector'</span> = <span class="string">'mysql-cdc'</span>,</span><br><span class="line">    <span class="string">'hostname'</span> = <span class="string">'192.168.63.102'</span>,</span><br><span class="line">    <span class="string">'port'</span> = <span class="string">'3306'</span>,</span><br><span class="line">    <span class="string">'username'</span> = <span class="string">'demo_db'</span>,</span><br><span class="line">    <span class="string">'password'</span> = <span class="string">'Aa123456'</span>,</span><br><span class="line">    <span class="string">'database-name'</span> = <span class="string">'demo_db'</span>,</span><br><span class="line">    <span class="string">'table-name'</span> = <span class="string">'products'</span></span><br><span class="line">  );</span><br><span class="line">  </span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> orders (</span><br><span class="line">   order_id <span class="built_in">INT</span>,</span><br><span class="line">   order_date <span class="built_in">TIMESTAMP</span>(<span class="number">0</span>),</span><br><span class="line">   customer_name <span class="keyword">STRING</span>,</span><br><span class="line">   price <span class="built_in">DECIMAL</span>(<span class="number">10</span>, <span class="number">5</span>),</span><br><span class="line">   product_id <span class="built_in">INT</span>,</span><br><span class="line">   order_status <span class="built_in">BOOLEAN</span>,</span><br><span class="line">   PRIMARY <span class="keyword">KEY</span> (order_id) <span class="keyword">NOT</span> <span class="keyword">ENFORCED</span></span><br><span class="line"> ) <span class="keyword">WITH</span> (</span><br><span class="line">   <span class="string">'connector'</span> = <span class="string">'mysql-cdc'</span>,</span><br><span class="line">   <span class="string">'hostname'</span> = <span class="string">'192.168.63.102'</span>,</span><br><span class="line">   <span class="string">'port'</span> = <span class="string">'3306'</span>,</span><br><span class="line">   <span class="string">'username'</span> = <span class="string">'demo_db'</span>,</span><br><span class="line">   <span class="string">'password'</span> = <span class="string">'Aa123456'</span>,</span><br><span class="line">   <span class="string">'database-name'</span> = <span class="string">'demo_db'</span>,</span><br><span class="line">   <span class="string">'table-name'</span> = <span class="string">'orders'</span></span><br><span class="line"> );</span><br><span class="line"> </span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> enriched_orders (</span><br><span class="line">   product_id <span class="built_in">INT</span>,</span><br><span class="line">   product_name <span class="keyword">STRING</span>,</span><br><span class="line">   product_description <span class="keyword">STRING</span>,</span><br><span class="line">   <span class="keyword">lines</span> <span class="built_in">ARRAY</span>&lt;<span class="keyword">ROW</span>&lt;order_id <span class="built_in">INT</span>,order_date <span class="built_in">TIMESTAMP</span>(<span class="number">0</span>),customer_name <span class="keyword">STRING</span>,price <span class="built_in">DECIMAL</span>(<span class="number">10</span>, <span class="number">5</span>),order_status <span class="built_in">BOOLEAN</span>&gt;&gt;,</span><br><span class="line">   PRIMARY <span class="keyword">KEY</span> (product_id) <span class="keyword">NOT</span> <span class="keyword">ENFORCED</span></span><br><span class="line"> ) <span class="keyword">WITH</span> (</span><br><span class="line">     <span class="string">'connector'</span> = <span class="string">'elasticsearch-7'</span>,</span><br><span class="line">     <span class="string">'hosts'</span> = <span class="string">'http://192.168.63.102:9200'</span>,</span><br><span class="line">     <span class="string">'index'</span> = <span class="string">'enriched_orders_0'</span></span><br><span class="line"> );</span><br><span class="line"> </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> enriched_orders</span><br><span class="line">  <span class="keyword">SELECT</span> p.id <span class="keyword">AS</span> product_id, p.name <span class="keyword">AS</span> product_name, p.description <span class="keyword">AS</span> product_description,</span><br><span class="line"> (<span class="keyword">select</span> ARRAY_AGGR(<span class="keyword">ROW</span>(order_id,order_date,customer_name,price,order_status)) </span><br><span class="line">   <span class="keyword">from</span> orders o </span><br><span class="line">   <span class="keyword">where</span> o.product_id=p.id) <span class="keyword">as</span> <span class="keyword">lines</span></span><br><span class="line"> <span class="keyword">FROM</span> products <span class="keyword">AS</span> p;</span><br></pre></td></tr></table></figure>
<p>Another way is put sub data to a single string filed:</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> enriched_orders (</span><br><span class="line">   product_id <span class="built_in">INT</span>,</span><br><span class="line">   product_name <span class="keyword">STRING</span>,</span><br><span class="line">   product_description <span class="keyword">STRING</span>,</span><br><span class="line">   <span class="keyword">lines</span> <span class="keyword">STRING</span>,</span><br><span class="line">   PRIMARY <span class="keyword">KEY</span> (product_id) <span class="keyword">NOT</span> <span class="keyword">ENFORCED</span></span><br><span class="line"> ) <span class="keyword">WITH</span> (</span><br><span class="line">     <span class="string">'connector'</span> = <span class="string">'elasticsearch-7'</span>,</span><br><span class="line">     <span class="string">'hosts'</span> = <span class="string">'http://192.168.63.102:9200'</span>,</span><br><span class="line">     <span class="string">'index'</span> = <span class="string">'enriched_orders_0'</span></span><br><span class="line"> );</span><br><span class="line"> </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> enriched_orders</span><br><span class="line"> <span class="keyword">SELECT</span> p.id <span class="keyword">AS</span> product_id, p.name <span class="keyword">AS</span> product_name, p.description <span class="keyword">AS</span> product_description,</span><br><span class="line"> (<span class="keyword">select</span> JSON_ARRAYAGG(</span><br><span class="line">  JSON_OBJECT(<span class="string">'order_id'</span> <span class="keyword">VALUE</span> o.order_id,<span class="string">'order_date'</span> <span class="keyword">VALUE</span> o.order_date,<span class="string">'customer_name'</span> <span class="keyword">VALUE</span> o.customer_name,<span class="string">'price'</span> <span class="keyword">VALUE</span> o.price,<span class="string">'order_status'</span> <span class="keyword">VALUE</span> o.order_status)) </span><br><span class="line">   <span class="keyword">from</span> orders o <span class="keyword">where</span> o.product_id=p.id) <span class="keyword">as</span> <span class="keyword">lines</span></span><br><span class="line"> <span class="keyword">FROM</span> products <span class="keyword">AS</span> p;</span><br></pre></td></tr></table></figure>
<h3 id="Window-Aggregation"><a href="#Window-Aggregation" class="headerlink" title="Window Aggregation"></a>Window Aggregation</h3><h4 id="TUMBLE"><a href="#TUMBLE" class="headerlink" title="TUMBLE"></a>TUMBLE</h4><h5 id="Windowing-TVF"><a href="#Windowing-TVF" class="headerlink" title="Windowing TVF"></a>Windowing TVF</h5><p><a href="https://nightlies.apache.org/flink/flink-docs-release-1.17/docs/dev/table/sql/queries/window-tvf/" target="_blank" rel="noopener">Windowing TVF | Apache Flink</a></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">TUMBLE(TABLE data, DESCRIPTOR(timecol), size [, offset ])</span><br></pre></td></tr></table></figure>
<ul>
<li><code>data</code>: is a table parameter that can be any relation with a time attribute column.</li>
<li><code>timecol</code>: is a column descriptor indicating which time attributes column of data should be mapped to tumbling windows.</li>
<li><code>size</code>: is a duration specifying the width of the tumbling windows.</li>
<li><code>offset</code>: is an optional parameter to specify the offset which window start would be shifted by.</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#简单且常见的分维度分钟级别同时在线用户数、总销售额</span></span><br><span class="line">&gt; sudo su - hadoop</span><br><span class="line">&gt; yarn-session.sh -jm 2048MB -tm 2048MB -nm flink-sql-test -d</span><br><span class="line"></span><br><span class="line">&gt; sql-client.sh embedded -s yarn-session</span><br><span class="line">&gt; SET sql-client.execution.result-mode = tableau;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 数据源表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> source_table (</span><br><span class="line">    <span class="comment">-- 维度数据</span></span><br><span class="line">    dim <span class="keyword">STRING</span>,</span><br><span class="line">    <span class="comment">-- 用户 id</span></span><br><span class="line">    user_id <span class="built_in">BIGINT</span>,</span><br><span class="line">    <span class="comment">-- 用户</span></span><br><span class="line">    price <span class="built_in">BIGINT</span>,</span><br><span class="line">    <span class="comment">-- 事件时间戳</span></span><br><span class="line">    row_time <span class="keyword">AS</span> <span class="keyword">cast</span>(<span class="keyword">CURRENT_TIMESTAMP</span> <span class="keyword">as</span> <span class="built_in">timestamp</span>(<span class="number">3</span>)),</span><br><span class="line">    <span class="comment">-- watermark 设置</span></span><br><span class="line">    WATERMARK <span class="keyword">FOR</span> row_time <span class="keyword">AS</span> row_time - <span class="built_in">INTERVAL</span> <span class="string">'5'</span> <span class="keyword">SECOND</span></span><br><span class="line">) <span class="keyword">WITH</span> (</span><br><span class="line">  <span class="string">'connector'</span> = <span class="string">'datagen'</span>,</span><br><span class="line">  <span class="string">'rows-per-second'</span> = <span class="string">'10'</span>,</span><br><span class="line">  <span class="string">'fields.dim.length'</span> = <span class="string">'1'</span>,</span><br><span class="line">  <span class="string">'fields.user_id.min'</span> = <span class="string">'1'</span>,</span><br><span class="line">  <span class="string">'fields.user_id.max'</span> = <span class="string">'100000'</span>,</span><br><span class="line">  <span class="string">'fields.price.min'</span> = <span class="string">'1'</span>,</span><br><span class="line">  <span class="string">'fields.price.max'</span> = <span class="string">'100000'</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 数据汇表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> sink_table (</span><br><span class="line">    dim <span class="keyword">STRING</span>,</span><br><span class="line">    pv <span class="built_in">BIGINT</span>,</span><br><span class="line">    sum_price <span class="built_in">BIGINT</span>,</span><br><span class="line">    max_price <span class="built_in">BIGINT</span>,</span><br><span class="line">    min_price <span class="built_in">BIGINT</span>,</span><br><span class="line">    uv <span class="built_in">BIGINT</span>,</span><br><span class="line">    window_start <span class="built_in">bigint</span></span><br><span class="line">) <span class="keyword">WITH</span> (</span><br><span class="line">  <span class="string">'connector'</span> = <span class="string">'print'</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 数据处理逻辑</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> sink_table</span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    dim,</span><br><span class="line">    <span class="keyword">UNIX_TIMESTAMP</span>(<span class="keyword">CAST</span>(window_start <span class="keyword">AS</span> <span class="keyword">STRING</span>)) * <span class="number">1000</span> <span class="keyword">as</span> window_start,</span><br><span class="line">    <span class="keyword">count</span>(*) <span class="keyword">as</span> pv,</span><br><span class="line">    <span class="keyword">sum</span>(price) <span class="keyword">as</span> sum_price,</span><br><span class="line">    <span class="keyword">max</span>(price) <span class="keyword">as</span> max_price,</span><br><span class="line">    <span class="keyword">min</span>(price) <span class="keyword">as</span> min_price,</span><br><span class="line">    <span class="keyword">count</span>(<span class="keyword">distinct</span> user_id) <span class="keyword">as</span> uv</span><br><span class="line"><span class="keyword">FROM</span> <span class="keyword">TABLE</span>(TUMBLE(</span><br><span class="line">        <span class="keyword">TABLE</span> source_table</span><br><span class="line">        , <span class="keyword">DESCRIPTOR</span>(row_time)</span><br><span class="line">        , <span class="built_in">INTERVAL</span> <span class="string">'60'</span> <span class="keyword">SECOND</span>))</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> window_start, </span><br><span class="line">      window_end,</span><br><span class="line">      dim;</span><br></pre></td></tr></table></figure>
<h5 id="Group-Window-Aggregation"><a href="#Group-Window-Aggregation" class="headerlink" title="Group Window Aggregation"></a>Group Window Aggregation</h5><p><strong>Deprecated</strong>: Group Window Aggregation, supported both batch and streaming.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">&gt; sudo su - hadoop</span><br><span class="line">&gt; yarn-session.sh -jm 2048MB -tm 2048MB -nm flink-sql-test -d</span><br><span class="line"></span><br><span class="line">&gt; sql-client.sh embedded -s yarn-session</span><br><span class="line">&gt; SET sql-client.execution.result-mode = tableau;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 数据源表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> source_table (</span><br><span class="line">    <span class="comment">-- 维度数据</span></span><br><span class="line">    dim <span class="keyword">STRING</span>,</span><br><span class="line">    <span class="comment">-- 用户 id</span></span><br><span class="line">    user_id <span class="built_in">BIGINT</span>,</span><br><span class="line">    <span class="comment">-- 用户</span></span><br><span class="line">    price <span class="built_in">BIGINT</span>,</span><br><span class="line">    <span class="comment">-- 事件时间戳</span></span><br><span class="line">    row_time <span class="keyword">AS</span> <span class="keyword">cast</span>(<span class="keyword">CURRENT_TIMESTAMP</span> <span class="keyword">as</span> <span class="built_in">timestamp</span>(<span class="number">3</span>)),</span><br><span class="line">    <span class="comment">-- watermark 设置</span></span><br><span class="line">    WATERMARK <span class="keyword">FOR</span> row_time <span class="keyword">AS</span> row_time - <span class="built_in">INTERVAL</span> <span class="string">'5'</span> <span class="keyword">SECOND</span></span><br><span class="line">) <span class="keyword">WITH</span> (</span><br><span class="line">  <span class="string">'connector'</span> = <span class="string">'datagen'</span>,</span><br><span class="line">  <span class="string">'rows-per-second'</span> = <span class="string">'10'</span>,</span><br><span class="line">  <span class="string">'fields.dim.length'</span> = <span class="string">'1'</span>,</span><br><span class="line">  <span class="string">'fields.user_id.min'</span> = <span class="string">'1'</span>,</span><br><span class="line">  <span class="string">'fields.user_id.max'</span> = <span class="string">'100000'</span>,</span><br><span class="line">  <span class="string">'fields.price.min'</span> = <span class="string">'1'</span>,</span><br><span class="line">  <span class="string">'fields.price.max'</span> = <span class="string">'100000'</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 数据汇表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> sink_table (</span><br><span class="line">    dim <span class="keyword">STRING</span>,</span><br><span class="line">    pv <span class="built_in">BIGINT</span>,</span><br><span class="line">    sum_price <span class="built_in">BIGINT</span>,</span><br><span class="line">    max_price <span class="built_in">BIGINT</span>,</span><br><span class="line">    min_price <span class="built_in">BIGINT</span>,</span><br><span class="line">    uv <span class="built_in">BIGINT</span>,</span><br><span class="line">    window_start <span class="built_in">bigint</span></span><br><span class="line">) <span class="keyword">WITH</span> (</span><br><span class="line">  <span class="string">'connector'</span> = <span class="string">'print'</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 数据处理逻辑</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> sink_table</span><br><span class="line"><span class="keyword">select</span> </span><br><span class="line">    dim,</span><br><span class="line">    <span class="keyword">count</span>(*) <span class="keyword">as</span> pv,</span><br><span class="line">    <span class="keyword">sum</span>(price) <span class="keyword">as</span> sum_price,</span><br><span class="line">    <span class="keyword">max</span>(price) <span class="keyword">as</span> max_price,</span><br><span class="line">    <span class="keyword">min</span>(price) <span class="keyword">as</span> min_price,</span><br><span class="line">    <span class="comment">-- 计算 uv 数</span></span><br><span class="line">    <span class="keyword">count</span>(<span class="keyword">distinct</span> user_id) <span class="keyword">as</span> uv,</span><br><span class="line">    <span class="keyword">UNIX_TIMESTAMP</span>(<span class="keyword">CAST</span>(tumble_start(row_time, <span class="built_in">interval</span> <span class="string">'1'</span> <span class="keyword">minute</span>) <span class="keyword">AS</span> <span class="keyword">STRING</span>)) * <span class="number">1000</span>  <span class="keyword">as</span> window_start</span><br><span class="line"><span class="keyword">from</span> source_table</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span></span><br><span class="line">    dim,</span><br><span class="line">    tumble(row_time, <span class="built_in">interval</span> <span class="string">'1'</span> <span class="keyword">minute</span>);</span><br></pre></td></tr></table></figure>
<h4 id="HOP"><a href="#HOP" class="headerlink" title="HOP"></a>HOP</h4><h5 id="Windowing-TVF-1"><a href="#Windowing-TVF-1" class="headerlink" title="Windowing TVF"></a>Windowing TVF</h5><p><a href="https://nightlies.apache.org/flink/flink-docs-release-1.17/docs/dev/table/sql/queries/window-tvf/#hop" target="_blank" rel="noopener">Windowing TVF | Apache Flink</a></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">HOP(TABLE data, DESCRIPTOR(timecol), slide, size [, offset ])</span><br></pre></td></tr></table></figure>
<ul>
<li><code>data</code>: is a table parameter that can be any relation with an time attribute column.</li>
<li><code>timecol</code>: is a column descriptor indicating which time attributes column of data should be mapped to hopping windows.</li>
<li><code>slide</code>: is a duration specifying the duration between the start of sequential hopping windows</li>
<li><code>size</code>: is a duration specifying the width of the hopping windows.</li>
<li><code>offset</code>: is an optional parameter to specify the offset which window start would be shifted by.</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#简单且常见的分维度分钟级别同时在线用户数，1 分钟输出一次，计算最近 5 分钟的数据</span></span><br><span class="line">&gt; sudo su - hadoop</span><br><span class="line">&gt; yarn-session.sh -jm 2048MB -tm 2048MB -nm flink-sql-test -d</span><br><span class="line"></span><br><span class="line">&gt; sql-client.sh embedded -s yarn-session</span><br><span class="line">&gt; SET sql-client.execution.result-mode = tableau;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 数据源表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> source_table (</span><br><span class="line">    <span class="comment">-- 维度数据</span></span><br><span class="line">    dim <span class="keyword">STRING</span>,</span><br><span class="line">    <span class="comment">-- 用户 id</span></span><br><span class="line">    user_id <span class="built_in">BIGINT</span>,</span><br><span class="line">    <span class="comment">-- 用户</span></span><br><span class="line">    price <span class="built_in">BIGINT</span>,</span><br><span class="line">    <span class="comment">-- 事件时间戳</span></span><br><span class="line">    row_time <span class="keyword">AS</span> <span class="keyword">cast</span>(<span class="keyword">CURRENT_TIMESTAMP</span> <span class="keyword">as</span> <span class="built_in">timestamp</span>(<span class="number">3</span>)),</span><br><span class="line">    <span class="comment">-- watermark 设置</span></span><br><span class="line">    WATERMARK <span class="keyword">FOR</span> row_time <span class="keyword">AS</span> row_time - <span class="built_in">INTERVAL</span> <span class="string">'5'</span> <span class="keyword">SECOND</span></span><br><span class="line">) <span class="keyword">WITH</span> (</span><br><span class="line">  <span class="string">'connector'</span> = <span class="string">'datagen'</span>,</span><br><span class="line">  <span class="string">'rows-per-second'</span> = <span class="string">'10'</span>,</span><br><span class="line">  <span class="string">'fields.dim.length'</span> = <span class="string">'1'</span>,</span><br><span class="line">  <span class="string">'fields.user_id.min'</span> = <span class="string">'1'</span>,</span><br><span class="line">  <span class="string">'fields.user_id.max'</span> = <span class="string">'100000'</span>,</span><br><span class="line">  <span class="string">'fields.price.min'</span> = <span class="string">'1'</span>,</span><br><span class="line">  <span class="string">'fields.price.max'</span> = <span class="string">'100000'</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 数据汇表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> sink_table (</span><br><span class="line">    dim <span class="keyword">STRING</span>,</span><br><span class="line">    uv <span class="built_in">BIGINT</span>,</span><br><span class="line">    window_start <span class="built_in">bigint</span></span><br><span class="line">) <span class="keyword">WITH</span> (</span><br><span class="line">  <span class="string">'connector'</span> = <span class="string">'print'</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 数据处理逻辑</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> sink_table</span><br><span class="line"><span class="keyword">SELECT</span> dim,</span><br><span class="line">    <span class="keyword">UNIX_TIMESTAMP</span>(<span class="keyword">CAST</span>(hop_start(row_time, <span class="built_in">interval</span> <span class="string">'1'</span> <span class="keyword">minute</span>, <span class="built_in">interval</span> <span class="string">'5'</span> <span class="keyword">minute</span>) <span class="keyword">AS</span> <span class="keyword">STRING</span>)) * <span class="number">1000</span> <span class="keyword">as</span> window_start, </span><br><span class="line">    <span class="keyword">count</span>(<span class="keyword">distinct</span> user_id) <span class="keyword">as</span> uv</span><br><span class="line"><span class="keyword">FROM</span> source_table</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> dim</span><br><span class="line">    , hop(row_time, <span class="built_in">interval</span> <span class="string">'1'</span> <span class="keyword">minute</span>, <span class="built_in">interval</span> <span class="string">'5'</span> <span class="keyword">minute</span>);</span><br></pre></td></tr></table></figure>
<h5 id="Group-Window-Aggregation-1"><a href="#Group-Window-Aggregation-1" class="headerlink" title="Group Window Aggregation"></a>Group Window Aggregation</h5><p>Deprecated.</p>
<h4 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h4><h5 id="Windowing-TVF-2"><a href="#Windowing-TVF-2" class="headerlink" title="Windowing TVF"></a>Windowing TVF</h5><p>TVF doesn’t support Session mode, using group window aggregation instread.</p>
<h5 id="Group-Window-Aggregation-2"><a href="#Group-Window-Aggregation-2" class="headerlink" title="Group Window Aggregation"></a>Group Window Aggregation</h5><table>
<thead>
<tr>
<th style="text-align:left">Group Window Function</th>
<th style="text-align:left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">SESSION(time_attr, interval)</td>
<td style="text-align:left">Defines a session time window. Session time windows do not have a fixed duration but their bounds are defined by a time <code>interval</code> of inactivity, i.e., a session window is closed if no event appears for a defined gap period. For example a session window with a 30 minute gap starts when a row is observed after 30 minutes inactivity (otherwise the row would be added to an existing window) and is closed if no row is added within 30 minutes. Session windows can work on event-time (stream + batch) or processing-time (stream).</td>
</tr>
</tbody>
</table>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Session 时间窗口和滚动、滑动窗口不一样，其没有固定的持续时间，如果在定义的间隔期（Session Gap）内没有新的数据出现，则 Session 就会窗口关闭</span></span><br><span class="line"><span class="comment">#计算每个用户在活跃期间（一个 Session）总共购买的商品数量，如果用户 5 分钟没有活动则视为 Session 断开</span></span><br><span class="line"><span class="comment">#Group Window Aggregation </span></span><br><span class="line">&gt; sudo su - hadoop</span><br><span class="line">&gt; yarn-session.sh -jm 2048MB -tm 2048MB -nm flink-sql-test -d</span><br><span class="line"></span><br><span class="line">&gt; sql-client.sh embedded -s yarn-session</span><br><span class="line">&gt; SET sql-client.execution.result-mode = tableau;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 数据源表，用户购买行为记录表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> source_table (</span><br><span class="line">    <span class="comment">-- 维度数据</span></span><br><span class="line">    dim <span class="keyword">STRING</span>,</span><br><span class="line">    <span class="comment">-- 用户 id</span></span><br><span class="line">    user_id <span class="built_in">BIGINT</span>,</span><br><span class="line">    <span class="comment">-- 用户</span></span><br><span class="line">    price <span class="built_in">BIGINT</span>,</span><br><span class="line">    <span class="comment">-- 事件时间戳</span></span><br><span class="line">    row_time <span class="keyword">AS</span> <span class="keyword">cast</span>(<span class="keyword">CURRENT_TIMESTAMP</span> <span class="keyword">as</span> <span class="built_in">timestamp</span>(<span class="number">3</span>)),</span><br><span class="line">    <span class="comment">-- watermark 设置</span></span><br><span class="line">    WATERMARK <span class="keyword">FOR</span> row_time <span class="keyword">AS</span> row_time - <span class="built_in">INTERVAL</span> <span class="string">'5'</span> <span class="keyword">SECOND</span></span><br><span class="line">) <span class="keyword">WITH</span> (</span><br><span class="line">  <span class="string">'connector'</span> = <span class="string">'datagen'</span>,</span><br><span class="line">  <span class="string">'rows-per-second'</span> = <span class="string">'10'</span>,</span><br><span class="line">  <span class="string">'fields.dim.length'</span> = <span class="string">'1'</span>,</span><br><span class="line">  <span class="string">'fields.user_id.min'</span> = <span class="string">'1'</span>,</span><br><span class="line">  <span class="string">'fields.user_id.max'</span> = <span class="string">'100000'</span>,</span><br><span class="line">  <span class="string">'fields.price.min'</span> = <span class="string">'1'</span>,</span><br><span class="line">  <span class="string">'fields.price.max'</span> = <span class="string">'100000'</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 数据汇表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> sink_table (</span><br><span class="line">    dim <span class="keyword">STRING</span>,</span><br><span class="line">    pv <span class="built_in">BIGINT</span>, <span class="comment">-- 购买商品数量</span></span><br><span class="line">    window_start <span class="built_in">bigint</span></span><br><span class="line">) <span class="keyword">WITH</span> (</span><br><span class="line">  <span class="string">'connector'</span> = <span class="string">'print'</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 数据处理逻辑</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> sink_table</span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    dim,</span><br><span class="line">    <span class="keyword">UNIX_TIMESTAMP</span>(<span class="keyword">CAST</span>(session_start(row_time, <span class="built_in">interval</span> <span class="string">'5'</span> <span class="keyword">minute</span>) <span class="keyword">AS</span> <span class="keyword">STRING</span>)) * <span class="number">1000</span> <span class="keyword">as</span> window_start, </span><br><span class="line">    <span class="keyword">count</span>(<span class="number">1</span>) <span class="keyword">as</span> pv</span><br><span class="line"><span class="keyword">FROM</span> source_table</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> dim</span><br><span class="line">      , <span class="keyword">session</span>(row_time, <span class="built_in">interval</span> <span class="string">'5'</span> <span class="keyword">minute</span>);</span><br><span class="line">      </span><br><span class="line"><span class="comment">#上述 SQL 任务是在整个 Session 窗口结束之后才会把数据输出。Session 窗口即支持 处理时间 也支持 事件时间。但是处理时间只支持在 Streaming 任务中运行，Batch 任务不支持。</span></span><br></pre></td></tr></table></figure>
<h4 id="CUMULATE"><a href="#CUMULATE" class="headerlink" title="CUMULATE"></a>CUMULATE</h4><h5 id="Windowing-TVF-3"><a href="#Windowing-TVF-3" class="headerlink" title="Windowing TVF"></a>Windowing TVF</h5><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">CUMULATE(TABLE data, DESCRIPTOR(timecol), step, size)</span><br></pre></td></tr></table></figure>
<ul>
<li><code>data</code>: is a table parameter that can be any relation with an time attribute column.</li>
<li><code>timecol</code>: is a column descriptor indicating which time attributes column of data should be mapped to cumulating windows.</li>
<li><code>step</code>: is a duration specifying the increased window size between the end of sequential cumulating windows.</li>
<li><code>size</code>: is a duration specifying the max width of the cumulating windows. <code>size</code> must be an integral multiple of <code>step</code>.</li>
<li><code>offset</code>: is an optional parameter to specify the offset which window start would be shifted by.</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#每天的截止当前分钟的累计 money（sum(money)），去重 id 数（count(distinct id)）。每天代表渐进式窗口大小为 1 天，分钟代表渐进式窗口移动步长为分钟级别</span></span><br><span class="line">&gt; sudo su - hadoop</span><br><span class="line">&gt; yarn-session.sh -jm 2048MB -tm 2048MB -nm flink-sql-test -d</span><br><span class="line"></span><br><span class="line">&gt; sql-client.sh embedded -s yarn-session</span><br><span class="line">&gt; SET sql-client.execution.result-mode = tableau;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 数据源表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> source_table (</span><br><span class="line">    <span class="comment">-- 用户 id</span></span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">BIGINT</span>,</span><br><span class="line">    <span class="comment">-- 用户</span></span><br><span class="line">    money <span class="built_in">BIGINT</span>,</span><br><span class="line">    <span class="comment">-- 事件时间戳</span></span><br><span class="line">    row_time <span class="keyword">AS</span> <span class="keyword">cast</span>(<span class="keyword">CURRENT_TIMESTAMP</span> <span class="keyword">as</span> <span class="built_in">timestamp</span>(<span class="number">3</span>)),</span><br><span class="line">    <span class="comment">-- watermark 设置</span></span><br><span class="line">    WATERMARK <span class="keyword">FOR</span> row_time <span class="keyword">AS</span> row_time - <span class="built_in">INTERVAL</span> <span class="string">'5'</span> <span class="keyword">SECOND</span></span><br><span class="line">) <span class="keyword">WITH</span> (</span><br><span class="line">  <span class="string">'connector'</span> = <span class="string">'datagen'</span>,</span><br><span class="line">  <span class="string">'rows-per-second'</span> = <span class="string">'10'</span>,</span><br><span class="line">  <span class="string">'fields.user_id.min'</span> = <span class="string">'1'</span>,</span><br><span class="line">  <span class="string">'fields.user_id.max'</span> = <span class="string">'100000'</span>,</span><br><span class="line">  <span class="string">'fields.price.min'</span> = <span class="string">'1'</span>,</span><br><span class="line">  <span class="string">'fields.price.max'</span> = <span class="string">'100000'</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 数据汇表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> sink_table (</span><br><span class="line">    window_end <span class="built_in">bigint</span>,</span><br><span class="line">    window_start <span class="built_in">bigint</span>,</span><br><span class="line">    sum_money <span class="built_in">BIGINT</span>,</span><br><span class="line">    count_distinct_id <span class="built_in">bigint</span></span><br><span class="line">) <span class="keyword">WITH</span> (</span><br><span class="line">  <span class="string">'connector'</span> = <span class="string">'print'</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 数据处理逻辑</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> sink_table</span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    <span class="keyword">UNIX_TIMESTAMP</span>(<span class="keyword">CAST</span>(window_end <span class="keyword">AS</span> <span class="keyword">STRING</span>)) * <span class="number">1000</span> <span class="keyword">as</span> window_end, </span><br><span class="line">    window_start, </span><br><span class="line">    <span class="keyword">sum</span>(money) <span class="keyword">as</span> sum_money,</span><br><span class="line">    <span class="keyword">count</span>(<span class="keyword">distinct</span> <span class="keyword">id</span>) <span class="keyword">as</span> count_distinct_id</span><br><span class="line"><span class="keyword">FROM</span> <span class="keyword">TABLE</span>(CUMULATE(</span><br><span class="line">       <span class="keyword">TABLE</span> source_table</span><br><span class="line">       , <span class="keyword">DESCRIPTOR</span>(row_time)</span><br><span class="line">       , <span class="built_in">INTERVAL</span> <span class="string">'60'</span> <span class="keyword">SECOND</span></span><br><span class="line">       , <span class="built_in">INTERVAL</span> <span class="string">'1'</span> <span class="keyword">DAY</span>))</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">    window_start, </span><br><span class="line">    window_end;</span><br><span class="line">    </span><br><span class="line"><span class="comment">#You will get wrong with: </span></span><br><span class="line">[ERROR] Could not <span class="keyword">execute</span> <span class="keyword">SQL</span> statement. Reason:</span><br><span class="line">org.apache.flink.table.api.ValidationException: Unsupported options <span class="keyword">found</span> <span class="keyword">for</span> <span class="string">'datagen'</span>.</span><br></pre></td></tr></table></figure>
<h5 id="Group-Window-Aggregation-3"><a href="#Group-Window-Aggregation-3" class="headerlink" title="Group Window Aggregation"></a>Group Window Aggregation</h5><p>Deprecated.</p>
<h3 id="Troubleshooting-1"><a href="#Troubleshooting-1" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h3><p>#<a href="https://www.cnblogs.com/yeyuzhuanjia/p/17942445" target="_blank" rel="noopener">https://www.cnblogs.com/yeyuzhuanjia/p/17942445</a></p>
<p>Web UI cannot be visited by external:</p>
<p>vim conf/flink-conf.yaml:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rest.address: 0.0.0.0</span><br><span class="line">rest.bind-address: 0.0.0.0</span><br></pre></td></tr></table></figure>
<h3 id="High-Availability"><a href="#High-Availability" class="headerlink" title="High-Availability"></a>High-Availability</h3><p>Recommend working on Yarn</p>
<p><a href="https://nightlies.apache.org/flink/flink-docs-release-1.17/docs/deployment/resource-providers/yarn/#high-availability-on-yarn" target="_blank" rel="noopener">High-Availability on YARN</a></p>
<p>High-Availability on YARN is achieved through a combination of YARN and a <a href="https://nightlies.apache.org/flink/flink-docs-release-1.17/docs/deployment/ha/overview/" target="_blank" rel="noopener">high availability service</a>.</p>
<p>Once a HA service is configured, it will persist JobManager metadata and perform leader elections.</p>
<p>YARN is taking care of restarting failed JobManagers. The maximum number of JobManager restarts is defined through two configuration parameters. First Flink’s <a href="https://nightlies.apache.org/flink/flink-docs-release-1.17/docs/deployment/config/#yarn-application-attempts" target="_blank" rel="noopener">yarn.application-attempts</a> configuration will default 2. This value is limited by YARN’s <a href="https://hadoop.apache.org/docs/stable/hadoop-yarn/hadoop-yarn-common/yarn-default.xml" target="_blank" rel="noopener">yarn.resourcemanager.am.max-attempts</a>, which also defaults to 2.</p>
<p>Note that Flink is managing the <code>high-availability.cluster-id</code> configuration parameter when deploying on YARN. Flink sets it per default to the YARN application id. <strong>You should not overwrite this parameter when deploying an HA cluster on YARN</strong>. The cluster ID is used to distinguish multiple HA clusters in the HA backend (for example Zookeeper). Overwriting this configuration parameter can lead to multiple YARN clusters affecting each other.</p>
<p><a href="https://nightlies.apache.org/flink/flink-docs-release-1.17/docs/deployment/ha/zookeeper_ha/" target="_blank" rel="noopener">ZooKeeper HA Services</a></p>
<p>Configure high availability mode and ZooKeeper quorum in <code>conf/flink-conf.yaml</code>:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">high-availability: zookeeper</span><br><span class="line">high-availability.zookeeper.quorum: datanode03-test.zerofinance.net:2181,datanode01-test.zerofinance.net:2181,datanode02-test.zerofinance.net:2181</span><br><span class="line">high-availability.zookeeper.path.root: /flink</span><br><span class="line">high-availability.storageDir: hdfs:///flink/ha/</span><br></pre></td></tr></table></figure>
<h3 id="Histroy-Server"><a href="#Histroy-Server" class="headerlink" title="Histroy Server"></a>Histroy Server</h3><p><a href="https://nightlies.apache.org/flink/flink-docs-release-1.17/docs/deployment/advanced/historyserver/" target="_blank" rel="noopener">History Server | Apache Flink</a></p>
<p>Flink has a history server that can be used to query the statistics of completed jobs after the corresponding Flink cluster has been shut down.</p>
<p>By default, this server binds to <code>localhost</code> and listens at port <code>8082</code>.</p>
<h3 id="Troubleshooting-2"><a href="#Troubleshooting-2" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h3><p>#<a href="https://www.jianshu.com/p/877868b6f829" target="_blank" rel="noopener">https://www.jianshu.com/p/877868b6f829</a></p>
<p>NoResourceAvailableException: Could not acquire the minimum required resources</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">taskmanager.memory.process.size: 6048m</span><br><span class="line">jobmanager.memory.process.size: 6048m</span><br></pre></td></tr></table></figure>
<h2 id="Seatunnel"><a href="#Seatunnel" class="headerlink" title="Seatunnel"></a>Seatunnel</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat /etc/profile.d/hadoop.sh    </span><br><span class="line"><span class="built_in">export</span> HADOOP_HOME=/usr/bigtop/current/hadoop-client</span><br><span class="line"><span class="built_in">export</span> HADOOP_CONF_DIR=/usr/bigtop/current/hadoop-client/etc/hadoop/</span><br><span class="line"><span class="built_in">export</span> SPARK_HOME=/usr/bigtop/current/spark-client</span><br><span class="line"><span class="built_in">export</span> PYTHON_HOME=/usr</span><br><span class="line"><span class="built_in">export</span> HIVE_HOME=/usr/bigtop/current/hive-client</span><br><span class="line"><span class="built_in">export</span> FLINK_HOME=/usr/bigtop/current/flink-client</span><br><span class="line"><span class="built_in">export</span> SEATUNNEL_HOME=/works/app/apache-seatunnel-2.3.3</span><br><span class="line"><span class="built_in">export</span> ZOOKEEPER_HOME=/usr/bigtop/current/zookeeper-client</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$HADOOP_HOME</span>/bin:<span class="variable">$SPARK_HOME</span>/bin:<span class="variable">$HIVE_HOME</span>/bin:<span class="variable">$FLINK_HOME</span>/bin:<span class="variable">$SEATUNNEL_HOME</span>/bin:<span class="variable">$ZOOKEEPER_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Bigdata</category>
      </categories>
      <tags>
        <tag>Bigdata</tag>
      </tags>
  </entry>
  <entry>
    <title>A Guide to English Grammar</title>
    <url>/2019/08/A-Guide-to-English-Grammar.html</url>
    <content><![CDATA[<p>A guide to english grammar.</p>
<a id="more"></a>
<h2 id="句子的形成"><a href="#句子的形成" class="headerlink" title="句子的形成"></a>句子的形成</h2><ol>
<li>S+V</li>
</ol>
<p>任何一个句子一定由主语又subject，简写成S）及动词（verb简写成V）形成。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">约翰工作很努力</span><br><span class="line">John works hard.</span><br><span class="line"></span><br><span class="line">他钢琴弹得很好</span><br><span class="line">He plays the piano well.</span><br><span class="line"></span><br><span class="line">玛丽似乎喜欢学英文</span><br><span class="line">Mary seems to like learn English.</span><br><span class="line">Mary seems to be fond of learning English.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>祈使句：</li>
</ol>
<p>有时主语可以省略，而形成祈使句。这种祈使句句首为原形动词，之前省略了You should（你应当）。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">努力工作</span><br><span class="line">Work hard.</span><br><span class="line">=(You should) work hard.</span><br><span class="line"></span><br><span class="line">安静</span><br><span class="line">Be quiet.</span><br><span class="line">=You should be quiet.</span><br><span class="line"></span><br><span class="line">别游手好闲</span><br><span class="line">Don&apos;t fool around.</span><br><span class="line"></span><br><span class="line">别傻了</span><br><span class="line">Don&apos;t be silly.</span><br></pre></td></tr></table></figure>
<h3 id="可作主语的词类"><a href="#可作主语的词类" class="headerlink" title="可作主语的词类"></a>可作主语的词类</h3><h4 id="名词"><a href="#名词" class="headerlink" title="名词"></a>名词</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这孩子喜欢说谎</span><br><span class="line">The child is apt to tell lies.</span><br><span class="line"></span><br><span class="line">黄金很值钱</span><br><span class="line">Gold is of much value.</span><br></pre></td></tr></table></figure>
<h4 id="代词"><a href="#代词" class="headerlink" title="代词"></a>代词</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">他总是信守承诺</span><br><span class="line">He always keeps his promise.</span><br><span class="line"></span><br><span class="line">爬山蛮好玩的</span><br><span class="line">It&apos;s a lot of fun to climb mountains.</span><br></pre></td></tr></table></figure>
<h4 id="动名词或不定式短语"><a href="#动名词或不定式短语" class="headerlink" title="动名词或不定式短语"></a>动名词或不定式短语</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">看到他就令我生气</span><br><span class="line">Seeing him makes me angry.</span><br><span class="line"></span><br><span class="line">我来这儿是为了看他</span><br><span class="line">I come here to see him.</span><br><span class="line">To see him is my purpose of coming here.</span><br></pre></td></tr></table></figure>
<ol>
<li>动名词作主语，通常用以表示已知的事实或曾经做过的经历</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">集邮是他的爱好之一</span><br><span class="line"> Collecting stamps is one of his hobbies.</span><br><span class="line">=It&apos;s one of his hobbies (to collect stamps真正主语).</span><br><span class="line"></span><br><span class="line">听音乐使我快乐</span><br><span class="line"> Listening to music makes me happy.</span><br><span class="line">=It makes me happy to listen to music.</span><br><span class="line"></span><br><span class="line"> It&apos;s interesting learning English.(可)</span><br><span class="line">=It&apos;s interesting to learn English.(佳)</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>不定式作主语通常表示一种意愿、目的或未完成的事</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">出国念书是我最大的愿望。</span><br><span class="line"> To study abroad is my greatest desire.</span><br><span class="line">=It&apos;s my greatest desire to study abroad.</span><br><span class="line"></span><br><span class="line">到日本游玩是我今年的计划</span><br><span class="line"> To go to Janpan for a visit is my plan for this year.</span><br><span class="line">=It&apos;s my plan for this year to visit Japan.</span><br><span class="line"></span><br><span class="line">覆水难收</span><br><span class="line">It no use crying over spilt milk.</span><br><span class="line">向他求救是没有用的</span><br><span class="line">It no use asking him for help.</span><br></pre></td></tr></table></figure>
<h4 id="名词性从句作主语"><a href="#名词性从句作主语" class="headerlink" title="名词性从句作主语"></a>名词性从句作主语</h4><p>可作主语、宾语或在be动词之后作表语。名词性从句的种类:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">名词性从句包括宾语从句、主语从句、表语从句、同位语从句。名词性从句一共有三种:</span><br><span class="line">l ) that从句</span><br><span class="line">2 ) whether从句</span><br><span class="line">3）疑问词所引导的从句</span><br></pre></td></tr></table></figure>
<h5 id="that从句"><a href="#that从句" class="headerlink" title="that从句"></a>that从句</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">任何一个主语起首的句子：</span><br><span class="line"></span><br><span class="line">他不读书令我生气</span><br><span class="line">he doesn&apos;t study makes me angry.</span><br><span class="line">-&gt; That he doesn&apos;t study makes me angry.</span><br><span class="line">他不相信我说的话</span><br><span class="line">That he doesn&apos;t believe my words.</span><br><span class="line">有很多工作要做</span><br><span class="line">That there is lot of work to do.</span><br></pre></td></tr></table></figure>
<h5 id="whether从句"><a href="#whether从句" class="headerlink" title="whether从句"></a>whether从句</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">可用yes/no回答的问句变化而成：</span><br><span class="line"></span><br><span class="line">a）问句有be动词时：</span><br><span class="line">他是否快乐</span><br><span class="line">Is he happy? </span><br><span class="line">-&gt; whether he is happy</span><br><span class="line"></span><br><span class="line">b）问句有一般助动词（Can、will、may、should、ought to、must、have）时，主语与助动词还原，前面冠以whether：</span><br><span class="line"></span><br><span class="line">他是否能做这件事</span><br><span class="line">Can he do it? </span><br><span class="line">-&gt; whether he can do it.</span><br><span class="line"></span><br><span class="line">他是否已做好此事</span><br><span class="line">Has he done it?</span><br><span class="line">-&gt; Whether he has done it.</span><br><span class="line"></span><br><span class="line">c）问句有do、does、did等助动词时主语与助动词还原，再将do、does、did去掉，后面的动词依人称和时态变化:</span><br><span class="line"></span><br><span class="line">他是否来了</span><br><span class="line">Did he come? </span><br><span class="line">-&gt; whether he came.</span><br><span class="line"></span><br><span class="line">他是否喜欢它</span><br><span class="line">Does he like it? </span><br><span class="line">-&gt; whether he likes it.</span><br></pre></td></tr></table></figure>
<h5 id="疑问词所引导的从句"><a href="#疑问词所引导的从句" class="headerlink" title="疑问词所引导的从句"></a>疑问词所引导的从句</h5><p>本从句系由疑问词（when、what、how、where、why）等引导的问句变化而成，这种由疑问词引导的问句称为特殊疑问句。</p>
<ol>
<li>问句有be动词时：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">主语与be动词还原，前面保留疑问词。</span><br><span class="line"></span><br><span class="line">他正在做什么</span><br><span class="line">What is he doing? </span><br><span class="line">-&gt; what he is doing.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>问句有一般助动词时：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">主语与助动词还原，前面保留疑问词。</span><br><span class="line"></span><br><span class="line">他在哪里能找到它</span><br><span class="line">Where can he find it? </span><br><span class="line">-&gt; where he can find it.</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>问句有do、does、did等助动词时：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">主语与助动词还原前面保留疑问词，再将do、does、did去掉，动词依人称和时态变化。</span><br><span class="line"></span><br><span class="line">他写什么</span><br><span class="line">What did he write? </span><br><span class="line">-&gt; what he wrote.</span><br><span class="line"></span><br><span class="line">他何时来</span><br><span class="line">When did he come? </span><br><span class="line">-&gt; when he came.</span><br><span class="line"></span><br><span class="line">他怎么做这件事</span><br><span class="line">How does he do it? </span><br><span class="line">-&gt; how he does it.</span><br><span class="line"></span><br><span class="line">who/what/which为疑问代词，若在问句中作主语，变成名词性从句时结构不变:</span><br><span class="line"></span><br><span class="line">谁来这儿</span><br><span class="line">Who came here? </span><br><span class="line">-&gt; who came here.</span><br><span class="line"></span><br><span class="line">昨晚发生什么事</span><br><span class="line">What happended last night? </span><br><span class="line">-&gt; what happended last night.</span><br><span class="line"></span><br><span class="line">哪个被买走</span><br><span class="line">Which was bought? </span><br><span class="line">-&gt; which was bought.</span><br></pre></td></tr></table></figure>
<p>名词性从句的功能:</p>
<ol>
<li>名词性从句作主语：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">“诚实为上策”是一句我们应时刻谨记在心的蔑言</span><br><span class="line">That honesty is the best policy is a proverb (which) we should always keep in mind.</span><br><span class="line">=It&apos;s a proverb we should always keep in mind that honesty is the best policy.</span><br><span class="line"></span><br><span class="line">他住哪里仍不确定</span><br><span class="line"> Where he lives is still in doubt.</span><br><span class="line">=It&apos;s still in doubt where he lives.</span><br><span class="line"></span><br><span class="line">他能胜任与否仍有待观察</span><br><span class="line"> Whether he can do it remains to be seen.</span><br><span class="line">=It remains to be seen whether he can do it.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>名词性从句作及物动词的宾语：</li>
</ol>
<p>及物动词在英文中称作transitive veth，简写为vt.；宾语则称作object，简写为o．</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我知道他最近即将出国</span><br><span class="line">I know that he will go abroad in the near future.</span><br><span class="line"></span><br><span class="line">我想知道他是否已做完这份工作</span><br><span class="line">I wonder whether he has finished the work.</span><br><span class="line"></span><br><span class="line">我不知道他将如何处理这件事</span><br><span class="line">I don&apos;t know how he&apos;ll handle it.</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>作介词的宾语：</li>
</ol>
<p>介词在英文中称作preposition，简写成prep.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a）此时仅能用whether从句或疑问词引导的名词性从句作宾语· that从句不可作介词的宾语。</span><br><span class="line">我很担心他是否能做这件事</span><br><span class="line">I am worried about whether he can do it.</span><br><span class="line"></span><br><span class="line">我很好奇他将如何应付这问题</span><br><span class="line">I am curious about how he&apos;ll cope with the problem.</span><br><span class="line"></span><br><span class="line">b）遇有介词，且非要使用that从句时其补救方法如下：</span><br><span class="line"></span><br><span class="line">(1) 介词+the fact+that从句:</span><br><span class="line">建议使用:</span><br><span class="line">我确定这一队赢了这场比赛</span><br><span class="line">I am sure of that the team has won the game.(x)</span><br><span class="line">I am sure of the fact that the team has won the game.(the fact that).</span><br><span class="line"></span><br><span class="line">我担心他不念书</span><br><span class="line">I am worry about that he doesn&apos;t study.(x)</span><br><span class="line">I am worry about the fact that he doesn&apos;t study.</span><br><span class="line"></span><br><span class="line">(2) 保留介词，不加the fact但介词之后的that从句要做下列变化:</span><br><span class="line">第一步：除去that;</span><br><span class="line">第二步：that后的主语变成所有格；</span><br><span class="line">第三步：动词变成动名词。</span><br><span class="line">不常用:</span><br><span class="line">I am worried about that he plays around all day.(x)</span><br><span class="line">I am worried about the fact that he plays around all day.</span><br><span class="line">I am worried about his(or him) playing around all day.</span><br><span class="line"></span><br><span class="line">(a) that从句若有助动词do、does、did时，予以去掉即可。</span><br><span class="line">I am worried about that he doens&apos;t study.(x)</span><br><span class="line">I am worried about his not study.</span><br><span class="line"></span><br><span class="line">(b) that从句若有助动词will或would时，予以去掉即可。</span><br><span class="line">我确信这一队会赢得这场比赛。</span><br><span class="line">I am sure of that the team will win the game.(x)</span><br><span class="line">I am sure of the team&apos;s winning the game.</span><br><span class="line"></span><br><span class="line">(c) 从句若有以下助动词时，做下列变化：</span><br><span class="line">may -&gt; be likely to</span><br><span class="line">can -&gt; be able to</span><br><span class="line">我很高兴他可能会来。</span><br><span class="line">I am happy about that he may come.(x)</span><br><span class="line">I am happy about his being likely to come.</span><br><span class="line">我确定他能做这件事。</span><br><span class="line">I am sure of that he can do it.(x)</span><br><span class="line">I am surce of his being able to do it.</span><br><span class="line"></span><br><span class="line">(3) be + adj. + that从句：</span><br><span class="line">也就是去掉介词，将that从句放在形容词后面，作其宾语。</span><br><span class="line">建议使用</span><br><span class="line">I am worried about that he plays around all day.(x)</span><br><span class="line">I am worried that he plays around all day.</span><br><span class="line"></span><br><span class="line">有时介词之后亦可直接接that从句而不需the fact，形成惯用语，亦应牢记。</span><br><span class="line">in that=because    因为</span><br><span class="line">他很有才华，因为他能说五种语言。</span><br><span class="line">He is talented in that he can speak five different languages.</span><br><span class="line"></span><br><span class="line">except that    只可惜、除了</span><br><span class="line">他人很不错，只可惜有时会说谎。</span><br><span class="line">He is nice except that sometimes he tell lies.</span><br><span class="line"></span><br><span class="line">=despite the fact that    尽管</span><br><span class="line">=in spite of the fact that</span><br><span class="line">尽管他人好，我却不喜欢他。</span><br><span class="line">Despite the fact that he is nice, I don&apos;t like him.</span><br></pre></td></tr></table></figure>
<h5 id="名词短语作主语"><a href="#名词短语作主语" class="headerlink" title="名词短语作主语"></a>名词短语作主语</h5><p>名词短语系由“疑问词＋不定式短语”形成。</p>
<ol>
<li>疑问副词</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">where to live           住哪里</span><br><span class="line">whether to try again    是否再试一次</span><br><span class="line">when to talk to him     什么时候和他谈</span><br><span class="line">how to do it            如何做那事</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>疑问代词</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">what to do      做什么</span><br><span class="line">whom to See     看谁</span><br><span class="line">whlch to buy    买哪一个</span><br><span class="line">whom to talk to 与谁谈</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">在哪里见他还未决定。</span><br><span class="line"> Where we should meet him is not decided yet.</span><br><span class="line">=Where to meet him is not decided yet.</span><br><span class="line"></span><br><span class="line">我们如何处理这问题要视我们能募集到多少钱而定。</span><br><span class="line">How we can handle the problem depends on how much money we can collect.</span><br><span class="line">How to handle the problem depends on how much money we can collect.</span><br></pre></td></tr></table></figure>
<h5 id="表距离的地方副词短语作主语"><a href="#表距离的地方副词短语作主语" class="headerlink" title="表距离的地方副词短语作主语"></a>表距离的地方副词短语作主语</h5><p>from+地方名词+to+地方名词:<br>此为表距离的地方副词短语，亦可作主语，与单数的be动词连用。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> From A to B is about 1000 km.</span><br><span class="line">=It&apos;s about 1000 km from A to B.</span><br><span class="line"></span><br><span class="line">从上海到北京大约1000公里</span><br><span class="line">From Shanghai to Beijing about 1000 kilometers.</span><br><span class="line">It&apos;s about 1000 kilometers From Shanghai to Beijing.</span><br></pre></td></tr></table></figure>
<h3 id="动词的种类及其用法"><a href="#动词的种类及其用法" class="headerlink" title="动词的种类及其用法"></a>动词的种类及其用法</h3><h4 id="动词（verb）基本上可分为五大类"><a href="#动词（verb）基本上可分为五大类" class="headerlink" title="动词（verb）基本上可分为五大类"></a>动词（verb）基本上可分为五大类</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a．完全不及物动词：</span><br><span class="line">(complete Intransitive veth，简写：c.vi.)</span><br><span class="line">b．不完全不及物动词：</span><br><span class="line">(incomplete Intransitive veth，简写：i.vi.)</span><br><span class="line">c．完全及物动词：</span><br><span class="line">(complete transitive verb，简写：c.vt.)</span><br><span class="line">d．不完全及物动词；</span><br><span class="line">(incomplete tra力sitive verb，简写：i.vt.)</span><br><span class="line">e．授与动词：</span><br><span class="line">(dative verb简写：d.v.)</span><br></pre></td></tr></table></figure>
<h4 id="如何判断完全不及物动词"><a href="#如何判断完全不及物动词" class="headerlink" title="如何判断完全不及物动词"></a>如何判断完全不及物动词</h4><p>是否及物动词的判断, 以下翻译成中文若无毛病，就是及物动词，否则就是不及物动词，准确率高达99%：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我___他(主动)</span><br><span class="line">他被我__(被动)</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">He wrote the book.</span><br><span class="line">The book was written by him.</span><br><span class="line">Something happened.</span><br></pre></td></tr></table></figure>
<h4 id="be动词"><a href="#be动词" class="headerlink" title="be动词"></a>be动词</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1）名词：</span><br><span class="line">他是大英雄</span><br><span class="line">He is a great hero.</span><br><span class="line"></span><br><span class="line">2）名词性从句：</span><br><span class="line">我的麻烦是缺钱。</span><br><span class="line">My trouble is that I lack money.</span><br><span class="line">问题是他是否能加人我们。</span><br><span class="line">The problem is whether he can join us.</span><br><span class="line"></span><br><span class="line">3）名词短语：</span><br><span class="line">问题是何时出发</span><br><span class="line">The question is when to set out.</span><br><span class="line"></span><br><span class="line">4）作名词用的动名词短语：</span><br><span class="line">我的兴趣是集邮</span><br><span class="line">My hobby is collecting stamps.</span><br><span class="line"></span><br><span class="line">5）作名词用的不定式短语：</span><br><span class="line">我来这里的目的是要见他。</span><br><span class="line">My purpose here is to see him.</span><br><span class="line"></span><br><span class="line">6）形容词：</span><br><span class="line">她很美。</span><br><span class="line">She is beautiful.</span><br><span class="line"></span><br><span class="line">7）作形容词用的现在分词：</span><br><span class="line">这故事真有趣。</span><br><span class="line">The story is interesting.</span><br><span class="line"></span><br><span class="line">8）作形容词用的过去分词：</span><br><span class="line">我对这故事感兴趣。</span><br><span class="line">I am interested in the story.</span><br><span class="line"></span><br><span class="line">9）作形容词用的介词短语：</span><br><span class="line">此类介词短语由“ of＋抽象名词”形成。</span><br><span class="line">这本书很有价值。</span><br><span class="line"> The book is of great value.</span><br><span class="line">=The book is valuable.</span><br><span class="line">那部机器毫无用处。</span><br><span class="line"> The machine is of no use.</span><br><span class="line">=The machine is useless.</span><br><span class="line"></span><br><span class="line">10）地方副词：</span><br><span class="line">她在那儿。</span><br><span class="line">She is there.</span><br><span class="line">他们在楼上。</span><br><span class="line">They are upstairs.</span><br><span class="line">他现在在家吗？</span><br><span class="line">Is he home now?</span><br><span class="line"></span><br><span class="line">11）地方副词短语：</span><br><span class="line">她人在城里。</span><br><span class="line">She is in town.</span><br><span class="line">他们现在在家。</span><br><span class="line">They are at home now.</span><br><span class="line">她有危险。</span><br><span class="line">She is in danger.</span><br></pre></td></tr></table></figure>
<p>be动词之后的现在分词有两种词性：</p>
<p>一作形容词，一作动词进行时的现在分词。换言之，同学遇到v一ing；可译成”⋯的”时，就是作形容词的现在分词，否则就是表“进行状态”的现在分词，要译成“正在⋯”，而不视为形容词。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这女孩很迷人</span><br><span class="line">The girl is charming.</span><br><span class="line">这女孩在唱歌。</span><br><span class="line">The girl is singing.</span><br></pre></td></tr></table></figure>
<p>be动词之后的过去分词亦有两个词性：</p>
<p>一作形容词用，可译成“感到⋯的”；一作及物动词的被动语态，译成“被而不视为形容词。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这个人很累</span><br><span class="line">The man is tired.</span><br><span class="line">这男的被杀了</span><br><span class="line">The man was killed.</span><br></pre></td></tr></table></figure>
<h4 id="become"><a href="#become" class="headerlink" title="become"></a>become</h4><p>become可用任何名词、形容词或可作形容词用的现在分词或过去分词（即可以译成“ ⋯ ⋯的”之类的分词）作表语。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">他生气了。</span><br><span class="line">He become angry.</span><br><span class="line">如果你用功，就可成为好学生。</span><br><span class="line">If you study hard, you will become a good student.</span><br><span class="line">她愈来愈迷人。</span><br><span class="line">She is becoming more and more charming.</span><br><span class="line">失败后，他变得意志消沉。</span><br><span class="line">After failing, he became depressed.</span><br></pre></td></tr></table></figure>
<h4 id="turn"><a href="#turn" class="headerlink" title="turn"></a>turn</h4><p>turn通常只用形容词作表语，而且所能使用的形容词多与颜色或情绪有关。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">听到那消息时，他脸色变得苍白起来。</span><br><span class="line">His face turns pale when he heard the news.</span><br><span class="line">树叶变黄了。</span><br><span class="line">The leaves were turning yellow.</span><br><span class="line">看到玛丽时，他气得脸都红了。</span><br><span class="line">His face turned red with angry when he saw Mary.</span><br><span class="line">她变漂亮了</span><br><span class="line">She become beautiful.</span><br></pre></td></tr></table></figure>
<h4 id="get"><a href="#get" class="headerlink" title="get"></a>get</h4><p>get通常用表“生气”或“激动”的形容词作表语。若用其他形容词时，宜用become 。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">他生气了。</span><br><span class="line">He got mad.</span><br><span class="line">她愈来愈美丽。</span><br><span class="line">She is getting more and more beautiful.</span><br><span class="line">事情愈来愈顺利。</span><br><span class="line">Things are getting better and better.</span><br><span class="line">她变漂亮了</span><br><span class="line">She become beautiful.</span><br><span class="line"></span><br><span class="line">get+p.p（被动语态）</span><br><span class="line">=be+p.p（被动语态）</span><br><span class="line">他在车祸中丧生</span><br><span class="line"> He got killed in the accident.</span><br><span class="line">=He was killed in the accident.</span><br><span class="line">你如果不小心点，就会受伤。</span><br><span class="line">If you are not careful, you will get hurt.</span><br></pre></td></tr></table></figure>
<h4 id="seem"><a href="#seem" class="headerlink" title="seem"></a>seem</h4><p>=appear，之后用不定式作表语。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">他似乎知道此事。</span><br><span class="line">He seems to know it.</span><br><span class="line"></span><br><span class="line">但在seem to be+名词/形容词结构中，to be可省略，直接用名词或形容词作表语。</span><br><span class="line">他似乎很快乐</span><br><span class="line">He seems to be happy.</span><br><span class="line">=He seems happy.(to be可以省略掉)</span><br><span class="line">他似乎是个好人</span><br><span class="line">He seems a nice man.</span><br></pre></td></tr></table></figure></p>
<h4 id="感观动词"><a href="#感观动词" class="headerlink" title="感观动词"></a>感观动词</h4><p>感官动词一共有五个，一律译成“⋯起来”，之后一律用形容词（或可作形容词用的分词）作表语。</p>
<ol>
<li>look/sound/smell/taste/feel + adj</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">他的主意听起来不错</span><br><span class="line">His idea sounds good.</span><br><span class="line">His idea sounds like a good idea.</span><br><span class="line">这食物闻起来很香</span><br><span class="line">The food smells good.</span><br><span class="line">我现在觉得很疲倦</span><br><span class="line">I feel tired now.</span><br><span class="line">It looks interesting.</span><br><span class="line">它看起来很有趣</span><br><span class="line">It sounds like a good idea.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>look/sound/smell/taste/feel + like + noun</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">like为介词译成“像”，之后的名词为其宾语。</span><br><span class="line"></span><br><span class="line">听起来像是个好主意</span><br><span class="line">It sounds like a good idea.</span><br><span class="line">那质料摸起来像丝</span><br><span class="line">The material fells like silk.</span><br><span class="line">这食物尝起来像鱼肉</span><br><span class="line">The food tastes like fish.</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>feel like + noun: 感觉像<br>feel like + 动名词: 想要</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">当简说她要嫁给我时，我觉得我就像个新生儿一样。</span><br><span class="line">When Jane said she would marry me, I feel like a newborn baby</span><br><span class="line">我今天想散散步</span><br><span class="line">I feel like taking a walk today.</span><br><span class="line">I would like to take a walk today.</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>feel、taste、smell亦可当完全及物动词，可用名词作宾语。<br>此时feel、taste、smell的意思均有改变。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">feel/taste/smell + noun.</span><br><span class="line"></span><br><span class="line">医生摸我的额头说我发烧了</span><br><span class="line">The doctor feel my forehead and said I had a fever.</span><br><span class="line">别尝那食物，它已经馒了</span><br><span class="line">Don&apos;t taste the food, it has spoiled.</span><br><span class="line">他闻到有东西烧焦了</span><br><span class="line">He smells something burning.</span><br></pre></td></tr></table></figure>
<ol start="5">
<li>like与介词连用时，可形成短语动词，视为及物动词。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">look into = investigate    调查</span><br><span class="line">look over = examine        检查</span><br><span class="line">look at = watch            看</span><br><span class="line"></span><br><span class="line">他愉快地看着我</span><br><span class="line">He looked me happily.</span><br><span class="line">He looked happily at me.</span><br><span class="line">他仔细地调查这件案子</span><br><span class="line">He looked into the case carefully.</span><br><span class="line">He looked carefully into the case.</span><br></pre></td></tr></table></figure>
<h3 id="不完全不及物动词的重要相关短语"><a href="#不完全不及物动词的重要相关短语" class="headerlink" title="不完全不及物动词的重要相关短语"></a>不完全不及物动词的重要相关短语</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">fell ill(fall ill)</span><br><span class="line">约翰病了，因此今天无法上学</span><br><span class="line">John fell ill and couldn&apos;t attendd school today.</span><br><span class="line">fell asleep(fall asleep)</span><br><span class="line">他很快就睡着了。</span><br><span class="line">He soon fell asleep.</span><br><span class="line">我不知道他怎么会变得如此受人欢迎。</span><br><span class="line">I don&apos;t kown how he became to be so popular.</span><br></pre></td></tr></table></figure>
<h3 id="完全及物动词的用法"><a href="#完全及物动词的用法" class="headerlink" title="完全及物动词的用法"></a>完全及物动词的用法</h3><p>完全及物动词的宾语，计有名词、代词、不定式、动名词、名词性从句及名词短语等。同学稍加注意，就可发现这些词类、短语或从句均有名词的特性，故亦可用作主语。</p>
<ol>
<li>名词当及物动词的宾语</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">他没有买那部车</span><br><span class="line">He didn&apos;t buy that car.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>代词当及物动词的宾语</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我不喜欢约翰。事实上，我讨厌他</span><br><span class="line">I don&apos;t like John. In fact, I hate him.</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>不定式当及物动词的宾语</li>
</ol>
<p>这些动词皆有表示某种愿望、企图之意，常用的此类动词如：want（想要）、hope（希望）、 desire（想要）等。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我现在就要见他</span><br><span class="line">I want to see him now.</span><br><span class="line">我希望有一天能出国留学</span><br><span class="line">I hope to study abroad someday.</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>动名词当及物动词的宾语</li>
</ol>
<p>并非所有及物动词均可用动名词作宾语。常以动名词作宾语的动词有下列几个：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">considered/imagined/fancy/risked/avoided/escaped/suggested/</span><br><span class="line">recommended/enjoy/resent/practiced/stopped/quit/mind</span><br><span class="line"></span><br><span class="line">他考虑出国念书</span><br><span class="line">He considered studying abroad.</span><br><span class="line">我曾想像和他去约会</span><br><span class="line">I once imagined going on a date with him.</span><br><span class="line">他冒险做这事</span><br><span class="line">He risked dong it.</span><br><span class="line">他建议去国外旅行</span><br><span class="line">He recommended traveling abroad.</span><br><span class="line">我喜欢跳舞</span><br><span class="line">I enjoying dancing.</span><br><span class="line">我讨厌要做这么多工作</span><br><span class="line">I resent having to do so much work.</span><br><span class="line">我练过钢琴了</span><br><span class="line">I practiced playing the piano.</span><br><span class="line">他戒烟了</span><br><span class="line">He stopped/quit smoking.</span><br><span class="line">你介意为我打开窗户吗？</span><br><span class="line">Would you mind opening the window for me?</span><br><span class="line"></span><br><span class="line">resist V一ing    抗拒...</span><br><span class="line">refuse to V     拒绝...</span><br><span class="line">我拒绝做此事</span><br><span class="line">I refused to do it.</span><br><span class="line">I resist doing it.</span><br><span class="line">我忍不住要再吃些冰淇淋</span><br><span class="line">I couldn&apos;t resist having some more ice cream.</span><br><span class="line"></span><br><span class="line">expect to V    期望</span><br><span class="line">=anticipate V一ing</span><br><span class="line">我期望和他一起环游世界</span><br><span class="line">I expect to travel around the world with him.</span><br><span class="line">I anticipate traveling around the world with him.</span><br><span class="line"></span><br><span class="line">stop V一ing    停止</span><br><span class="line">=quit V一ing</span><br><span class="line">他结婚后就不再写作了</span><br><span class="line">He stopped writing after he got married.</span><br><span class="line">他决定戒烟</span><br><span class="line">He decided to quit smoking.</span><br><span class="line"></span><br><span class="line">stop to V    停下来而去...</span><br><span class="line">他看见我时，便停下来和我说话</span><br><span class="line">He stop to talk to me when he saw me.</span><br><span class="line"></span><br><span class="line">continue（继续）、start（开始）、bogin（开始）、like（喜欢）</span><br><span class="line">love（爱）、hate（恨），可用不定式或动名词作宾语意思不变:</span><br><span class="line">他继续在赌场里试他的手气。</span><br><span class="line">He continued trying(/to try) his luck at the casino.</span><br><span class="line">他们开始建这栋房子</span><br><span class="line">They start building(/to build) the house.</span><br></pre></td></tr></table></figure>
<h4 id="名词性从句作及物动词的宾语"><a href="#名词性从句作及物动词的宾语" class="headerlink" title="名词性从句作及物动词的宾语"></a>名词性从句作及物动词的宾语</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">名词性从句有三种：</span><br><span class="line">1) that引导的名词性从句</span><br><span class="line">that he can&apos;t do it   （他不能做此事）</span><br><span class="line">2) whether引导的名词性从句</span><br><span class="line">whether he will come  （他是否会来）</span><br><span class="line">3) 疑问词引导的名同性从句</span><br><span class="line">when he will do it    （他何时做）</span><br><span class="line">what he is doing      （他正在做什么）</span><br><span class="line">how he&apos;ll handle it   （他如何处理此事）</span><br><span class="line"></span><br><span class="line">为了方便记忆起见，我们可将名词性从句记成“戴慧怡” 。</span><br><span class="line">戴：即that之讹音</span><br><span class="line">慧：即whether第一音节之讹音</span><br><span class="line">怡：即疑问词从句“疑”之同音词</span><br><span class="line"></span><br><span class="line">由于名词性从句具有名词的功能，故亦可作及物动词的宾语。</span><br><span class="line"></span><br><span class="line">我相信他是个言而有信的人</span><br><span class="line">He believ that he is a man of his word.</span><br><span class="line">我不知道他是否能够做此事</span><br><span class="line">I don&apos;t know whether he can do it.</span><br><span class="line">我不知道他住哪里</span><br><span class="line">I don&apos;t know where he lives.</span><br><span class="line"></span><br><span class="line">that从句作及物动词的宾语时，名词性从句连接词that通常予以省略。</span><br><span class="line">他们觉得不可能赢这场比赛</span><br><span class="line">They feel (that) it&apos;s impossible to win the game.</span><br><span class="line">他认为这本书值得一读</span><br><span class="line">He think (that) the book is worth reading.</span><br><span class="line"></span><br><span class="line">whether从句作及物动词的宾语时，名词性从句连接词whether亦可被if取代。</span><br><span class="line">我不知道台风是否会来。</span><br><span class="line">I don&apos;t know whether the typhoon will come</span><br><span class="line">=I don&apos;t know if the typhoon will come.</span><br><span class="line">我不知道这个人是否有足够的能力处理此事。</span><br><span class="line">I don&apos;t know if the man has enough ability to handle the it.</span><br><span class="line">I doubt if the man is competent enough to handle it.</span><br></pre></td></tr></table></figure>
<p>但whether从句若作主语、介词的宾语或者be动词后的表语时，不能用if:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a. whether从句作主语：</span><br><span class="line">他是否能去还不知道。</span><br><span class="line">Whether he can go is not yet know.</span><br><span class="line">b. whether从句作介词的宾语：</span><br><span class="line">他很担心是否能通过这次考试。</span><br><span class="line">He is worried about whether he can pass the exam.</span><br><span class="line">c. whether从句作be动词后的表语：</span><br><span class="line">The problem is whether he has enough money for the trip.</span><br></pre></td></tr></table></figure>
<h4 id="名词短语"><a href="#名词短语" class="headerlink" title="名词短语"></a>名词短语</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我知道如何处理这问题。</span><br><span class="line">I know how to handle the problem.</span><br><span class="line">我不知道该向谁说。</span><br><span class="line">I don&apos;t know whom to talk to.</span><br></pre></td></tr></table></figure>
<h4 id="不完全及物动词"><a href="#不完全及物动词" class="headerlink" title="不完全及物动词"></a>不完全及物动词</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">本句意思不完全，故需补语。</span><br><span class="line">他使玛丽快乐。</span><br><span class="line">He made me happy.</span><br></pre></td></tr></table></figure>
<h4 id="使役动词"><a href="#使役动词" class="headerlink" title="使役动词"></a>使役动词</h4><ol>
<li>叫</li>
</ol>
<p>make/have + 宾语 + 原形动词</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我叫他洗车</span><br><span class="line">I made him wash the car.</span><br><span class="line">I had him wash the car.</span><br><span class="line">I got him to wash the car.</span><br><span class="line">我叫约翰向我报到。</span><br><span class="line">I had John report to me.</span><br><span class="line"></span><br><span class="line">get亦可表“叫⋯ ”之意，但只能用不定式短语作宾语补语，句型如下：</span><br><span class="line">get sb to V    叫某人从事⋯</span><br><span class="line"></span><br><span class="line">我叫他洗车。</span><br><span class="line">I got him wash the car.</span><br></pre></td></tr></table></figure>
<p>make可使用于被动语态中但have及get则不可。</p>
<p>主动语态：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">I made(had) him wash the car.</span><br><span class="line">I got him to wash the car.</span><br></pre></td></tr></table></figure></p>
<p>被动语态:</p>
<p>变被动语态时，原形动词wash就要变成不定式短语to wash，而成to wash the car。<br>have、get无被动用法。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">他被要求洗车</span><br><span class="line">He was made to wash the car.</span><br></pre></td></tr></table></figure></p>
<ol start="2">
<li>让</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a. let＋宾语＋原形动词（作宾语补语）</span><br><span class="line">我让他洗车</span><br><span class="line">I let him wash the car.</span><br><span class="line">我让彼得试试看</span><br><span class="line">I let Peter try it.</span><br><span class="line"></span><br><span class="line">b. let＋宾语＋作副词用的介词（in、out、down)</span><br><span class="line">他让我进来</span><br><span class="line">He let me in.</span><br><span class="line">别让他出去</span><br><span class="line">Don&apos;t let him out.</span><br><span class="line">他的表演令我失望</span><br><span class="line">His performance let me down.</span><br><span class="line"></span><br><span class="line">上述介词由于其后无宾语，可单独存在作副词用，因此称为介副词。与</span><br><span class="line">地方副词（如there 、 here 、 home）一样，介副词可作be动词之后的</span><br><span class="line">表语:</span><br><span class="line">他在家</span><br><span class="line">He is in</span><br><span class="line">He is out</span><br><span class="line">He is there.</span><br><span class="line">He is here.</span><br><span class="line">He is home.</span><br><span class="line">He is downtown.</span><br><span class="line">He is in the house.</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>强迫/要求/怂恿/催促</li>
</ol>
<p>此类动词＋宾语＋不定式短语（作宾语补语）<br>force/ask/encourage/tell+不定式</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我强迫他背这课</span><br><span class="line">I forced him to recite the lesson.</span><br><span class="line">我要求他写这封信</span><br><span class="line">I asked him to write the lettle.</span><br><span class="line">我鼓励他更努力些</span><br><span class="line">I encouraged him to work harder.</span><br><span class="line">他强迫我做违反意愿的事</span><br><span class="line">He forced me to do it against my will.</span><br><span class="line">他叫我10点钟以前做完这件工作</span><br><span class="line">He told me to finish the work by 10.</span><br><span class="line"></span><br><span class="line">此类动词尚有许多个，兹将常出现的此类动词列举如下：</span><br><span class="line">push one to...    （催促某人去⋯ ⋯）</span><br><span class="line">expect one to...  （期望某人去⋯ ⋯）</span><br><span class="line">want one to...    （要某人去⋯ ⋯）</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>使…成为</li>
</ol>
<p>此类动词只有make一个，加了宾语之后，要用形容词或名词作补语:</p>
<p>主语+make+宾语+形容词(或名词)（作宾语补语）<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">他的老师使他成为好学生</span><br><span class="line">His teacher made him a good student.</span><br><span class="line">这次旅行使他很愉快</span><br><span class="line">The trip made him happy.</span><br></pre></td></tr></table></figure></p>
<h4 id="知觉动词"><a href="#知觉动词" class="headerlink" title="知觉动词"></a>知觉动词</h4><p>此类动词有三类：<br>看：see、observe（观察）、watch（看）、lookat（注视）、notice（注意）<br>听：hear、listen to<br>感觉：feel</p>
<ol>
<li>此类动词可作完全及物动词，加了宾语之后无须另加补语</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">你看见他没有</span><br><span class="line">Did you see him?</span><br><span class="line">他正在听音乐</span><br><span class="line">he was listening music.</span><br><span class="line">我觉得背痛</span><br><span class="line">I felt a pain in my back.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>但此类动词亦可作不完全及物动词，加了宾语之后，须另加宾语补语。用法如下：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a. 表事实时，用原形动词作补语，译成“...了”</span><br><span class="line">我看见他跳舞了</span><br><span class="line">I saw him dance.</span><br><span class="line">我听见他唱歌了</span><br><span class="line">I heard him sing.</span><br><span class="line">我感觉到他动了</span><br><span class="line">I felt him move.</span><br><span class="line"></span><br><span class="line">b. 表进行状态时，用现在分词作补语，译成“...正在...”</span><br><span class="line">我进来时，看见他正在跳舞</span><br><span class="line">I saw him dancing when I walked in.</span><br><span class="line">我推开门时，听见他正在唱歌</span><br><span class="line">I heard him singing when I pushed the door open.</span><br><span class="line">As I pushed the door open, I heard him singing.</span><br><span class="line">门铃响时，我感觉到我的双腿正在发抖。</span><br><span class="line">When the doorbell rang, I felt my legs trembling.</span><br><span class="line"></span><br><span class="line">c. 表被动状态时，要用过去分词作补语，译成&quot;...被...&quot;</span><br><span class="line">我看见他被杀死了</span><br><span class="line">I saw him killed.</span><br><span class="line">我听见门被关起来了</span><br><span class="line">I heard the door closed.</span><br><span class="line">我感觉到自己被举起来了</span><br><span class="line">I felt myself lifted.</span><br></pre></td></tr></table></figure>
<h4 id="认定动词"><a href="#认定动词" class="headerlink" title="认定动词"></a>认定动词</h4><p>此类动词均表“视⋯为”之意，加了宾语之后，用名词或形容词作宾语补语。</p>
<ol>
<li>与介词连用者：</li>
</ol>
<p>视…为：与as或for连用：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我们都把他视为天才</span><br><span class="line">We regard(look upon/think of/see/view) him as a genius.</span><br><span class="line">我误将那长发的男孩视作女孩</span><br><span class="line">I mistook the long一haired boy for a girl.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>与to be连用者：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我们认为他是天才／人很好。</span><br><span class="line">We consider/deem/think him to be a genius.</span><br><span class="line">We consider/deem/think him a genius.</span><br><span class="line">We consider/deem/think him to be nice.</span><br><span class="line">We consider/deem/think him nice.</span><br></pre></td></tr></table></figure>
<p>a. 一般介词之后只能用名词、代词或动名词作宾语</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我很讨厌他粗鲁的态度</span><br><span class="line">I am sick of his rude attitude.</span><br><span class="line">我讨厌与他为伍</span><br><span class="line">I am sick of associating with him.</span><br><span class="line"></span><br><span class="line">但表“视...为”的动词与as或for连用时，它们之后除可接名词外，亦可直接接形容词作补语。</span><br><span class="line">我认为他的行为不当</span><br><span class="line">I regard his behavior as inappropriate.</span><br></pre></td></tr></table></figure>
<p>b. think、believe、find、deem、consider等五个动词作不完全及物动词时，<br>不得直接用不定式短语作宾语，一定要用形式宾语it取代。<br>此时think译成”认为⋯是⋯”、 deem译成“认为…是…”、consider译成“认为…是…” </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">主语+think(believe/find/deem/consider)+it+宾语补语(n. or adj.)+to V.</span><br><span class="line">我认为爬山是很有趣的―我认为爬山很有趣。</span><br><span class="line">I think it fun to climb the mountains.</span><br><span class="line">我发觉做这件事是有必要的―我发觉做这事有必要</span><br><span class="line">I find it necesssary to do the work.</span><br><span class="line">我相信用功是值得的―我相信用功很值得。</span><br><span class="line">I believe it worthwhile to study hard.</span><br><span class="line"></span><br><span class="line">但find、believe、think、deem、consider也可作完全及物动词</span><br><span class="line">此时要用that引导的名词性从句作宾语。此时find、believe、thlnk、</span><br><span class="line">deem、consider分别译成“发现、相信、认为，认为、认为” 。</span><br><span class="line">我认为爬山很有趣</span><br><span class="line">I think that it&apos;s interesting to climb the mountains.</span><br><span class="line">我相信用功是值得的</span><br><span class="line">I believee that it&apos;s worthwhile to study hard.</span><br></pre></td></tr></table></figure>
<p>c. make表“使…成为…”时，亦为不完全及物动词，其后不得用不定式短语作宾语，一定要用式宾语it取代。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">努力工作使他有可能赢得此荣誉</span><br><span class="line">Hard work made it possible for him to win the honor.</span><br></pre></td></tr></table></figure>
<p>d. find、believe、think、deem、consider乍不完全及物动词时，<br>亦不得直接用that引导的名词性从句作宾语一定要用形式宾语it取代。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我发觉他歌唱得这么好真是太棒了</span><br><span class="line">I find it wonderful that he sings so well.</span><br><span class="line">我相信他努力用功是有必要的</span><br><span class="line">I believe it necessary that he should work hard.</span><br></pre></td></tr></table></figure>
<h4 id="转变动词"><a href="#转变动词" class="headerlink" title="转变动词"></a>转变动词</h4><p>此类动词均表”使⋯变成⋯”之意常用的有change与加rn两个。通常要与介词into连用。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这个经验使他变成好学生了。</span><br><span class="line">The experience turned/changed him into a good student.</span><br></pre></td></tr></table></figure>
<h4 id="其他重要的不完全及物动词"><a href="#其他重要的不完全及物动词" class="headerlink" title="其他重要的不完全及物动词"></a>其他重要的不完全及物动词</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我将门漆成绿色</span><br><span class="line">1 painted the door green.</span><br><span class="line">他们给小宝宝取名为汤姆</span><br><span class="line">They named the baby Tom.</span><br><span class="line">别让门敞开着</span><br><span class="line">Don&apos;t leave the door open.</span><br><span class="line">你一定要让你的牙齿保持干净</span><br><span class="line">You must keep your teeth clean.</span><br></pre></td></tr></table></figure>
<h4 id="授予动词"><a href="#授予动词" class="headerlink" title="授予动词"></a>授予动词</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我要送你这只表</span><br><span class="line">I&apos;ll give you this watch.</span><br><span class="line">请把你的书借我</span><br><span class="line">Please lend me your book.</span><br></pre></td></tr></table></figure>
<ol>
<li><p>表“给予”的概念要用to：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我给他这本书</span><br><span class="line">I gave him the book.</span><br><span class="line">=I gave the book to him.</span><br></pre></td></tr></table></figure>
</li>
<li><p>表“代劳”的概念要用for：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我为他买了这本书</span><br><span class="line">I bought him the book.</span><br><span class="line">=I bought the book for him.</span><br></pre></td></tr></table></figure>
</li>
<li><p>表“从⋯中”的概念，要用of：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我问他一个问题</span><br><span class="line">I asked him a question.</span><br><span class="line">=I asked a question of him.</span><br><span class="line">我对他不抱很大的期望</span><br><span class="line">I didn&apos;t except much of him.</span><br><span class="line">他对我毫无所求</span><br><span class="line">He required nothing of me.</span><br><span class="line">他抢了我的钱</span><br><span class="line">He robbed me of my money.</span><br><span class="line">我的钱被抢了</span><br><span class="line">I was robbed of my money.</span><br><span class="line">我无法摆脱这段痛苦的回忆</span><br><span class="line">I cannot get rid of the painful memory.</span><br><span class="line">你应该戒除抽烟的恶习</span><br><span class="line">You should (get rid of|break yourself|rid yourself) the bad habit of smoking.</span><br><span class="line">医生治好了他的病</span><br><span class="line">The doctor cured him of his disease.</span><br></pre></td></tr></table></figure>
</li>
<li><p>表提供：offer/provide/supply/furnish/present, 除offer外，要与with连用:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">他提供我所需要的东西</span><br><span class="line">He offered me all I needed.</span><br><span class="line">=He provided me with all I needed.</span><br><span class="line">他送我一块表</span><br><span class="line">He presented me with a watch.</span><br><span class="line">=He presented a watch to me.</span><br></pre></td></tr></table></figure>
</li>
<li><p>explan/introduce/propose/recommend/express要与to连用:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">他向我解释理由</span><br><span class="line">He explained the reson to me.</span><br><span class="line">他把那位女孩介绍给我</span><br><span class="line">He introduced the girl to me.</span><br><span class="line">他建议我用这个方法</span><br><span class="line">He recommended the method to me.</span><br><span class="line">他向委员会提了一个提议</span><br><span class="line">He proposed a motion to the committee.</span><br></pre></td></tr></table></figure>
</li>
<li><p>take a picture</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#我拍了一张他的照片</span><br><span class="line">I took a picture of him.</span><br><span class="line">#我为他拍了一张照片</span><br><span class="line">I took a picture for him.</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Never try it.</span><br><span class="line">=Don&apos;t ever try it.</span><br><span class="line"></span><br><span class="line">#How之后只能与单数名词, what没有限制. 只记how+adj，what+noun就可以</span><br><span class="line">What a great man he is!</span><br><span class="line">=How great he is!=How great a man he is!</span><br><span class="line">How hard he studied!</span><br></pre></td></tr></table></figure>
<h2 id="两句的连接方式"><a href="#两句的连接方式" class="headerlink" title="两句的连接方式"></a>两句的连接方式</h2><p>两句可能用以下的符号连接：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 破折号 </span><br><span class="line">2. 冒号 </span><br><span class="line">3. 分号 </span><br><span class="line">4. 并列连词 </span><br><span class="line">5. 副词连词 </span><br><span class="line">6. 关系词</span><br></pre></td></tr></table></figure>
<h3 id="并列连词"><a href="#并列连词" class="headerlink" title="并列连词"></a>并列连词</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">and -&gt; both...and..            一方面...同时也...</span><br><span class="line">or  -&gt; either...or...          要不就是...要不就是...</span><br><span class="line">       neither...nor...        既非...亦非...</span><br><span class="line">but -&gt; not...but...            并非...而是...</span><br><span class="line">       not only...but also...  不仅...而且...</span><br><span class="line">as well as...                  以及</span><br><span class="line">rather than...                 而非</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">他非但不仁慈，反而很残忍</span><br><span class="line">He is not kind but cruel.</span><br><span class="line">他不是走就是留</span><br><span class="line">He will either stay or leave.</span><br><span class="line">她不仅会唱歌，她也会跳舞</span><br><span class="line">Not only can she sing, but she can (also) dance.</span><br><span class="line">我们和约翰都喜欢它</span><br><span class="line">We as well as John like it.</span><br><span class="line">他很快乐，而不是伤心</span><br><span class="line">He is happy rather than sad.</span><br><span class="line"></span><br><span class="line">#as well as或rather than连接主语时，动词始终随第一个主语做变化</span><br><span class="line">他对音乐有兴趣，而非对绘画有兴趣</span><br><span class="line">He is interested in music rather than in painting.</span><br><span class="line">他来此地学英文并了解更多有关生活的事情</span><br><span class="line">He came here to learn English as well as to know more about life.</span><br><span class="line">他和我都对音乐有兴趣</span><br><span class="line">He as well as I is interested in music.</span><br><span class="line">他对音乐有兴趣，而我则不</span><br><span class="line">He rather than I is interested in music.</span><br><span class="line">=He instead of me is interested in music.</span><br><span class="line">=He,not I, is interested in music.</span><br><span class="line"></span><br><span class="line">我喜欢这本书，而不喜欢那本</span><br><span class="line">I like this book, not that one.</span><br><span class="line">=I like this book rather than that one.</span><br><span class="line"></span><br><span class="line">#除both用复数外，其它随最近的主语变化：</span><br><span class="line">他与我对此事都高兴</span><br><span class="line">#他和我都...(不可连接句子)</span><br><span class="line">Both he and I are happy about it.</span><br><span class="line"></span><br><span class="line">不是他就是我错</span><br><span class="line">#不是他就是我...(不可连接句子)</span><br><span class="line">Either he or I am wrong.</span><br><span class="line"></span><br><span class="line">既不是你也不是他该负责</span><br><span class="line">既不是你也不是他...(不可连接句子)</span><br><span class="line">Neither you nor he is to blame.</span><br><span class="line"></span><br><span class="line">不是他而是我应对此事负责</span><br><span class="line">#不是他而是我...(不可连接句子)</span><br><span class="line">Not he but I am to be responsible for it.</span><br><span class="line"></span><br><span class="line">#不仅...而且...(可连接句子，引导句子时要倒装)</span><br><span class="line">Not only they but(also) John has passed the exam.</span><br><span class="line">Not only can she sing, but she can also dance.</span><br><span class="line">Not only does she sing well, but she dances beatifully.</span><br><span class="line">She is not only beautiful but (also) kind.</span><br><span class="line">=She is not only beautiful bot kind as well.</span><br></pre></td></tr></table></figure>
<h3 id="副词连词"><a href="#副词连词" class="headerlink" title="副词连词"></a>副词连词</h3><p>常用的的副词连接词：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">because（因为）</span><br><span class="line">though（虽然）</span><br><span class="line">if（如果）</span><br><span class="line">unless（除非）</span><br><span class="line">as soon as（一旦）</span><br><span class="line">once（一旦）等</span><br></pre></td></tr></table></figure></p>
<ol>
<li>条件句与主句的时态</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">when:当                 一般现在时(或现在完成时)动词，主语+will+原形动词。</span><br><span class="line">if:如果 </span><br><span class="line">once/as soon as:一旦 </span><br><span class="line">unless:除非</span><br><span class="line"></span><br><span class="line">我有钱时就会买辆车</span><br><span class="line">When I am rich, I will buy a car.</span><br><span class="line">他若有时间就会来</span><br><span class="line">If he has time, he&apos;ll come here.</span><br><span class="line">我一做完就会让你知道</span><br><span class="line">As soon as(Once) I have done it, I&apos;ll let you know.</span><br><span class="line">我一旦有空就会出国旅行</span><br><span class="line">Once I am free, I will take a trip abroad.</span><br><span class="line">除非他明天回来，否则我就要走了</span><br><span class="line">Unless he comes back tomorrow, I will leave.</span><br><span class="line">他还要两年才毕业</span><br><span class="line">It will be another two years before he graduates.</span><br><span class="line">他还要多久才来？</span><br><span class="line">How long will it be before he comes?</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>连接性副词</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">however: 然而(有but的意思): </span><br><span class="line">后面要加逗号，句中两旁用逗号相隔。</span><br><span class="line">他人很好，然而我却不喜欢他</span><br><span class="line">He is nice; however, I don&apos;t like him.</span><br><span class="line">He is nice, but I don&apos;t like him.</span><br><span class="line">He is nice. However, I don&apos;t like him.</span><br><span class="line">He is nice. I, however, don&apos;t like him.</span><br><span class="line"></span><br><span class="line">therefore/thus：因此(有so的意思): </span><br><span class="line">后面要加逗号，句中两旁用逗号相隔。(thus不用加逗号)</span><br><span class="line">他很仁慈因此我们全都喜欢他</span><br><span class="line">He is kind; therefore, we all like him.</span><br><span class="line">He is kind, so we all like him.</span><br><span class="line">He is kind. Therefore, we all like him.</span><br><span class="line">He is kind. We, therefore, like him.</span><br><span class="line"></span><br><span class="line">moreover/furthermore/in addition：</span><br><span class="line">此外（有and的意思）: 后面要加逗号，句中两旁用逗号相隔。</span><br><span class="line">她舞跳得好，而且也擅长唱歌</span><br><span class="line">She dances well; furthermore, she is good at singing.</span><br><span class="line">She dances well, and she is good at singing.</span><br><span class="line"></span><br><span class="line">besides与in addition均表“此外”，不过前者多用于有否定或消极意味的句中，</span><br><span class="line">而in addition则用于肯定句或积极意味的句中。</span><br><span class="line">我想我不会跟你去看电影了，约翰。我太累了；此外，我也没钱。</span><br><span class="line">I don&apos;t think I will go to the movies with you, John. I&apos;m too tired; </span><br><span class="line">besides, I have no money.</span><br><span class="line"></span><br><span class="line">while: </span><br><span class="line">#句首时：当... </span><br><span class="line">While I was writing a letter, she was doing the sishes.</span><br><span class="line">#连接并列句时：而...</span><br><span class="line">He is nice, while(whereas) his brother is bad.</span><br><span class="line">While he is nice, his brother is bad.</span><br></pre></td></tr></table></figure>
<p>as: 当、虽然、因为<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#当我...</span><br><span class="line">As I was young, I was quite happy.</span><br><span class="line">As rich as he is, he isn&apos;t happy.</span><br><span class="line">#虽然...</span><br><span class="line">=Thouth he is rich, he isn&apos;t happy.</span><br><span class="line">=Rich as he is, he isn&apos;t happy.</span><br><span class="line">#因为...</span><br><span class="line">As he has apologized to me, I&apos;m going to forgive him.</span><br><span class="line">Because he...</span><br></pre></td></tr></table></figure></p>
<p>where: 在…的地方<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">=in the place where.=in the place in which</span><br><span class="line">Where I live, people are very nice.</span><br><span class="line">in the place where I live, people are very nice.</span><br><span class="line">Put the book where I can see it.</span><br><span class="line">=Put the book in the place where I can see it.</span><br></pre></td></tr></table></figure></p>
<p>once、as soon as: 一旦</p>
<p>or: 否则<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">You must work hard, or I&apos;ll fire you.</span><br><span class="line">=You must work hard; otherwise I&apos;ll fire you.</span><br></pre></td></tr></table></figure></p>
<p>nor: 也不, nor之后的分句要倒装<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">She can&apos;t sing, nor can she dance.</span><br><span class="line">He isn&apos;t clever, nor is he diligent.</span><br></pre></td></tr></table></figure></p>
<p>so that: 这样的话、也便, 从句中应有助动词may/wll/can等<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">I got up early so that(in order that) I could get to school on time.</span><br><span class="line">=I got up early so I could get to school on time.</span><br></pre></td></tr></table></figure></p>
<p>so…that…: 如此…以致于…<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">He is so nice that we all like him.</span><br><span class="line">=He is so nice, we all like him.</span><br></pre></td></tr></table></figure></p>
<p>in that: because。置于主句之后<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">He is great in that he speaks five different languages.</span><br></pre></td></tr></table></figure></p>
<p>except that: 只可惜、只不过是<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">He is nice except that he is a little shy.</span><br></pre></td></tr></table></figure></p>
<p>since: 因为、自从<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#由于...</span><br><span class="line">Since you&apos;ve finished the work, you may leave anytime.</span><br><span class="line">#自从...</span><br><span class="line">He has been studying quite hard since he went to college.</span><br></pre></td></tr></table></figure></p>
<h2 id="关系词"><a href="#关系词" class="headerlink" title="关系词"></a>关系词</h2><h3 id="关系代词"><a href="#关系代词" class="headerlink" title="关系代词"></a>关系代词</h3><h4 id="关系代词种类及功能"><a href="#关系代词种类及功能" class="headerlink" title="关系代词种类及功能"></a>关系代词种类及功能</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">人： who/whom</span><br><span class="line">物： which/which</span><br><span class="line">句子:which/which</span><br><span class="line"></span><br><span class="line">a. 关系代词之前要有先行词</span><br><span class="line">b. 关系代词在引导的定语从句中要作主语、宾语或表语</span><br><span class="line">c. 否则关系代词之前一定要有介词, 介词可移到句尾</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">He is a good student who studies hard.</span><br><span class="line">He is a boy whom everyone loves.</span><br><span class="line">He is a man for whom I enjoy working.</span><br><span class="line">=He is a man whom I enjoy working for.</span><br><span class="line">The house in which we live is very large.</span><br><span class="line">=The house which we live in is very large.</span><br><span class="line"></span><br><span class="line">#which代替smokes three packs of cigarettes a day</span><br><span class="line">He smokes three packs of cigarettes a day, which definitely does harm to his health.</span><br></pre></td></tr></table></figure>
<h4 id="非限制性定语从句"><a href="#非限制性定语从句" class="headerlink" title="非限制性定语从句"></a>非限制性定语从句</h4><p>该关系代词前一定要有逗号，按顺序翻译即可。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">I met John, who is my classmate.</span><br><span class="line">Here comes my father, who is an English teacher.</span><br><span class="line">I went to the train station this morning, which was crowded with passengers.</span><br></pre></td></tr></table></figure>
<h4 id="限制性定语从句"><a href="#限制性定语从句" class="headerlink" title="限制性定语从句"></a>限制性定语从句</h4><p>该关系代词前不要有逗号，翻译成”…的”</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">He is a boy who works hard.</span><br><span class="line">I like the book which he bought yesterday.</span><br><span class="line">This is my mother, who loves me very much.(对)</span><br><span class="line">This is my mother who loves me very much.（错）</span><br></pre></td></tr></table></figure>
<h4 id="关系代词的省略"><a href="#关系代词的省略" class="headerlink" title="关系代词的省略"></a>关系代词的省略</h4><p>限制性定语从句中，若关系代词为及物动词的宾语，则该关系代词可省略。若关系代词为介词的宾语，介词移到定语从句的句尾时，则该关系代词可省略。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">This is the boy whom I saw yesterday.(vt)</span><br><span class="line">=This is the boy I saw yesterday.</span><br><span class="line"></span><br><span class="line">This is a question which you should pay attention to.(prep)</span><br><span class="line">=This is a question you should pay attention to.</span><br><span class="line"></span><br><span class="line">This is the house in which he lives.</span><br><span class="line">=This is the house which he lives in.</span><br><span class="line">=This is the house he lives in.</span><br></pre></td></tr></table></figure>
<h4 id="that关系代词"><a href="#that关系代词" class="headerlink" title="that关系代词"></a>that关系代词</h4><p>a. that之前不能有逗号</p>
<p>b. that之前不可有介词</p>
<p>以上满足时可取代who、whom、which.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">I like the girl that(who) is sitting there.</span><br><span class="line">This is the knife whth which he killed Marry.(有with，不能用that取代which)</span><br><span class="line">=This is the knife that(which) he killed Marry with.</span><br></pre></td></tr></table></figure>
<p>下列情况下，只能用that</p>
<p>序数词：the first/second…/last<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Gambling is the last thing that I would do.</span><br><span class="line">He was the first man that came up with such an idea.</span><br></pre></td></tr></table></figure></p>
<p>最高级后，只能用that：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">He is the best student that I&apos;ve ever taught.</span><br><span class="line">The most beautiful scene that I&apos;ve everseen is Guilin.</span><br></pre></td></tr></table></figure></p>
<p>all后，只能用that：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">All the students (that) are studying here are hardworking.</span><br><span class="line">All (that) he said is true.</span><br><span class="line">Everything (that) he said is true.</span><br><span class="line">#以上时，that可以省略掉</span><br></pre></td></tr></table></figure></p>
<p>the only后，只能用that：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">He is the only friend that I have.</span><br></pre></td></tr></table></figure></p>
<p>关系代词在be动词后作表语，只能用that：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#他已不是当年的他了</span><br><span class="line">He is not the man that he once was.</span><br></pre></td></tr></table></figure></p>
<p>其他：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Who that lies can win our trust?</span><br><span class="line">What is it that you want?</span><br></pre></td></tr></table></figure></p>
<h4 id="限制性定语从句可化简为分词适语"><a href="#限制性定语从句可化简为分词适语" class="headerlink" title="限制性定语从句可化简为分词适语"></a>限制性定语从句可化简为分词适语</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">The girl who danced here yesterday is my sister.</span><br><span class="line">=The girl dancing here yesterday is my sister.</span><br><span class="line"></span><br><span class="line">Who is that boy that is standing over there?</span><br><span class="line">that is-&gt;being-&gt;省略</span><br><span class="line">=Who is that boy standing over there?</span><br><span class="line"></span><br><span class="line">I like the car which is parked in front of the post office.</span><br><span class="line">which is&gt;being-&gt;省略</span><br><span class="line">=I like the car parked in front of the post office.</span><br></pre></td></tr></table></figure>
<p>非限制性定语从句不能化简为分词短语。但Who/which + be + n可以化简为同位语<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">I met John, who is a good friend of mine.</span><br><span class="line">who is-&gt;being-&gt;省略</span><br><span class="line">=I met John, a good friend of mine.</span><br><span class="line"></span><br><span class="line">He works hard, which is a fact that is known to all of us.</span><br><span class="line">=He works hard, a fact that is know to all of us.</span><br><span class="line"></span><br><span class="line">John, a good friend of mine, came to see me yesterday.</span><br><span class="line">=A good friend of mine, John came to see me yesterday.</span><br></pre></td></tr></table></figure></p>
<h4 id="定语从句与插入语的关系"><a href="#定语从句与插入语的关系" class="headerlink" title="定语从句与插入语的关系"></a>定语从句与插入语的关系</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">I believ(我相信)</span><br><span class="line">I think/consider(我相信)</span><br><span class="line">I feel(我觉得)</span><br><span class="line">I know(我知道)</span><br><span class="line">I find(我发现)</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#他是个从不食言的人</span><br><span class="line">He is a man who never breaks his word.</span><br><span class="line">He is a man who I think never breaks his word.</span><br><span class="line"></span><br><span class="line">He is the man whom I believe I met yesterday.</span><br><span class="line">He is a man who I think never breaks his word.</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">I think that he is nice.</span><br><span class="line">=I think him to be nice.</span><br><span class="line"></span><br><span class="line">He is a man who I think is nice.</span><br><span class="line">=He is a man whom I think to be nice.</span><br></pre></td></tr></table></figure>
<h4 id="定语从句可简化为不定式短语"><a href="#定语从句可简化为不定式短语" class="headerlink" title="定语从句可简化为不定式短语"></a>定语从句可简化为不定式短语</h4><p>关系代词所引导的定语从句中，若该关系代词之前有介词时，可将该从句换成不定式短语。有点“…目的”的意思：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">He has no house in which he can live.</span><br><span class="line">=He has no house in which to live.</span><br><span class="line">=He has no house to live in.</span><br><span class="line"></span><br><span class="line">Lend me your pen with which I can write my address.</span><br><span class="line">=Lend me your pen with which to write my address.</span><br><span class="line">=Lend me your pen to write my address with.</span><br></pre></td></tr></table></figure>
<h3 id="关系代词所有格"><a href="#关系代词所有格" class="headerlink" title="关系代词所有格"></a>关系代词所有格</h3><p>his/your/their/our/its…变化而成：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">whose</span><br><span class="line"></span><br><span class="line">a. 关系代词所有格之前要有先行词</span><br><span class="line">b. 关系代词所有格在引导的定语从句中要作主语、宾语或表语</span><br><span class="line">c. 否则关系代词所有格之前一定要有介词, 介词可移到句尾</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">She has an uncle. His name is Peter.</span><br><span class="line">=She has an uncle whose name is Peter.</span><br></pre></td></tr></table></figure>
<p>whose+n.=the+n.+of which=of which+the+n.:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">This is a fancy car, whose color I like very much.</span><br><span class="line">=This is a fancy car, the color of which I like very much.</span><br><span class="line">=This is a fancy car, of which the color I like very much.</span><br></pre></td></tr></table></figure></p>
<h3 id="关系副词"><a href="#关系副词" class="headerlink" title="关系副词"></a>关系副词</h3><p>关系副词用以修饰名词</p>
<p>介词+关系代词+which:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">where=in which/on which/at which: 修饰表地方的名词</span><br><span class="line">when=in which/on which/at which: 修饰表时间的名词</span><br><span class="line">why=for which: 修饰的reason</span><br><span class="line">how=in which: how和the way只能用其中之一</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">This is the city where(in which) I met Marry.</span><br><span class="line">He came on Friday, when(on which) it was raining very hard.</span><br><span class="line">I don&apos;t know the reason why he cried.</span><br><span class="line">That&apos;s how(the way) he handled the thing.</span><br></pre></td></tr></table></figure>
<h4 id="where"><a href="#where" class="headerlink" title="where"></a>where</h4><p>在…地方(在…内/上或其他)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">This is the city in which I met Mary.</span><br><span class="line">=This is the city where I met Mary.</span><br><span class="line"></span><br><span class="line">Do you see the desk on which there is a book.</span><br><span class="line">=Do you see the desk where there is a book.</span><br></pre></td></tr></table></figure>
<h4 id="when"><a href="#when" class="headerlink" title="when"></a>when</h4><p>那时、那天、那年…</p>
<p>年月：in 日子：on 时间：at<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">He came on Friday, on which it was raining hard.</span><br><span class="line">=He came on Friday, when it was raining hard.</span><br><span class="line"></span><br><span class="line">That&apos;s the year when he graduated.</span><br><span class="line">The sun rose at 5:30, when most people were still in their dreams.</span><br></pre></td></tr></table></figure></p>
<h4 id="why"><a href="#why" class="headerlink" title="why"></a>why</h4><p>只作修饰the reason，the reason可以省略掉</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">I don&apos;t know the reason for which he cried.</span><br><span class="line">=I don&apos;t know the reason why he cried.</span><br><span class="line">=I don&apos;t know why he cried.</span><br></pre></td></tr></table></figure>
<h4 id="how"><a href="#how" class="headerlink" title="how"></a>how</h4><p>how和the way只能用其中之一，表…的方式/方法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">That&apos;s the way in which he handled the problem.</span><br><span class="line">=That&apos;s the way he handled the problem.</span><br><span class="line"></span><br><span class="line">I don&apos;t like the way he talks.</span><br><span class="line"></span><br><span class="line">I am sick of the way he looks at me.</span><br><span class="line">=I am sick of how he looks at me.</span><br></pre></td></tr></table></figure>
<h4 id="关系副词使用要点"><a href="#关系副词使用要点" class="headerlink" title="关系副词使用要点"></a>关系副词使用要点</h4><p>在be动词后作表语时，可省略该名词，只保留关系副词</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">That is the place where he was born.</span><br><span class="line">=That&apos;s where he was born.</span><br><span class="line">That is the day when he&apos;ll come.</span><br><span class="line">=That&apos;s when he&apos;ll come.</span><br><span class="line">That is the reason why he left.</span><br><span class="line">=That&apos;s why he left.</span><br><span class="line">That is the way he did it.</span><br><span class="line">=That&apos;s how he did it.</span><br></pre></td></tr></table></figure>
<p>where/when/why/how可视为疑问代词，引导名词从句，此时可作及物动词的宾语</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">I konw where he is.</span><br><span class="line">I wonder why he left.</span><br><span class="line">I don&apos;t know how he&apos;ll do it.</span><br></pre></td></tr></table></figure>
<p>where可作副词</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Put it where you found it.</span><br><span class="line">=Put it in the place where found it.</span><br><span class="line">=Put it in the place in which found it.</span><br><span class="line"></span><br><span class="line">Where there is smoke, there is fire.</span><br></pre></td></tr></table></figure>
<p>the moment(when)… 一…就…</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#他一听到这个悲伤的消息就哭了起来</span><br><span class="line">As soon as he heard the sad news, he burst into tears.</span><br><span class="line">#他来的时候，我正在睡觉</span><br><span class="line">The time(when) he came, I was sleeping.</span><br><span class="line">=When he came, I was sleeping.</span><br><span class="line">#他离开的那一天，正在下雨</span><br><span class="line">The day(when) he left, it was rainning.</span><br><span class="line">=When he left, it was rainning.</span><br></pre></td></tr></table></figure>
<h3 id="复合关系代词"><a href="#复合关系代词" class="headerlink" title="复合关系代词"></a>复合关系代词</h3><h4 id="复合关系代词种类"><a href="#复合关系代词种类" class="headerlink" title="复合关系代词种类"></a>复合关系代词种类</h4><p>由两个词类复合而成：先行词(名词)+关系代词</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#代替人</span><br><span class="line">whoever(凡...的人)、任何...的人</span><br><span class="line">=anybody who</span><br><span class="line">whomever(宾格)</span><br><span class="line">=anybody whom</span><br><span class="line"></span><br><span class="line">#代替人或物</span><br><span class="line">whichever(三者以上)</span><br><span class="line">=any one which(/who): 同一类的任何一个...</span><br><span class="line">whichever(二者)</span><br><span class="line">=either which(/who): 同一类的任何一个...</span><br><span class="line"></span><br><span class="line">#代替物</span><br><span class="line">what=the thing(s) which: 所...的东西</span><br><span class="line">whatever=anything which: ...的任何东西</span><br></pre></td></tr></table></figure>
<h4 id="whoever"><a href="#whoever" class="headerlink" title="whoever"></a>whoever</h4><p>whoever=anybody who</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Anybody should be punished.</span><br><span class="line">who makes such a mistake.</span><br><span class="line"></span><br><span class="line">Anybody who makes such a mistake should be punished.</span><br><span class="line">=Whoever makes such a mistake should be punished.</span><br><span class="line"></span><br><span class="line">I hate anybody.</span><br><span class="line">who tells lies.</span><br><span class="line"></span><br><span class="line">I hate anybody who tells lies.</span><br><span class="line">=I hate whoever tells lies.</span><br></pre></td></tr></table></figure>
<h4 id="whomever"><a href="#whomever" class="headerlink" title="whomever"></a>whomever</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Give it to anybody.</span><br><span class="line">whom you like.</span><br><span class="line"></span><br><span class="line">Give it to anybody whom you like.</span><br><span class="line">Give it to whomever you like.</span><br></pre></td></tr></table></figure>
<h4 id="whichever"><a href="#whichever" class="headerlink" title="whichever"></a>whichever</h4><p>是指同一类的任何东西</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">There are many book here. You may take any one which you like.</span><br><span class="line">There are many book here. You may take whichever you like.</span><br></pre></td></tr></table></figure>
<h4 id="what"><a href="#what" class="headerlink" title="what"></a>what</h4><p>the thing/the things which. 所…的(东西/事/话…):</p>
<p>前面不要有先行词(名词)</p>
<p>可作主语、宾语或在be动词后作表语</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">What he said is true.</span><br><span class="line">=The words which he said is true.</span><br><span class="line">I am interested in what he is doing.</span><br><span class="line"></span><br><span class="line">What bothers me is that I have no time.</span><br><span class="line">I don&apos;t believe what he said.</span><br></pre></td></tr></table></figure>
<h4 id="whatever"><a href="#whatever" class="headerlink" title="whatever"></a>whatever</h4><p>与whichever类似，不同在于whatever指不同类的任何东西，whichever指同一类的任何东西</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Whatever he said is true.</span><br><span class="line">=Anything which he said is true.</span><br><span class="line"></span><br><span class="line">I am interesting in whatever he is doing.</span><br><span class="line">=I am interesting in anything that he is doing.</span><br></pre></td></tr></table></figure>
<h4 id="whatever及whoever作副词连词"><a href="#whatever及whoever作副词连词" class="headerlink" title="whatever及whoever作副词连词"></a>whatever及whoever作副词连词</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">whatever=no matter what: 不论什么</span><br><span class="line">whoever=no matter who: 不论谁</span><br><span class="line"></span><br><span class="line">Whatever he says, I don&apos;t believe him.</span><br><span class="line">=No matter what he says, I don&apos;t believe him.</span><br><span class="line"></span><br><span class="line">Whoever does it, he should finish it by ten.</span><br><span class="line">No matter who does it, he should finish it by ten.</span><br></pre></td></tr></table></figure>
<p>whatever及whoever作副词连词, 引导的状语从句与主句中间有逗号相隔，而复合关系代词时没有。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#他所说的任何话都是谎言</span><br><span class="line">Whatever he says is a lie.</span><br><span class="line">#不论他说什么，那都是谎言</span><br><span class="line">Whatever(No matter what) he says, it is a lie.</span><br><span class="line"></span><br><span class="line">Whoever makes the mistake should be punished.</span><br><span class="line">Whoever(No matter who) makes the mistake, he should be punished.</span><br></pre></td></tr></table></figure>
<h4 id="however"><a href="#however" class="headerlink" title="however"></a>however</h4><p>连接性副词: 然而</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">He is nice; however, I don&apos;t like him.</span><br><span class="line">=He is nice. however, I don&apos;t like him.</span><br><span class="line">=He is nice. I, however, don&apos;t like him.</span><br></pre></td></tr></table></figure>
<p>副词连词：无论如何</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">No matter how nice he is, I don&apos;t like him.</span><br><span class="line">=However nice he is, I don&apos;t like him.</span><br><span class="line"></span><br><span class="line">No matter how hard he works, I don&apos;t respect him.</span><br><span class="line">=However hard he works, I don&apos;t respect him.</span><br></pre></td></tr></table></figure>
<h4 id="whether"><a href="#whether" class="headerlink" title="whether"></a>whether</h4><p>表无论是否只需whether即可，不可使用no matter whether，引导状语从句，以逗号分隔。</p>
<p>引导名词性从句，无逗号相隔，表是否。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Whether he is rich(or not), Jane will marry him.</span><br><span class="line"></span><br><span class="line">#他是否富有都没关系</span><br><span class="line">Whether he is rich(or not) doesn&apos;t matter.(无逗号相隔)</span><br><span class="line">=It doesn&apos;t matter whether he is rich(or not).</span><br></pre></td></tr></table></figure>
<h4 id="however-1"><a href="#however-1" class="headerlink" title="however"></a>however</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">However poor he is, he doesn&apos;t wnat anyone to help him.</span><br><span class="line">=However poor he may be, he doesn&apos;t want...</span><br></pre></td></tr></table></figure>
<h3 id="准关系代词"><a href="#准关系代词" class="headerlink" title="准关系代词"></a>准关系代词</h3><p>that/as/but</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">I have more money than you(do).</span><br><span class="line">He has as much money as I(do).</span><br><span class="line">There is nothing but he knows.</span><br></pre></td></tr></table></figure>
<h4 id="that"><a href="#that" class="headerlink" title="that"></a>that</h4><p>that + the 前面的动词 + 关系代词(who/whom/which), 可作主语、宾语、be动词后的表语</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#主语</span><br><span class="line">I have more mony than is needed.</span><br><span class="line">than=that the money which，所以that中已经包含了主语，不用再添加主语</span><br><span class="line">More guests that were invited came.</span><br><span class="line">There are more books that are needed.</span><br><span class="line"></span><br><span class="line">#宾语</span><br><span class="line">I have more money than he needs.</span><br><span class="line">I have more books than you do.</span><br><span class="line"></span><br><span class="line">more...that=比...多</span><br><span class="line"></span><br><span class="line">#be词语后的表语</span><br><span class="line">He is a better student than you.</span><br></pre></td></tr></table></figure>
<h4 id="as"><a href="#as" class="headerlink" title="as"></a>as</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#像...那样的...</span><br><span class="line">such+n.+as...</span><br><span class="line">#主语</span><br><span class="line">I have such car as you.</span><br><span class="line">I don&apos;t like such a man as tells lies.</span><br><span class="line">#宾语</span><br><span class="line">I respect such an honest man as you described.</span><br><span class="line">#be动词后的表语</span><br><span class="line">In our company there is not such a man as David(is).</span><br><span class="line">Such a lazy student as John will get nowhere.</span><br><span class="line"></span><br><span class="line">#和...相同的...</span><br><span class="line">the same+n.+as...</span><br><span class="line">#主语</span><br><span class="line">I have the same book as is laid on the desk.</span><br><span class="line">as=as the book which</span><br><span class="line">#宾语</span><br><span class="line">I have the same dictionary as you bought yesterday.</span><br><span class="line">#be动词后的表语</span><br><span class="line">I have the same dictionary as this one(is).</span><br><span class="line"></span><br><span class="line">#和...一样的...</span><br><span class="line">as+adj.+n.+as...</span><br><span class="line">#主语</span><br><span class="line">#他是有史以来最勤奋的人</span><br><span class="line">He is as diligent a man as ever lived.</span><br><span class="line">as=as any man that</span><br><span class="line">#宾语</span><br><span class="line">#我有一本和你一样好的词典</span><br><span class="line">I have as good a dictionary as you(do).</span><br><span class="line">#be动词后的表语</span><br><span class="line">#他是个和John一样好的人</span><br><span class="line">He is as good a man as John.</span><br><span class="line">as=as the man that</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Such a man like him is bad.(x)</span><br><span class="line">Such a man as he is bad.</span><br><span class="line"></span><br><span class="line">the same...as...:   和...相同的...(两个人或物)</span><br><span class="line">the same...that...: 就是同一个...(一个人或物) </span><br><span class="line"></span><br><span class="line">#我有一本书，与他正在看的那一本相同</span><br><span class="line">I have the same book as he is reading.</span><br><span class="line">#我借了一本书，就是他上周借的那一本</span><br><span class="line">I borrowed the same book that the borrowed last week.</span><br></pre></td></tr></table></figure>
<p>as等于which，用以代替整个主句, as可以移到句首，但which不能</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">He is nice, which we all know.</span><br><span class="line">=He is nice, as we all know.</span><br><span class="line">=As we all know, he is nice.</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">He was drunk, as usual.</span><br><span class="line">His conditions are as follows.</span><br><span class="line">His listed the names as follows.</span><br></pre></td></tr></table></figure>
<p>只能与单数可数名词使用的结构：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">as good a student as...</span><br><span class="line">as diligent a man as...</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#以下都只能用单数</span><br><span class="line">#so...that...: 如此...以致</span><br><span class="line">He is so good a boy that I like him.</span><br><span class="line"></span><br><span class="line">#as...as...: 和...一样地...</span><br><span class="line">He is as handsome a man as Peter.</span><br><span class="line">This music is as good as that.</span><br><span class="line"></span><br><span class="line">#too...to...: 太...而不...</span><br><span class="line">He is too old a man to do it.</span><br><span class="line">This work is too difficult to do.</span><br><span class="line">THis is too difficult a job to do.</span><br><span class="line"></span><br><span class="line">#how...: 多么地...</span><br><span class="line">How great a man he is!</span><br><span class="line">#what可接任何名词</span><br><span class="line">What good students they are!</span><br><span class="line"></span><br><span class="line">He has so many things to do that he can&apos;t go picnicking with us.</span><br><span class="line">There is so much work to do that I don&apos;t think I can go to bed early.</span><br><span class="line">He has too little money left to buy a car.</span><br><span class="line">I have as much money as he.</span><br><span class="line">I don&apos;t know how much time you can give me for that job.</span><br></pre></td></tr></table></figure>
<p>such…that可置任何名词</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">This is such good music that I love it.</span><br><span class="line">They are such good students that I like them.</span><br></pre></td></tr></table></figure>
<h4 id="but"><a href="#but" class="headerlink" title="but"></a>but</h4><p>作准关系代词时，只用于”no+名词”之后，等于who(whom/wich)…not。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">There is no+名词+who(whom/which/that)...not</span><br><span class="line">=There is no+名词+but...</span><br><span class="line"></span><br><span class="line">#没有...是不...</span><br><span class="line"></span><br><span class="line">#没有人不对它感兴趣</span><br><span class="line">There is no one who is not interested in it.</span><br><span class="line">=There is no one but interested in it.</span><br><span class="line"></span><br><span class="line">#没有什么东西是他不喜欢的</span><br><span class="line">There is nothing which he is not found of.</span><br><span class="line">=There is nothing but he is fond of.</span><br><span class="line"></span><br><span class="line">There is nothing but he can do.</span><br><span class="line">There is no book but he likes to read.</span><br><span class="line">=There was no noe but he hated.</span><br></pre></td></tr></table></figure>
<h2 id="非谓语动词"><a href="#非谓语动词" class="headerlink" title="非谓语动词"></a>非谓语动词</h2><p>不定式、分词、动名词</p>
<h3 id="不定式"><a href="#不定式" class="headerlink" title="不定式"></a>不定式</h3><h4 id="不定式的功能"><a href="#不定式的功能" class="headerlink" title="不定式的功能"></a>不定式的功能</h4><p>当名词、形容词、副词：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#名词</span><br><span class="line">To take a trip around the world has been my dream.</span><br><span class="line"></span><br><span class="line">#形容词</span><br><span class="line">I have something to do(to do修饰something).</span><br><span class="line"></span><br><span class="line">#副词</span><br><span class="line">I came to see her.(to see her当副词修饰came)</span><br></pre></td></tr></table></figure>
<h4 id="名词不定式的用法"><a href="#名词不定式的用法" class="headerlink" title="名词不定式的用法"></a>名词不定式的用法</h4><p>当作主语时，可用It is…to V替代:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">It is my goal to marry her.</span><br><span class="line">It is difficult to learn English.</span><br></pre></td></tr></table></figure></p>
<p>名词不定式作及物动词的宾语：</p>
<p>want/desire/intend/expect+to+V，但anticipate+动名词。</p>
<p>注意：think也有想要的意思，但只用以表示“想到某一件事”，通常用that引导名词性从句作宾语<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">I think that he is great.</span><br><span class="line">I thought of Mary a while ago.</span><br><span class="line">I have been thinking of buying a car.</span><br><span class="line">=I have been considering buying a car.</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">S + find(发现)   + it + 名词/形容词(作补语) + 名词不定式(真正宾语)</span><br><span class="line">    think(认为)</span><br><span class="line">    believe(相信)</span><br><span class="line">    consider(认为)</span><br><span class="line">    deem(认为)</span><br><span class="line">    feel(觉得)</span><br><span class="line">    make(使)</span><br><span class="line"></span><br><span class="line">I find it interesting to climb mountains.</span><br><span class="line">#我习惯早起</span><br><span class="line">I make it a rule to get up early.</span><br></pre></td></tr></table></figure>
<p>在be动词表意愿、企图的名词：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">My plan is to see him.</span><br><span class="line">His goal is simply to become a teacher.</span><br></pre></td></tr></table></figure></p>
<h4 id="形容词不定式的用法"><a href="#形容词不定式的用法" class="headerlink" title="形容词不定式的用法"></a>形容词不定式的用法</h4><p>置于名词的后面，作形容词用，修饰其前面的名词：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">I have some work to do.</span><br><span class="line">There is one thing to be done.</span><br></pre></td></tr></table></figure>
<p>形容词不定式可以等于关系代词作主语所引导的定语从句：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">I have on friend to advise me.</span><br><span class="line">=I have no friend who can advise me.</span><br><span class="line"></span><br><span class="line">There is one thing to be done.</span><br><span class="line">=There is one thing which should be done.</span><br><span class="line"></span><br><span class="line">#形容词不定式也可等于关系代词作宾语所引导的定语从句：</span><br><span class="line">I want something to eat.</span><br><span class="line">=I want something which I can eat.</span><br><span class="line">I have something to do.</span><br><span class="line">=I have something which I must do.</span><br></pre></td></tr></table></figure>
<p>此类句型中，被修饰的名词一定要作不定式短语中动词的宾语，否则就要作为介词的宾语：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">He is a nice man to work with.</span><br><span class="line">Give me a chair to sit in.</span><br></pre></td></tr></table></figure>
<p>be动词后加的形容词不定式有下列意义：</p>
<p>1). 主动形式：<br>  a). 表将来=will<br>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">He is to come tomorrow.</span><br><span class="line">=He is going to come tomorrow.</span><br><span class="line">=He will come tomorrow.</span><br></pre></td></tr></table></figure></p>
<p>  b). 表义务=should<br>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">You are to do it.</span><br><span class="line">You should do it.</span><br><span class="line"></span><br><span class="line">What am I to do?</span><br><span class="line">=What should I do?</span><br></pre></td></tr></table></figure></p>
<p>2). 被动形式：<br>  a). 表当然=should<br>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Such a lazy man is to be fired.</span><br><span class="line">=Such a lazy man should be fired.</span><br></pre></td></tr></table></figure></p>
<p>  b). 表可能=can<br>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">My hat was nowhere to be found.</span><br><span class="line">=My hat could not be fould anywhere.</span><br></pre></td></tr></table></figure></p>
<h4 id="副词不定式的用法"><a href="#副词不定式的用法" class="headerlink" title="副词不定式的用法"></a>副词不定式的用法</h4><p>修饰动词：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">He came to see me.</span><br><span class="line">He as agreed to do it.</span><br><span class="line">He sang a song to please her.</span><br><span class="line">He tends to lie.</span><br><span class="line">You&apos;ll soon get to know him.</span><br></pre></td></tr></table></figure></p>
<p>修饰形容词：一定置于该形容词之后：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">He is able to handle the problem.</span><br><span class="line">He os apt to lie.=He tends to lie.</span><br><span class="line">This book is good to read.</span><br></pre></td></tr></table></figure></p>
<p>修饰副词，一定置于该副词之后：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">He is too old to swim.</span><br><span class="line">He is old enough to go swimming alone.</span><br></pre></td></tr></table></figure></p>
<p>疑问词+不定式=名词短语：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">where to go</span><br><span class="line">when to do it</span><br><span class="line">how to swim</span><br><span class="line">what to do</span><br><span class="line">which to buy</span><br><span class="line">whom to see</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">What to do was the question.</span><br><span class="line">He is learning how to do it.</span><br><span class="line">The problem is where to start.</span><br></pre></td></tr></table></figure>
<h4 id="that从句化简为不定式"><a href="#that从句化简为不定式" class="headerlink" title="that从句化简为不定式"></a>that从句化简为不定式</h4><p>P157：</p>
<p>单一动词:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">It seems that he works hard.</span><br><span class="line">=He seems(appears) to work hard.</span><br><span class="line"></span><br><span class="line">#我刚巧在那里</span><br><span class="line">It happended that I was there.</span><br><span class="line">=I happended to be there.</span><br></pre></td></tr></table></figure></p>
<p>be+过去分词:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">It is said: 据说         + that he is good.</span><br><span class="line">It is reported: 据报道</span><br><span class="line">It is rumored: 谣传</span><br><span class="line">It is known: 据了解</span><br><span class="line">It is thought: 一般认为</span><br><span class="line">It is believed: 一般相信</span><br><span class="line">=He is said(reported/...) to be good.</span><br></pre></td></tr></table></figure></p>
<p>如何变化：时态相同时, to之后加原型动词：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">It seems that he works hard.</span><br><span class="line">=He seems to work hard.</span><br><span class="line"></span><br><span class="line">It appears that they are nice.</span><br><span class="line">=they appear to be nice.</span><br><span class="line"></span><br><span class="line">It was said that he loved music very much.</span><br><span class="line">=He was said to love music very much.</span><br><span class="line"></span><br><span class="line">It is said they love music very much.</span><br><span class="line">=they are said to love music very much.</span><br></pre></td></tr></table></figure></p>
<p>时态不同时，to之后加“have(曾经、已经)+过去分词”：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">It seems that he worked hard.</span><br><span class="line">=He seems to have worked hard.</span><br><span class="line"></span><br><span class="line">It is said that he was a thug(流氓) in the past.</span><br><span class="line">=He is said to have been a thug in the past.</span><br></pre></td></tr></table></figure></p>
<p>to be的省略：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">He seems to be nice.</span><br><span class="line">=He seems nice.</span><br></pre></td></tr></table></figure></p>
<p>prove+to be:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#表证明：接名词或名词性从句作宾</span><br><span class="line">The investigation proved his guilt.</span><br><span class="line">=The investigation proved that he was guilty.</span><br><span class="line"></span><br><span class="line">#to be: 表显示、结果是：</span><br><span class="line">#他的话竟然是真的</span><br><span class="line">What he said proved to be true.</span><br><span class="line"></span><br><span class="line">#这份报告结果是错的</span><br><span class="line">The report proved to be false.</span><br><span class="line">=The report proved false.</span><br><span class="line">=The report turned out to be false.</span><br><span class="line">=The report turned out false.</span><br></pre></td></tr></table></figure></p>
<h4 id="使役动词加不定式短语作宾语补语"><a href="#使役动词加不定式短语作宾语补语" class="headerlink" title="使役动词加不定式短语作宾语补语"></a>使役动词加不定式短语作宾语补语</h4><p>P160: 注意与P35的区别，叫、让之类的直接接动词原型。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cause/get: 促使...</span><br><span class="line">lead: 引导...</span><br><span class="line">allow/permit: 允许...</span><br><span class="line">advise: 劝告...</span><br><span class="line">persuade: 说服...</span><br><span class="line">enable: 使能够...</span><br><span class="line">tell: 告诉...</span><br><span class="line">beg/ask: 请求...</span><br><span class="line">order: 命令...</span><br><span class="line">want/wish/expect/intend: 期望...</span><br><span class="line"></span><br><span class="line">The sad story caused him to cry.</span><br><span class="line">His speech led me to understand the importance of learning English.</span><br><span class="line">He advised me not to smoke again.</span><br></pre></td></tr></table></figure></p>
<p>不定式短语作主语时，若短语中最后一个词为宾语，该宾语可移置句首作主语，其余部分则移到句尾：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">To please my father is hard.</span><br><span class="line">=My father is hard to please.</span><br><span class="line"></span><br><span class="line">To get along with him is easy.</span><br><span class="line">=He is easy to get along with.</span><br></pre></td></tr></table></figure>
<h4 id="原型不定式"><a href="#原型不定式" class="headerlink" title="原型不定式"></a>原型不定式</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">can/could/shall/should/will/would/may/might/ought to/must + 原型动词</span><br><span class="line"></span><br><span class="line">I can do it.</span><br><span class="line">He should finish it.</span><br></pre></td></tr></table></figure>
<h4 id="知觉动词与原型不定式的关系"><a href="#知觉动词与原型不定式的关系" class="headerlink" title="知觉动词与原型不定式的关系"></a>知觉动词与原型不定式的关系</h4><p>看、听、感觉+原型动词</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">看：see/watch/observe/look at</span><br><span class="line">听：hear/listen to</span><br><span class="line">感觉：feel</span><br><span class="line"></span><br><span class="line">#...了</span><br><span class="line">I saw him enter the room.</span><br><span class="line">I never heard him speak English.</span><br><span class="line">I felt the house shake.</span><br></pre></td></tr></table></figure>
<h4 id="使役动词与原型不定式的关系"><a href="#使役动词与原型不定式的关系" class="headerlink" title="使役动词与原型不定式的关系"></a>使役动词与原型不定式的关系</h4><p>P164：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">let(让)、make(使)、bid(叫)、have(叫)+原型动词、当get(叫)+to+原形动词：</span><br><span class="line"></span><br><span class="line">Let me try it.</span><br><span class="line">=Allow me to try it.</span><br><span class="line"></span><br><span class="line">I made him wash the car.</span><br><span class="line"></span><br><span class="line">I had him wash the car.</span><br><span class="line">=I got him to wash the car.</span><br><span class="line"></span><br><span class="line">#make/let被动时，要改为to+原形动词</span><br><span class="line">I let him leave.</span><br><span class="line">=He was allowed to leave.</span><br><span class="line"></span><br><span class="line">The made John clean the window.</span><br><span class="line">=John was made to clean the window.</span><br></pre></td></tr></table></figure></p>
<h4 id="原形不定式的特殊结构"><a href="#原形不定式的特殊结构" class="headerlink" title="原形不定式的特殊结构"></a>原形不定式的特殊结构</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#do nothing but + 原形不定式</span><br><span class="line">He did nothing but eat all day.</span><br><span class="line"></span><br><span class="line">#choose(expect/want/disire) nothing but + to + 原形动词</span><br><span class="line">#He wanted to sleep</span><br><span class="line">He wanted nothing but to sleep.</span><br><span class="line"></span><br><span class="line">#be interested in nothing but+动名词/名词</span><br><span class="line">He is interested in nothing but singing.</span><br><span class="line"></span><br><span class="line">#enjoy nothing but+动名词/名词</span><br><span class="line">I enjoy nothing but dancing.</span><br><span class="line"></span><br><span class="line">#cannot but+原形不定式</span><br><span class="line">When I heard the story, I couldn&apos;t but laugh.</span><br><span class="line">=When I heard the story, I couldn&apos;t help laughing.</span><br><span class="line">When I heard the story, I couldn&apos;t help but laugh.</span><br></pre></td></tr></table></figure>
<h3 id="分词"><a href="#分词" class="headerlink" title="分词"></a>分词</h3><p>分词包括现在分词与过去分词：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#进行： be+现在分词</span><br><span class="line">He is doing the work.</span><br><span class="line"></span><br><span class="line">#完成：have+过去分词</span><br><span class="line">He has done the work.</span><br><span class="line"></span><br><span class="line">#被动：be+过去分词</span><br><span class="line">The job was done.</span><br></pre></td></tr></table></figure>
<h4 id="分词作形容词"><a href="#分词作形容词" class="headerlink" title="分词作形容词"></a>分词作形容词</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#表主动/被动的概念</span><br><span class="line">令人...的：现在分词</span><br><span class="line">感到...的：过去分词</span><br><span class="line">受到...的：过去分词</span><br><span class="line"></span><br><span class="line">#表进行/完成的概念</span><br><span class="line">正在...的：现在分词</span><br><span class="line">即将...的：现在分词</span><br><span class="line">已经...的：过去分词</span><br><span class="line"></span><br><span class="line">#现在分词作形容词：令人...的</span><br><span class="line">The student raised a confusing question.</span><br><span class="line"></span><br><span class="line">#现在分词作形容词：即将...的</span><br><span class="line">The retiring teacher walked into the classroom.</span><br><span class="line"></span><br><span class="line">#过去分词作形容词：已经...的</span><br><span class="line">The retired teacher walked into the classroom.</span><br><span class="line"></span><br><span class="line">#过去分词作形容词：置于be动词后作表语：感到...的</span><br><span class="line">The teacher was confused.</span><br><span class="line"></span><br><span class="line">#过去分词作形容词：受到...的: </span><br><span class="line">#受伤的士兵被急忙送到医院</span><br><span class="line">The wounded soldier was rushed to hospital.</span><br><span class="line"></span><br><span class="line">He is gone.</span><br><span class="line">=He has gone.</span><br><span class="line"></span><br><span class="line">We&apos;re closed</span><br><span class="line">=We&apos;ve closed.</span><br><span class="line"></span><br><span class="line">He is retired.</span><br><span class="line">=He has retired.</span><br><span class="line"></span><br><span class="line">We are finished with the work.</span><br><span class="line">=We have finished the work.</span><br><span class="line"></span><br><span class="line">We are sold out of this book.</span><br><span class="line">=We have sold out of this book.</span><br></pre></td></tr></table></figure>
<h4 id="分词作表语"><a href="#分词作表语" class="headerlink" title="分词作表语"></a>分词作表语</h4><p>a. be动词(或remain/become/appear/seem等系动词)后的表语：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">He is interested in it.</span><br><span class="line">The bady is tiring.</span><br><span class="line">He seems tired.</span><br></pre></td></tr></table></figure></p>
<p>b. 及物动词后的宾语补语：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">I found him killed.</span><br><span class="line">They found him tired.</span><br></pre></td></tr></table></figure></p>
<p>动词若为及物动词，有两种形态：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#现在分词+宾语</span><br><span class="line">I found him killing cockroaches.</span><br><span class="line">#过去分词</span><br><span class="line">I found the cockroaches killed.</span><br><span class="line">I found him killed.</span><br></pre></td></tr></table></figure></p>
<p>动词若为不及物动词作宾语补语时，一律变成现在分词：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">I found him trembling.</span><br><span class="line">I kept John waiting.</span><br></pre></td></tr></table></figure></p>
<p>c. with复合结构中的宾语补语：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">He talked to me with his legs shaking.</span><br><span class="line">He stood with his arms folded.</span><br><span class="line"></span><br><span class="line">He talked to me with a pipe in his mouth.</span><br><span class="line">=He talked to me pipe in mouth.</span><br></pre></td></tr></table></figure></p>
<h4 id="分词作名词"><a href="#分词作名词" class="headerlink" title="分词作名词"></a>分词作名词</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">The young should learn to cherish life.</span><br><span class="line">=Young people should learn to cherish life.</span><br><span class="line"></span><br><span class="line">The wounded were rushed to the hospital.</span><br><span class="line">=Wounded people were rushed to the hospital.</span><br></pre></td></tr></table></figure>
<h4 id="分词作副词"><a href="#分词作副词" class="headerlink" title="分词作副词"></a>分词作副词</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">It&apos;s freezing cold today.</span><br><span class="line">The tea is boiling hot.</span><br><span class="line"></span><br><span class="line">An estimated 54 people were killed in the air crash.</span><br><span class="line">=It&apos;s estimated that 54...</span><br><span class="line"></span><br><span class="line">A great many students are more and more interested in learning English.</span><br><span class="line"></span><br><span class="line">He is dead(completely) wrong.</span><br><span class="line">It&apos;s awful(awfully/very) hot day.</span><br></pre></td></tr></table></figure>
<h4 id="分词结构一动词变化"><a href="#分词结构一动词变化" class="headerlink" title="分词结构一动词变化"></a>分词结构一动词变化</h4><p>a. 若两个动词无连词相连时，动作同时发后，第二个动词变成现在分词, 若为be动词，变成being后省略：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">He came home cried.(x)</span><br><span class="line">He came home cring.</span><br><span class="line"></span><br><span class="line">He sat in the corner reading a newspaper.</span><br><span class="line"></span><br><span class="line">He came home was tired.(x)</span><br><span class="line">He came home tired.</span><br></pre></td></tr></table></figure>
<p>b. 若两个动词无连词相连时，动作有先后顺序，第二个动词变成to+原形动词, 若为be动词，变成being后省略：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">He came here saw me.(x)</span><br><span class="line">He came here to see me.</span><br><span class="line"></span><br><span class="line">He stood up to smoke a cigarette.</span><br></pre></td></tr></table></figure>
<p>c. 若两个动词有逗号相隔，而无连接时，不必考虑动作的先后顺序，第二个动词一定变成现在分词：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">He left home at six in the moring, arrived here about four in the afternoon.(x)</span><br><span class="line">He left home at six in the moring, arriving here about four in the afternoon.</span><br><span class="line"></span><br><span class="line">He ran away quickly,looked as if something terrible had happened.</span><br><span class="line">He ran away quickly,looking as if something terrible had happened.</span><br></pre></td></tr></table></figure>
<h4 id="分词结构一单句化简法"><a href="#分词结构一单句化简法" class="headerlink" title="分词结构一单句化简法"></a>分词结构一单句化简法</h4><p>两句在一起，若无连词相连时，往往第一个句子要化简，变成分词短语：</p>
<p>a. 两句主语相同时，被简化的主语要删除，若主语主同时则要保留<br>b. 之后的动词要变成现在分词<br>c. 若该动词为be动词，变成现在分词being后，可以省略，但亦可不省略以强调因为的意思。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">He has nothing to do, he feels bored.(x)</span><br><span class="line">having nothing to do, he feels bored.</span><br><span class="line"></span><br><span class="line">He was sick of studying, he ran away from here.(x)</span><br><span class="line">Sick of studying, he ran away from here.</span><br><span class="line"></span><br><span class="line">The sun set, the cowboys rode back to the ranch.(x)</span><br><span class="line">The sun setting, the cowboys rode back to the ranch.</span><br><span class="line"></span><br><span class="line">He was not satisfied with the result, he decided to try again.(x)</span><br><span class="line">Not satisfied with the result, he decided to try again.</span><br><span class="line"></span><br><span class="line">He didn&apos;t intend to see her, he left early.(x)</span><br><span class="line">Not intending to see her, he left early.</span><br><span class="line"></span><br><span class="line">He had done the work, he felt happy.(x)</span><br><span class="line">Having done the work, he left happy.</span><br><span class="line"></span><br><span class="line">I have not seen her for ages, I miss her.(x)</span><br><span class="line">Not having seen her for ages, I miss her.</span><br><span class="line"></span><br><span class="line">#也可以消灭第二个句子，变成分词结构</span><br><span class="line">He was reading a book, his wife knitting(编织) beside him.</span><br><span class="line">=He was reading a book, and his wife was knitting beside him.</span><br><span class="line">We will go picnicking tomorrow, weather permitting.</span><br><span class="line">=We will go picnicking torrow if weather permits.</span><br></pre></td></tr></table></figure>
<h4 id="分词短语一定语从句化简法"><a href="#分词短语一定语从句化简法" class="headerlink" title="分词短语一定语从句化简法"></a>分词短语一定语从句化简法</h4><p>P184</p>
<p>a. 删除关系词<br>b. 其后动词变成现在分词<br>c. 若be动词变成being省略<br>d. 非限定修饰的定语从句(关系代词前有逗号的)，通常不得化简为分词短语. 如果为关系代词+be+名词时，仍可化简</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">The man who is talking to Mary over there is my father.</span><br><span class="line">=The man talking to Mary over there is my father.</span><br><span class="line"></span><br><span class="line">Who is the body that is locked behind the door?</span><br><span class="line">=Who is the body locked behind the door?</span><br><span class="line"></span><br><span class="line">I like Tom, who is talking to Mary.(ok)</span><br><span class="line">=I like Tom, talking to Mary.(x)</span><br><span class="line"></span><br><span class="line">John, who is a good friend of mine, studies hard.</span><br><span class="line">=John, a good friend of mine, studies hard.</span><br></pre></td></tr></table></figure>
<h4 id="分词结构一状语从句化简法"><a href="#分词结构一状语从句化简法" class="headerlink" title="分词结构一状语从句化简法"></a>分词结构一状语从句化简法</h4><p>once/when/while/if/unless/though等所引导的状语从句中，若主语与主句中的主语相同时，亦可化简为分词结构</p>
<p>once/if/unless只限：主语+be+分词/形容词</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">If I am free, I will go with you.</span><br><span class="line">=If free, I will go with you.</span><br><span class="line"></span><br><span class="line">In those days, when he didn&apos;t know how to proceed in an emergency, he would consult his father.</span><br><span class="line">=In those days, when not knowing to prceed in an emergency, he would consult his father.</span><br><span class="line"></span><br><span class="line">He will do it if he is properly encouraged.</span><br><span class="line">=He will do it if properly encouraged.</span><br><span class="line"></span><br><span class="line">#除非另有指示,你应照我的话去做</span><br><span class="line">Unless you are otherwise instructed, you should do as I said.</span><br><span class="line">=Unless otherwise instructed, you should do as I said.</span><br></pre></td></tr></table></figure>
<h4 id="身体组织的名词可变成过去分词当形容词用"><a href="#身体组织的名词可变成过去分词当形容词用" class="headerlink" title="身体组织的名词可变成过去分词当形容词用"></a>身体组织的名词可变成过去分词当形容词用</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">The girl has big eyes.</span><br><span class="line">I love the big-eyed girl.</span><br><span class="line"></span><br><span class="line">She has red hair.</span><br><span class="line">Do you see the red-haired girl there?</span><br></pre></td></tr></table></figure>
<h4 id="少数现在分词当介词"><a href="#少数现在分词当介词" class="headerlink" title="少数现在分词当介词"></a>少数现在分词当介词</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">including(包括)</span><br><span class="line">excluding(除外)</span><br><span class="line">considering(考虑)</span><br><span class="line">regaring(关于)</span><br><span class="line">concerning(关于)</span><br><span class="line"></span><br><span class="line">Everyone likes the movie, including John.</span><br><span class="line">=Everyone likes the movie, John excluded.</span><br><span class="line"></span><br><span class="line">Considering his performance, he can be a good teacher.</span><br><span class="line">=His performance considered, he can be a good teacher.</span><br><span class="line"></span><br><span class="line">He wrote an article regarding(concerning/about/on) environmental pollution.</span><br></pre></td></tr></table></figure>
<h4 id="独立分词短语"><a href="#独立分词短语" class="headerlink" title="独立分词短语"></a>独立分词短语</h4><p>P189</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Generally speaking... 一般而言</span><br><span class="line">Strictly speaking... 严格说来</span><br><span class="line">Frankly speaking... 老实说</span><br><span class="line">Judging from his appearance... 从他的外表看来</span><br><span class="line">Talking of novels... 谈到小说</span><br><span class="line">According to John... 根据John的说法</span><br><span class="line">Seeing that... 既然...</span><br></pre></td></tr></table></figure>
<h3 id="动名词"><a href="#动名词" class="headerlink" title="动名词"></a>动名词</h3><p>可在句中作主语、宾语及表语。</p>
<h4 id="作主语"><a href="#作主语" class="headerlink" title="作主语"></a>作主语</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Working with him is fun.</span><br><span class="line"></span><br><span class="line">Not knowing what to do was an embarrassment for him.</span><br></pre></td></tr></table></figure>
<h4 id="be动词后的表语"><a href="#be动词后的表语" class="headerlink" title="be动词后的表语"></a>be动词后的表语</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Seeing is believing.</span><br><span class="line"></span><br><span class="line">#动名词</span><br><span class="line">His hobby is collecting stamps.</span><br><span class="line">#不定式</span><br><span class="line">My hope(goal/desire/wish/intention/plan/purpose) is to fullfill the mission.</span><br><span class="line"></span><br><span class="line">She is dancing.</span><br></pre></td></tr></table></figure>
<h4 id="动词的宾语"><a href="#动词的宾语" class="headerlink" title="动词的宾语"></a>动词的宾语</h4><p>P195</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">I remember seeing him.</span><br><span class="line">He considered traveling abroad next year.</span><br><span class="line">He recommended doing it soon.</span><br><span class="line"></span><br><span class="line">#allow/permit/forbid(禁止)</span><br><span class="line">He allowed(permitted) me to smoke.</span><br><span class="line">He allowed(permitted) smoking.</span><br><span class="line"></span><br><span class="line">#禁止</span><br><span class="line">He forbade me to smoke.</span><br><span class="line">He forbade smoking.</span><br><span class="line"></span><br><span class="line">#remember/forget/regret</span><br><span class="line">remember(记得曾) + 动名词</span><br><span class="line">forget(忘记曾)</span><br><span class="line">regret(后悔曾)</span><br><span class="line"></span><br><span class="line">I remember seeing her before.</span><br><span class="line">I remember having seen her before.</span><br><span class="line">#我后悔做了此事</span><br><span class="line">I regret doing it.</span><br><span class="line">I regret having done it.</span><br><span class="line"></span><br><span class="line">remember(记得要) + to V</span><br><span class="line">forget(忘记要)</span><br><span class="line">regret(遗憾要)</span><br><span class="line"></span><br><span class="line">I remember to see him tomorrow.</span><br><span class="line">I forgot to mail this letter.</span><br><span class="line">#我很遗憾...</span><br><span class="line">I regret to tell you the bad news.</span><br><span class="line">=I&apos;m sorry to tell you the bad news.</span><br></pre></td></tr></table></figure>
<p>下面动词用不定式或动名词作宾语，意思不变：</p>
<p>like/love/hate/continued/gegan/started, dislike只能用动名词。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">I like to do it.</span><br><span class="line">I like doing it.</span><br></pre></td></tr></table></figure>
<h4 id="介词的宾语"><a href="#介词的宾语" class="headerlink" title="介词的宾语"></a>介词的宾语</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">He is fond of taking a walk.</span><br><span class="line">His illness prevented us from starting our own business.</span><br><span class="line">None would have dreamed of there being such a place.</span><br><span class="line">The book is worth reading.</span><br></pre></td></tr></table></figure>
<p>worth: prep. 值得</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#is worth+名词或动名词(recommended)</span><br><span class="line">The issue is worth paying attention to.</span><br><span class="line">The car is worth a fortune.</span><br></pre></td></tr></table></figure>
<p>worthy: adj. 值得的(与of连用)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">The issue is worthly of everyone&apos;s attention.</span><br></pre></td></tr></table></figure>
<p>worthwhile: adj. 值得的(置于名词前，亦可置于it it之后)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">That&apos;s a worthwhile book to read.</span><br><span class="line">It is worthwhile to read that book</span><br><span class="line">It pays to read that book.</span><br></pre></td></tr></table></figure>
<h4 id="所有格与动名词的关系"><a href="#所有格与动名词的关系" class="headerlink" title="所有格与动名词的关系"></a>所有格与动名词的关系</h4><p>P199</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#that引导的名词性从句</span><br><span class="line">That he teches well is something that pleases me.</span><br><span class="line">=His teching well is something that pleases me.</span><br><span class="line"></span><br><span class="line">That John refused to do his homework made his father angry.</span><br><span class="line">John&apos;s refusing to do his homework made his father angry.</span><br><span class="line"></span><br><span class="line">That he didn&apos;t finish the work on time disappointed me.</span><br><span class="line">His not finishing the work on time disappointed me.</span><br><span class="line"></span><br><span class="line">That they had helped John with the work won our great admiration.</span><br><span class="line">There having helping John with the work won our great admiration.</span><br></pre></td></tr></table></figure>
<p>like/diske/enjoy/mind后不可直接接that从句</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">I dont like his smoking here.</span><br><span class="line">I dont enjoy John&apos;s joining us.</span><br><span class="line"></span><br><span class="line">#如果我开窗你介意吗？</span><br><span class="line">Would you mind that I open the windows?(x)</span><br><span class="line">Would you mind my opening the windows?</span><br><span class="line">=Would you mind if I opened the windows.</span><br><span class="line">#请你开窗子，你介意吗？</span><br><span class="line">Would you mind opening the windows.</span><br></pre></td></tr></table></figure>
<h4 id="常用的动名词惯用语"><a href="#常用的动名词惯用语" class="headerlink" title="常用的动名词惯用语"></a>常用的动名词惯用语</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#There is no V+ing: 不可能</span><br><span class="line">=It is impossible to V</span><br><span class="line">There is no reasoning with such a stubborn man.</span><br><span class="line">It is impossible to reason with such a stubborn man.</span><br><span class="line"></span><br><span class="line">#It is no use V+ing: ...是无用的</span><br><span class="line">=It is of no use to V</span><br><span class="line">It is no use trying to escape.</span><br><span class="line">It is of no use to try to escape.</span><br><span class="line"></span><br><span class="line">#cannot help(resist/stop) + V一ing: 忍不住...</span><br><span class="line">=cannot but V</span><br><span class="line">=cannot help but V</span><br><span class="line">He couldn&apos;t help crying when he saw her.</span><br><span class="line">He couldn&apos;t but cry when he saw her.</span><br><span class="line"></span><br><span class="line">#on V一ing: 一...就...</span><br><span class="line">=As soon as/once/The moment/The instant</span><br><span class="line">On(Upon) hearing it, he cried.</span><br><span class="line">As soon as he heard it, he cried.</span><br></pre></td></tr></table></figure>
<h2 id="助动词及易用错的动词"><a href="#助动词及易用错的动词" class="headerlink" title="助动词及易用错的动词"></a>助动词及易用错的动词</h2><h3 id="助动词"><a href="#助动词" class="headerlink" title="助动词"></a>助动词</h3><h4 id="shall-will"><a href="#shall-will" class="headerlink" title="shall/will"></a>shall/will</h4><p>征求对方意见时：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Shall I open the door?</span><br><span class="line">=Would you like me to open the door?</span><br></pre></td></tr></table></figure></p>
<p>请求对方合作时：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Shall we go for a walk?</span><br><span class="line">=Let&apos;s go for a walk, shall we?</span><br></pre></td></tr></table></figure></p>
<p>命令对方时：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">You shall obey the law.</span><br><span class="line">=You must obey the law.</span><br></pre></td></tr></table></figure></p>
<h4 id="should"><a href="#should" class="headerlink" title="should"></a>should</h4><p>主要功能就是表示一种义务，后面接原型动词：应当，=ought to<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">We should be kind to others.</span><br></pre></td></tr></table></figure></p>
<p>但也会有以下的其他意思。</p>
<h5 id="会"><a href="#会" class="headerlink" title="会"></a>会</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">It is natural(自然的)       that...should   ....会...</span><br><span class="line">      proper(适当的/合理的)</span><br><span class="line">      right(正当的)</span><br><span class="line">      advisable(恰当的)</span><br><span class="line">      desirable(较好的)</span><br><span class="line">      no wonder(无疑的)</span><br><span class="line"></span><br><span class="line">#他会生气是很自然的事</span><br><span class="line">It is natural that he should get angry.</span><br><span class="line"></span><br><span class="line">#努力的人会成功，这个是合理的</span><br><span class="line">It is proper that one who works hard should be successful.</span><br><span class="line"></span><br><span class="line">It is no wonder that such a naughty boy should be punished.</span><br><span class="line">=No wonder such a naughty boy should be punished.</span><br></pre></td></tr></table></figure>
<h5 id="应当"><a href="#应当" class="headerlink" title="应当"></a>应当</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">It is necessary that...should...  ...应当...是有必要的</span><br><span class="line">      imerative</span><br><span class="line">      essential</span><br><span class="line">      important</span><br><span class="line">      urgent</span><br><span class="line"></span><br><span class="line">#should可以省略</span><br><span class="line">It is necessary that he (should) finish the work before leaving.</span><br><span class="line"></span><br><span class="line">It is important that he finish the job before leaving.</span><br></pre></td></tr></table></figure>
<h5 id="居然"><a href="#居然" class="headerlink" title="居然"></a>居然</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">It is surprising that...should(居然)...  令人惊异的是...居然</span><br><span class="line">      amazing</span><br><span class="line">it is surprising that he should be so kind.</span><br><span class="line"></span><br><span class="line">It is a pity that...should(居然)...  令人遗憾的是...居然...</span><br><span class="line">      a regret</span><br><span class="line">      regrettable</span><br><span class="line">It is a pity that he should be so rude.</span><br></pre></td></tr></table></figure>
<h5 id="意志动词"><a href="#意志动词" class="headerlink" title="意志动词"></a>意志动词</h5><p>表建议(propose/recommend/suggest)、要求(ask/demand/desire/require/insist/request)、命令(order/command)、规定(rule/regulate)等后有that从句时，that从句中亦使用should，should往往省略:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#他建议我们立刻离去</span><br><span class="line">He suggested that we(should) leave at once.</span><br><span class="line">#他们要求他安静</span><br><span class="line">They demanded that he(should) be quiet.</span><br></pre></td></tr></table></figure></p>
<h5 id="以免"><a href="#以免" class="headerlink" title="以免"></a>以免</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">He came early lest he(should) be late.</span><br><span class="line">=He came early for fear that he might be late.(might不可省略)</span><br></pre></td></tr></table></figure>
<h5 id="万一"><a href="#万一" class="headerlink" title="万一"></a>万一</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">If you should be late again, you will spoil the plan.</span><br></pre></td></tr></table></figure>
<h5 id="should-have-过去分词"><a href="#should-have-过去分词" class="headerlink" title="should have+过去分词"></a>should have+过去分词</h5><p>表示与过去事实相反的虚拟语气：早应…/应该早点…<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#你当时要是没救我，我就死了</span><br><span class="line">If you had not helped me, I should have died.</span><br><span class="line"></span><br><span class="line">#你应该早点做好的</span><br><span class="line">You should have done it earlier.</span><br><span class="line"></span><br><span class="line">#这么好的景色，你当时真该看看的</span><br><span class="line">It was such a fine sight. You should have seen it.</span><br></pre></td></tr></table></figure></p>
<p>表示”居然已经”:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#令人惊讶的是他居然已通过了考试</span><br><span class="line">It is surprising that he should have passed the examination.</span><br><span class="line">#真遗憾他竟然做了这么愚蠢的事</span><br><span class="line">It is a pity that he should have done such a stupid thing.</span><br></pre></td></tr></table></figure></p>
<h4 id="would"><a href="#would" class="headerlink" title="would"></a>would</h4><p>would是will的过去式，用以表示过去将来时<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">He said, &quot;I will try again.&quot;</span><br><span class="line">He said that he would try again.</span><br><span class="line">Did you know when he would come?</span><br></pre></td></tr></table></figure></p>
<h5 id="would虚拟语气"><a href="#would虚拟语气" class="headerlink" title="would虚拟语气"></a>would虚拟语气</h5><p>would+原形动词： (如果…)就会…<br>would have+过去分词</p>
<p>与现在事实相反：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#如果我现在有钱，我会买部车(但我现在没有钱)</span><br><span class="line">If I had money now, I would buy a car.</span><br></pre></td></tr></table></figure></p>
<p>与过去事实相反：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#当时我要是有钱，早就买车了</span><br><span class="line">If I had had money then, I would have bought a car.</span><br></pre></td></tr></table></figure></p>
<h5 id="would-rather-原形动词"><a href="#would-rather-原形动词" class="headerlink" title="would rather+原形动词"></a>would rather+原形动词</h5><p>宁愿…<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#我宁愿走也不要留在这儿</span><br><span class="line">I would rather go than stay here.</span><br><span class="line">=I would sonner go than stay here.</span><br><span class="line">=I would as soon go as stay here.</span><br></pre></td></tr></table></figure></p>
<h5 id="I-would-rather-that"><a href="#I-would-rather-that" class="headerlink" title="I would rather that"></a>I would rather that</h5><p>我多么希望…. = I wish + that从句，属于虚拟语气，若与现在事实相反，that从句用一般过去式，若与过去事实相反，则用过去完成式：</p>
<p>与现在事实相反：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#我多么希望他现在在这里</span><br><span class="line">I would rather (that) he were here.</span><br><span class="line">=I wish (that) he were here.</span><br></pre></td></tr></table></figure></p>
<p>与过去事实相反：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#我多么希望他昨天就在这里</span><br><span class="line">I would rather he had been here yesterday.(But he wasn&apos;t here.)</span><br></pre></td></tr></table></figure></p>
<h5 id="would-you-mind"><a href="#would-you-mind" class="headerlink" title="would you mind"></a>would you mind</h5><p>加Ving或if从句： 您介不介意…<br>=Do you mind…</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Would you mind doing it for me?</span><br><span class="line">               if you did it for me?</span><br><span class="line">=Do you mind doing it for me?</span><br><span class="line">             if you do it for me?</span><br></pre></td></tr></table></figure>
<p>would you mind会比较客气。would you mind从句中用过去式，do you mind从句中用现在式。</p>
<h4 id="can-could"><a href="#can-could" class="headerlink" title="can/could"></a>can/could</h4><p>1.表”能力”：be able to，译成：能够<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">He can cope with the problem.</span><br><span class="line">=He is able to cope with the problem.</span><br></pre></td></tr></table></figure></p>
<p>2.表可能性，译成：有可能<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#他要是这么说就可能错了</span><br><span class="line">He can be wrong to say so.</span><br><span class="line">                if he says so.</span><br></pre></td></tr></table></figure></p>
<p>3.表许可，=may，译成：可以<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#你可以现在回家了</span><br><span class="line">You can go home now.</span><br><span class="line">#你不可以在这儿抽烟</span><br><span class="line">You can&apos;t smoke here.</span><br></pre></td></tr></table></figure></p>
<p>4.在疑问句或否定句中，表可能性，译成：有可能或不可能<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#这可能是真的吗？不，这不可能是真的</span><br><span class="line">Can it be true? No, it can&apos;t be true.</span><br></pre></td></tr></table></figure></p>
<p>5.表对过去事实的否定推理<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">can&apos;t have+去过分词    不可能曾...</span><br><span class="line">#他这么老实不可能昨天会偷你的钱</span><br><span class="line">He is so honest that he can&apos;t have stolen your money yesterday.</span><br><span class="line"></span><br><span class="line">#can仅用以表示对过去事物的否定推论，无法做肯定推论。无下列用法</span><br><span class="line">he can have stolen your money.(x)</span><br></pre></td></tr></table></figure></p>
<p>6.对过去事实的肯定推论，有两种句型：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">must have+过去分词    一定曾经...</span><br><span class="line">#他看过来紧张兮兮，一定是偷了你的钱</span><br><span class="line">He looks nervous; he must have stolen your money.</span><br><span class="line"></span><br><span class="line">may have+过去分词    可能曾经...</span><br><span class="line">#他看过来紧张兮兮，很可能偷了你的钱</span><br><span class="line">He looks nervous; he may have stolen your money.</span><br><span class="line"></span><br><span class="line">Can+S+have+过去分词    有可能...吗？</span><br><span class="line">#他有可能偷了你的钱吗？</span><br><span class="line">Can he have stolen your money?</span><br></pre></td></tr></table></figure></p>
<p>7.would/could用在问句中表客气<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Could(would) you please do it for me?</span><br></pre></td></tr></table></figure></p>
<p>8.could=was/were able to</p>
<p>9.can的惯用语<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#我只能这么做</span><br><span class="line">I can but do so.</span><br><span class="line">=I can only do so.</span><br><span class="line">#我忍不住大笑</span><br><span class="line">I cannot but laugh.</span><br><span class="line">=I cannot help bu laugh.</span><br><span class="line">=I cannot help laughing.</span><br><span class="line"></span><br><span class="line">#cannot be too...: 再...也不会过</span><br><span class="line">#我们在择友时再小心也不为过</span><br><span class="line">We cannot be too careful in choosing friends.</span><br><span class="line"></span><br><span class="line">#我一点儿也不在乎(我不能低于比现在不在乎的程度了)</span><br><span class="line">I couldn&apos;t care less.</span><br><span class="line"></span><br><span class="line">#我同意极了(我不能比现在更加地同意了)</span><br><span class="line">I couldn&apos;t agree more.</span><br></pre></td></tr></table></figure></p>
<h4 id="may-might"><a href="#may-might" class="headerlink" title="may/might"></a>may/might</h4><p>1.表许可，译成：可以<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">You may take whatever you like.</span><br><span class="line">May I go home?</span><br><span class="line">#might与would/could一样，在问句中有客气的语气</span><br><span class="line">Might I make a suggestion?</span><br></pre></td></tr></table></figure></p>
<p>2.表推测，译成可能，=can<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">It may be true.</span><br><span class="line">He may come, or he may not(come).</span><br><span class="line">=Perhaps he will come;perhaps he will not(come).</span><br></pre></td></tr></table></figure></p>
<p>3.may not有两种意思：</p>
<p>a.可能不会<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">It&apos;s getting late; he may not come.</span><br></pre></td></tr></table></figure></p>
<p>b.不可以=must not<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">You may not cheat during exams.</span><br><span class="line">    must not</span><br></pre></td></tr></table></figure></p>
<p>4.might表过去的状况<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">He said, &quot;You may go&quot;</span><br><span class="line">He said that I might go.</span><br></pre></td></tr></table></figure></p>
<p>5.might+原形动词        也许会…<br>  might have+过去分词   当时也许会…</p>
<p>a.与现在事实相反<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">If he tried hard, he might succeed.(But he doesn&apos;t try hard.)</span><br></pre></td></tr></table></figure></p>
<p>b.与过去事实相反<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">If he had tried hard, he might have succeeded.(But he didn&apos;t try hard.)</span><br></pre></td></tr></table></figure></p>
<p>6.may的管用语</p>
<p>a.may well+原形动词    大可/足可以…<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#genius:天才</span><br><span class="line">He knows so many things that he may well be called a genius.</span><br></pre></td></tr></table></figure></p>
<p>b.may as well+原形动词    不妨…(语气缓和)<br>  had better+原形动词     最好…(语气较强)<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#你不妨留在家中</span><br><span class="line">You may as well stay home.</span><br><span class="line">#你最好留在家中</span><br><span class="line">You had better stay home.</span><br></pre></td></tr></table></figure></p>
<p>c.may as well+原形动词+as+原形动词    与其…倒不好…<br>=had better+原型动词+than+原形动词<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#你倒不如留在家里，与其和他们出去。</span><br><span class="line">You may as well stay home as go out with them.</span><br></pre></td></tr></table></figure></p>
<p>may as well…as…表较大的可能性，might as well…as…表较小的可能性<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">You might as well die as make friends with Mary.</span><br></pre></td></tr></table></figure></p>
<h4 id="must"><a href="#must" class="headerlink" title="must"></a>must</h4><p>1.must接原形动词</p>
<p>2.表义务，表“必须”<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">You must finish the work before leaving.</span><br></pre></td></tr></table></figure></p>
<p>3.must表一种义务上强制的必须，have to，有勉强的意味，表“有必要”<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">You must love your country.</span><br></pre></td></tr></table></figure></p>
<p>must只用于表示现在或将来，而have to则可用于表过去、现在及将来的状况<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#现在</span><br><span class="line">You must come now.</span><br><span class="line">#将来</span><br><span class="line">You must come tomorrow.</span><br><span class="line">#过去</span><br><span class="line">He will have to come tomorrow.</span><br></pre></td></tr></table></figure></p>
<p>否定式：</p>
<p>1) must not=may not    不可以<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#你绝不可以做这事</span><br><span class="line">You must not do it.</span><br></pre></td></tr></table></figure></p>
<p>2) don’t have to=need not    不必<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#你不必做这事</span><br><span class="line">You don&apos;t have to do it.</span><br></pre></td></tr></table></figure></p>
<p>口语中，have to被have got to或gotta取代<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">I have to tell you the truth.</span><br><span class="line">I&apos;ve got to tell you the truth.(I&apos;ve可以直接读成I)</span><br><span class="line">I gotta tell you the truth.</span><br><span class="line">但:</span><br><span class="line">He has got to tell you the truth.</span><br><span class="line">=He&apos;s totta tell you the truth.(s不能去掉)</span><br></pre></td></tr></table></figure></p>
<p>4.must对现在状况或过去状况的推论</p>
<p>a.对现在状况的推论：must+原形动词    一定…<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#这一定是真的</span><br><span class="line">It must be true.</span><br><span class="line">但否定时，不能用It must not be true.(x)，还用：</span><br><span class="line">It can&apos;t be true.(它不可能是真的)</span><br></pre></td></tr></table></figure></p>
<p>b.对过去状况的推论：must+have+过去分词    一定曾经…<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">It must have rained last night.</span><br></pre></td></tr></table></figure></p>
<h4 id="ought-to"><a href="#ought-to" class="headerlink" title="ought to"></a>ought to</h4><p>与should使用相同</p>
<h4 id="need"><a href="#need" class="headerlink" title="need"></a>need</h4><p>1.需要<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">He needs to go.</span><br><span class="line">The car needs to be cleaned.</span><br><span class="line">The car needs cleaning.</span><br></pre></td></tr></table></figure></p>
<p>2.否定：need not+原形动词    不必<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#need not为固定，need第3人称不用加s</span><br><span class="line">He need not go.</span><br><span class="line">=He doesn&apos;t need to go.</span><br></pre></td></tr></table></figure></p>
<h4 id="dare"><a href="#dare" class="headerlink" title="dare"></a>dare</h4><p>1.助动词<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dare not+原形动词    不敢...</span><br><span class="line">dare one+原形动词    某人敢...吗？</span><br><span class="line"></span><br><span class="line">#他不敢去</span><br><span class="line">He dare not go.</span><br><span class="line">#他敢去吗?</span><br><span class="line">Dare he go?</span><br></pre></td></tr></table></figure></p>
<p>2.How dare+一般陈述句？    …怎敢…?<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">How dare you say such a thing to me?</span><br></pre></td></tr></table></figure></p>
<p>3.在whether从句中，dare可作助动词<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#我怀疑他敢不敢做这事</span><br><span class="line">I wonder whether he dare do it.</span><br></pre></td></tr></table></figure></p>
<p>4.在肯定中，dare为一般动词<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#他敢去</span><br><span class="line">He dares to go.</span><br><span class="line">#他当时敢去</span><br><span class="line">He dared to go.</span><br></pre></td></tr></table></figure></p>
<p>5.dare not+原形动词    不敢…<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">=do not dare(to)+原形动词</span><br><span class="line">#他不敢接电话</span><br><span class="line">He dare not answer the phone.</span><br><span class="line">=He doesn&apos;t dare(to) answer the phone.</span><br><span class="line"></span><br><span class="line">#我从来不敢与他说话</span><br><span class="line">I have never dared(to) speak to him.</span><br></pre></td></tr></table></figure></p>
<p>6.dare可作及物动词，表“向某人挑战”<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dare sb to+原形动词</span><br><span class="line">=challenge sb to+原形动词</span><br><span class="line"></span><br><span class="line">#他向我挑战跳过这条小溪</span><br><span class="line">He dared me to jump the stream.</span><br></pre></td></tr></table></figure></p>
<p>7.I daresay+that从句    我敢说…<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#我敢说他又会迟到</span><br><span class="line">I daresay he will be late again.</span><br></pre></td></tr></table></figure></p>
<h4 id="used-to"><a href="#used-to" class="headerlink" title="used to"></a>used to</h4><p>1.used to+原形动词    过去曾经…<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#他以前住过这儿</span><br><span class="line">He used to live here.</span><br><span class="line"></span><br><span class="line">#这座园子以前有个池塘</span><br><span class="line">There used to be a pond in this garden.</span><br><span class="line"></span><br><span class="line">He used to work hard.</span><br><span class="line">Did he use to work hard?</span><br></pre></td></tr></table></figure></p>
<p>2.人+be used to+名词或动名词=accustomed    某人习惯于…<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">He is used to working alone.</span><br><span class="line"></span><br><span class="line">#他还不习惯都市生活</span><br><span class="line">He hasn&apos;t beed used to city life yet.</span><br><span class="line"></span><br><span class="line">#他习惯大声说话</span><br><span class="line">He is used to speaking alone.</span><br><span class="line">=He is accustomed to speaking aloud.</span><br></pre></td></tr></table></figure></p>
<p>物+be used to+原形动词    被用来…<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#这本书可用来教我们英语写作</span><br><span class="line">The book can be used to teach us English writing.</span><br></pre></td></tr></table></figure></p>
<p>物+be used as+名词    被用作…<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#这把刀被用来当武器</span><br><span class="line">The knife was used as a weapon.</span><br></pre></td></tr></table></figure></p>
<h3 id="易用错的动词"><a href="#易用错的动词" class="headerlink" title="易用错的动词"></a>易用错的动词</h3><p>P233</p>
<h4 id="fly-flow"><a href="#fly-flow" class="headerlink" title="fly/flow"></a>fly/flow</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">fly的变化：fly/flew/flown/flying.</span><br><span class="line">flow的变化：flow/flowed/flowed/flowing.(流)</span><br></pre></td></tr></table></figure>
<h4 id="take-bring"><a href="#take-bring" class="headerlink" title="take/bring"></a>take/bring</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">take  (从此处)拿走</span><br><span class="line">bring (从别处)拿来</span><br><span class="line"></span><br><span class="line">Take the book to the library, please.</span><br><span class="line">Bring them back here.</span><br></pre></td></tr></table></figure>
<h4 id="refuse"><a href="#refuse" class="headerlink" title="refuse"></a>refuse</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">refuse+名词</span><br><span class="line">#他拒绝我的建议</span><br><span class="line">He refused my suggestion.</span><br><span class="line"></span><br><span class="line">refuse to+原形动词</span><br><span class="line">He refused to go with me.</span><br><span class="line"></span><br><span class="line">reject(排斥)+名词或者动名词</span><br><span class="line">He rejected working with Mary because he thought she was too selfish.</span><br><span class="line"></span><br><span class="line">refuse后不能接that从句</span><br><span class="line">#他拒绝承认做错事</span><br><span class="line">He refused toadmit that he had done something wrong.</span><br><span class="line">=He denied that he had done something wrong.</span><br></pre></td></tr></table></figure>
<h4 id="take-cost"><a href="#take-cost" class="headerlink" title="take/cost"></a>take/cost</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">It takes+人+时间+to V</span><br><span class="line">It costs+人+金钱+to V</span><br><span class="line"></span><br><span class="line">It takes(one) about two hours to go from here to Paris.</span><br><span class="line">It cost(me) five dollars to buy that book.</span><br></pre></td></tr></table></figure>
<h4 id="reach-get-to-arrive-in-at"><a href="#reach-get-to-arrive-in-at" class="headerlink" title="reach/get to/arrive in(at)"></a>reach/get to/arrive in(at)</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">I |reached    |Chicago at 12.</span><br><span class="line">  |arrived in |</span><br><span class="line">  |got to     |</span><br></pre></td></tr></table></figure>
<h4 id="prefer"><a href="#prefer" class="headerlink" title="prefer"></a>prefer</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">prefer+名词(或动名词)+to+名词(或动名词): 比较喜欢...胜过...</span><br><span class="line"></span><br><span class="line">I prefer coffee to tea.</span><br><span class="line">I prefer going to the movies to watching TV.</span><br><span class="line"></span><br><span class="line">prefer to+原形动词+|instead of+动名词   |</span><br><span class="line">                  | rather that+原形动词|</span><br><span class="line"> I prefer to go to the movies instead of watching TV.</span><br><span class="line">=I prefer to go to the movies rather than watch TV.</span><br><span class="line">=I prefer going to the movies to watching TV.</span><br></pre></td></tr></table></figure>
<h4 id="mind"><a href="#mind" class="headerlink" title="mind"></a>mind</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mind + if从句</span><br><span class="line">=mind + 动名词</span><br><span class="line"></span><br><span class="line">#你介不介意我把门打开？</span><br><span class="line">Would you mind If I opened the door?</span><br><span class="line">=Would you mind my opening the door?</span><br><span class="line"></span><br><span class="line">#你介不介意去把门打开？</span><br><span class="line">Would you mind if you opened the door?</span><br><span class="line">=Would you mind opening the door?</span><br></pre></td></tr></table></figure>
<h4 id="resemble-sb-sth"><a href="#resemble-sb-sth" class="headerlink" title="resemble sb/sth"></a>resemble sb/sth</h4><p>像…<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#你很像你哥哥</span><br><span class="line"> You resemble your brother.</span><br><span class="line">=You look like your brother.</span><br></pre></td></tr></table></figure></p>
<h4 id="succeed-fail"><a href="#succeed-fail" class="headerlink" title="succeed/fail"></a>succeed/fail</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">succeed in+名词/动名词    在...获得成功/成功地...</span><br><span class="line">#经过多年的努力，John经商成功了</span><br><span class="line">John succeeded in business after years of hard work.</span><br><span class="line">How many of you have succeeded in passing the test.</span><br><span class="line"></span><br><span class="line">succeed+人+as    继承某人担任...的职位</span><br><span class="line">John succeeded his father as president of this company.</span><br><span class="line"></span><br><span class="line">fail: 失败</span><br><span class="line">He failed to pass the test.</span><br><span class="line"></span><br><span class="line">fail: 未通过考试、使某人不及格</span><br><span class="line">He failed the test.</span><br><span class="line"></span><br><span class="line">#老师让三分之一的学生不及格</span><br><span class="line">The teacher failed one一third of his students.</span><br><span class="line">            flunked</span><br><span class="line"></span><br><span class="line">#不要辜负我</span><br><span class="line">You are the only person I trust. Don&apos;t fail me.</span><br></pre></td></tr></table></figure>
<h4 id="设计、企图"><a href="#设计、企图" class="headerlink" title="设计、企图"></a>设计、企图</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">try      + to + 原形动词  设法要...</span><br><span class="line">attempt  + to + 原形动词  企图要...</span><br><span class="line">manager  + to + 原形动词  设法要...</span><br><span class="line">endeavor + to + 原形动词  努力要...</span><br><span class="line"></span><br><span class="line">I&apos;ll try to study harder.</span><br><span class="line">=I&apos;ll attempt to study harder.</span><br><span class="line">=I&apos;ll manager to study harder.</span><br><span class="line"></span><br><span class="line">#我们努力拯救公司免于破产</span><br><span class="line">We&apos;ll endeavor to save our company from going bankrupt.</span><br></pre></td></tr></table></figure>
<h4 id="remember-forget-regret"><a href="#remember-forget-regret" class="headerlink" title="remember/forget/regret"></a>remember/forget/regret</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">remember to V    记得要...</span><br><span class="line">remember +Ving   记得曾...</span><br><span class="line"></span><br><span class="line">forget to V      忘了要...</span><br><span class="line">foret + Ving     忘了曾...</span><br><span class="line"></span><br><span class="line">regret to V      抱歉/遗憾要...</span><br><span class="line">regret + Ving    后悔曾...</span><br></pre></td></tr></table></figure>
<h2 id="时态"><a href="#时态" class="headerlink" title="时态"></a>时态</h2><h3 id="种类"><a href="#种类" class="headerlink" title="种类"></a>种类</h3><h4 id="一般时"><a href="#一般时" class="headerlink" title="一般时"></a>一般时</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 一般现在时</span><br><span class="line">He writes a letter every day.</span><br><span class="line"></span><br><span class="line">2. 一般过去时</span><br><span class="line">He wrote a letter yesterday.</span><br><span class="line"></span><br><span class="line">3. 一般将来时</span><br><span class="line">He will write a letter tomorrow.</span><br></pre></td></tr></table></figure>
<h4 id="完成时"><a href="#完成时" class="headerlink" title="完成时"></a>完成时</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 现在完成时</span><br><span class="line">He has written the letter.</span><br><span class="line"></span><br><span class="line">2. 过去完成时</span><br><span class="line">He had written the letter when I came.</span><br><span class="line"></span><br><span class="line">3. 将来完成时</span><br><span class="line">He will have written the letter before I come.</span><br></pre></td></tr></table></figure>
<h4 id="进行时"><a href="#进行时" class="headerlink" title="进行时"></a>进行时</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 现在进行时</span><br><span class="line">He is writing a letter now</span><br><span class="line"></span><br><span class="line">2. 过去进行时</span><br><span class="line">He was writing a letter when I came.</span><br><span class="line"></span><br><span class="line">3. 将来进行时</span><br><span class="line">He will be writing a letter when I come.</span><br></pre></td></tr></table></figure>
<h4 id="完成进行时"><a href="#完成进行时" class="headerlink" title="完成进行时"></a>完成进行时</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 现在完成进行时</span><br><span class="line">He has been writing a letter for two hours.</span><br><span class="line"></span><br><span class="line">2. 过去完成进行时</span><br><span class="line">When I called, he had been writing a letter for two hours.</span><br></pre></td></tr></table></figure>
<h3 id="使用过去时的时机"><a href="#使用过去时的时机" class="headerlink" title="使用过去时的时机"></a>使用过去时的时机</h3><p>主语+一般过去时动词</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 表过去的动作、习惯、状态：</span><br><span class="line">I saw him yesterday.</span><br><span class="line">He always rose early in the morning.</span><br><span class="line">He was born in 1970</span><br><span class="line"></span><br><span class="line">2. 表过去的经验，也可用现在完成时表示：</span><br><span class="line"> Did you ever see her before?</span><br><span class="line">=Have you ever seen her before?</span><br><span class="line"></span><br><span class="line">3. 句中若有after/until/before等连词引导的从句，由于时间先后很清楚，可用一般过去时代替过去完成时：</span><br><span class="line"> After I had finished the work, I went home.</span><br><span class="line">=After I finished the work, I went home.</span><br><span class="line">#我搬来这里之前曾在日本住过很长一段时间</span><br><span class="line"> Before I moved here, I had lived in Japan for a long time.</span><br><span class="line">=Before I moved here, I lived in Japan for a long time.</span><br></pre></td></tr></table></figure>
<h3 id="使用现在完成时的时机"><a href="#使用现在完成时的时机" class="headerlink" title="使用现在完成时的时机"></a>使用现在完成时的时机</h3><p>主语+have+过去分词(have译成“已经”或“曾经”)：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">a. 用以表示到现在为止完成的动作：</span><br><span class="line">I have just finished my homework.</span><br><span class="line"></span><br><span class="line">b. 用以表示到现在为止的经验：</span><br><span class="line">#我见过他几次</span><br><span class="line">I have met him several times.</span><br><span class="line">#我从未见过像他这样的人</span><br><span class="line">I have never met such a man as he.</span><br><span class="line"></span><br><span class="line">c. 表曾去过的经历用：have been，表已经到了某个地方：have gone</span><br><span class="line">#他已经到香港去了(还没有回来)</span><br><span class="line">He has gone to Hong Kong.</span><br><span class="line">#他曾去过香港</span><br><span class="line">He has been to Hong Kong.</span><br></pre></td></tr></table></figure>
<h3 id="使用过去完成时的时机"><a href="#使用过去完成时的时机" class="headerlink" title="使用过去完成时的时机"></a>使用过去完成时的时机</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">主语+had+过去分词(had译成“已经”或“曾经”)，用以表示截至过去某时为止所完成的动作或经历：</span><br><span class="line"></span><br><span class="line">He had studied English for 10 years before he left for the States.</span><br><span class="line"></span><br><span class="line">He had already left when I came.</span><br></pre></td></tr></table></figure>
<p>过去完成时不能单独存在，要与另一个一般过去时从句或表过去的副词短语连用：</p>
<p>先发生的动作—&gt;用过去完成时表示<br>后发生的动作—&gt;用一般过去时表示</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">I lost the book which my father had given me.</span><br></pre></td></tr></table></figure>
<h3 id="使用将来完成时的时机"><a href="#使用将来完成时的时机" class="headerlink" title="使用将来完成时的时机"></a>使用将来完成时的时机</h3><p>主语+will+have+过去分词(will have译成“将已经”), 用以表示到将来某时为止所完成或仍在继续的动作或经历等：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#他将已抵达芝加哥</span><br><span class="line">He will have arrived in Chicago by this time tomorrow.</span><br><span class="line">#他就在此住满10年了</span><br><span class="line">He will have lived here for 10 years by the end of this month.</span><br></pre></td></tr></table></figure>
<h3 id="使用现在进行时的时机"><a href="#使用现在进行时的时机" class="headerlink" title="使用现在进行时的时机"></a>使用现在进行时的时机</h3><p>主语+be动词+现在分词(正在…)，不过也可以表示即将发生的动作，常与表将来的副词连用：此时be动词译成：即将…</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#他即将于今天来</span><br><span class="line"> He is coming today.</span><br><span class="line">=He will be coming today. </span><br><span class="line">#他们很快就要离开</span><br><span class="line"> They are leaving soon.</span><br><span class="line">=They will be leaving soon.</span><br></pre></td></tr></table></figure>
<h3 id="使用现在完成进行时的时机"><a href="#使用现在完成进行时的时机" class="headerlink" title="使用现在完成进行时的时机"></a>使用现在完成进行时的时机</h3><p>主语+have/has been+现在分词(have/has been译成“一直都在…”), 用以表示一直继续到现在且仍将继续下去的运作：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">She has been working with this company for 5 years.</span><br><span class="line">They have been standing here since 7 this morning.</span><br></pre></td></tr></table></figure>
<h3 id="使用过去完成进行时的时机"><a href="#使用过去完成进行时的时机" class="headerlink" title="使用过去完成进行时的时机"></a>使用过去完成进行时的时机</h3><p>主语+had been+现在分词(had been译成“一直都在”)，与过去完成时一样，过去完成进行时不能单独存在，须与一般过去时连用。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">I had been sleeping when he came.</span><br><span class="line">He told us that he had been studying German since 2001.</span><br></pre></td></tr></table></figure>
<h3 id="使用将来完成进行时的时机"><a href="#使用将来完成进行时的时机" class="headerlink" title="使用将来完成进行时的时机"></a>使用将来完成进行时的时机</h3><p>主语+will have been+现在分词(will have been译成“将一直在”)，表一直继续到将来某时，而仍将继续进行的动作：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">到今年年底，我教英语将已有10年了</span><br><span class="line">I will have been teaching English for ten years by the end of this year.</span><br></pre></td></tr></table></figure>
<h3 id="“for-一段时间”与完成时的关系"><a href="#“for-一段时间”与完成时的关系" class="headerlink" title="“for+一段时间”与完成时的关系"></a>“for+一段时间”与完成时的关系</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">for            the |past| five years    过去5年来</span><br><span class="line">during             |last|</span><br><span class="line">in</span><br><span class="line">through</span><br><span class="line">down through</span><br><span class="line">over</span><br><span class="line">=since five years ago    自从5年前起</span><br><span class="line">这些短语与现在完成时或现在完成进行时连用</span><br><span class="line">#过去两个星期来，我都一直在学英语</span><br><span class="line">I have been studying English for the past two weeks.</span><br></pre></td></tr></table></figure>
<h3 id="since与完成时的关系"><a href="#since与完成时的关系" class="headerlink" title="since与完成时的关系"></a>since与完成时的关系</h3><p>since与”for+一段时间”使用差不多，不过注意：</p>
<p>since之后须接明确的某段时间作宾语，不要接一段时间作宾语，若之后有一段时间，则须在一段时间之后接ago:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Peter has lived here since 2002.</span><br><span class="line">Peter has lived here since two years ago.</span><br></pre></td></tr></table></figure></p>
<p>现在完成时或现在完成进行时的动词与“for+一段时间”连用时，该动词所表示的动作必须可接续进行，否则就不可与“for+一段时间”连用：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">I have lived here for five years.</span><br><span class="line"></span><br><span class="line">He has died for two months.(x)</span><br><span class="line">=He has died.</span><br><span class="line">=It is two months since he died.</span><br><span class="line">=Two months have passed since he died.</span><br><span class="line"></span><br><span class="line">He has married Jane for twenty years.(x)</span><br><span class="line">=He has married Jane.</span><br><span class="line">=It is twenty years since he married Jane.</span><br><span class="line">=Twenty years have passed since he married Jane.</span><br></pre></td></tr></table></figure></p>
<h3 id="语态"><a href="#语态" class="headerlink" title="语态"></a>语态</h3><p>语态有两种：主动与被动。形成被动语态一定是及物动词：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">原句的宾语作主语+be动词+过去分词</span><br><span class="line">Everyone loves him.</span><br><span class="line">He is loved by everyone.</span><br></pre></td></tr></table></figure>
<h2 id="虚拟语气"><a href="#虚拟语气" class="headerlink" title="虚拟语气"></a>虚拟语气</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a. 纯条件的虚拟语气---用现在式</span><br><span class="line">如果他在这儿，我会揍他</span><br><span class="line">If he is here, I will beat him.</span><br><span class="line"></span><br><span class="line">b. 与现在事实相反的虚拟语气---用过去时</span><br><span class="line">如果他现在在这儿，我会揍他</span><br><span class="line">If he were here, I would beat him.(But he is not here.)</span><br><span class="line"></span><br><span class="line">c. 与过去事实相反的虚拟语气---用过去完成时</span><br><span class="line">如果他当时在这儿，我会揍他</span><br><span class="line">If he had been here, I would have beaten him.(But he was not here.)</span><br><span class="line"></span><br><span class="line">d. 与将来状况相反的虚拟语气---if从句要用助动词should，译成“万一”，主句则用过去时或现在时助动词</span><br><span class="line">万一他在这儿，我会揍他</span><br><span class="line">If he should be here, I would(或will) beat him.</span><br></pre></td></tr></table></figure>
<h3 id="纯条件虚拟语气"><a href="#纯条件虚拟语气" class="headerlink" title="纯条件虚拟语气"></a>纯条件虚拟语气</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">If+主语+一般时动词，主语+will(may/can/should/shall/must/ought to)+原形动词</span><br><span class="line"></span><br><span class="line">If he comes, you should tell him the truth.</span><br><span class="line"></span><br><span class="line">once/when/before/as soon as/unless等副词也可以构成条件句，与if用法相同</span><br><span class="line"></span><br><span class="line">One I have money, I will buy a car.</span><br><span class="line">When he finishes it, he may come.</span><br><span class="line">I will not do anything before he arrives.</span><br></pre></td></tr></table></figure>
<h3 id="与现在事实相反的虚拟语气"><a href="#与现在事实相反的虚拟语气" class="headerlink" title="与现在事实相反的虚拟语气"></a>与现在事实相反的虚拟语气</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">If+主语+一般过去时动词， 主语+would(could/might/should/ought to)+原形动词</span><br><span class="line"></span><br><span class="line">If he lived in my town, I could see him every day.</span><br><span class="line"></span><br><span class="line">be动词统一使用were</span><br><span class="line">If I were rich, I would help you.</span><br><span class="line">因为我不是很有钱，所以我不能帮你</span><br><span class="line">=As I am not rich, I can&apos;t help you.</span><br><span class="line"></span><br><span class="line">主句中的助动词一定为过去时助动词</span><br><span class="line">will-&gt;would</span><br><span class="line">may-&gt;might</span><br><span class="line">can-&gt;could</span><br><span class="line">shall-&gt;should或者ought to</span><br><span class="line">must只能表示现在或将来的状况，只用于纯条件的虚拟语气中。</span><br></pre></td></tr></table></figure>
<h3 id="与过去事实相反的虚拟语气"><a href="#与过去事实相反的虚拟语气" class="headerlink" title="与过去事实相反的虚拟语气"></a>与过去事实相反的虚拟语气</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">If+主语+had+过去分词，主语+would(could/might/should/ought to)+have+过去分词</span><br><span class="line"></span><br><span class="line">要是他当时听了你的劝告，就可能会避免这个错误了</span><br><span class="line">If he had taken your advice, he might have avoided the mistake.</span><br><span class="line"></span><br><span class="line">If he had had money, he would have bought a car.</span><br><span class="line"></span><br><span class="line">如果if从句与过去事实相反，用过去完成时；主句与现在事实相反，则置助动词过去时：</span><br><span class="line">If+主语+had+过去分词，主语+would(could/might/should/ought to)+原形动词+now(today)</span><br><span class="line"></span><br><span class="line">If I had started saving then, I would be able to buy a car now.</span><br><span class="line">If I had started saving then, I would have been able to buy a car now(x)</span><br><span class="line"></span><br><span class="line">If I had met her five years ago, she might be my wife today.</span><br></pre></td></tr></table></figure>
<h3 id="与将来状况相反的虚拟语气"><a href="#与将来状况相反的虚拟语气" class="headerlink" title="与将来状况相反的虚拟语气"></a>与将来状况相反的虚拟语气</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">译成&quot;万一...&quot;</span><br><span class="line"></span><br><span class="line">a. 低可能性：主句要用过去时助动词</span><br><span class="line">If+主语+should+原形动词，主语 would(could/could/might/should/ought to)+原形动词</span><br><span class="line"></span><br><span class="line">万一你生病，会议将延期---你不太可能生病，会议不太可能延期</span><br><span class="line">If you should fall ill, the meeting would be put off</span><br><span class="line"></span><br><span class="line">If it should rain, I would stay home.</span><br><span class="line"></span><br><span class="line">b. 高可能性：主句要用现在时助动词</span><br><span class="line">If+主语+should+原形动词，主语+will(can/may/should/ought to)+原形动词</span><br><span class="line"></span><br><span class="line">万一你生病，会议将延期---你可能会生病，而会议也可能延期</span><br><span class="line">If you should fall ill, the meeting will be put off.</span><br><span class="line"></span><br><span class="line">If it should rain, I will stay home.</span><br><span class="line"></span><br><span class="line">也可能与祈祷句形成的主句连用</span><br><span class="line">万一我迟到，务必要等我---我可能会迟到</span><br><span class="line">If I should be late, be sure to wait for me.</span><br></pre></td></tr></table></figure>
<h3 id="使用虚拟语气的注意事项"><a href="#使用虚拟语气的注意事项" class="headerlink" title="使用虚拟语气的注意事项"></a>使用虚拟语气的注意事项</h3><ol>
<li><p>表示强烈与真理相反的虚拟语气句型：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">If the cat were to smile, I would pass out.</span><br><span class="line">The cat can&apos;t smile.</span><br></pre></td></tr></table></figure>
</li>
<li><p>if的省略：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if从句中，若有过去完成时助动词had/should/were(何秀华)时，可将这3个词置于主语前，而将if省略</span><br><span class="line"></span><br><span class="line">a. had</span><br><span class="line"> If he had done it, he would have felt sorry.</span><br><span class="line">=Had he done it, he would have felt sorry.</span><br><span class="line"></span><br><span class="line">b. should</span><br><span class="line"> If he should tell lies, I would punish him.</span><br><span class="line">=Should he tell lies, I would punish him.</span><br><span class="line"></span><br><span class="line">c. were</span><br><span class="line"> If he were lazy, he might fail.</span><br><span class="line">=Were he lazy, he might fail.</span><br></pre></td></tr></table></figure>
</li>
<li><p>可取代if的其他连词：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">in case(that): 万一</span><br><span class="line">on condition that: 如果</span><br><span class="line">provided/providing(that): 如果</span><br><span class="line">so long as/as long as: 只要</span><br><span class="line"></span><br><span class="line">只要书有趣，哪本书都可以</span><br><span class="line">Any book will do as long as it is interesting.</span><br><span class="line"></span><br><span class="line">in case +that从句    万一...</span><br><span class="line">in case of+名词      万一...</span><br><span class="line"> In case an accident happens, don&apos;t panic.</span><br><span class="line">=In case of an accident happens, don&apos;t panic.</span><br></pre></td></tr></table></figure>
</li>
<li><p>but for</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">=without 若非/要不是...</span><br><span class="line"></span><br><span class="line">a. 与现在事实相反：若非...就...</span><br><span class="line"> If it were not+that从句(一般现在时)，主语+could(would/might/should/ought to)+原形动词</span><br><span class="line">=But for+名词，</span><br><span class="line"></span><br><span class="line">要不是他努力工作，我才不会喜欢他</span><br><span class="line"> If it were not that he works hard, I wouldn&apos;t like him.</span><br><span class="line">=If it were not for his hard work, I...</span><br><span class="line">=Were it not for his hard work, I...</span><br><span class="line">=But for his hard work, I.. </span><br><span class="line"></span><br><span class="line">b. 与过去事实相反：若非当时...就...</span><br><span class="line"> If had not been that从句(一般过去时)，主语+could(would/might/should/ought to)+have+过去分词</span><br><span class="line">=But for+名词，</span><br><span class="line"></span><br><span class="line"> If it had not been that he lent me the money, I could not have bought that book.</span><br><span class="line">=If it had not been for the money (which) he lent me, I...  </span><br><span class="line">=Had it not been for the money (which) he lent me, I...  </span><br><span class="line">=But for the money (which) he lent me, I...  </span><br><span class="line"></span><br><span class="line"> But for his help, I couldn&apos;t have done it.</span><br><span class="line">=Without his help, I couldn&apos;t have done it.</span><br><span class="line"></span><br><span class="line">若非他及时警告，我可能已经没命了</span><br><span class="line"> But for his timely warning, I might have been killed.</span><br><span class="line">=Without his timely warning, I might have been killed.</span><br></pre></td></tr></table></figure>
</li>
<li><p>lest…(should)…</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">以免...</span><br><span class="line">=for fear that+主语+may+原形动词(表现在或者将来的状况)</span><br><span class="line">                   might+原形动词(表过去的状况) </span><br><span class="line">=for fear of+动名词</span><br><span class="line"></span><br><span class="line">你必须努力学习，以免考试不及格</span><br><span class="line"> You must study hard lest you (should) fail the exam.</span><br><span class="line">=You must study hard for fear that you may fail the exam.</span><br><span class="line">=You must study hard for fear of failing the exam.</span><br><span class="line"></span><br><span class="line"> He did it carefully lest you make the same mistake again.</span><br><span class="line">=He did it carefully for fear that you might make the same mistake again.</span><br><span class="line">=He did it carefully for fear of making the same mistake again.</span><br></pre></td></tr></table></figure>
</li>
<li><p>as if</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">=as though...    仿佛...(副词)</span><br><span class="line"></span><br><span class="line">a. 表极大的可能-&gt;动词使用一般时态</span><br><span class="line"></span><br><span class="line">看过来好像要下雨了</span><br><span class="line">It looks as if it is going to rain.</span><br><span class="line"></span><br><span class="line">b. 表与现在事实相反-&gt;动词使用一般过去时</span><br><span class="line">Mr. Wang loves me as if I were his own child.</span><br><span class="line"></span><br><span class="line">c. 表与过去事实相反-&gt;动词使用过去完成时</span><br><span class="line">It looks as if nothing had happended.</span><br></pre></td></tr></table></figure>
</li>
<li><p>What if…should…?</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">要是...的话会怎样/要怎么办？ 表示对将来状况存疑的虚拟语气，if从句多置助动词should</span><br><span class="line"></span><br><span class="line">要是他来了，会怎样/怎么办？</span><br><span class="line"> What if he should come?</span><br><span class="line">=What might happen if he should come?</span><br><span class="line">=What could I do   if he should come?</span><br><span class="line"></span><br><span class="line">要是下雨了，怎么办？</span><br><span class="line">What if should rain?</span><br><span class="line"></span><br><span class="line">What也可以用一般现在时：</span><br><span class="line"></span><br><span class="line"> What if he comes?</span><br><span class="line">=What shall we do if he comes?</span><br><span class="line"></span><br><span class="line"> What if rains?</span><br><span class="line">=What may happen if it rains?</span><br></pre></td></tr></table></figure>
</li>
<li><p>It’s time+that从句的一般过去时</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">It&apos;s time(about time/hight time) + that从句的一般过去时    该时...的时候了</span><br><span class="line"></span><br><span class="line">该是他上床睡觉的时间了</span><br><span class="line">It&apos;s time he went to bed.</span><br><span class="line"></span><br><span class="line">该是我们行动的时候了</span><br><span class="line">It&apos;s time we did it.</span><br><span class="line"></span><br><span class="line">也可以改为不定式形式：</span><br><span class="line"> It&apos;s time he went to bed.</span><br><span class="line">=It&apos;s time for him to go to bed.</span><br><span class="line">=It&apos;s time to go to bed.</span><br></pre></td></tr></table></figure>
</li>
<li><p>If only…</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">要是...就好了</span><br><span class="line"></span><br><span class="line">只用于与现在事实或者过去事实相反的虚拟语气中，只能用一般过去时或者过去完成时：</span><br><span class="line"></span><br><span class="line">要是他在现在在这里就好了</span><br><span class="line"> If Only he were here.</span><br><span class="line">=I wish he were here.</span><br><span class="line"></span><br><span class="line">要是我早点知道这事就好了</span><br><span class="line"> If only I had known it earlier.</span><br><span class="line">=I wish I had known it earlier.</span><br></pre></td></tr></table></figure>
</li>
<li><p>wish的用法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a. 接that从句，一定要用虚拟语气，若与现在事实相反，用一般过去时若与过去事实相反，用过去完成时：</span><br><span class="line"></span><br><span class="line">I wish (that) he is here(x)</span><br><span class="line">I wish he were here.</span><br><span class="line">=It&apos;s too bad that he is not here.</span><br><span class="line"></span><br><span class="line">b. I wish that... 真希望...就好了</span><br><span class="line">=I would rather(that)...</span><br><span class="line"></span><br><span class="line">真希望我当时更用功就好了</span><br><span class="line">I wish I had studied harder when young.</span><br><span class="line">=I would rather I had studied harder when young.</span><br></pre></td></tr></table></figure>
</li>
<li><p>hope的用法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">接that从句，使用一般时态，表示极大的可能性：</span><br><span class="line"></span><br><span class="line">a. 表示现在的状况</span><br><span class="line">I hope he is safe.</span><br><span class="line"></span><br><span class="line">b. 表示将来的状况</span><br><span class="line">I hope he will back.</span><br><span class="line"></span><br><span class="line">c. 表示进行的状况</span><br><span class="line">I hope they are having a good time.</span><br><span class="line"></span><br><span class="line">d. 表示完成的状况</span><br><span class="line">I hope they have finished the work.</span><br><span class="line"></span><br><span class="line">祈使句：</span><br><span class="line"></span><br><span class="line">祝你长命百岁</span><br><span class="line"> I hope he may live long.</span><br><span class="line">=May he live long!</span><br><span class="line"></span><br><span class="line"> I hope you may pass the exam.</span><br><span class="line">=May you pass the exam. </span><br><span class="line"></span><br><span class="line">上帝保佑你</span><br><span class="line"> May God bless you!</span><br><span class="line">=God bless you!</span><br><span class="line"></span><br><span class="line">国王万岁</span><br><span class="line"> May the king live long!</span><br><span class="line">=Long live the king!</span><br></pre></td></tr></table></figure>
</li>
<li><p>wish和hope的异同</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> I wish to travel abroad.</span><br><span class="line">=I hope to travel abroad.</span><br><span class="line"></span><br><span class="line">与for连用，表“期望获得”</span><br><span class="line">#我希望能有机会尝试一下</span><br><span class="line">I wish for a chance to try it.</span><br><span class="line"></span><br><span class="line">表祝福时，只能用wish，接两个名词或代词作宾语</span><br><span class="line"></span><br><span class="line">我祝你们玩的愉快</span><br><span class="line">I wish you a good time.</span><br><span class="line">I wish my parents longevity.</span><br><span class="line"></span><br><span class="line">I hope that you have a good time.</span><br><span class="line">I hope my partents can live long.</span><br></pre></td></tr></table></figure>
</li>
<li><p>对过去事物的猜测的三种句型</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a. must have+过去分词    一定曾经...</span><br><span class="line">他博学多才，一定受过良好的教育</span><br><span class="line">He is learned; he must have received a good education.</span><br><span class="line"></span><br><span class="line">b. may have+过去分词    可能曾经...</span><br><span class="line">他看起来很疲惫，可能昨晚熬夜很晚</span><br><span class="line">He looks tired; he may have stayed up late last night.</span><br><span class="line"></span><br><span class="line">c. cannot have+过去分词    不可能曾经...</span><br><span class="line">他是老实人，不可能偷了玛丽的钱</span><br><span class="line">He is honest; he cannot have stolen Mary&apos;s money.</span><br><span class="line"></span><br><span class="line">若表示猜测的结构为疑问句，要用“Can...have...?”</span><br><span class="line">他可能做了这样的事吗？</span><br><span class="line">May he have done it?(x)</span><br><span class="line">Can he have done it?</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="副词"><a href="#副词" class="headerlink" title="副词"></a>副词</h2><h3 id="副词的功能"><a href="#副词的功能" class="headerlink" title="副词的功能"></a>副词的功能</h3><ol>
<li><p>修饰动词：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">置于动词之后：</span><br><span class="line">He studies hard.</span><br><span class="line">I love you very much.</span><br></pre></td></tr></table></figure>
</li>
<li><p>修饰形容词：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">置于形容词之前：</span><br><span class="line">He is very kind.</span><br><span class="line">It is extremely dangerous to swim alone.</span><br><span class="line">This is probably true.</span><br></pre></td></tr></table></figure>
</li>
<li><p>修饰副词：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">置于该副词之前：</span><br><span class="line">He studies very diligently.</span><br><span class="line">He does things too carefully.</span><br></pre></td></tr></table></figure>
</li>
<li><p>修饰全句：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">置于句首：</span><br><span class="line">Fortunately, he did not die.</span><br><span class="line">这答案显然是对的</span><br><span class="line">Evidently, this answer is right.</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="副词的位置"><a href="#副词的位置" class="headerlink" title="副词的位置"></a>副词的位置</h3><h4 id="一般规则"><a href="#一般规则" class="headerlink" title="一般规则"></a>一般规则</h4><ol>
<li><p>有be动词时，置于be动词之后:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">He is always kind.</span><br><span class="line">They are really able to do it.</span><br></pre></td></tr></table></figure>
</li>
<li><p>有助动词时，置于助动词之后：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">He can hardly walk.</span><br><span class="line">He has never been to the US before.</span><br></pre></td></tr></table></figure>
</li>
<li><p>有一般动词时，置于该动词之前，但修饰的动词的副词表示某种状态时，则置于动词之后：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">The often go fishing.</span><br><span class="line">He really cares about you.</span><br><span class="line"></span><br><span class="line">修饰的动词的副词表示某种状态时，则置于动词之后：</span><br><span class="line">She dances beautifully.</span><br><span class="line">He droves his car fast.</span><br><span class="line"></span><br><span class="line">修饰动词的副词表示肯定、否定或频率的意味，则置于动词之前：</span><br><span class="line">肯定意味的动词：surely/certainly/absolutely/probably/really</span><br><span class="line">They certainly hope to win the game.</span><br><span class="line"></span><br><span class="line">否定意味的动词：never/seldom/hardly ever(几乎不曾)/always/often</span><br><span class="line">He often comes to school late.</span><br></pre></td></tr></table></figure>
</li>
<li><p>状态副词在被动语态中的位置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">置于过去分词前：</span><br><span class="line">He did the job well.</span><br><span class="line">The job was well done.</span><br></pre></td></tr></table></figure>
</li>
<li><p>时间副词：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">句子短时，置于句尾，句子长时，置于句首</span><br><span class="line">Yesterday I saw him chatting very pleasantly with a blonde girl in the park.</span><br><span class="line">I saw him in the park yesterday.</span><br></pre></td></tr></table></figure>
</li>
<li><p>地点副词：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">置于动词之后：here/there/home/downtown/upstairs/downstairs in/out/up/down</span><br><span class="line">He come here.</span><br><span class="line"></span><br><span class="line">in/out/up/down等之后有宾语，则为介词</span><br><span class="line">He sat in the corner.</span><br><span class="line">He looked out of the windows.</span><br><span class="line"></span><br><span class="line">in/out/up/down等之后若无宾语，则为副词</span><br><span class="line">He come in.</span><br></pre></td></tr></table></figure>
</li>
<li><p>副词短语</p>
</li>
</ol>
<p>置于句尾，修饰句中的动词</p>
<p>He loves her <u>with all his heart</u>.<br>he came <u>by bus</u>.</p>
<ol start="8">
<li>不定式短语当副词</li>
</ol>
<p>除修饰动词外，还可置于形容词或副词后，修饰该形容词或副词:</p>
<p>You will soon come <u>to realize that you are mistaken</u>.</p>
<p>She went to Italy in order <u>to sutdy music</u>.</p>
<p>I am sorry <u>to have kept you waiting</u>.</p>
<ol start="9">
<li>名词性从句修饰形容词</li>
</ol>
<p>I am sorry <u>that I cannot attend your party</u>.</p>
<p>I am not sure <u>whether he’ll come</u>.</p>
<h3 id="重要的副词用法"><a href="#重要的副词用法" class="headerlink" title="重要的副词用法"></a>重要的副词用法</h3><ol>
<li>very/much 很/非常</li>
</ol>
<p>比较极的形容词或副词中，只能用much:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">He walked much more slowly than I.</span><br><span class="line">He is much happier than Peter.</span><br><span class="line">修饰too时只能用much</span><br><span class="line">He is much too young.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>little/a little</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">little作副词，视为否定：一点儿都不，等于no:</span><br><span class="line">病人的情况并没比昨天好到哪儿去</span><br><span class="line">The patient&apos;s condition is little better than (it was) yesterday.</span><br><span class="line"></span><br><span class="line">a little作副词，译成：有点儿</span><br><span class="line">The patient&apos;s condition is getting a little better.</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>no longer</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">不再：</span><br><span class="line">=no more</span><br><span class="line">=not...any longer</span><br><span class="line">=not...anymore</span><br><span class="line">他不再在这儿了</span><br><span class="line"> He is no longer here.</span><br><span class="line">=No longer is he here.</span><br><span class="line">=He is not here any longer.</span><br><span class="line">=He is not here any more.</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>sometimes/sometime/some time/some times</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a. sometime 有时候</span><br><span class="line">他有时候会来这儿走一下</span><br><span class="line">Sometimes he comes here for a visit.</span><br><span class="line"></span><br><span class="line">b. sometime 某时(不知何时)</span><br><span class="line">可用于一般过去时或一般将来时，使用时通常与另一明确的时间副词或副词短语连用：</span><br><span class="line"></span><br><span class="line">一般过来时：</span><br><span class="line">我昨天早上某个时间见过他</span><br><span class="line">I saw hime sometime yesterday morning.</span><br><span class="line"></span><br><span class="line">一般将来时：</span><br><span class="line">我明天某个时间会在这里</span><br><span class="line">I&apos;ll be here sometime tomororw.</span><br><span class="line"></span><br><span class="line">c. some time 一段时间</span><br><span class="line">我会在这儿待一阵子</span><br><span class="line">I&apos;ll stay here (for) some time.</span><br><span class="line">不久前他还在这里</span><br><span class="line">He was here some time ago.</span><br><span class="line"></span><br><span class="line">d. some times 有几次</span><br><span class="line">=a few times</span><br><span class="line">=several times.</span><br><span class="line">建议使用a few times或several times.</span><br><span class="line">我曾去过泰国几次</span><br><span class="line">I have been to Thailand a few times.</span><br></pre></td></tr></table></figure>
<ol start="5">
<li>ago/before/since/after</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a. ago表“距现在若干时间以前”，时态用一般过去时</span><br><span class="line"></span><br><span class="line">他几一前来过这儿</span><br><span class="line">He came here a few days ago.</span><br><span class="line"></span><br><span class="line">How long ago did he come?</span><br><span class="line"></span><br><span class="line">b. before表“距过去某时若干时间以前”，时态用过去完成时:</span><br><span class="line">When I met Jim last week, He told me he had just gotten back from a trip to Lake Placid two days before.</span><br><span class="line">注意：</span><br><span class="line">ago只能用在一般过去时的结构。ago不能单独使用，但before可以作为单独副词单独使用：</span><br><span class="line">I met him ago(x)</span><br><span class="line">I me him two hours ago(ok)</span><br><span class="line">I met him before(ok)</span><br><span class="line">I have met him befoe(ok)</span><br><span class="line">I told him that I had met him before.(ok)</span><br><span class="line"></span><br><span class="line">c. since  自从...</span><br><span class="line"></span><br><span class="line">I have studied English Since I moved here in 2001.</span><br><span class="line">He told me that he had written two books since he moved here in 2001.</span><br><span class="line"></span><br><span class="line">since作副词，译成之后，置于句尾或have/has/had之后，修饰现在完成、进行时或者过去完成、进行时：</span><br><span class="line">我于2001年搬到此处，之后就一直在学习英文</span><br><span class="line"> I moved here in 2001 and have studied English since.</span><br><span class="line">=I moved here in 2001 and have since studied English.</span><br><span class="line"></span><br><span class="line">d. after  之后</span><br><span class="line">作副词译成“之后”，与since不同，since修饰完成时，而after则修饰过去时，此时等于later或afterwards.</span><br><span class="line">He fell ill on Monday and died three days after(later).</span><br><span class="line">The war ended in 1945, and they lived happily ever after.</span><br></pre></td></tr></table></figure>
<ol start="6">
<li>quite  十分地<br>rather 相当…地</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">此二词可修饰原级之副词或形容词。</span><br><span class="line"></span><br><span class="line">他相当老了</span><br><span class="line">He is quite old.</span><br><span class="line">他蛮老的</span><br><span class="line">He is rather old.</span><br><span class="line">他相当用功</span><br><span class="line">He studies quite hard.</span><br><span class="line"></span><br><span class="line">修饰“形容词+单数名词”时，应在a或an之前：</span><br><span class="line">他是一个相当不错的学生</span><br><span class="line">He is quite a good student.</span><br><span class="line">They are quite good students.</span><br></pre></td></tr></table></figure>
<ol start="7">
<li>someday/one day/the other day/some other day</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a. someday  将来有一天(用于未来时)</span><br><span class="line">Keep on working hard, and someday you will be successful.</span><br><span class="line"></span><br><span class="line">b. one day  某日</span><br><span class="line">表前几天时，等于the other day，也可指几年前的某一天，两者均用过去时</span><br><span class="line">有一天我在城里看到他</span><br><span class="line"> I saw him downtown one day.</span><br><span class="line">=I saw him downtown the other day.</span><br><span class="line"></span><br><span class="line">表将来总有一天，等于someday，用于将来时</span><br><span class="line">总有一天你会后悔的</span><br><span class="line"> One day you&apos;ll be sorry.</span><br><span class="line">=Someday you&apos;ll be sorry.</span><br><span class="line"></span><br><span class="line">c. the other day  前些时间，用于一般过去时</span><br><span class="line">前几天我到公园玩了一趟</span><br><span class="line">I went to the park for a visit the other day.</span><br><span class="line"></span><br><span class="line">d. some other day  改天，用于一般将来时</span><br><span class="line">我现在很忙，改天再拜访你</span><br><span class="line">I&apos;m busy now, I&apos;ll visit you some ther day.</span><br></pre></td></tr></table></figure>
<ol start="8">
<li>somewhat/somehow/anyhow</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a. somewhat  有一点儿，副词，置于形容词或副词前，以修饰形容词或副词：</span><br><span class="line"> It&apos;s somewhat cold today.</span><br><span class="line">=It&apos;s a little cold today.</span><br><span class="line">=It&apos;s a bit cold today.</span><br><span class="line">他这件事做得有些粗心</span><br><span class="line"> He did the job somewhat carelessly.</span><br><span class="line">=He did the job a little(bit) carelessly. </span><br><span class="line"></span><br><span class="line">b. somehow  不知怎的，=for some unknown reason.</span><br><span class="line">            设法，=by some means.</span><br><span class="line">1) 表不知怎的，作独立副词，置于句首，修饰全句</span><br><span class="line">他人不错，但不知怎的，我就是不喜欢他</span><br><span class="line">He is nice; but somehow I don&apos;t like him.</span><br><span class="line"></span><br><span class="line">2) 表设法，作一般副词，修饰句中的动词，置于句尾</span><br><span class="line">我们必须设法找到这笔钱</span><br><span class="line">We must find the money somehow.</span><br><span class="line"></span><br><span class="line">c. anyhow  况且，而且，=besides/in addition</span><br><span class="line">           不管如何，=anyway/at any rate</span><br><span class="line">我没有时间去年电影，况且电影也太贵了</span><br><span class="line">I don&apos;t have time to go to the movie last year, they&apos;re too expensive anyhow.</span><br><span class="line"></span><br><span class="line">表“不管如何”时，anyhow为独立副词，通常置于句首，之后有逗号，修饰逗号之后整个主句：</span><br><span class="line">不管怎样，我们可以试试看</span><br><span class="line">Anyhow, we can try.</span><br><span class="line">anyway,</span><br><span class="line">at any rate,</span><br></pre></td></tr></table></figure>
<ol start="9">
<li>enough </li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a. 形容词，表足够/充分的，修饰名词</span><br><span class="line">他有足够的钱买一辆拉风的车</span><br><span class="line">He has enough money |to buy| a fance car.</span><br><span class="line">                    |for   |</span><br><span class="line">b. 副词，表足以，修饰形容词或副词，置于形容词或副词之后</span><br><span class="line">他条件好，足以担任些职位</span><br><span class="line">He is good enough to fill the position.</span><br><span class="line">He is good enough for the position.</span><br><span class="line">他跑得够快而赶上了火车</span><br><span class="line">He ran fast enough to catch the train.</span><br></pre></td></tr></table></figure>
<ol start="10">
<li>likely/probably/possibly  可能地</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">likely/probaly表示“很可能”，而possibly则表示“有可能但不确定”</span><br><span class="line">很有可能他会来: likely作副词时，之前可用very或most加以修饰</span><br><span class="line">He will(very/most) likely come.</span><br><span class="line"></span><br><span class="line">她很可能将要离开</span><br><span class="line">She will probaly leave.</span><br><span class="line"></span><br><span class="line">他们说不定会帮他</span><br><span class="line">They will possibly help him.</span><br><span class="line"></span><br><span class="line">likely也可以用形容词：probable不能修饰人</span><br><span class="line"> He is likely to come.</span><br><span class="line">=It&apos;s likely that he will come.</span><br><span class="line">=It&apos;s probable that he will come.</span><br></pre></td></tr></table></figure>
<ol start="11">
<li>Short Response</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">你是...， 我也是/你不是...，我也不是.</span><br><span class="line">a. 肯定句</span><br><span class="line">1). be动词，主语与be动词倒装</span><br><span class="line">他人很好，她也很好</span><br><span class="line">He is nice, and so is she.</span><br><span class="line">            and she is, too.</span><br><span class="line"></span><br><span class="line">2). 助动词，主语与助动词倒装</span><br><span class="line">他要来，她也要来</span><br><span class="line">He will come, and so will she.</span><br><span class="line">              and she will, too.</span><br><span class="line"></span><br><span class="line">3). 一般动词，主语与do/does/did倒装</span><br><span class="line">他来了，她也来了</span><br><span class="line">He came, and so did she.</span><br><span class="line">         and she did, too.</span><br><span class="line">他有一本书，她也有</span><br><span class="line">He has a book, and so does she.</span><br><span class="line">               and she does, too.</span><br><span class="line"></span><br><span class="line">同一个人时，不倒装</span><br><span class="line">He is stupid. So he is(=Indeed he is.)</span><br><span class="line">You can&apos;t do it. So I can&apos;t.</span><br><span class="line"></span><br><span class="line">b. 否定句用neither(或nor，使用neither或nor采用倒装句)或either. neither前要加and,当nor不用：</span><br><span class="line">1). be动词，主语与be动词倒装</span><br><span class="line">他不好，她也不好</span><br><span class="line">He is not nice, and neither is she.</span><br><span class="line">                nor is she.</span><br><span class="line">                and she isn&apos;t, either.</span><br><span class="line">他没有回家，她也没有回家</span><br><span class="line">He wasn&apos;t going home, and neither was she.</span><br><span class="line">                      nor was she.</span><br><span class="line">                      and she wasn&apos;t, either.</span><br><span class="line"></span><br><span class="line">2). 助动词，主语与助动词倒装</span><br><span class="line">他不来，她也不来</span><br><span class="line">He won&apos;t come, and neither will she.</span><br><span class="line">               nor will she.</span><br><span class="line">               and she won&apos;t, either.</span><br><span class="line">他没去，她也没去</span><br><span class="line">He hasn&apos;t gone, and neither has she.</span><br><span class="line">                nor has she.</span><br><span class="line">                and she hasn&apos;t, either.</span><br><span class="line"></span><br><span class="line">3). 一般动词，主语与do/does/did倒装</span><br><span class="line">他绝不说谎，她绝不说谎</span><br><span class="line">He never tells a lie, and neither does he.</span><br><span class="line">                      nor does he.</span><br><span class="line">                      and she doesn&apos;t, either.</span><br><span class="line">他没有书，她也没有</span><br><span class="line">He has no book, and neither does she.</span><br><span class="line">                nor does she.</span><br><span class="line">                and she doesn&apos;t, either.</span><br><span class="line"></span><br><span class="line">also只能又在肯定式中，置于be动词之后，或者一般动词之前：</span><br><span class="line">他很亲切，她也是</span><br><span class="line">He is kind, and she is also kind.</span><br><span class="line">He has a pen, and she also has one.</span><br></pre></td></tr></table></figure>
<ol start="12">
<li>常见“名词+介词+名词”短语</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">手拉手: hand in hand</span><br><span class="line">肩并肩: shoulder to shoulder/slide by slide</span><br><span class="line">臂挽着臂: arm in arm</span><br><span class="line">逐字地: word for word</span><br><span class="line">天天: day by day</span><br><span class="line">夜夜: night after night</span><br><span class="line">渐渐地: little by little</span><br><span class="line">一个一个地: one by one</span><br><span class="line">陆续地: one after another</span><br><span class="line">面对面地: face to face</span><br><span class="line"></span><br><span class="line">他们手牵手沿着那条路走下去</span><br><span class="line">They walked hand in hand down the road.</span><br><span class="line">他们陆续地走进去</span><br><span class="line">They came in one after another.</span><br></pre></td></tr></table></figure>
<ol start="13">
<li>not要置于不定式短语、分词、动名词之前</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">由于有很多事要办，我决定不去旅行</span><br><span class="line">Since having a lot of work to do, I decided not to go on a trip.</span><br><span class="line"></span><br><span class="line">他假装不认识我</span><br><span class="line">He pretended not to know me.</span><br><span class="line"></span><br><span class="line">工作没完成，我决定留下来</span><br><span class="line">I don&apos;t have finished the work, I decided to stay.</span><br><span class="line">=Not having finished the work, I decided to stay.</span><br><span class="line"></span><br><span class="line">他很失望没把工作完成</span><br><span class="line">He was disappointed at not having finished the work.</span><br></pre></td></tr></table></figure>
<ol start="14">
<li>助动词+副词十本动词</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我以前从没见过他</span><br><span class="line">I have never seen him before.</span><br></pre></td></tr></table></figure>
<ol start="15">
<li>副词修饰被动语态时，通常置于过去分词之前</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">他演说得很好</span><br><span class="line">His speech was well presented.</span><br><span class="line"></span><br><span class="line">那件事终于解决了</span><br><span class="line">That case was finally settled.</span><br></pre></td></tr></table></figure>
<ol start="16">
<li>more than与倍数的关系</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">more than应置于倍数之前:</span><br><span class="line"></span><br><span class="line">a. 先造一个含有“倍数词+as ⋯ as ⋯ ”的句子</span><br><span class="line">他的钱是你的三倍:</span><br><span class="line">He has three times as much money as you do.</span><br><span class="line"></span><br><span class="line">b．再于“倍数词十as ⋯ as ⋯ ”的结构前置人more than，即告完成。</span><br><span class="line">He has more than three times as much money as you do．</span><br><span class="line">（他的钱超过你的三倍。）</span><br><span class="line"></span><br><span class="line">c. more than亦可置于动词double（增加一倍）之前。</span><br><span class="line">Our income has more than doubled in one year.</span><br><span class="line">（一年之内我们的收人增加了一倍多。）</span><br></pre></td></tr></table></figure>
<ol start="17">
<li>more than与over的关系</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">over作介词表“超过”时，可用more than代替:</span><br><span class="line">他已待在此地一年多</span><br><span class="line">He has stayed here over a year.</span><br><span class="line">He has stayed here more than a year.</span><br><span class="line"></span><br><span class="line">这里的学生超过5人</span><br><span class="line">Over five students are here.</span><br><span class="line">More than five students are here.</span><br></pre></td></tr></table></figure>
<ol start="18">
<li>避免双重否定</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">not ever=never</span><br><span class="line">他从来没去过日本</span><br><span class="line"> He has not ever been to Japan before.</span><br><span class="line">=He has never been to Japan before.</span><br><span class="line"></span><br><span class="line">scarcely = hardly = almost not为否定副词:</span><br><span class="line">他几乎不会做这工作</span><br><span class="line">He can scarcely do this work.</span><br><span class="line">He can hardly do this work.</span><br><span class="line"></span><br><span class="line">他几乎没有钱</span><br><span class="line">He has hardly any money.</span><br></pre></td></tr></table></figure>
<ol start="19">
<li>关系副词when/why/how/where</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这就是我们该出发的时候</span><br><span class="line">This is the time when we should set out.</span><br><span class="line">=This is when we should set out.</span><br><span class="line"></span><br><span class="line">这就是他为何迟到的理由</span><br><span class="line">This is the reason why he was late.</span><br><span class="line">=This is why he was late.</span><br><span class="line"></span><br><span class="line">这就是他成功的方法</span><br><span class="line">This is the way he succeeded.</span><br><span class="line">This is how he succeeded.</span><br><span class="line"></span><br><span class="line">那是我出生的地方</span><br><span class="line">That is the place where I was born.</span><br><span class="line">That is where I was born.</span><br></pre></td></tr></table></figure>
<ol start="20">
<li>I think so</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">think 、 hope 、 believe 、 be afraid 、 imagine等动词之后加so，可代替肯定句，加not则代替否定句:</span><br><span class="line">A: 15 he nice?</span><br><span class="line">B: Yes, I think so.</span><br><span class="line">   No, 1 think not.</span><br><span class="line"></span><br><span class="line">Will he come?</span><br><span class="line">B: I&apos;m afraid not.</span><br><span class="line">   I&apos;m afraid so.</span><br></pre></td></tr></table></figure>
<ol start="21">
<li>all（三人以上一起）、both（两人一起）</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">约翰、保罗和彼得明天都要来这里庆祝杰克的生日</span><br><span class="line">John、Paul and peter will all come here to celebrate Jack&apos;s birthday.</span><br><span class="line"></span><br><span class="line">这五位都是好学生</span><br><span class="line">These five students are all good.</span><br><span class="line"></span><br><span class="line">这两位人选都有资格做此工作</span><br><span class="line">The two candidates are both qualified for this work.</span><br><span class="line"></span><br><span class="line">他和我明天都要去美国</span><br><span class="line">He and I will both go to the American tomorrow.</span><br></pre></td></tr></table></figure>
<ol start="22">
<li>容易混淆的副词</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a . close（近）、 closely（仔细地，严密地）</span><br><span class="line">我住在他家附近</span><br><span class="line">I live close to his house.</span><br><span class="line">=I live near his house.</span><br><span class="line">好好盯着他</span><br><span class="line">Watch him closely.</span><br><span class="line"></span><br><span class="line">b . most（最）、 mostly（大部分，大都）</span><br><span class="line">在这些书中，这本最有趣</span><br><span class="line">Of all these books, This one is the most interesting.</span><br><span class="line"></span><br><span class="line">这些书大部分都过时了</span><br><span class="line">These books are mostly out of date.</span><br><span class="line"></span><br><span class="line">c. near（近）、 nearly(=almost，几乎）</span><br><span class="line">他住附近，不在远处</span><br><span class="line">He lives near, not far.</span><br><span class="line">他差点淹死了</span><br><span class="line">He was nearly drowned.</span><br><span class="line"></span><br><span class="line">near虽可作介词，但在下列短语中，near之后仍应置人to，形成固定短语</span><br><span class="line">come near to + V 一 ing差一点就⋯</span><br><span class="line">他差点淹死了</span><br><span class="line"> He came near to being drowned.</span><br><span class="line">=He came close to being drowned.</span><br><span class="line">=He was nearly drowned.</span><br><span class="line"></span><br><span class="line">d. high  表实际空间(可以测量)的 高</span><br><span class="line">   deep                        深</span><br><span class="line">   wide                        宽</span><br><span class="line">   highly 表程度而不指空间的     高</span><br><span class="line">   deeply                      深</span><br><span class="line">   widely                      宽</span><br><span class="line"></span><br><span class="line">飞机高高在天上飞着</span><br><span class="line">The airplane flew high in the sky.</span><br><span class="line">他大大地受到赞扬</span><br><span class="line">He was highly praised.</span><br><span class="line">我们赞扬他</span><br><span class="line">We spoke highly of him.</span><br><span class="line">我们很看重他</span><br><span class="line">We think highly of him.</span><br><span class="line">他潜人河中深处</span><br><span class="line">He dove deep into the river</span><br><span class="line">他伤得很重</span><br><span class="line">He was deeply hurt.</span><br></pre></td></tr></table></figure>
<ol start="23">
<li>greatly与highly之区别</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a . greatly表示&quot;大量地，大大地&quot;</span><br><span class="line">他大大地吃了一惊</span><br><span class="line">He was greatly surprised.</span><br><span class="line">车祸次数大幅增加</span><br><span class="line">The number of traffic accidents has increased greatly.</span><br><span class="line"></span><br><span class="line">b. highly表“高高地”，通常与“表扬” 、 “奖励” 、 “推荐”等动词（如praise 、recommend）连用:</span><br><span class="line">我们很看重他</span><br><span class="line">We think highly of him.</span><br></pre></td></tr></table></figure>
<ol start="24">
<li>nowhere（=in noplace）在任何地方都不</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">此亦为否定副词，置于句首要采倒装句:</span><br><span class="line">这种人我在任何地方都找不到</span><br><span class="line">Nowhere could I find such a man.</span><br></pre></td></tr></table></figure>
<h2 id="倒装结构"><a href="#倒装结构" class="headerlink" title="倒装结构"></a>倒装结构</h2><ol>
<li>否定倒装句：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我没见过像她这么美的女孩</span><br><span class="line">I have never seen such a pretty girl as she (is).</span><br><span class="line">Never have I seen such a pertty girl as she.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>so/much倒装句：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">他人很好，值得我尊敬</span><br><span class="line">He is so kind that he deserves all my respect.</span><br><span class="line">So kind she that he deserves all my respect.</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>地方副词倒装句：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">那儿站着一个男孩</span><br><span class="line">A boy stood there.</span><br><span class="line">There stood a boy.</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>完全倒装句：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">助人的人值得称赞</span><br><span class="line">It worth to praise for those who help others.</span><br><span class="line">Those who help others are praiseworthy.</span><br><span class="line">Praiseworthy are those who help others.</span><br></pre></td></tr></table></figure>
<ol start="5">
<li>as取代though的倒装句：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">他虽然很好，我却不喜欢他</span><br><span class="line">Though he is nice, I don&apos;t like him.</span><br><span class="line">Nice as he is, I dislike him.</span><br><span class="line">As nice as he is, I dislike him.</span><br></pre></td></tr></table></figure>
<h3 id="否定倒装句"><a href="#否定倒装句" class="headerlink" title="否定倒装句"></a>否定倒装句</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">常用的否定副词：</span><br><span class="line">never: 从不</span><br><span class="line">hardly: 几乎不 = scarely</span><br><span class="line">rarely: 很少</span><br><span class="line">seldom: 很少</span><br><span class="line">little: 一点儿也不</span><br><span class="line"></span><br><span class="line">常用的否定副词短语：</span><br><span class="line">by no means: 绝对不</span><br><span class="line">in no way: 绝对不</span><br><span class="line">on no accout: 绝对不</span><br><span class="line">under no circumstances: 绝对不</span><br><span class="line">in no situation:  绝对不</span><br><span class="line"></span><br><span class="line">常用的否定状语从句：</span><br><span class="line">not until+S+V: 直到...</span><br><span class="line">only when+S+V: 只有到...的时候</span><br><span class="line">only after+S+V: 只有到...之后</span><br></pre></td></tr></table></figure>
<ol>
<li><p>如何倒装：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">先将否定副词、否定副词短语或否定状语从句移到句首,再检查原结构主语之后的动词，采问句倒装。</span><br><span class="line"></span><br><span class="line">a. be动词</span><br><span class="line">be动词与主语倒装</span><br><span class="line"></span><br><span class="line">他从不快乐</span><br><span class="line">He is never happy.</span><br><span class="line">Never is he happy.</span><br><span class="line"></span><br><span class="line">他几乎从未安静过</span><br><span class="line">He is hardly ever quiet.</span><br><span class="line">Hardly is he ever quiet.</span><br><span class="line"></span><br><span class="line">他绝非我们需要的人</span><br><span class="line">You are by no means the person we need.</span><br><span class="line">By no means are you the person we need.</span><br><span class="line"></span><br><span class="line">直到他来，我才发现这件事</span><br><span class="line">I was not aware of it until he came.</span><br><span class="line">No until he came was I awae of it.</span><br><span class="line"></span><br><span class="line">只有玛丽跟他在一起的时候，他才快乐</span><br><span class="line">He is happy only when Mary is with him.</span><br><span class="line"></span><br><span class="line">b. 助动词</span><br><span class="line">助动词与主语要倒装</span><br><span class="line"></span><br><span class="line">他几乎不能动</span><br><span class="line">He can hardly move.</span><br><span class="line">Hardly can he move.</span><br><span class="line"></span><br><span class="line">他从来没做过这件事</span><br><span class="line">He has never done it before.</span><br><span class="line">Never has he done it before.</span><br><span class="line"></span><br><span class="line">c. 一般动词</span><br><span class="line">与疑问句一样，变成do/does/did+原形动词</span><br><span class="line"></span><br><span class="line">他很少唱歌</span><br><span class="line">He seldom sings.</span><br><span class="line">Seldom does he sing.</span><br><span class="line"></span><br><span class="line">他一点儿也没有想到玛丽的英语这么好</span><br><span class="line">He little knew that Mary&apos;s English could be so good.(x, 没有He little knew的说法)</span><br><span class="line">Little did he konw that Mary&apos;s English could be so good.</span><br></pre></td></tr></table></figure>
</li>
<li><p>only+介词短语及only+then</p>
</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">only then: 唯有在那时</span><br><span class="line">均视为否定副词短语，置于句首时，采倒装：</span><br><span class="line">只有这么做你才会成功</span><br><span class="line">Only by doing so can you succeed.</span><br><span class="line">有了他的帮忙，我才能克服困难</span><br><span class="line">Only with his help will be able to weather the fifficulties.</span><br><span class="line"></span><br><span class="line">到那时我才离开</span><br><span class="line">|Only then        |did I leave.</span><br><span class="line">|Only at that time|</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>not+a+单数可数名词    连一个…都没有</li>
</ol>
<p>我在那儿一个人也没有看到<br>I didn’t see a soul(=a person) over there.<br>Not a soul did I see over there.</p>
<p>I was not able to discover a clue to the murder.<br>No a clue to the murder was I able to discover.<br>这件谋杀案我连一点蛛丝马迹也没法找到</p>
<ol start="4">
<li>nowhere=in no place    在任何地方都不</li>
</ol>
<p>这种人我在任何地方都找不到<br>Nowhere could I find such a man.</p>
<ol start="5">
<li>一…就…的句型</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a. 同时态的状语从句</span><br><span class="line"> As soon as she saw me, she passed out.</span><br><span class="line">=Once she saw me, she passed out.</span><br><span class="line">=The instant she...</span><br><span class="line">=The moment she ...</span><br><span class="line"></span><br><span class="line">b. On/Upon+N/V一ing, S+V</span><br><span class="line">upon或on之后加名词或动名词，也表示&quot;一...就...&quot;的意思</span><br><span class="line"></span><br><span class="line">主语相同：</span><br><span class="line">我一做完工作就回家</span><br><span class="line"> As soon as I finished the job, I went home.</span><br><span class="line">=Upon/On finishing the job, I went home.</span><br><span class="line"></span><br><span class="line">不同主语：</span><br><span class="line">Upon/On用所有格</span><br><span class="line">他一到我就走了</span><br><span class="line"> As soon as he arrived, I left.</span><br><span class="line">=Upon/On his arriving, I left.</span><br></pre></td></tr></table></figure>
<h3 id="so-such倒装句"><a href="#so-such倒装句" class="headerlink" title="so/such倒装句"></a>so/such倒装句</h3><p>so…that或such…that倒装结构时，so或much及所引导的词类置于句首，与否定结构句完全相同</p>
<ol>
<li>有be动词时：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">他这么乐于助人，因此我们都喜欢他</span><br><span class="line"> He is so helpful that we all like him.</span><br><span class="line">=So helpful is he that we all like him.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>有助动词时：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">他做得这么好，所以值得我们尊敬</span><br><span class="line"> He has done so well that deserves our respect.</span><br><span class="line">=So well has he done that deserves our respect.</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>有一般动词时：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">他太晚到，而没有赶上火车</span><br><span class="line"> He came so late that missed the train.</span><br><span class="line">=So late did he come that missed the train.</span><br></pre></td></tr></table></figure>
<h3 id="地方副词倒装句"><a href="#地方副词倒装句" class="headerlink" title="地方副词倒装句"></a>地方副词倒装句</h3><h4 id="三种倒装句型"><a href="#三种倒装句型" class="headerlink" title="三种倒装句型"></a>三种倒装句型</h4><p>地方副词(there/here)或地方副词短语(in the room/at the station/by the window)置于句首时，亦可形成倒装：</p>
<ol>
<li>第一型</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">主语+不及物动词+地方副词</span><br><span class="line">               地方副词短语</span><br><span class="line">-&gt;</span><br><span class="line">地方副词    +不及物动词+主语</span><br><span class="line">地方副词短语</span><br><span class="line"></span><br><span class="line"> A girl sat there.</span><br><span class="line">=There sat a girl.</span><br><span class="line"></span><br><span class="line"> A girl sat by the door.</span><br><span class="line">=By the door sat a girl.</span><br><span class="line"></span><br><span class="line"> A book is on the desk.</span><br><span class="line">=On the desk is a book.</span><br><span class="line"></span><br><span class="line">玛丽站在门口</span><br><span class="line"> Mary stood in the doorway.</span><br><span class="line">=In the doorway stood Mary.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>第二型</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">主语+be动词+过去分词+地方副词或地方副词短语</span><br><span class="line">-&gt;</span><br><span class="line">地方副词或地方副词短语+be动词+过去分词+主语</span><br><span class="line"></span><br><span class="line">门后锁着一个人</span><br><span class="line"> A man was locked behind the door.</span><br><span class="line">=Behind the door was locked a man.</span><br><span class="line"></span><br><span class="line">那里坐落着一所学校</span><br><span class="line"> A school is located there.</span><br><span class="line">=There is located a school.</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>第三型</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">主语+be动词+现在分词+地方副词或地方副词短语</span><br><span class="line">-&gt;</span><br><span class="line">现在分词+地方副词或地方副词短语+be动词+主语</span><br><span class="line"></span><br><span class="line">那儿有一个女孩在唱歌，她是我女友</span><br><span class="line">#A girl is singing over there, she is my girlfriend.</span><br><span class="line">Singing over there is a girl, who is my girlfriend.</span><br><span class="line"></span><br><span class="line">玛丽与大卫坐在大门前</span><br><span class="line"> Mary and David were sitting in front of the gate.</span><br><span class="line">=Sitting in front of the gate were Mary and David.</span><br><span class="line">=In front of the gate were sitting Mary and David.</span><br></pre></td></tr></table></figure>
<h4 id="主语必为普通名词或专有名词"><a href="#主语必为普通名词或专有名词" class="headerlink" title="主语必为普通名词或专有名词"></a>主语必为普通名词或专有名词</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">若主语为代词时，地方副词可放在句首，但句子不倒装：</span><br><span class="line"></span><br><span class="line">他站在那儿</span><br><span class="line"> He stood there.</span><br><span class="line">=There he stood.</span><br><span class="line"></span><br><span class="line">他站在房子前面</span><br><span class="line"> He stood in front of the house.</span><br><span class="line">=In front of the house he stood.</span><br><span class="line"></span><br><span class="line">他被锁在那里</span><br><span class="line"> He was locked in there.</span><br><span class="line">=There he was locked in.</span><br></pre></td></tr></table></figure>
<h4 id="here与there的习惯用语"><a href="#here与there的习惯用语" class="headerlink" title="here与there的习惯用语"></a>here与there的习惯用语</h4><p>置于句首为代词，不倒装：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Here we are: 到了</span><br><span class="line"></span><br><span class="line">Here you are/Here you go: 拿去吧</span><br><span class="line"></span><br><span class="line">There you go again: 你又来这一套了</span><br><span class="line"></span><br><span class="line">There you are/There it is: 在那里</span><br></pre></td></tr></table></figure>
<h2 id="比较结构"><a href="#比较结构" class="headerlink" title="比较结构"></a>比较结构</h2><ol>
<li>原级比较：as</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">他和彼得一样用功</span><br><span class="line">He work as hard as Peter.</span><br><span class="line">He is as diligent as Peter.</span><br><span class="line"></span><br><span class="line">他没有Peter那么用功</span><br><span class="line">He doesn&apos;t study so hard as Peter.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>一般比较：than</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">他比彼得用功</span><br><span class="line">He is more diligent than Peter.</span><br><span class="line"></span><br><span class="line">他没有彼特更用功</span><br><span class="line">He doesn&apos;t study harder than Peter.</span><br></pre></td></tr></table></figure>
<h3 id="一般比较结构"><a href="#一般比较结构" class="headerlink" title="一般比较结构"></a>一般比较结构</h3><ol>
<li>造句方式：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a. 先造一个含有形容词或副词的句子：</span><br><span class="line"></span><br><span class="line">他很小心</span><br><span class="line">He is prudent.</span><br><span class="line">他工作很热心</span><br><span class="line">He works enthusiastically.</span><br><span class="line"></span><br><span class="line">b. 再将句中形容词或副词变成比较级：</span><br><span class="line">他比较小心</span><br><span class="line">He is more prudent.</span><br><span class="line">他工作比较不热心</span><br><span class="line">He works less enthusiastically.</span><br><span class="line"></span><br><span class="line">c. 再设定比较对象，并在该比较对象之前置副词连词than：</span><br><span class="line">He is more prudent than Peter.</span><br><span class="line">He works less enthusiastically than Peter.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>than引导的状语从句结构变化：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">若有be动词、助动词可保留，若有一般动词以do/does/did代替，当然这些也可以省略。</span><br><span class="line"></span><br><span class="line">a. be动词</span><br><span class="line">他没有你负责任</span><br><span class="line">He is less responsible than you (are).</span><br><span class="line"></span><br><span class="line">b. 助动词</span><br><span class="line">他唱歌比你悦耳</span><br><span class="line">He can sing more beautifully than you (can).</span><br><span class="line"></span><br><span class="line">c. 一般动词</span><br><span class="line">他工作比你仔细</span><br><span class="line">He worked more carefully than you (did).</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>less之后的副词或形容词均使用原级：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">他没有John勤奋</span><br><span class="line">He is less hardworking than John.</span><br><span class="line"></span><br><span class="line">他没有John那么常来看我们</span><br><span class="line">He visits us less often than John.</span><br><span class="line"></span><br><span class="line">他做事没有John那么小心</span><br><span class="line">He does things less carefully than John.</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>与本身作比较：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">他比以前用功</span><br><span class="line">He studies hander than he did before.</span><br><span class="line"></span><br><span class="line">她看来比较实际年轻</span><br><span class="line">She looks younger than she is.</span><br><span class="line"></span><br><span class="line">a. 自行比较时，句中的时态若不同：</span><br><span class="line">1). be动词</span><br><span class="line">他比以前健康(不同时态)</span><br><span class="line">He is healthier than he was.</span><br><span class="line"></span><br><span class="line">2). 助动词</span><br><span class="line">他比以前唱歌好(不同时态)</span><br><span class="line">He can sing better than he could.</span><br><span class="line"></span><br><span class="line">3). 一般动词</span><br><span class="line"></span><br><span class="line">他比以前努力</span><br><span class="line">He work hander than he did.</span><br><span class="line">                    he used to.</span><br><span class="line"></span><br><span class="line">b. 此类中若有对等的介词短语,than之后的主语及动词或助动词都可以省略：</span><br><span class="line">1) 介词短语</span><br><span class="line">他和玛丽在一起比和简在一起快乐</span><br><span class="line"> He is happier with Mary than He is with Jane.</span><br><span class="line">=He is happier with Mary than with Jane.</span><br><span class="line"></span><br><span class="line">他对英文比对日文有兴趣</span><br><span class="line">He is more interesting in English than (he is) in Janpanese. </span><br><span class="line">2) when从句</span><br><span class="line">他比我十年前看见他时瘦多了</span><br><span class="line">He is thinner than (he was) when I saw him ten years ago.</span><br></pre></td></tr></table></figure>
<ol start="5">
<li>比较结构中相同动词的化简</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我比他爱你</span><br><span class="line"> I love you more than he loves you.</span><br><span class="line">=I love you more than he does you.</span><br><span class="line">=I love you more than he does.</span><br></pre></td></tr></table></figure>
<ol start="6">
<li>数量形容词的比较级变化：<br>数量形容词：much/little/many/few</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a. much(很多的)及little(很少的)修饰不可数名词：</span><br><span class="line">原级    比较级  最高级</span><br><span class="line">much    more   the most</span><br><span class="line">little  less   the least</span><br><span class="line"></span><br><span class="line">many    more   the most</span><br><span class="line">few     fewer  the fewest</span><br><span class="line"></span><br><span class="line">他有很多钱</span><br><span class="line"> He has very much money.</span><br><span class="line">=He has a lot of money.(佳)</span><br><span class="line">肯定式中用very much或a lot of，否定式中则使用much</span><br><span class="line"></span><br><span class="line">他比John有钱</span><br><span class="line">He has more money than John (does).</span><br><span class="line"></span><br><span class="line">他是所有人中最有钱的</span><br><span class="line">He has the most money of all.</span><br><span class="line"></span><br><span class="line">他的时间很少</span><br><span class="line">He has little time.</span><br><span class="line"></span><br><span class="line">他做这工作的时间比我的少</span><br><span class="line">He has less time than I (do) for the job.</span><br><span class="line"></span><br><span class="line">他的时间最少</span><br><span class="line">He has the least time of all.</span><br><span class="line"></span><br><span class="line">b. many(很多的)及few(很少的)修饰可数的复数名词：</span><br><span class="line">他有很多朋友</span><br><span class="line">He has many friends.</span><br><span class="line"></span><br><span class="line">他的朋友比John的多</span><br><span class="line">He has more friends than John.</span><br><span class="line"></span><br><span class="line">他的朋友最多</span><br><span class="line">He has the most friends of all.</span><br><span class="line"></span><br><span class="line">他的朋友很少</span><br><span class="line">He has few friends.</span><br><span class="line"></span><br><span class="line">他的朋友比John的少</span><br><span class="line">He has fewer friends than John.</span><br><span class="line"></span><br><span class="line">他的朋友最少</span><br><span class="line">He has the fewest friends of all.</span><br></pre></td></tr></table></figure>
<ol start="7">
<li>避免错误比较</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这个篮子里的苹果比桌子上的那些要甜(与介词短语those比较)</span><br><span class="line">The apples in this basket are sweeter than those on the table.</span><br><span class="line"></span><br><span class="line">他的车子比他的朋友的好</span><br><span class="line">His car better than his friend&apos;s.</span><br></pre></td></tr></table></figure>
<ol start="8">
<li>本身最高级意味的形容词：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">已经是最高级的意味，不能使用比较级：</span><br><span class="line">perfect: 完美的</span><br><span class="line">sublime: 卓越的</span><br><span class="line">noble: 高贵的</span><br><span class="line">extreme: 极度的</span><br><span class="line">superb: 极好的</span><br><span class="line">excellent: 特优的</span><br></pre></td></tr></table></figure>
<ol start="9">
<li>变得愈来愈…</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> be getting more and more + adj.</span><br><span class="line">=be getting 比较级adj+and+比较级adj.</span><br><span class="line">=be getting increasingly+adj.</span><br><span class="line"></span><br><span class="line">那儿的生活越来越不容易</span><br><span class="line">Life over there are getting more and more difficult.</span><br><span class="line">                            increasingly difficult.</span><br><span class="line"></span><br><span class="line">那个男孩越来越胖了</span><br><span class="line">The boy is getting fatter and fatter.</span><br><span class="line">                   increasingly fat.</span><br></pre></td></tr></table></figure>
<ol start="10">
<li>修饰比较级的副词</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">置于被修饰的副词或形容词前：far/much/a lot/a great deal/still/even，其中far/much/a lot最常用</span><br><span class="line"></span><br><span class="line">这问题比那个要难多了/甚至更难</span><br><span class="line">This question is (far/much/a lot) more fifficult than than one.</span><br><span class="line"></span><br><span class="line">他比他们之中任何一个都用功得多</span><br><span class="line">He studies much harder than anyone of them.</span><br><span class="line"></span><br><span class="line">far/much/a lot可修饰副词too：</span><br><span class="line">他太老了，无法做这差事</span><br><span class="line">He is far/much/a lot too old to do the work.</span><br></pre></td></tr></table></figure>
<ol start="11">
<li>最高级的副词</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">有两个：most及least</span><br><span class="line"></span><br><span class="line">a. 形容词</span><br><span class="line"></span><br><span class="line">她是我见过最美的女孩</span><br><span class="line">She is the most beautiful girl that I&apos;ve never seen.</span><br><span class="line"></span><br><span class="line">三个女孩中，她最不好看</span><br><span class="line">Of the three girls, she is the least beautiful.</span><br><span class="line"></span><br><span class="line">b. 副词</span><br><span class="line"></span><br><span class="line">他待人最有礼貌</span><br><span class="line">He treats people most politely.</span><br><span class="line"></span><br><span class="line">c. 动词</span><br><span class="line"></span><br><span class="line">我最需要你</span><br><span class="line">I need you most.</span><br></pre></td></tr></table></figure>
<ol start="12">
<li>最高级一定要是三者以上：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a. Of/among the three/four... 在这三个/四个...之中</span><br><span class="line"></span><br><span class="line">这五本书中，我最喜欢那本</span><br><span class="line">Of five books, I like that one best.</span><br><span class="line"></span><br><span class="line">他是所有学生中最好的一个</span><br><span class="line">He is the best student of all.</span><br><span class="line"></span><br><span class="line">of the two则使用比较级</span><br><span class="line">这两个学生中，John比较好</span><br><span class="line">Of the two students, John is the better.</span><br><span class="line"></span><br><span class="line">这两本书中，我比较喜欢那本</span><br><span class="line">Of the two books, I like that one better.</span><br><span class="line"></span><br><span class="line">b. 最高级形容词+n+关系代词that(不可使用who/whom/which)+定语从句完成时：</span><br><span class="line">在我所认识的人中，John是最有责任感的一位</span><br><span class="line">John is the most responsible man (that) I&apos;ve ever known.</span><br><span class="line"></span><br><span class="line">在我教过的学生中，他是最好的一位</span><br><span class="line">He is the best students that I&apos;ve ever taught.</span><br></pre></td></tr></table></figure>
<ol start="13">
<li>the与最高级的关系：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">最高级副词修饰动词或副词时，不一定要加the，但最高级形容词修饰名词时，则须加the:</span><br><span class="line"></span><br><span class="line">a. 副词</span><br><span class="line">这四个学生中，他待人最有礼</span><br><span class="line">Of the four students, he treats people (the) most politely.</span><br><span class="line"></span><br><span class="line">b. 动词</span><br><span class="line">我所认识的人中，我最尊敬他</span><br><span class="line">Of all the people I know, I respect him (the) most.</span><br><span class="line">I respect him most that I&apos;ve ever known.</span><br><span class="line"></span><br><span class="line">c. 名词</span><br><span class="line">他是所有学生当中最好的一个</span><br><span class="line">He is the best student of all.</span><br></pre></td></tr></table></figure>
<ol start="14">
<li>most可作very解：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">加形容词修饰名词时，不必于most之前加the:</span><br><span class="line">她真是个很美的女孩子</span><br><span class="line">She is a most/very beautiful girl.</span><br></pre></td></tr></table></figure>
<ol start="15">
<li>by far可修饰最高级：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">by far及much修饰the+最高级副词或形容词：</span><br><span class="line">她是镇上最美的女孩子</span><br><span class="line">She is by far/much the most beautiful girl in town.</span><br></pre></td></tr></table></figure>
<h2 id="原级比较结构"><a href="#原级比较结构" class="headerlink" title="原级比较结构"></a>原级比较结构</h2><ol>
<li>造句方式：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">as...as...: 和...一样地...</span><br><span class="line"></span><br><span class="line">a. 先造一个含有形容词或副词的句子：</span><br><span class="line">He is prudent.</span><br><span class="line">He runs fast.</span><br><span class="line"></span><br><span class="line">b. 再于句中的形容词或副词之前置as一词as为副词，译成“一样地” ：</span><br><span class="line">他一样地小心</span><br><span class="line">He is as prudent.</span><br><span class="line">He runs as fast.</span><br><span class="line"></span><br><span class="line">c. 再设定比较对象，并在该比较对象之前置副词连接词as即告完成；此as译成</span><br><span class="line">“和” ：</span><br><span class="line">他和约翰一样小心</span><br><span class="line">He is as prudent as John.</span><br><span class="line">他跑得和约翰一样快</span><br><span class="line">He runs as fast as John.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>as从句的变化</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a. be动词</span><br><span class="line">他和约翰一样小心</span><br><span class="line">He is as prudent as John (is)</span><br><span class="line"></span><br><span class="line">b. 助动词</span><br><span class="line">他唱得和约翰一样好</span><br><span class="line">He can sing as well as John (can)</span><br><span class="line"></span><br><span class="line">c. 一般动词</span><br><span class="line">他跑得和约翰一样快</span><br><span class="line">He runs as fast as John.</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>as从句或than从句也可采倒装结构：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">他比我的好友约翰谨慎</span><br><span class="line">He is as prudent is John, who is a good friend of mine.</span><br><span class="line"></span><br><span class="line">他和我妹妹玛丽一样用功</span><br><span class="line">He studies as hand as does Mary, who is my sister. </span><br><span class="line"></span><br><span class="line">他比我妹妹玛丽用功多了</span><br><span class="line">He studies much hander than does Mary, who is my sister.</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>“as…as…”用于肯定或否定句，而”so…as…”则只能用在否定句中</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">肯定句：</span><br><span class="line">He studies as hard as Mary.</span><br><span class="line">他和栏杆一样瘦</span><br><span class="line">He is as thin as a rail.</span><br><span class="line"></span><br><span class="line">否定句：</span><br><span class="line">He doesn&apos;t study as(so) hard as Mary.</span><br><span class="line">He isn&apos;t as(so) polite as John.</span><br></pre></td></tr></table></figure>
<h2 id="其他有关as-than的重要用法"><a href="#其他有关as-than的重要用法" class="headerlink" title="其他有关as/than的重要用法"></a>其他有关as/than的重要用法</h2><ol>
<li>“as…as…”可与单数可数名词连用：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#将第一个as置于动词之后：</span><br><span class="line">He is as handsome a boy as John.</span><br><span class="line">I have as fancy a car as that one.</span><br><span class="line"></span><br><span class="line">1). 类似此种只能与单数名词连用的结构还有：</span><br><span class="line"></span><br><span class="line">so...that...:  如此...以致/所以...</span><br><span class="line">too...to...    太...而不...</span><br><span class="line">how...         多么地...</span><br><span class="line"></span><br><span class="line">a. so...that...</span><br><span class="line">他是个这么好的男孩子，所以我非常喜欢他</span><br><span class="line"> He is so a good boy that I like him very much.</span><br><span class="line">=He is such a good boy that I like him very much.</span><br><span class="line"></span><br><span class="line">b. too...to...</span><br><span class="line">他年纪太大，没法做此事</span><br><span class="line">He is too old to do it.</span><br><span class="line"></span><br><span class="line">c. how...</span><br><span class="line">他是个伟大的人物</span><br><span class="line"> What a great man he is!</span><br><span class="line">=How great man he is!</span><br><span class="line"></span><br><span class="line">2) what与such之后可修饰单复数或不可数名词：</span><br><span class="line"></span><br><span class="line">他真是个伟大的人物</span><br><span class="line">What a greate man he is!</span><br><span class="line">这真是好听的音乐(不可数)</span><br><span class="line">What beautiful music it is!</span><br><span class="line">他们真是好孩子(复数)</span><br><span class="line">What good boys they are!</span><br><span class="line">He is such a good boy that I like him.</span><br><span class="line">They are such good boys that I like them.</span><br><span class="line"></span><br><span class="line">这类只能与单数可数名词连用的结构记忆法：</span><br><span class="line">从前有个书呆子(so...that...)，他有两个朋友，一个叫阿西(as...as...),</span><br><span class="line">一个叫土土(too...to...)，三人相聚时，最爱念一个字：好(how...)</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>as…as one can 尽可能地…<br>=as…as possible</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a. 造句方法：</span><br><span class="line">1) 先造一个含有形容词或副词的句子：</span><br><span class="line">他一定要用功</span><br><span class="line">You must study hard.</span><br><span class="line">他保持沉默</span><br><span class="line">He remained quiet.</span><br><span class="line"></span><br><span class="line">2). 在hard或quiet之前置入第一个as(用副词，中文译为&quot;一样地&quot;)：</span><br><span class="line">You must study as hard.</span><br><span class="line">He remained as quite.</span><br><span class="line"></span><br><span class="line">3). 句尾添加as one(you/he...) can或possible:</span><br><span class="line">你要尽可能地用功</span><br><span class="line">You must study as hard as you can.</span><br><span class="line">                       as possible.</span><br><span class="line">He remained as quiet as he could.</span><br><span class="line">                     as possible.</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>as…as any  与任何人一样…</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">他和任何其他人一样快乐</span><br><span class="line">He is as happy a man as any.</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>as…as ever  与往常一样…</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">虽然我和他分开已久，但他还是和以前一样年轻</span><br><span class="line">Though it has been a long time since I parted for him, he is as young as ever.</span><br></pre></td></tr></table></figure>
<ol start="5">
<li><p>as…as ever lived  古今最…之一<br>=one of the+最高级…that ever lived</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">他是古今最伟大的英雄之一</span><br><span class="line"> He is as great a heo as ever lived.</span><br><span class="line">=He is one of the greatest heroes that ever lived.</span><br></pre></td></tr></table></figure>
</li>
<li><p>两个形容词的相互比较：</p>
</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">more...that结构中两个形容词比较，一律用原级：</span><br><span class="line"> He is more good than bad.</span><br><span class="line">=He is not so bad as good.</span><br><span class="line">=He is good rather than bad.</span><br></pre></td></tr></table></figure>
<ol start="7">
<li>倍数词造句法：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a. 本结构一共有四种：</span><br><span class="line">倍数词+as⋯as⋯                           是⋯的几倍</span><br><span class="line">morethan+倍数词+as⋯as⋯                 是⋯的几倍还不止</span><br><span class="line">倍数词+the（或所有格）+名词是⋯ ⋯的几倍</span><br><span class="line">more than+倍数词+the（或所有格）+名词    是...的几倍还不止</span><br><span class="line"></span><br><span class="line">他的体重是我的三倍</span><br><span class="line"> He is three times as heavy as I.</span><br><span class="line">=He is three times my weight.</span><br><span class="line">他的体重是我的三倍还不止</span><br><span class="line"> He is more than three times as heavy as I.</span><br><span class="line">=He is more than three times my weight.</span><br><span class="line"></span><br><span class="line">b. 倍数词+as...as...    是...的几倍</span><br><span class="line">含有as...as...的短语，句中必须要用形容词或副词：</span><br><span class="line">他用功的程度是的3倍</span><br><span class="line">He studies hard.</span><br><span class="line">He studies as hard as I.</span><br><span class="line">将倍数词置于as...as...之前</span><br><span class="line">He studies three times as hard as I.</span><br><span class="line"></span><br><span class="line">I am three times as old as he.</span><br><span class="line"></span><br><span class="line">c. more than+倍数词+as...as...    是...的几倍还不止</span><br><span class="line">  =倍数词+more...than...</span><br><span class="line">他的用功是我的三倍还不止</span><br><span class="line">He studies hard.</span><br><span class="line">He studies as hard as I.</span><br><span class="line">He studies three times as hard as I.</span><br><span class="line">He studies more than three times as hard as I.</span><br><span class="line">He studies three times harer than I.</span><br><span class="line"></span><br><span class="line"> He is more than three times as diligent as I.</span><br><span class="line">=he is three times more diligent than I.</span><br><span class="line"></span><br><span class="line"> I am more than three times as old as he.</span><br><span class="line">=I am three times more older than he. </span><br><span class="line"></span><br><span class="line">d. 倍数词+the(that/his/those/these/所有格)+名词    是...的几倍</span><br><span class="line">   本结构必须要与名词连用</span><br><span class="line">他是钱是我的两倍</span><br><span class="line">1. 先译&quot;他有我的钱&quot;</span><br><span class="line">He has my money.</span><br><span class="line">2. 再将倍数置于所有格之前</span><br><span class="line">He has twice my money.</span><br><span class="line"></span><br><span class="line">3. more than+倍数词+the(或所有格)+名词    是...的几倍还不止</span><br><span class="line">他的钱是我的两位还不止</span><br><span class="line">1. He has my money.</span><br><span class="line">2. He has twice my money.</span><br><span class="line">3. He has more than twice my money.</span><br><span class="line"></span><br><span class="line">f. 下列词类均视为倍数词：</span><br><span class="line">one-third      三分之一</span><br><span class="line">two-thirds     三分之二</span><br><span class="line">three-fourths  四分之三</span><br><span class="line"></span><br><span class="line">我的年龄只有你的一半</span><br><span class="line">I am half as old as you.</span><br><span class="line"></span><br><span class="line">我的用功程度仅及他的三分之一</span><br><span class="line">I study only one-third as hard as he.</span><br><span class="line"></span><br><span class="line">她的体重有我的两倍</span><br><span class="line">She is twice my weight.</span><br><span class="line"></span><br><span class="line">g. 特殊结构：</span><br><span class="line">1. twice as⋯as⋯（常用）是⋯ ⋯的两倍</span><br><span class="line">他的年纪是我的两倍</span><br><span class="line">He is twice as old as I.</span><br><span class="line"></span><br><span class="line">2. one and a half times as⋯as...   是⋯的一倍半</span><br><span class="line">He 15 eight years old, and I am one and a half times as old as he·</span><br><span class="line"></span><br><span class="line">3. as many as+数词+复数名词    多达⋯</span><br><span class="line">这次空难中多达100人丧生</span><br><span class="line">As many as one hundred people were killed in the air crash.</span><br><span class="line">桌上的苹果有5个之多</span><br><span class="line">There are as many as five apples on the table.</span><br><span class="line">as much as+金钱名词: 他身上有50块钱之多</span><br><span class="line">He has as much as fifty dollars with him.</span><br><span class="line"></span><br><span class="line">as long  as+数词十名词    长达...</span><br><span class="line">as wide  as+数词十名词    宽达...</span><br><span class="line">as high  as+数词十名词    高达...</span><br><span class="line">as early as+数词+名词    早在...</span><br><span class="line">as late  as+数词+名词    迟至...</span><br><span class="line"></span><br><span class="line">我学英文已有25年之久</span><br><span class="line">I&apos;ve been learning English as long as 25 years.</span><br><span class="line">这条河宽达100米</span><br><span class="line">This river is as wide as 100 meters.</span><br><span class="line">我早在星期五就把信寄了</span><br><span class="line">I mailed the letter as early as Friday.</span><br><span class="line">他迟至清晨两点才回家</span><br><span class="line">he came home as late as two in the morning.</span><br></pre></td></tr></table></figure>
<ol start="8">
<li>the+比较级…, the+比较级…    愈…就愈…</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">使用本句型的先决条件为：句中要有副词或形容词：</span><br><span class="line">a. 造句法：</span><br><span class="line">你愈用功，你就愈能成为一个好学生</span><br><span class="line">1. 加入The..., the...:</span><br><span class="line">   The____..., the____...</span><br><span class="line">2. 将中文句子中的“愈”去掉，变成：</span><br><span class="line">   你用功，你就能成为一个好学生：</span><br><span class="line">   You study hard, you&apos;ll become a good student.(x)</span><br><span class="line">3. 将第二步中的英文句子置于第一步中的空格后：</span><br><span class="line">   The____you study hard, the____you&apos;ll become a good student.</span><br><span class="line">4. 将第三步中的形容词或副词移位到空格中，并变成比较级。若形容词之后有名词，该名词也要移位，</span><br><span class="line">   而原有的a或an则删除：</span><br><span class="line">   The harder you study, the better student you&apos;ll become.</span><br><span class="line"></span><br><span class="line">你愈谨慎，你犯的错就愈少</span><br><span class="line">1. The___..., the___...</span><br><span class="line">2. You are careful, you&apos;ll make few mistakes.(x)</span><br><span class="line">3. The___you are careful, the___you&apos;ll make few mistakes.</span><br><span class="line">4. The more careful you are, the fewer mistakes you&apos;ll make.</span><br><span class="line"></span><br><span class="line">b. 使用“愈...就愈...”的结构时，要注意两点：</span><br><span class="line">1. 若句中没有副词或形容词时，则在The或the之后置副词more或less:</span><br><span class="line">你愈爱我，我就对你愈好</span><br><span class="line">The___you love me, the___I&apos;ll be nice to you.</span><br><span class="line">The more you love me, the nicer I&apos;ll be to you.</span><br><span class="line"></span><br><span class="line">d. 比较级+and+比较级    愈来愈...</span><br><span class="line">It is getting warmer and warmer every year.</span><br><span class="line">The girl became more and more beautiful.</span><br></pre></td></tr></table></figure>
<h2 id="代词-1"><a href="#代词-1" class="headerlink" title="代词"></a>代词</h2><h3 id="it作形式主语"><a href="#it作形式主语" class="headerlink" title="it作形式主语"></a>it作形式主语</h3><ol>
<li>代替不定式</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> It is good to study.</span><br><span class="line">=To study is good.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>代替that名词性从句</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">他想读书，这是件好事</span><br><span class="line">It&apos;s good that he wants to study.</span><br><span class="line">That he wants to study is good.</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>代替动名词</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">整天看小说是没用的</span><br><span class="line"> It&apos;s no use/good reading novels all day long.</span><br><span class="line">=It&apos;s of no use to read novels all day long.</span><br><span class="line">=There is no use (in) reading novels all day long.</span><br></pre></td></tr></table></figure>
<h3 id="it作形式宾语"><a href="#it作形式宾语" class="headerlink" title="it作形式宾语"></a>it作形式宾语</h3><ol>
<li>但动词虽加宾语，意思却不完整，而需要补充说明，谓不完全及物动词，其补充语一定是名词或形容词（包括分词变成的形容词）：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我认为他人很好</span><br><span class="line">I consider him good.</span><br><span class="line">I consider him a good man.</span><br><span class="line">I consider her beautiful.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>不定式或that从句有名词的功能，可作主语，亦可作宾语:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">I think that he is good.</span><br><span class="line"></span><br><span class="line">To sutdy abroad has always been my dream.</span><br><span class="line">I want to go.</span><br><span class="line">That he doesn&apos;t study is true.</span><br><span class="line"></span><br><span class="line">但两者却不能直接作不完全及物动词之宾语，必须用it代替:</span><br><span class="line">I think that he is good true.(x)</span><br><span class="line">I think it true that he is good.</span><br><span class="line"></span><br><span class="line">I think to get up early good.(x)</span><br><span class="line">I think it good to get up early.</span><br><span class="line"></span><br><span class="line">以下是常用的不完全及物动词：</span><br><span class="line">think    认为⋯ ⋯是⋯ ⋯</span><br><span class="line">consider 认为⋯ ⋯是⋯ ⋯</span><br><span class="line">deem     认为⋯ ⋯是⋯ ⋯</span><br><span class="line">believe  相信⋯ ⋯是⋯ ⋯</span><br><span class="line">find     发现⋯ ⋯是⋯ ⋯</span><br><span class="line"></span><br><span class="line">I consider it necessary to excercise on a daily basis.</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>it亦可用以强调介词短语或状语从句：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我是在1974年开始学英文的</span><br><span class="line">It was in 1974 that I began to study English.</span><br><span class="line"></span><br><span class="line">他是因为懒惰的关系而失败的</span><br><span class="line">It was because he was lazy that he failed.</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>数量代词的用法：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">most of the(或my/your...)+不可数名词+单数动词</span><br><span class="line">all                       复数名词+复数动词</span><br><span class="line">some</span><br><span class="line">half</span><br><span class="line">part</span><br><span class="line">the rest</span><br><span class="line">one-third</span><br><span class="line">two-thirds</span><br><span class="line">none</span><br><span class="line"></span><br><span class="line">大部分的钱都被窃了(money前不得加the)</span><br><span class="line">Most of money was stolen.</span><br><span class="line">部分学生在这儿</span><br><span class="line">Some of the students are here.</span><br><span class="line">所有学生都在这儿</span><br><span class="line">All of the students are here.</span><br><span class="line">他所有的演播都在这儿</span><br><span class="line">All of his students are here.</span><br><span class="line">有三分之一的学生通过了测验</span><br><span class="line">One third of the students have passed the test.</span><br><span class="line">70％的水被污染了</span><br><span class="line">Seventy percent of the water is contaminated.</span><br><span class="line">70％的学生没考及格</span><br><span class="line">Seventy percent of the students have failed the test.</span><br></pre></td></tr></table></figure>
<ol start="5">
<li>almost/most/all的关系：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">almost  为副词表“几乎”, 不能作代词。</span><br><span class="line">most    为形容词（大多数的，最多的）、副词（最），亦可作代词，表“大多数”</span><br><span class="line">all     为形容词（所有的），亦可作代词（全部），可用almost修饰。</span><br><span class="line"></span><br><span class="line">大多数学生在这儿(代词)</span><br><span class="line">Most of the students are here.</span><br><span class="line">所有的学生都在这儿(代词)</span><br><span class="line">All of the students are here.</span><br><span class="line">几乎所有的学生都在这儿(adv)</span><br><span class="line">Almost all of the students are here.</span><br><span class="line">大多数学生都喜欢音乐(adj)</span><br><span class="line">Most students love music.</span><br><span class="line">所有学生都喜欢音乐(adj)</span><br><span class="line">All students love music.</span><br></pre></td></tr></table></figure>
<ol start="6">
<li>人称代词</li>
</ol>
<p><img src="/images/A-Guide-to-English-Grammar/Grammar_it.png" alt="Grammar_it.png"><br><img src="/images/A-Guide-to-English-Grammar/Grammar_it2.png" alt="Grammar_it2.png"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">她自杀了</span><br><span class="line">She killed herself.</span><br><span class="line">她的书和我的一样有趣</span><br><span class="line">her books are as interesting as mine.</span><br></pre></td></tr></table></figure>
<ol start="7">
<li>反身代词的强势用法</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">他亲自做这件事</span><br><span class="line">He himself did it.</span><br><span class="line">He did it himself.</span><br></pre></td></tr></table></figure>
<ol start="8">
<li>a friend of mine/this book of hers的用法</li>
</ol>
<p><img src="/images/A-Guide-to-English-Grammar/Grammar_it3.png" alt="Grammar_it3.png"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">他是我的一位朋友</span><br><span class="line">He is a friend of mine.</span><br><span class="line">你的这位朋友是个好人</span><br><span class="line">This friend of yours is good.</span><br><span class="line"></span><br><span class="line">上述结构使用到“ of十所有格代词”时，均可与不定冠词（a 、 an）、指示代词( this 、 that 、 these 、 those 、which）或数词（some 、 a few 、 ten 、 many 、most ⋯）连用，但不可与定冠词the连用，换言之，无下列用法：</span><br><span class="line">他是我最好的朋友</span><br><span class="line">He is the best of mine.(x)</span><br><span class="line">He is my best friend.</span><br><span class="line">他是我最好的朋友其中一个</span><br><span class="line">He is one of my best friends.</span><br></pre></td></tr></table></figure>
<ol start="9">
<li>those who/those whom</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">叫那些迟到的人来见我</span><br><span class="line">Tell those who are late to come and see me.</span><br><span class="line">虚无主义者对伊凡的画感兴趣</span><br><span class="line">Evan&apos;s paintings are interesting to those who believe in nihilism.</span><br></pre></td></tr></table></figure>
<ol start="10">
<li>each other/one another</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a. each other    两者彼此</span><br><span class="line">   one another   三者或三者以上彼此</span><br><span class="line"></span><br><span class="line">这两位同学彼此都很喜欢对方</span><br><span class="line">The two students like each other.</span><br><span class="line">这五位同学彼此互相讨厌</span><br><span class="line">The five student hate on another.</span><br><span class="line"></span><br><span class="line">b. one after the other    两者相继地</span><br><span class="line">   one after another      三者或三者以上相继地</span><br><span class="line"></span><br><span class="line">他相继地举起左右手</span><br><span class="line">He raised his hands one after the other.</span><br><span class="line">所有学生一个接一个地进来</span><br><span class="line">All the students came in one after another.</span><br></pre></td></tr></table></figure>
<ol start="11">
<li>either/neither/both/all/any/none作代词的用法</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">either（两者中任一）    any（三者或以上任一）</span><br><span class="line">neither（两者皆不）     none（三者或以上皆不）</span><br><span class="line">both（两者皆）          all（三者或以上皆）</span><br><span class="line"></span><br><span class="line">你上咖啡也好，茶也好，我都不在乎随便哪样都行</span><br><span class="line">I don&apos;t care whether you serve coffee or tea; either will do.</span><br><span class="line">这四把椅子没有一把是我喜欢的</span><br><span class="line">I don&apos;t like any of the four chairs.</span><br><span class="line">这两本书都不好</span><br><span class="line">Neither of the two books is good.</span><br><span class="line">三个学生中没有一个是用功的</span><br><span class="line">None of the three students is(或are) diligent.</span><br><span class="line">那两个学生都懒惰</span><br><span class="line">Both of the two students are lazy.</span><br><span class="line">这五个苹果都烂掉了</span><br><span class="line">All of the five apples are rotten.</span><br></pre></td></tr></table></figure>
<ol start="12">
<li>one…the other…    一个…另一个…(限定的两者)</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">他有两个儿子。一个是老师, 另一个则是军人。</span><br><span class="line">He have two sons. One is a teacher, and the other is a soldier.</span><br></pre></td></tr></table></figure>
<ol start="13">
<li>one…another…the other…    一个…一个…另一个…(限定的三者)</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">他有三个儿子。一个是老师，一个是军人，另一个则是律师</span><br><span class="line">He have three sons. One is a teacher, another is a soldier, and the other is a lawyer.</span><br></pre></td></tr></table></figure>
<ol start="14">
<li>one…another…    一个…另一个…(非限定的两者)</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">嗜好因人而异。某甲可能喜欢游泳，某乙则可能喜欢远足</span><br><span class="line">Hobbies vary with people. One may enjoy swimming, while another may love hiking.</span><br></pre></td></tr></table></figure>
<ol start="15">
<li>some…others…    一些…另一些…(非限定的两群)</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">嗜好因人而异。有些人可能喜欢游泳，有些人则可能喜欢远足</span><br><span class="line">Hobbies vary with people. Some may enjoy swimming, while others may love hiking.</span><br></pre></td></tr></table></figure>
<ol start="16">
<li>some…others…still others…    一些…一些…另一些…</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">嗜好因人而异。有些人可能喜欢游泳，有些人可能喜欢蹦极，也有些人则喜欢远足</span><br><span class="line">Hobbies vary with people. Some may enjoy swimming, others may be fond of bungee jumping, and still others may love hiking.</span><br></pre></td></tr></table></figure>
<ol start="17">
<li>明确数词…the others/the rest…    若干…其他/其余</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我班上只有两个学生通过考试，其余全不及格</span><br><span class="line">Only two students in my class passed the test. The others failed.</span><br></pre></td></tr></table></figure>
<h2 id="复合形容词"><a href="#复合形容词" class="headerlink" title="复合形容词"></a>复合形容词</h2><ol>
<li>数词+名词</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这个计划会持续一年，但那个计划则会持续五年</span><br><span class="line">This program will last one year, but that program will last five years.</span><br><span class="line">这项五年计划执行起来得超过五年(five一year中的名词为单数)</span><br><span class="line">This five一year plan may take more than five years to carry out.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>数词+名词+形容词</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">约翰五岁了</span><br><span class="line">John is five years old.</span><br><span class="line">约翰是五岁的男孩</span><br><span class="line">John is a five一year一old boy.</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>名词+现在分词</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">玛丽是个喜欢伤男孩子心的女孩</span><br><span class="line">Mary is a girl who likes to break boys&apos; hearts.</span><br><span class="line">玛丽是个会伤人心的女孩</span><br><span class="line">Mary is a heart一breaking girl.</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>副词+现在分词</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这块低洼地区淹水了</span><br><span class="line">The area which lay low was flooded.</span><br><span class="line">这块低洼地区淹水了</span><br><span class="line">The low一lying area was flooded.</span><br></pre></td></tr></table></figure>
<ol start="5">
<li>名词+过去分词</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我为那个心碎的男孩子感到难过</span><br><span class="line">I feel sorry for the boy whose heart is broken.</span><br><span class="line">我为那个心碎的男孩感到难过</span><br><span class="line">I feel sorry for the heart一broken boy.</span><br></pre></td></tr></table></figure>
<ol start="6">
<li>形容词+名词变成的过去分词</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">那个大眼睛的女孩子是谁</span><br><span class="line">Who is that big一eyed girl?</span><br></pre></td></tr></table></figure>
<ol start="7">
<li>well/ill+过去分词</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">well一behaved    很守规矩的</span><br><span class="line">well一bred       很有教养的</span><br><span class="line">well一built      体格很棒的</span><br><span class="line">well一chosen     慎选的</span><br><span class="line">well一done       表现很棒的；（牛排）全熟的</span><br><span class="line">well一dressed    穿着体面的</span><br><span class="line">well一known      很出名的</span><br><span class="line">well一mannered   彬彬有礼的</span><br><span class="line">well一read       书读得很多的，饱读诗书的</span><br><span class="line">well一traveled   去过很多地方的，老马识途的</span><br><span class="line">ill一bred        没有教养的</span><br><span class="line">111一considered  考虑不周的</span><br><span class="line">111一fated       命运不好的，不幸的</span><br><span class="line">ill一gotten      用不正当手段获得的</span><br><span class="line">illjudged       判断不当的</span><br><span class="line">111一mannered    态度不好的</span><br><span class="line">111一natured     心地不好的，本性坏的</span><br><span class="line">good一natured    本性善良的（非well一attired )</span><br><span class="line"></span><br><span class="line">我喜欢这孩子，因为他很乖</span><br><span class="line">I like the child because he is well一behaved.</span><br><span class="line">这位命苦的年轻人最后自杀了</span><br><span class="line">The ill一fated young man committed suicide in the long run.</span><br></pre></td></tr></table></figure>
<h2 id="介词用法"><a href="#介词用法" class="headerlink" title="介词用法"></a>介词用法</h2><h3 id="at"><a href="#at" class="headerlink" title="at"></a>at</h3><ol>
<li>at+建筑物</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我们将在车站碰面</span><br><span class="line">We will meet at the station.</span><br><span class="line"></span><br><span class="line">a．城市、国家等则与介词in连用</span><br><span class="line">b．若强调“在某建筑物内”则介词仍须使用in</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>at+人对某人（尤指近距离常与yell/point/shout/laugh等动词连用。此处at表“朝向” )</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yell/shout at 人    对某人吼叫／咆哮</span><br><span class="line">laugh at 人         嘲笑某人</span><br><span class="line">point at 人         指着某人</span><br><span class="line"></span><br><span class="line">那个男人生气时总是对他的太太咆哮</span><br><span class="line">The man always shouts at his wife when he is angry.</span><br><span class="line">强尼，不要嘲笑那个可怜的乞丐</span><br><span class="line">Don&apos;t laugh at the poor beggar, Johnny.</span><br><span class="line">老师指着他说；“我看到你考试时作弊。 ”</span><br><span class="line">The teacher pointed at him and said, &quot;I saw you cheat on the test.&quot;</span><br><span class="line"></span><br><span class="line">point to...    指着远处的...</span><br><span class="line">他指着山顶上的房子说：“那是我的家。 ”</span><br><span class="line">He pointed to the house on the hilltop and said, &quot;It&apos;s my house.&quot;</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>at与下列名词连用表“从事某活动” </li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">be atwork      上班，做事</span><br><span class="line">be at church   做礼拜</span><br><span class="line">be at school   上学</span><br><span class="line">be at rest     休息</span><br><span class="line"></span><br><span class="line">莎琳娜正在工作，不要打扰她</span><br><span class="line">Selena is at work now; don&apos;t bother her.</span><br><span class="line">你现在可以去问经理；他正在大厅里休息</span><br><span class="line">You can go ask the manager now; he is at rest in the lobby.</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>at亦与度数／程度／价格／年龄等与数词有关的名词连用</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">at the price/cost/expense of+数词    以⋯ ⋯的价格</span><br><span class="line">at the age of+年龄                   在⋯ ⋯的岁数时</span><br><span class="line">at the speed of+速度                 以⋯ ⋯的速度</span><br><span class="line"></span><br><span class="line">我以450美元的价格买了这台CD随身听</span><br><span class="line">I bought the portable CD player at the price of $450</span><br><span class="line">珊蒂在32岁时生了第一个小孩</span><br><span class="line">Sandy had her first child at the age of 32.</span><br><span class="line">她当时以时速28英里的速度开车</span><br><span class="line">She drove at the speed of 28 miles an hour.</span><br></pre></td></tr></table></figure>
<h3 id="by"><a href="#by" class="headerlink" title="by"></a>by</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 表“在⋯ ⋯之旁＂相当于beslde:</span><br><span class="line">by the window    在窗边</span><br><span class="line">by the door      在门边</span><br><span class="line">by my side       在我旁边</span><br><span class="line"></span><br><span class="line">他走过来站在我旁边</span><br><span class="line">He came over and stood by my side.</span><br><span class="line"></span><br><span class="line">2. 表“凭借”:</span><br><span class="line">   judge A by B    借由B来评鉴、判断A</span><br><span class="line">   tell A by B     借由B知道是A</span><br><span class="line"></span><br><span class="line">不要以貌取人</span><br><span class="line">Don&apos;t judge a person by his or her looks.</span><br><span class="line"></span><br><span class="line">3. by与下列表“抓”有关的动词连用，仍表’ ‘借由”:</span><br><span class="line">catch/grab/grasp/hold/seize/take+人+by the+身体部位或衣物的部分    抓住某人的⋯</span><br><span class="line">那个男人抓住他的衣领叫他闭嘴</span><br><span class="line">The man seized him by the collar and told him to shut up.</span><br><span class="line">注意：by后面不能接所有格，只能接the.</span><br><span class="line">我抓住了他的手</span><br><span class="line">I caught him by the hand.</span><br><span class="line"></span><br><span class="line">4. by亦表“经过”之意:</span><br><span class="line">pass by my house     经过我家</span><br><span class="line">drive by my house    开车经过我家</span><br><span class="line">walk by my house     走路经过我家</span><br><span class="line"></span><br><span class="line">我经过家门而没有走进去</span><br><span class="line">I passed by my house and didn&apos;t walk in.</span><br><span class="line"></span><br><span class="line">5. by亦表“差距”之意尤用于下列用法：</span><br><span class="line">be older than+人+by two years       比某人大两岁</span><br><span class="line">be younger than+人+ by two years    比某人小两岁</span><br><span class="line"></span><br><span class="line">她比我大五岁</span><br><span class="line">She is older than I by five years.</span><br><span class="line">我们以两分之差赢了另一队</span><br><span class="line">We beat the  other team by two points.</span><br><span class="line"></span><br><span class="line">6. by亦表“按照”</span><br><span class="line">我的表现在是5点20</span><br><span class="line">It is five twenty by my watch.</span><br><span class="line"></span><br><span class="line">7. by亦表”取道”</span><br><span class="line">come back by way of Hong Kong   取道香港回来</span><br><span class="line">=come back via Hong Kong</span><br><span class="line"></span><br><span class="line">我们取道香港前往北京</span><br><span class="line">We went to Beijing by way of Hong Kong.</span><br><span class="line"></span><br><span class="line">8. by亦表&quot;乘坐（交通工具）&quot;:</span><br><span class="line">come back by bus/train/ship/air/bicycle/motorcycle</span><br><span class="line">乘公车／火车／船／飞机／（骑）自行车／（骑）摩托车回来</span><br><span class="line">他每天乘出租车上班</span><br><span class="line">He goes to work by taxi every day.</span><br><span class="line"></span><br><span class="line">9. by用于被动语态表“被...”</span><br><span class="line">他被车撞死了</span><br><span class="line">he was killed by a car.</span><br><span class="line"></span><br><span class="line">10. by亦可用于主动语态</span><br><span class="line">by+动名词    用/借由...</span><br><span class="line">他借由努力而成功</span><br><span class="line">He succeeded by working hard.</span><br><span class="line">那个老太太以卖水果为生</span><br><span class="line">The old woman makes a living by selling fruit.</span><br><span class="line"></span><br><span class="line">11. by+时间最迟不超过某时间</span><br><span class="line">Come back by ten</span><br><span class="line">=Come back no later than ten.</span><br><span class="line">十点以前要回来</span><br></pre></td></tr></table></figure>
<h3 id="for"><a href="#for" class="headerlink" title="for"></a>for</h3><ol>
<li>与表“动身”之意的动词连用，表“前往（某地）”</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set out/set off/depart for+地点    动身前往某地</span><br><span class="line">head for/to+地点                   朝某地前进</span><br><span class="line">leave A地 for B地                   离开A地前往B地</span><br><span class="line"></span><br><span class="line">她昨晚动身前往美国</span><br><span class="line">She set out for American last night.</span><br><span class="line">看完电影后我们就前往酒吧</span><br><span class="line">We headed to the pub after the movie.</span><br><span class="line">他昨天离开澳大利亚前往新西兰</span><br><span class="line">He leave Australia for New Zealand yesterday.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>表“为⋯的目的”:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">do it for you       为了你做这件事</span><br><span class="line">for the sake of..． 为了⋯的缘故</span><br><span class="line"></span><br><span class="line">不要责怪他。毕竟，他这件事是为你做的</span><br><span class="line">Don&apos;t blame on him. After all, he did it for you.</span><br><span class="line">他做每件事都是为了钱</span><br><span class="line">He doe everything for the sake of money.</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>表”赞成”</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> be for+事    赞成某事</span><br><span class="line">=be in favor of+事</span><br><span class="line">你赞成他的想法吗？</span><br><span class="line"> Are you for his idea?</span><br><span class="line">=Are you in favor of his idea?</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>表“为了⋯的原因”：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">reward+人+for+事    因为某事而奖励某人</span><br><span class="line">村民报答他救了那位小女孩</span><br><span class="line">The villagers rewarded him for saving the girl.</span><br></pre></td></tr></table></figure>
<ol start="5">
<li>表”当作”：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use A for B    把A当作B使用</span><br><span class="line">take A for B   （误）把A当作B</span><br><span class="line">那些原住民以一些昆虫为食</span><br><span class="line">The natives use insects for food.</span><br><span class="line">我把约翰误当作女孩子，因为他留长发</span><br><span class="line">I took John for a girl because he wears long hair.</span><br></pre></td></tr></table></figure>
<ol start="6">
<li>表”找寻”：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">be hard pressed for time    时间不够用（而须寻找时间）</span><br><span class="line">look for...    寻找...</span><br><span class="line"></span><br><span class="line">那位女士扮演多重角色。她的时间总是不够用</span><br><span class="line">The lady wears many hats. She is always hard pressed for time.</span><br></pre></td></tr></table></figure>
<ol start="7">
<li>表”持续（一段时间）”:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我已经学了三年的日文了</span><br><span class="line">I have been learning Japanese for three years.</span><br><span class="line">我好长一段时间没见到约翰了</span><br><span class="line">I haven&apos;t seen John for a long time.</span><br><span class="line">                    for ages.</span><br></pre></td></tr></table></figure>
<ol start="8">
<li>for亦用于下列句型中</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">It is+非表人之本性或气质的形容词+for sb to+原形动词⋯</span><br><span class="line">对某人来说（做）⋯ ⋯是⋯ ⋯的。</span><br><span class="line"></span><br><span class="line">学英文对你来说是有必要的</span><br><span class="line">It is necessary for you to study English.</span><br><span class="line">你能帮我真是太好了</span><br><span class="line">It is very kind for you to help me.</span><br></pre></td></tr></table></figure>
<ol start="9">
<li>表“开往（某地点）帕勺交通工具）”：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">往芝加哥的班机将在2点30分起飞</span><br><span class="line">The flight for Chicago will depart at 2:30.</span><br></pre></td></tr></table></figure>
<ol start="10">
<li>表“以…价格” :</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这本书我10元就买到了</span><br><span class="line">I bought this book for only $10.</span><br></pre></td></tr></table></figure>
<h3 id="from"><a href="#from" class="headerlink" title="from"></a>from</h3><ol>
<li>表”从…”:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from A to B          从A到B</span><br><span class="line">from what he said    从他所说的话</span><br><span class="line">go from bad to worse 每况愈下</span><br><span class="line"></span><br><span class="line">从上海飞往香港要花一个多小时</span><br><span class="line">It takes more than an hour to fly from Shanghai to Hong Kong.</span><br><span class="line">从他的话中我无法了解他的意思</span><br><span class="line">I couldn&apos;t figure out what he meant from his words. </span><br><span class="line">从那次事件后，他们的生意就每况愈下</span><br><span class="line">Their business has gone from bad to worse since that incident.</span><br><span class="line"></span><br><span class="line">be made from...    由...做的（成品不能还原成原料）</span><br><span class="line">这酒是葡萄酿造的</span><br><span class="line">This wine is made from grapes.</span><br><span class="line">be made of...      由...做的（制成的成品其原料本质不变）</span><br><span class="line">这张桌子是木头打造的</span><br><span class="line">This table is made of wood.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>from亦可与表“禁止、阻止、保护”有关的动词连用此处from表“免于” </li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ban/prohibit/restrict/restrain sb from+动名词    禁止某人（做）</span><br><span class="line">prevent/stop/keep sb from+动名词                 阻止某人（做）⋯</span><br><span class="line">protect sb from+动名词                           保护某人免于⋯</span><br><span class="line"></span><br><span class="line">他被禁止在大厅里抽烟</span><br><span class="line">He was prohibited from smoking in the lobby.</span><br><span class="line"></span><br><span class="line">那位女士及时赶来阻止了她的儿子自杀</span><br><span class="line">The lady came in time to prevent her son from killing himself.</span><br><span class="line"></span><br><span class="line">王子保护公主免受盗匪攻击</span><br><span class="line">The prince protected the princess from being attacked by the bandit.</span><br><span class="line"></span><br><span class="line">我们老师禁止我们带漫画书到学校</span><br><span class="line">Our teacher forbid us to bring comic books to school.</span><br></pre></td></tr></table></figure>
<h3 id="in"><a href="#in" class="headerlink" title="in"></a>in</h3><ol>
<li>表“穿/戴着…”</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">be dressed in⋯    身穿/戴着⋯</span><br><span class="line">wear...</span><br><span class="line"></span><br><span class="line">那个穿着红衣服的女孩是谁?</span><br><span class="line">Who is the girl that is dressed in red?</span><br><span class="line">Who is the girl that is wearing a red dress?</span><br><span class="line"></span><br><span class="line">她出门前穿上她的外套</span><br><span class="line">She put on her coat before going out.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>“in＋一段时间”表“在一段时间之后”，相当于“一段时间+later”，亦可表“在一段时间之内”此时in相当于within:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我两分钟后就会回来</span><br><span class="line">I&apos;ll be back in two minutes.</span><br><span class="line">I&apos;ll be back two minutes later.</span><br><span class="line">我想我在两分钟内就可以完成这份工作</span><br><span class="line">I think I can finish the work within 2 minutes.</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>表“以⋯ ⋯（颜料、工具等）”</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">write the letter in ink/pencil    用墨水/铅笔写信</span><br><span class="line">write the word in chalk            用粉笔写字</span><br><span class="line"></span><br><span class="line">钢笔写字</span><br><span class="line">write the words in ink</span><br><span class="line">=Write the words with a pen</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>表“按…次序”:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">in alphabetical order    按字母顺序</span><br><span class="line">keep...in order          将⋯整理好/整齐</span><br><span class="line"></span><br><span class="line">他把文件按照字母顺序放人档案夹中</span><br><span class="line">He put ine papers in the folders in alphabetical order.</span><br><span class="line">客人来之前把你的房间整理好</span><br><span class="line">Keep your room in order before the guests come.</span><br></pre></td></tr></table></figure>
<ol start="5">
<li>表“以⋯语言/声音”:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">write in Chinese      用中文写</span><br><span class="line">speak in a low voice  低声说话</span><br><span class="line">talk in a bitter tone 以尖刻的语调说话</span><br><span class="line"></span><br><span class="line">这老外会写中文，真令人惊讶</span><br><span class="line">It&apos;s surprising that the foreigner can write in Chinese.</span><br><span class="line">凯特正低声在和她的朋友说话</span><br><span class="line">Ketty is speaking to her friend in a low vice.</span><br><span class="line">我母亲凝视着提姆，并以尖刻的语调说话</span><br><span class="line">My monther stared at Tom and talked in a bitter tone.</span><br><span class="line">那个男子说话带有浓重的日本口音</span><br><span class="line">The man spoke with a heavy Japanese accent.</span><br></pre></td></tr></table></figure>
<h3 id="on"><a href="#on" class="headerlink" title="on"></a>on</h3><ol>
<li>与表“距离”的名词连用：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">go on a trip/journey    去旅行</span><br><span class="line">go on an expedition    去探险／远征</span><br><span class="line">go on an excursion    （尤指团体）去远足</span><br><span class="line"></span><br><span class="line">我先生喜欢在每年的这个时候去日本旅行</span><br><span class="line">My husband likes to go on a trip to Japan at this time of the year.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>与表“差遣”的名词连用:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">be on an errand    跑腿，办差事</span><br><span class="line">be on a mission    身负使命</span><br><span class="line"></span><br><span class="line">他出去办点差事</span><br><span class="line">He is on an errand.</span><br><span class="line">那些军人被派往前线作战</span><br><span class="line">The soldiers were sent to  the front on a mission.</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>与表“约会”的名词连用</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">be on a date with sb    跟某人约会</span><br><span class="line"></span><br><span class="line">你昨晚和那边那位男士约会吗?</span><br><span class="line">Were you on a date with the man over there last night?</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>与表“特别饮食”的名词连用：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">be on a diet    节食</span><br><span class="line"></span><br><span class="line">辛蒂不会吃这些蛋糕的。她正在节食</span><br><span class="line">Cindy won&apos;t eat these cakes. She is on a diet.</span><br></pre></td></tr></table></figure>
<ol start="5">
<li>与表“平地”或“大陆”的名词连用：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">on campus          在校园内</span><br><span class="line">on the mainland    在大陆</span><br><span class="line">on the farm/ranch  在农场/牧场上</span><br><span class="line"></span><br><span class="line">他们在牧场上饲养牛羊</span><br><span class="line">They rear cattle and sheep on the ranch.</span><br><span class="line"></span><br><span class="line">off campus    在校外</span><br><span class="line">学生即使在校外也应该守规矩</span><br><span class="line">The students should behave themselves even off campus.</span><br></pre></td></tr></table></figure>
<ol start="6">
<li>与表“线状／线条”意味的名词连用：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">live on that street          住在那条街上</span><br><span class="line">walk on the beach            在海滩散步（海滩为线状）</span><br><span class="line">on the coast                 在海岸上</span><br><span class="line">on the brim/edge/verge of... 在⋯的边缘</span><br><span class="line">on the frontier              在边境</span><br><span class="line"></span><br><span class="line">我喜欢和男友在海滩散步</span><br><span class="line">I like to walk on the beach with my boyfriend.</span><br></pre></td></tr></table></figure>
<ol start="7">
<li>表“借由”之意:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">on foot    步行（非by foot)</span><br><span class="line"></span><br><span class="line">你每天早上都是走路上学吗？</span><br><span class="line">Do you go to school on foot every morning?</span><br></pre></td></tr></table></figure>
<ol start="8">
<li>表“凭借、遵照”：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">act on one&apos;s advice    按照某人的建议行事</span><br><span class="line">act on one&apos;s order     遵照某人的命令行事</span><br><span class="line"></span><br><span class="line">我会按照你的建议行事，试着去达成目标</span><br><span class="line">I&apos;ll act on your advice and try to achieve the goal.</span><br><span class="line">不要问太多。只要遵照我的命令行事就对了</span><br><span class="line">Don&apos;t ask too much. Just act on my order.</span><br></pre></td></tr></table></figure>
<ol start="9">
<li>与表有关“无线电器材”之名词连用：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">on/over the telephone    在打电话</span><br><span class="line">on television            在电视屏幕上（非on the television)</span><br><span class="line">on/over the radlo        在广播中</span><br><span class="line"></span><br><span class="line">史蒂芬正在通电话</span><br><span class="line">Steven is talking on the telephone.</span><br></pre></td></tr></table></figure>
<ol start="10">
<li>与表“赞美、恭贺”的名词连用，表“为了/因为…”:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">congratulate sb on（代）名词／动名词    因⋯而恭贺某人</span><br><span class="line"></span><br><span class="line">他的家人恭喜他通过了考试</span><br><span class="line">His family congratulated him on passing the exam.</span><br></pre></td></tr></table></figure>
<ol start="11">
<li>与“日子”连用：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">on Sunday         在星期天</span><br><span class="line">on December 11    在12月11日</span><br><span class="line"></span><br><span class="line">爱弥尔星期天都上教堂</span><br><span class="line">Emile goes to church on Sundays.</span><br><span class="line"></span><br><span class="line">in the moming/aftemoon/evening    在早上/下午/傍晚</span><br><span class="line">at ninght                         在晚上</span><br><span class="line">但moming/afternoon/evening如与日子连用时，介词用on</span><br><span class="line">on the aftemoon of Auguest 16     在8月16日下午</span><br><span class="line">on Mondy moming                   在星期一早上</span><br><span class="line">on Saturday night                 在星期六晚上</span><br></pre></td></tr></table></figure>
<ol start="12">
<li>On的其他重要用法：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">on call    随时待命</span><br><span class="line">on duty    值班/上班时间中</span><br><span class="line"></span><br><span class="line">消防队员随时为紧急情况待命</span><br><span class="line">The firefighters are on call for emergenies.</span><br><span class="line">警卫的值班时间是从早上7点到晚上9点</span><br><span class="line">The guard is on duty from 7:00 a.m. to 9:00 p.m.</span><br></pre></td></tr></table></figure>
<h3 id="to"><a href="#to" class="headerlink" title="to"></a>to</h3><ol>
<li>通常表“到达、往”之意：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">go the station     到车站去</span><br><span class="line">be moved to tears  感动得落泪</span><br><span class="line">up to+数词         多达（若干数词）</span><br><span class="line"></span><br><span class="line">他被《泰坦尼克号》这部电影感动得落泪</span><br><span class="line">He was moved to tears by the move Titanic.</span><br><span class="line">他每个月赚将近5万美元</span><br><span class="line">He makes up to $50,000 per month.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>与“人”连用表“对某人而言”：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">be everything to sb    是某人的一切</span><br><span class="line"></span><br><span class="line">她的子女是她的一切</span><br><span class="line">Her children is everything to her.</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>下列名词连用，形成固定用法，表“针对”之意：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">the key to success             成功之钥</span><br><span class="line">（非the key of success)</span><br><span class="line">the answer to the question     问题的答案</span><br><span class="line">（非the answer ofthe question)</span><br><span class="line">the solution to the problem    解决问题之道</span><br><span class="line">（非the solution of the problem)</span><br><span class="line"></span><br><span class="line">成功之钥就是勤劳</span><br><span class="line">The key to success is diligence.</span><br><span class="line">这个问题的答案没人知道</span><br><span class="line">The answer to this question is unknown.</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>to亦与情绪名词连用，形成“To one‘s＋情绪名词⋯”    令某人的是⋯</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">To one&apos;s surise,...          令某人惊讶的是...</span><br><span class="line">To one&apos;s joy,...             令某人高兴的是...</span><br><span class="line">To one&apos;s satisfaction,...    令某人满意的是...</span><br><span class="line">To one&apos;s dismay,...          令某人沮丧的是...</span><br><span class="line">To one&apos;s astoinshment,...    令某人惊奇的是...</span><br><span class="line"></span><br><span class="line">令我惊讶的是，他什么也没说就离开了</span><br><span class="line">To my surpise, he left without saying anything.</span><br><span class="line">令我们高兴的是，他通过了入学考试，进人一所好大学就读</span><br><span class="line">To our joy, he passed entrance exam and enterd a good university.</span><br><span class="line"></span><br><span class="line">表“就某人所知”亦与介词to连用:</span><br><span class="line">就我所知，这个月初约翰已经移居香港了</span><br><span class="line">To my understanding/knowledge, John moved to Hong Kong early this month.</span><br></pre></td></tr></table></figure>
<ol start="5">
<li>表“酉己合（音乐、曲调、节拍等）”</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dance to the music             随着音乐跳舞</span><br><span class="line">＊不可说dance with the music    抱着音乐一起跳舞扭(x)</span><br><span class="line">dance to the melody            随着旋律跳舞</span><br><span class="line"></span><br><span class="line">老师放音乐后,大家便开始随着音乐起舞</span><br><span class="line">The teacher had the music on and everyone started to dance to the music.</span><br><span class="line"></span><br><span class="line">dance with sb    与某人跳舞</span><br><span class="line">我想和你跳舞</span><br><span class="line">I&apos;d like to dance with you.</span><br></pre></td></tr></table></figure>
<ol start="6">
<li>“be upto＋事”表“从事某事”，通常指令人怀疑或不好的事，常用于问句：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">你在搞什么鬼</span><br><span class="line">What are you up to?</span><br><span class="line"></span><br><span class="line">lt&apos;s up to sb.   则表“由某人做决定”</span><br><span class="line">由你决定吧</span><br><span class="line">It&apos;s up to you.</span><br></pre></td></tr></table></figure>
<h3 id="with"><a href="#with" class="headerlink" title="with"></a>with</h3><ol>
<li>表“使用（某物）”之意：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cut it with a knife    用刀切它</span><br><span class="line">do it with care        以谨慎的心做这件事</span><br><span class="line"></span><br><span class="line">妈用刀子切马铃薯</span><br><span class="line">My monther cut the potato with a knife.</span><br><span class="line">她谨慎地做每一件事</span><br><span class="line">She does everything with care.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>with亦可放句首，表“有⋯ ⋯；随着⋯ ⋯ ” </li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">随着时间的流逝，他的年纪愈来愈大</span><br><span class="line">With the passing of time, he&apos;s getting older.</span><br><span class="line">他是个有大鼻子的人</span><br><span class="line">He is a man with a big nose.</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>with也可形成复台结构，通常为大动作附带小动作时，大动作以本动词表示，小动作则使用with复合结构，其结构为:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">当时他双臂交叉着坐在那里</span><br><span class="line">He was sitting there with his arms folded.</span><br><span class="line">上句中“坐”为主要动词，“双臂交叉”为附带动作，故后者使用“ with his anns folded”</span><br><span class="line">当时他嘴里含着烟斗跟我说话</span><br><span class="line"> He was talking to me with a pipe in his mouth.</span><br><span class="line">=He was talking to me pipe in mouth. </span><br><span class="line">上句中“讲话”为主要动词，“嘴里含烟斗”为附带动作。</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>With的其他常态用法：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">leave sth with sb          将某物留给某人</span><br><span class="line">compare A with B           将A与B作比较</span><br><span class="line">be popular with+一群人     受某一群人欢迎</span><br><span class="line">be wrong with sb           某人出了差错</span><br><span class="line"></span><br><span class="line">他的父母死后留给他一笔财富</span><br><span class="line">His parents left a fortune with him after they died.</span><br><span class="line">她有点不对劲</span><br><span class="line">Something&apos;s wrong with her.</span><br><span class="line">你怎么了</span><br><span class="line">What&apos;s the matters with you?</span><br></pre></td></tr></table></figure>
<h3 id="about"><a href="#about" class="headerlink" title="about"></a>about</h3><ol>
<li>表“有关”，相当于on/concerning/regarding:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">写一往篇有关空气污染的文章</span><br><span class="line"> write an article about air pollution</span><br><span class="line">=write an article on/concerning/regarding air pollution.</span><br><span class="line">about多为口语用法，on则在文笔中使用</span><br></pre></td></tr></table></figure>
<h3 id="after"><a href="#after" class="headerlink" title="after"></a>after</h3><ol>
<li>在“追逐”，通常与动词连用</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> be after 人    追逐/追捕某人</span><br><span class="line">=run after 人</span><br><span class="line">=chase (after) 人</span><br><span class="line">警方仍在追缉这句小偷</span><br><span class="line">The police are still after the thief.</span><br><span class="line">                     running after the thief.</span><br><span class="line">                     chasing the thief.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>表“像、模仿”</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> take after    像...</span><br><span class="line">=resemble...</span><br><span class="line">=look like...</span><br><span class="line">他长得像他爸爸</span><br><span class="line"> He takes after his father.</span><br><span class="line">=He resembles his father.</span><br><span class="line">=He looks like his father.</span><br></pre></td></tr></table></figure>
<h3 id="toward"><a href="#toward" class="headerlink" title="toward"></a>toward</h3><ol>
<li>表“朝向”</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">toward sb             朝某人的方向</span><br><span class="line">toward the station    朝车站的方向</span><br><span class="line">toward evening        快傍晚时</span><br><span class="line"></span><br><span class="line">那个女孩带着灿烂的笑容跑向他</span><br><span class="line">The gril ran toward him with a bright smile.</span><br><span class="line"></span><br><span class="line">forward    往前(adv)</span><br><span class="line">backward   往后、倒退(adv)</span><br><span class="line">wayward    任性的、四面八方的(adj)</span><br><span class="line"></span><br><span class="line">那个小孩子正摇摇晃晃地向前走</span><br><span class="line">The little child is todding forward.</span><br><span class="line">学生们被要求倒退着跑</span><br><span class="line">The students were asked to run backward.</span><br><span class="line">她是个任性的女孩，从不会为别人着想</span><br><span class="line">She is a wayward girl, who never thinks about others.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>表“对于”</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">one&apos;s attitude toward/to...    某人对...的态度</span><br><span class="line">你对于安乐死的看法如何？</span><br><span class="line">What&apos;s your attitude toward mercy killing?</span><br></pre></td></tr></table></figure>
<h3 id="except"><a href="#except" class="headerlink" title="except"></a>except</h3><ol>
<li>除了…之外</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">除了他之外，所有的人都会去</span><br><span class="line"> All except him will go.</span><br><span class="line">=All save him will go.</span><br><span class="line"></span><br><span class="line">Everybody can do it except Peter.</span><br><span class="line"></span><br><span class="line"> He enjoys nothing except music.</span><br><span class="line">=He enjoys nothing but music.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>except+ that从句(或for+名词)，表示“只可惜…”或“只不过是…”</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">他人蛮不错，只不过是脾气不好</span><br><span class="line">She is quite nice except that he is bad一tempered.</span><br><span class="line">                         for his bad一tempered.</span><br></pre></td></tr></table></figure>
<h3 id="behind"><a href="#behind" class="headerlink" title="behind"></a>behind</h3><ol>
<li>在…之后</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">房子后面有一棵树</span><br><span class="line">There is a tree behind the house.</span><br><span class="line">他正坐在我后面</span><br><span class="line">He is sitting behind me.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>落后</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">behind schedule    比预定时间落后</span><br><span class="line">他总是比预定时间落后完成工作</span><br><span class="line">He always finished his work behind schedule.</span><br><span class="line"></span><br><span class="line">on shedule        按预定时间</span><br><span class="line">ahead of shedule  比预定时间提前</span><br><span class="line">我们会尽量使每件事按预定时间进行</span><br><span class="line">We&apos;ll try to keep everything running on schedule.</span><br><span class="line">火车比预定时间提前到达</span><br><span class="line">The train arrived ahead of shedule.</span><br></pre></td></tr></table></figure>
<h3 id="into"><a href="#into" class="headerlink" title="into"></a>into</h3><ol>
<li>进入</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">walk into the classroome  走进教室</span><br><span class="line">run into the room         跑进房间</span><br><span class="line"></span><br><span class="line"> run into+人    与某人巧遇</span><br><span class="line">=bump into+人</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>转变成</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">change/transform/turn A into B    将A转变成B</span><br><span class="line">translate A into B     将A翻译成B</span><br><span class="line"></span><br><span class="line">那个女巫把自己变成了一个小女孩</span><br><span class="line">The witch changed herself into a little girl.</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>与be动词连用，形成”be into”的短语，表“热衷于…”</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">他热衷于古典音乐</span><br><span class="line">He is into classical music.</span><br></pre></td></tr></table></figure>
<h3 id="within"><a href="#within" class="headerlink" title="within"></a>within</h3><ol>
<li>表“在…之内”，尤其指在某空间或某时间之内，相当于in</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> within the country</span><br><span class="line">=in the country</span><br><span class="line"> within an hour    在一小时之内</span><br><span class="line">=in an hour</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>也可指范围，表“在…范围内”</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">act within the law     在法律范围内行事</span><br><span class="line">守法的公民应该依法行事</span><br><span class="line">A law一abiding citizen should act within the law.</span><br></pre></td></tr></table></figure>
<h3 id="without"><a href="#without" class="headerlink" title="without"></a>without</h3><ol>
<li>表“没有/无…”</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">coffee without sugar    无糖的咖啡</span><br><span class="line">without his help        没有他的帮助</span><br><span class="line"></span><br><span class="line">Robert likes to drink coffee without sugar.</span><br><span class="line">若没有他的帮助，我当时就无法成功</span><br><span class="line">I couldn&apos;t have succeeded without his help.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>与without有关的短语</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">can do without...                  没有...也行</span><br><span class="line">cannot do without...               没有...就不行</span><br><span class="line">It goes without saying+that从句     不用说，...</span><br><span class="line"></span><br><span class="line">我可以没有钱，但不能没有你的爱</span><br><span class="line">I can do without money, but I cannot do without your love.</span><br><span class="line">不用说，金钱不能买到每一样的东西</span><br><span class="line">It goes without saying that money can&apos;t buy everything.</span><br></pre></td></tr></table></figure>
<h3 id="above"><a href="#above" class="headerlink" title="above"></a>above</h3><ol>
<li>表“在…上方”</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Some birds are flying above(或over) the city.</span><br><span class="line">Nanjing is located above Hangzhou on the map.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>在下列短语中，above表“不屑”之意：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">be above＋动名词不屑／不愿（做）⋯</span><br><span class="line">他不屑于诈骗别人</span><br><span class="line">He is above cheating.</span><br><span class="line"></span><br><span class="line">但be not above＋动名词愿意（做）⋯</span><br><span class="line">他总是不耻下问</span><br><span class="line">He is not above asking questions.</span><br></pre></td></tr></table></figure>
<h3 id="over"><a href="#over" class="headerlink" title="over"></a>over</h3><ol>
<li>表“在…这上”，相当于above，但通常为悬空的状态:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> be over the city</span><br><span class="line">=be above the city</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>表“覆盖在⋯ ⋯之上”，为有接触物体的状态：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">put one&apos;s hands over one&apos;s faee    把某人的手放在某人的脸上</span><br><span class="line">他把手放在她的脸上，告诉她不要担心</span><br><span class="line">He puts his hands over her face, telling her not to worry.</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>表“（悬空）略过”，尤与动词iump连用：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">jump over the wall    跳过这座墙</span><br><span class="line">那名窃贼跳过墙跑到街上去了</span><br><span class="line">The thief jumped over the wall and ran down the street.</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>与地方名词连用，表“在某地方的另一头”:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">somewhere over there    在那儿的某处</span><br><span class="line">我住在马路那头</span><br><span class="line">I live over the road.</span><br></pre></td></tr></table></figure>
<ol start="5">
<li>与数词连用表“超过”之意：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> over+数词    超过某数词</span><br><span class="line">=more than+数词</span><br><span class="line">在这场车祸中有超过20个人受到重伤</span><br><span class="line"> Over twenty people were seriously injured in the traffic accident.</span><br><span class="line">=More than twenty were seriously injured in the traffic accident.</span><br></pre></td></tr></table></figure>
<ol start="6">
<li>与表“驾驭”同义之名词或动词连用：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">have authority/control/power over...    有支配、指挥⋯ ⋯的权力</span><br><span class="line">rule over...    统治...</span><br><span class="line">总统有权指挥军队</span><br><span class="line">The president has authority over the army.</span><br><span class="line"></span><br><span class="line">这个国王已经统治人民十年了</span><br><span class="line">The king has ruled over the people for ten years.</span><br></pre></td></tr></table></figure>
<ol start="7">
<li>与咖啡、茶、三餐等连用，表“吃／喝⋯ ⋯了一段时间”，常与talk连用:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我们谈了一杯茶的光景</span><br><span class="line">We talked over a cup of tea.</span><br><span class="line">他们聊了一顿晚饭的时间</span><br><span class="line">They talked over dinner.</span><br></pre></td></tr></table></figure>
<ol start="8">
<li>词辨</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a. 当描述某物的位置高于另一物时，above与over均可使用:</span><br><span class="line">房子上方有一个阁楼</span><br><span class="line"> There is an attic above the house.</span><br><span class="line">=There is an attic over the house.</span><br><span class="line"></span><br><span class="line">b. 但若表“从某物的一边移动到另一边”之动态动作，则只可用over:</span><br><span class="line">那个小孩把球丢到墙外</span><br><span class="line">The child threw the ball over the wall.</span><br><span class="line"></span><br><span class="line">c. 另外above与over均可表“超越”，但above多与表示最小等级或一固定点之名词连用，over则与数词、时间、年龄、金钱等连用:</span><br><span class="line">玉山的高度为海拔3952米</span><br><span class="line">Mt. Jade is 3952 meters above seal level.</span><br><span class="line">这个男孩身高超过同年龄其他小孩</span><br><span class="line">The boy is above average height for his age.</span><br><span class="line">这个男人30多岁了</span><br><span class="line">The man is over thirty.</span><br><span class="line">我花了500多元买这本书</span><br><span class="line">I spent over five hundred dollars buying this book.</span><br></pre></td></tr></table></figure>
<h3 id="below"><a href="#below" class="headerlink" title="below"></a>below</h3><ol>
<li>表“在（某物体）的下方” :</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">write below the line    写在横线下方</span><br><span class="line">这家百货公司下面有一家超市</span><br><span class="line">There is a supermarket ablow the department store.</span><br><span class="line">离桥下远处有个瀑布</span><br><span class="line">There is a waterfall far below the bridge.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>表“（数量等）少于…；（地位等）低于…”:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">他是个不到50岁的男子</span><br><span class="line">He is a man below fifty.</span><br></pre></td></tr></table></figure>
<h3 id="beneath"><a href="#beneath" class="headerlink" title="beneath"></a>beneath</h3><ol>
<li>表‘在（某空间）之正下方”:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">他们住在同一个屋檐下</span><br><span class="line">The live beneath the same roof.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>表“（身份、地位、智力等）低于⋯”，相当于below：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">法兰克的智力远不及丹尼尔</span><br><span class="line">Frank is far beneath Daniel in intelligence.</span><br></pre></td></tr></table></figure>
<h3 id="under"><a href="#under" class="headerlink" title="under"></a>under</h3><ol>
<li>表“在（某物体）的下面”:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">under the tree    在树下</span><br><span class="line">under the bed     在床下</span><br><span class="line"></span><br><span class="line">我在床底下找到我的乌龟</span><br><span class="line">I found my turtle under the bed.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>表“低于⋯；少于⋯”:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">under seven years old    7岁以下</span><br><span class="line">在美国，21岁以下的人不可以买酒</span><br><span class="line">People under 21 are not allowed to buy alcohol in America.</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>表“在⋯ ⋯支配/控制/影响下”：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">under the president             由总统统治</span><br><span class="line">under the influence of drugs    在药物的影响下</span><br><span class="line">这个国家现在由一位仁慈的皇后所统治</span><br><span class="line">The country is now under a benevolent queen.</span><br><span class="line">他在酒醉后吐露了实情</span><br><span class="line">He told the truth under the influnnce of wine.</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>表“承受着（重担，压力等）；在⋯的情况/状态下”:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">under the heavy pressure of work    在沉重的工作压力下</span><br><span class="line">under any cireumstances             在任何情况下</span><br><span class="line">under construction                  施工中</span><br><span class="line"></span><br><span class="line">在任何情况下都不要告诉别人这个秘密</span><br><span class="line">Don&apos;t tell others the secret under any circumstances.</span><br><span class="line">这座桥仍在施工中</span><br><span class="line">The bridge is still under construction.</span><br></pre></td></tr></table></figure>
<ol start="5">
<li>表“接受（考验、刑罚、手术等）”:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">under an eye operatinn    接受眼部手术</span><br><span class="line">under penalty             受到处罚</span><br><span class="line"></span><br><span class="line">他在那家医院接受眼部手术</span><br><span class="line">He is under an eye operation at that hospital.</span><br><span class="line">凡是违反规定的人就会受到处罚</span><br><span class="line">People who disobey the regulations will be under penalty.</span><br></pre></td></tr></table></figure>
<ol start="7">
<li>表“依照/根据（约定、法令等）”：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">根据美国宪法，人皆生而平等</span><br><span class="line">All people are equal under the U.S. comstitution.</span><br></pre></td></tr></table></figure>
<ol start="8">
<li>表“属于⋯项目” :</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">小说属于文学类</span><br><span class="line">Novels come under literature.</span><br></pre></td></tr></table></figure>
<h3 id="underneath"><a href="#underneath" class="headerlink" title="underneath"></a>underneath</h3><p>表“在…之下”，相当于under或beneath：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> underneath the table    在桌子下</span><br><span class="line">=under the table</span><br><span class="line">=beneath the table</span><br><span class="line"></span><br><span class="line">那只猫正在桌子底下睡觉</span><br><span class="line">The cat is sleeping underneath the table.</span><br></pre></td></tr></table></figure>
<h3 id="against"><a href="#against" class="headerlink" title="against"></a>against</h3><ol>
<li>表“对抗、抵制、反对” :</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">be against a plan    反对一个计划</span><br><span class="line">所有的成员都反对他提出的计划</span><br><span class="line">All members were against the plan he brought forward.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>表“顶着”：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lean against the wall    靠墙站</span><br><span class="line">小心那个靠墙站着的男子</span><br><span class="line">Be careful of the man leaning against the wall.</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>表“以…为背景”:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">那个颜色在你皮肤的衬托下看起来不错</span><br><span class="line">That color looks good against your skin.</span><br></pre></td></tr></table></figure>
<h3 id="along"><a href="#along" class="headerlink" title="along"></a>along</h3><ol>
<li>表“沿着⋯”:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">walk along the river    沿着河走</span><br><span class="line">沿着街走,你会看到很多书店</span><br><span class="line">Walk along the stree and you&apos;ll see many bookstores.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>表“顺畅”：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">get along with 人    某人相处得很好</span><br><span class="line">辛西亚和她的同学相处得很好</span><br><span class="line">Cindy gets along with her classmates.</span><br></pre></td></tr></table></figure>
<h3 id="before"><a href="#before" class="headerlink" title="before"></a>before</h3><p>表“在⋯ ⋯之前”，之后可接表空间或时间的名词：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">stand before the car    站在车前</span><br><span class="line">before June             在6月之前</span><br><span class="line"></span><br><span class="line">站在那辆黑色汽车前的男孩是我哥哥。</span><br><span class="line">The boy standing before the black car is my brother.</span><br></pre></td></tr></table></figure>
<h3 id="beyond"><a href="#beyond" class="headerlink" title="beyond"></a>beyond</h3><p>表“超越”之意：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">be beautiful beyond description    美得难以形容</span><br><span class="line">beyond one&apos;s imagination           超乎某人的想象</span><br><span class="line">beyond one&apos;s expectation           出乎某人意料之外</span><br><span class="line"></span><br><span class="line">那里的风景美得难以形容</span><br><span class="line">The scenery there is beautiful beyond description.</span><br><span class="line">他的聪明超乎我们的想像</span><br><span class="line">His is so smart beyond our imagination.</span><br><span class="line">珍妮出人意料地赢得了比赛</span><br><span class="line">Jenny won the competition beyond everyone&apos;s expectation.</span><br></pre></td></tr></table></figure>
<h3 id="during"><a href="#during" class="headerlink" title="during"></a>during</h3><p>表“在（一段时间）期间” :</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">during his stay here    在他待在这里期间</span><br><span class="line">during the two months   在这两个月中</span><br><span class="line"></span><br><span class="line">这两个月期间我都不会在这里</span><br><span class="line">I won&apos;t be here during the two months.</span><br></pre></td></tr></table></figure>
<h3 id="through"><a href="#through" class="headerlink" title="through"></a>through</h3><ol>
<li>表“经过”：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">walk through the crowd    穿过人群</span><br><span class="line">那位歌手穿过人群离开了</span><br><span class="line">The singer walked through the crowd and left.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>表“取道／通过”:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">travel through Hong Kong    取道香港去旅游</span><br><span class="line">我们取道香港去加拿大</span><br><span class="line">We went to Canada through Hong Kong.</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>表“经由”：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">through one&apos;s help      经由某人的帮助</span><br><span class="line">through the magazine    透过这本杂志</span><br><span class="line"></span><br><span class="line">吉娜经由琳达的帮忙而获得这份工作</span><br><span class="line">Gina got the job through Linda&apos;s help.</span><br><span class="line">我是透过这本杂志认识汤姆的</span><br><span class="line">I knew Tom through the magazine.</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>表“从（活动、场合等）开始到结束”:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">through the whole meeting    会议开始到结束</span><br><span class="line"></span><br><span class="line">从会议开始到结束经理一句话都没说</span><br><span class="line">The manager didn&apos;t say a word through the whole metting.</span><br></pre></td></tr></table></figure>
<ol start="5">
<li>表“整段时间”:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">through the day    一整个白天</span><br><span class="line">through thei nght  一整个晚上</span><br><span class="line">他白天一整天都在街上游荡</span><br><span class="line">He wandered around on the street through the day.</span><br></pre></td></tr></table></figure>
<h3 id="besides"><a href="#besides" class="headerlink" title="besides"></a>besides</h3><p>表“除了…之外”，相当于“in addition to”：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> besides +（代）名词/动名词    除了⋯之外</span><br><span class="line">=in addition to +（代）名词/动名词</span><br><span class="line"></span><br><span class="line">除了游泳，他也会溜冰</span><br><span class="line"> Besides swimming, he can also roller一skate.</span><br><span class="line">=In addition to swimming, ...</span><br></pre></td></tr></table></figure>
<h3 id="till-untill"><a href="#till-untill" class="headerlink" title="till/untill"></a>till/untill</h3><p>表“直到…”:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">till与until可互通使用，不过until较till正式。</span><br><span class="line"> stay here till ten    在这里待到十点</span><br><span class="line">=stay here until ten</span><br><span class="line"></span><br><span class="line">until另常与not连用，形成：</span><br><span class="line">not...ntil...    直到...才...</span><br><span class="line"></span><br><span class="line">他直到九点才来</span><br><span class="line"> He didn&apos;t come until nine o&apos;clock.</span><br><span class="line">=Not until nine o&apos;clock did he come.</span><br><span class="line"></span><br><span class="line">till有时与from连用，形成：</span><br><span class="line"> from...till    从⋯到⋯</span><br><span class="line">=from...to...</span><br><span class="line">那场电影我们从8点看到10点</span><br><span class="line"> We watched the movie from eight till ten.</span><br><span class="line">=We watched the movie from eight to ten.</span><br></pre></td></tr></table></figure>
<h3 id="since"><a href="#since" class="headerlink" title="since"></a>since</h3><p>表“自从…”，通常与完成时连用：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">since+时间名词/动名词    自从⋯</span><br><span class="line">他从星期二就开始生病了</span><br><span class="line">He has been ill since Tuesday.</span><br><span class="line">自从大学毕业之后，她就一直在这家公司工作</span><br><span class="line">Since graduating from college, she has been working in this company.</span><br></pre></td></tr></table></figure>
<h3 id="beside"><a href="#beside" class="headerlink" title="beside"></a>beside</h3><ol>
<li>表“在…之旁”．相当于by之意：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> sit beside me    坐在我旁边</span><br><span class="line">=sit by my side</span><br><span class="line"></span><br><span class="line">凯伦，过来坐在我旁边</span><br><span class="line">Come and site beside me, Karen.</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>表“与⋯相较”，相当于“compared with”或“in comparison with”：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">跟他相比，我便微不足道了</span><br><span class="line">Beside him, I&apos;m nothing.</span><br><span class="line">Comparedd with him, I&apos;m nothing.</span><br><span class="line">In comparison with him, I&apos;m nothing.</span><br></pre></td></tr></table></figure>
<h2 id="反意疑问句"><a href="#反意疑问句" class="headerlink" title="反意疑问句"></a>反意疑问句</h2><ol>
<li>反意疑问句的使用规则:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">陈述句为肯定时，接否定反意疑问句，陈述句为否定时，接肯定反意疑问句:</span><br><span class="line"></span><br><span class="line">a. 陈述句有匕e动词，反意疑问句沿用be动词:</span><br><span class="line"></span><br><span class="line">他人不错，是不是？</span><br><span class="line">He is nice, isn&apos;t he?</span><br><span class="line">我没病，是不是?</span><br><span class="line">I wasn&apos;t sick, was I?</span><br><span class="line"></span><br><span class="line">b. 陈述句有助动词，反意疑问句沿用助动词:</span><br><span class="line"></span><br><span class="line">他会来，是不是?</span><br><span class="line">He will come, won&apos;t he?</span><br><span class="line">他们不能做这件事，是不是?</span><br><span class="line">They can&apos;t do it, can they?</span><br><span class="line">你做完了，是不是？</span><br><span class="line">You have done it, haven&apos;t you?</span><br><span class="line"></span><br><span class="line">c. 陈述句有一般动词，反意疑问句则使用do、does、did:</span><br><span class="line"></span><br><span class="line">他来了，是不是？</span><br><span class="line">He came, didn&apos;t he?</span><br><span class="line"></span><br><span class="line">他起得很早，是不是？</span><br><span class="line">He gets up early, doesn&apos;t he?</span><br><span class="line"></span><br><span class="line">他没来，是不是？</span><br><span class="line">He didn&apos;t come, did he?</span><br><span class="line"></span><br><span class="line">d. 与祈使句使用时，反意疑问句一律用will you:</span><br><span class="line"></span><br><span class="line">来这里，好不好?</span><br><span class="line">Come here, will you?</span><br><span class="line">别再抽烟，好不好?</span><br><span class="line">Stop smoking, will you?</span><br><span class="line"></span><br><span class="line">e. 与祈使句“ Let&apos;s...”（咱们⋯句型使用，反意疑问句一律用shall we:</span><br><span class="line"></span><br><span class="line">咱们走吧，好不好?</span><br><span class="line">Let&apos;s go, shall we?</span><br><span class="line"></span><br><span class="line">咱们别做那件事，好不好?</span><br><span class="line">Let&apos;s not do it, shall we?</span><br><span class="line"></span><br><span class="line">但：请你让我们／他们／他／⋯ ⋯／约翰走吧，好不好？</span><br><span class="line">let us/them/him/.../John go, will you?</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>句中有否定副词</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">陈述句含有scarcely/hardly/rarely/no doubt/little/never/by no means等否定副词．陈述句视为否定句，须接肯定反问句:</span><br><span class="line"></span><br><span class="line">他很少抽烟是不是？</span><br><span class="line">He |scarcely ever| smokes, does he?</span><br><span class="line">   |hardly ever  | </span><br><span class="line">   |rarely       |</span><br><span class="line"></span><br><span class="line">毫无疑问他是个好孩子，是不是？</span><br><span class="line">He is no doubt a good boy, is he?</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>句中有助动词短语:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">陈述句含有would rather、had better等助动词短语．反意疑问句中用其第一个词:</span><br><span class="line"></span><br><span class="line">你宁愿去，是不是？</span><br><span class="line">You would rather go? wouldn&apos;t you?</span><br><span class="line"></span><br><span class="line">你最好做这事，是不是？</span><br><span class="line">You had better do it? hadn&apos;t you?</span><br><span class="line"></span><br><span class="line">他应当来，是不是？</span><br><span class="line">He ought to come, shouldn&apos;t he?</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>反意疑问句须用人称代词:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">反意疑问句一定要用人称代词，但叙述句首为Thereis/are/was/were等时，则须用there</span><br><span class="line"></span><br><span class="line">John is fine, isn&apos;t he?</span><br><span class="line">This is not good, is it?</span><br><span class="line">That is good, isn&apos;t it?</span><br><span class="line">These are not good, are those?</span><br><span class="line">Those are good, aren&apos;t they?</span><br><span class="line">那里有个人，是不是？</span><br><span class="line">There is a man there, isn&apos;t there?</span><br></pre></td></tr></table></figure>
<ol start="5">
<li>陈述句中，主语若为第一人称单数I表示意见或观点时，不可能对自己反问，应以其后的that从句形成反问:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我认为大卫人不错，是不是？</span><br><span class="line">I think that David is nice, isn&apos;t he?</span><br><span class="line"></span><br><span class="line">但主语若为I以外的主语，则反问句仍以主句为依据形成反问句:</span><br><span class="line">我们认为这个新老师很好，是不是？</span><br><span class="line">We think that the new teacher is nice, don&apos;t we?</span><br></pre></td></tr></table></figure>
<ol start="6">
<li>need作一般动词及助动词的反问句：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">need可作一般动词，也可作为助动词（仅限于否定句，须与not并用，无论第几人称need之后都不加s）:</span><br><span class="line"></span><br><span class="line">他需要过去，是不是？</span><br><span class="line">He needs to go,doesn&apos;t he?</span><br><span class="line">他不需要过去，是不是？</span><br><span class="line">He need not go, need he?</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>English</category>
      </categories>
      <tags>
        <tag>English</tag>
      </tags>
  </entry>
</search>
